{
  "name": "mbpp_584_find_adverbs",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the first adverb ending with ly and its positions in a given string.\n    public static string FindAdverbs(string text) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_584_find_adverbs.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindAdverbs((\"Clearly, he has no excuse for such behavior.\")).Equals((\"0-7: Clearly\")));\n    Debug.Assert(FindAdverbs((\"Please handle the situation carefuly\")).Equals((\"28-36: carefuly\")));\n    Debug.Assert(FindAdverbs((\"Complete the task quickly\")).Equals((\"18-25: quickly\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return adverbs.Count > 0 ? $\"{adverbs[0]} {positions[0]}\" : \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return adverbs.FirstOrDefault() + \" \" + positions.FirstOrDefault();",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i];\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(new char[] { ' ', ',', '.', '!', '?', ':', ';' }, StringSplitOptions.RemoveEmptyEntries);\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i];\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result += words[i] + \" \" + i + \" \";\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        int index = 0;\n        foreach (string word in words) {\n            if (word.EndsWith(\"ly\")) {\n                return word + \" \" + index;\n            }\n            index++;\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        var firstAdverb = adverbs.FirstOrDefault();\n        if (firstAdverb == null) {\n            return \"No adverbs found\";\n        }\n        var index = text.IndexOf(firstAdverb);\n        return $\"Adverb: {firstAdverb}, index: {index}\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var result = new StringBuilder();\n        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result.Append(words[i]);\n                result.Append(\" \");\n                result.Append(i);\n                result.Append(\" \");\n            }\n        }\n        return result.ToString();",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return $\"{adverbs[0]} {positions[0]}\";",
    "        string[] words = text.Split(' ');\n        for(int i = 0; i < words.Length; i++) {\n            if(words[i].Length > 2 && words[i].Substring(words[i].Length - 2) == \"ly\") {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return $\"{adverbs[0]} {positions[0]}\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result += words[i] + \" \" + i + \" \";\n            }\n        }\n        return result;",
    "        string result = \"\";\n        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} {i}\";\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        // TODO: Implement this function\n        return \"\";",
    "        // Write your code here.\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].Length > 2 && words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].Length > 2 && words[i].Substring(words[i].Length - 2, 2) == \"ly\") {\n                result += words[i] + \" \" + i + \" \";\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for(int i = 0; i < words.Length; i++) {\n            if(words[i].Length > 2 && words[i].Substring(words[i].Length - 2, 2) == \"ly\") {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i];\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        var words = text.Split(new char[] { ' ', '.', ',' }, StringSplitOptions.RemoveEmptyEntries);\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        if (adverbs.Count() == 0)\n            return \"No adverbs found.\";\n        var adverb = adverbs.First();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i] == adverb)\n                positions.Add(i);\n        }\n        return string.Format(\"Adverb: {0}\\nPositions: {1}\", adverb, string.Join(\", \", positions));",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return adverbs.Count == 0 ? \"No adverbs found\" : $\"{adverbs[0]} at {positions[0]}\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} {i}\";\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} {i}\";\n            }\n        }\n        return \"\";",
    "        // Your code here\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result += words[i] + \" \" + i + \" \";\n            }\n        }\n        return result;",
    "        var result = new StringBuilder();\n        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result.AppendLine($\"{words[i]} - {i}\");\n            }\n        }\n        return result.ToString();",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return $\"{adverbs[0]} {positions[0]}\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} {i}\";\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return adverbs.Count > 0 ? $\"{adverbs[0]} {positions[0]}\" : \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result += words[i] + \" \" + i + \" \";\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        int index = 0;\n        foreach (string word in words) {\n            if (word.EndsWith(\"ly\")) {\n                return word + \" \" + index;\n            }\n            index++;\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        var firstAdverb = adverbs.FirstOrDefault();\n        if (firstAdverb == null) {\n            return \"No adverbs found\";\n        }\n        var index = text.IndexOf(firstAdverb);\n        return $\"{firstAdverb} at {index}\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} at position {i}\";\n            }\n        }\n        return \"No adverbs found\";",
    "        // Write your code here\n        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        // Write your code here\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} {i}\";\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        // Write your code here\n        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return $\"{adverbs[0]} {positions[0]}\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i];\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i];\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        var first = adverbs.FirstOrDefault();\n        if (first == null) return \"\";\n        var index = text.IndexOf(first);\n        return $\"{first} {index}\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} {i}\";\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return adverbs.Count > 0 ? $\"{adverbs[0]} {positions[0]}\" : \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        // TODO: Implement this function\n        // This function should return a string containing the adverb and its positions\n        // If no adverb is found, return the string \"No adverb found\"\n        // If there are multiple adverbs, return the first one found\n        // Example:\n        // \"She ran hurriedly towards the stadium.\"\n        // Should return:\n        // \"hurriedly: 10-18\"\n        // Example:\n        // \"We put forth our efforts.\"\n        // Should return:\n        // \"No adverb found\"\n        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \": \" + (text.IndexOf(words[i])).ToString() + \"-\" + (text.IndexOf(words[i]) + words[i].Length - 1).ToString();\n            }\n        }\n        return \"No adverb found\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return adverbs.Count > 0 ? $\"{adverbs[0]} {positions[0]}\" : \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var adverbs = new List<string>();\n        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            var word = words[i];\n            if (word.EndsWith(\"ly\")) {\n                adverbs.Add(word);\n            }\n        }\n        return string.Join(\", \", adverbs);",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i];\n                break;\n            }\n        }\n        return result;",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return adverbs.Count > 0 ? $\"{adverbs[0]} at positions {string.Join(\", \", positions)}\" : \"No adverbs found\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        var adverbs = new List<string>();\n        var positions = new List<int>();\n        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return $\"{string.Join(\", \", adverbs)} - {string.Join(\", \", positions)}\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        var firstAdverb = adverbs.FirstOrDefault();\n        if (firstAdverb == null) {\n            return \"No adverbs found\";\n        }\n        var index = text.IndexOf(firstAdverb);\n        return $\"First adverb: {firstAdverb}, index: {index}\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result += words[i] + \" \" + i + \" \";\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result += words[i] + \" \" + i + \" \";\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        int index = 0;\n        foreach (string word in words) {\n            if (word.EndsWith(\"ly\")) {\n                return word + \" \" + index;\n            }\n            index++;\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return adverbs.Count > 0 ? $\"{adverbs[0]} - {positions[0]}\" : \"There are no adverbs in the text!\";",
    "        string[] words = text.Split(new char[] { ' ', '.', ',', '!', '?' }, StringSplitOptions.RemoveEmptyEntries);\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + (i + 1);\n            }\n        }\n        return \"No adverbs ending with ly\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result += words[i] + \" \" + i + \" \";\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                sb.Append(words[i]);\n                sb.Append(\" \");\n                sb.Append(i);\n                sb.Append(\" \");\n            }\n        }\n        return sb.ToString();",
    "        var adverbs = new List<string>();\n        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n            }\n        }\n        return adverbs.Count > 0 ? adverbs[0] : \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        // Write your code here\n        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        // Write your code here\n        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i];\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var result = new StringBuilder();\n        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result.Append(words[i]);\n                result.Append(\" \");\n                result.Append(i);\n                result.Append(\" \");\n            }\n        }\n        return result.ToString();",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return $\"{adverbs[0]} {positions[0]}\";",
    "        string[] words = text.Split(new char[] {' '}, StringSplitOptions.RemoveEmptyEntries);\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        int index = 0;\n        foreach (string word in words) {\n            if (word.EndsWith(\"ly\")) {\n                result = word;\n                break;\n            }\n            index++;\n        }\n        return result + \" \" + index;",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].Length > 2 && words[i].Substring(words[i].Length - 2, 2) == \"ly\") {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var result = new StringBuilder();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result.Append(words[i]);\n                result.Append(\" \");\n                result.Append(i);\n                result.Append(\" \");\n            }\n        }\n        return result.ToString();",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        // Write your code here\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        var firstAdverb = adverbs.FirstOrDefault();\n        if (firstAdverb == null) {\n            return \"No adverbs found\";\n        }\n        var index = text.IndexOf(firstAdverb);\n        return $\"First adverb: {firstAdverb}, index: {index}\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} {i}\";\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        // Write your code here\n        string[] words = text.Split(' ');\n        string[] adverbs = new string[words.Length];\n        int[] positions = new int[words.Length];\n        int adverbCount = 0;\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs[adverbCount] = words[i];\n                positions[adverbCount] = i;\n                adverbCount++;\n            }\n        }\n        if (adverbCount == 0) {\n            return \"No adverbs found\";\n        }\n        string result = \"\";\n        for (int i = 0; i < adverbCount; i++) {\n            result += adverbs[i] + \" \" + positions[i] + \" \";\n        }\n        return result;",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        var firstAdverb = adverbs.FirstOrDefault();\n        if (firstAdverb == null) {\n            return \"No adverbs found!\";\n        }\n        var index = text.IndexOf(firstAdverb);\n        return $\"First adverb: {firstAdverb}, position: {index}\";",
    "        var adverbs = new List<string>();\n        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n            }\n        }\n        return string.Join(\", \", adverbs);",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var result = new StringBuilder();\n        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            var word = words[i];\n            if (word.EndsWith(\"ly\")) {\n                result.Append($\"{word} \");\n                result.Append($\"{i} \");\n            }\n        }\n        return result.ToString();",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        var firstAdverb = adverbs.FirstOrDefault();\n        if (firstAdverb == null) {\n            return \"No adverbs found\";\n        }\n        var index = text.IndexOf(firstAdverb);\n        return $\"{firstAdverb} at {index}\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (var i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return $\"{adverbs[0]} {positions[0]}\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} {i}\";\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        // Your code here\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(x => x.EndsWith(\"ly\"));\n        var firstAdverb = adverbs.FirstOrDefault();\n        if (firstAdverb == null) {\n            return \"No adverbs found\";\n        }\n        var index = text.IndexOf(firstAdverb);\n        return $\"First adverb: {firstAdverb}, positions: {index} - {index + firstAdverb.Length}\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i];\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} {i}\";\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i];\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} {i}\";\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].Length > 2 && words[i].Substring(words[i].Length - 2) == \"ly\") {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var adverbs = new List<string>();\n        var positions = new List<int>();\n        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return $\"{adverbs[0]} {positions[0]}\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result += words[i] + \" \" + i + \" \";\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        // Write your code here\n        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i];\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} at position {i}\";\n            }\n        }\n        return \"No adverbs found!\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                result = words[i] + \" \" + i;\n                break;\n            }\n        }\n        return result;",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} {i}\";\n            }\n        }\n        return \"\";",
    "        // Write your code here\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i];\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        var words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} at {i}\";\n            }\n        }\n        return \"No adverbs found\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";",
    "        // Your code goes here\n        return \"\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                return $\"{words[i]} at position {i}\";\n            }\n        }\n        return \"No adverbs found.\";",
    "        var words = text.Split(' ');\n        var adverbs = new List<string>();\n        var positions = new List<int>();\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].EndsWith(\"ly\")) {\n                adverbs.Add(words[i]);\n                positions.Add(i);\n            }\n        }\n        return $\"{adverbs[0]} {positions[0]}\";",
    "        var words = text.Split(' ');\n        var adverbs = words.Where(w => w.EndsWith(\"ly\"));\n        var firstAdverb = adverbs.FirstOrDefault();\n        if (firstAdverb == null) {\n            return \"No adverbs found!\";\n        }\n        var index = text.IndexOf(firstAdverb);\n        return $\"First adverb: {firstAdverb}, index: {index}\";",
    "        string[] words = text.Split(' ');\n        for (int i = 0; i < words.Length; i++) {\n            if (words[i].Length > 2 && words[i].Substring(words[i].Length - 2) == \"ly\") {\n                return words[i] + \" \" + i;\n            }\n        }\n        return \"\";"
  ]
}
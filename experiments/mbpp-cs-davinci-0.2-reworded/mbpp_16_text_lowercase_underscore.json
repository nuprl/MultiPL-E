{
  "name": "mbpp_16_text_lowercase_underscore",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to that returns true if the input string contains sequences of lowercase letters joined with an underscore and false otherwise.\n    public static bool TextLowercaseUnderscore(string text) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_16_text_lowercase_underscore.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(TextLowercaseUnderscore((\"aab_cbbbc\")) == (true));\n    Debug.Assert(TextLowercaseUnderscore((\"aab_Abbbc\")) == (false));\n    Debug.Assert(TextLowercaseUnderscore((\"Aaab_abbbc\")) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return text.Contains(\"_\");",
    "        // Write your code here\n        return false;",
    "        return System.Text.RegularExpressions.Regex.IsMatch(text, @\"^[a-z_]+$\");",
    "        // Your code here\n        return false;",
    "        return text.All(c => char.IsLower(c) || c == '_');",
    "        // Your code here\n        return false;",
    "        // TODO: Implement this function\n        return false;",
    "        // TODO: Implement this function\n        return false;",
    "        return System.Text.RegularExpressions.Regex.IsMatch(text, @\"^[a-z_]+$\");",
    "        return System.Text.RegularExpressions.Regex.IsMatch(text, @\"^[a-z_]+$\");",
    "        return text.Contains(\"_\");",
    "        // Your code here\n        return false;",
    "        return text.Contains(\"_\");",
    "        return System.Text.RegularExpressions.Regex.IsMatch(text, @\"^[a-z_]+$\");",
    "        // TODO: Implement this function\n        return false;",
    "        return System.Text.RegularExpressions.Regex.IsMatch(text, @\"^[a-z]+(_[a-z]+)*$\");",
    "        // TODO: Implement this function\n        return false;",
    "        return text.Contains(\"_\");",
    "        // TODO: Implement this function\n        return false;",
    "        // TODO: implement this function\n        return false;"
  ]
}
{
  "name": "mbpp_283_validate",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function takes in an integer and check whether the frequency of each digit in the integer is less than or equal to the digit itself.\n    public static bool Validate(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_283_validate.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Validate((1234L)) == (true));\n    Debug.Assert(Validate((51241L)) == (false));\n    Debug.Assert(Validate((321L)) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var counts = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            counts[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < counts.Length; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            freq[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            if (++digits[digit] > digit) {\n                return false;\n            }\n            n /= 10;\n        }\n        return true;",
    "        var counts = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            counts[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = n.ToString().ToCharArray().Select(x => (int)Char.GetNumericValue(x)).ToList();\n        var counts = new int[10];\n        foreach (var digit in digits) {\n            counts[digit]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            if (++digits[digit] > digit) {\n                return false;\n            }\n            n /= 10;\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            freq[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var dict = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = n % 10;\n            if (dict.ContainsKey(digit)) {\n                dict[digit]++;\n            } else {\n                dict[digit] = 1;\n            }\n            n /= 10;\n        }\n        foreach (var item in dict) {\n            if (item.Value > item.Key) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = n.ToString().ToCharArray();\n        var counts = new int[10];\n        foreach (var digit in digits) {\n            counts[digit - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            digits[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var dict = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            if (dict.ContainsKey(digit)) {\n                dict[digit]++;\n            } else {\n                dict.Add(digit, 1);\n            }\n            n /= 10;\n        }\n        foreach (var key in dict.Keys) {\n            if (dict[key] > key) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var freq = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            if (freq.ContainsKey(digit)) {\n                freq[digit]++;\n            } else {\n                freq[digit] = 1;\n            }\n            n /= 10;\n        }\n        foreach (var kvp in freq) {\n            if (kvp.Value > kvp.Key) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            digits[n % 10]++;\n            n /= 10;\n        }\n        for (var i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            if (digits[digit] > digit) {\n                return false;\n            }\n            digits[digit]++;\n            n /= 10;\n        }\n        return true;",
    "        // Write your code here\n        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < digits.Length; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (var i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = n.ToString().ToCharArray();\n        var counts = new int[10];\n        foreach (var d in digits) {\n            counts[d - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        int[] digits = new int[10];\n        while (n > 0) {\n            digits[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (var i = 0; i < digits.Length; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var dict = new Dictionary<long, long>();\n        while (n > 0) {\n            var digit = n % 10;\n            if (dict.ContainsKey(digit)) {\n                dict[digit]++;\n            } else {\n                dict[digit] = 1;\n            }\n            n /= 10;\n        }\n        foreach (var kv in dict) {\n            if (kv.Value > kv.Key) {\n                return false;\n            }\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            freq[digit]++;\n            n /= 10;\n        }\n        for (var i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            digits[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < digits.Length; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var counts = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            if (!counts.ContainsKey(digit)) {\n                counts[digit] = 0;\n            }\n            counts[digit]++;\n            n /= 10;\n        }\n        foreach (var kvp in counts) {\n            if (kvp.Value > kvp.Key) {\n                return false;\n            }\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            freq[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (var i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            if (++digits[digit] > digit) {\n                return false;\n            }\n            n /= 10;\n        }\n        return true;",
    "        var counts = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            counts[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            if (digits[digit] > digit) {\n                return false;\n            }\n            digits[digit]++;\n            n /= 10;\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            if (++digits[digit] > digit) {\n                return false;\n            }\n            n /= 10;\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            var d = n % 10;\n            if (freq[d] > d) {\n                return false;\n            }\n            freq[d]++;\n            n /= 10;\n        }\n        return true;",
    "        var digits = n.ToString().ToCharArray();\n        var counts = new int[10];\n        foreach (var digit in digits) {\n            counts[digit - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = n.ToString().ToCharArray();\n        var digitCount = new Dictionary<char, int>();\n        foreach (var digit in digits) {\n            if (digitCount.ContainsKey(digit)) {\n                digitCount[digit]++;\n            } else {\n                digitCount[digit] = 1;\n            }\n        }\n        foreach (var digit in digits) {\n            if (digitCount[digit] > int.Parse(digit.ToString())) {\n                return false;\n            }\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            freq[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var freq = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            freq[digit]++;\n            n /= 10;\n        }\n\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var freq = new int[10];\n        while (n > 0) {\n            var d = n % 10;\n            if (freq[d] > d) {\n                return false;\n            }\n            freq[d]++;\n            n /= 10;\n        }\n        return true;",
    "        var counts = new int[10];\n        while (n > 0) {\n            counts[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var map = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            if (map.ContainsKey(digit)) {\n                map[digit]++;\n            } else {\n                map[digit] = 1;\n            }\n            n /= 10;\n        }\n        foreach (var key in map.Keys) {\n            if (map[key] > key) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = n % 10;\n            if (digits.ContainsKey(digit)) {\n                digits[digit]++;\n            } else {\n                digits[digit] = 1;\n            }\n            n /= 10;\n        }\n        foreach (var digit in digits) {\n            if (digit.Value > digit.Key) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            if (digits[digit] > digit) {\n                return false;\n            }\n            digits[digit]++;\n            n /= 10;\n        }\n        return true;",
    "        // Write your code here.\n        var str = n.ToString();\n        var freq = new int[10];\n        foreach (var c in str) {\n            freq[c - '0']++;\n        }\n        for (var i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var counts = new int[10];\n        while (n > 0) {\n            var d = n % 10;\n            counts[d]++;\n            n /= 10;\n        }\n        for (int i = 1; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            digits[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            freq[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < digits.Length; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        int[] digits = new int[10];\n        while (n > 0) {\n            digits[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = n.ToString().ToCharArray().Select(x => int.Parse(x.ToString())).ToList();\n        var counts = new int[10];\n        foreach (var digit in digits) {\n            counts[digit]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var dict = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            if (dict.ContainsKey(digit)) {\n                dict[digit] += 1;\n            } else {\n                dict[digit] = 1;\n            }\n            n /= 10;\n        }\n        foreach (var kvp in dict) {\n            if (kvp.Value > kvp.Key) {\n                return false;\n            }\n        }\n        return true;",
    "        var count = new int[10];\n        while (n > 0) {\n            count[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (count[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            if (++digits[digit] > digit) {\n                return false;\n            }\n            n /= 10;\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < digits.Length; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = n.ToString().Select(c => c - '0');\n        var counts = new int[10];\n        foreach (var d in digits) {\n            counts[d]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            freq[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            digits[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) return false;\n        }\n        return true;",
    "        // Write your code here\n        var digits = n.ToString().ToCharArray();\n        var counts = new int[10];\n        foreach (var digit in digits) {\n            counts[digit - '0']++;\n        }\n        for (var i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            digits[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            if (!digits.ContainsKey(digit)) {\n                digits[digit] = 0;\n            }\n            digits[digit]++;\n            n /= 10;\n        }\n        foreach (var digit in digits.Keys) {\n            if (digits[digit] > digit) {\n                return false;\n            }\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            freq[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = n.ToString().Select(c => int.Parse(c.ToString())).ToList();\n        var counts = new int[10];\n        foreach (var d in digits) {\n            counts[d]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            freq[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var counts = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            counts[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            freq[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var count = new int[10];\n        while (n > 0) {\n            count[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (count[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            digits[digit]++;\n            n /= 10;\n        }\n        for (var i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var dict = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = n % 10;\n            if (!dict.ContainsKey(digit)) {\n                dict[digit] = 0;\n            }\n            dict[digit]++;\n            n /= 10;\n        }\n        foreach (var kv in dict) {\n            if (kv.Value > kv.Key) {\n                return false;\n            }\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            freq[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = n.ToString().ToCharArray();\n        var counts = new int[10];\n        foreach (var digit in digits) {\n            counts[digit - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = n.ToString().Select(c => int.Parse(c.ToString())).ToArray();\n        var counts = new int[10];\n        foreach (var d in digits) {\n            counts[d]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (var i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            n /= 10;\n            if (!digits.ContainsKey(digit)) {\n                digits[digit] = 0;\n            }\n            digits[digit]++;\n        }\n        foreach (var digit in digits.Keys) {\n            if (digits[digit] > digit) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var count = new int[10];\n        while (n > 0) {\n            count[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (count[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var dict = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            if (dict.ContainsKey(digit)) {\n                dict[digit]++;\n            } else {\n                dict[digit] = 1;\n            }\n            n /= 10;\n        }\n        foreach (var kv in dict) {\n            if (kv.Value > kv.Key) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = n.ToString().ToCharArray().Select(x => int.Parse(x.ToString())).ToArray();\n        var freq = new int[10];\n        foreach (var d in digits) {\n            freq[d]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            if (++digits[digit] > digit) {\n                return false;\n            }\n            n /= 10;\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            var d = n % 10;\n            freq[d]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = n.ToString().Select(c => int.Parse(c.ToString())).ToList();\n        var counts = new Dictionary<int, int>();\n        foreach (var d in digits) {\n            if (!counts.ContainsKey(d)) {\n                counts[d] = 0;\n            }\n            counts[d]++;\n        }\n        foreach (var kvp in counts) {\n            if (kvp.Value > kvp.Key) {\n                return false;\n            }\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            freq[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var count = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            count[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (count[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = new int[10];\n        while (n > 0) {\n            var d = n % 10;\n            digits[d]++;\n            n /= 10;\n        }\n        for (var i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (var i = 0; i < digits.Length; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            digits[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            if (digits.ContainsKey(digit)) {\n                digits[digit]++;\n            } else {\n                digits[digit] = 1;\n            }\n            n /= 10;\n        }\n        foreach (var digit in digits.Keys) {\n            if (digits[digit] > digit) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = n.ToString().ToCharArray();\n        var counts = new int[10];\n        foreach (var d in digits) {\n            counts[d - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var counts = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            counts[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            if (++digits[digit] > digit) {\n                return false;\n            }\n            n /= 10;\n        }\n        return true;",
    "        // Write your code here\n        var digits = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            if (!digits.ContainsKey(digit)) {\n                digits[digit] = 0;\n            }\n            digits[digit]++;\n            n /= 10;\n        }\n        foreach (var key in digits.Keys) {\n            if (digits[key] > key) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var dict = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = n % 10;\n            if (dict.ContainsKey(digit)) {\n                dict[digit]++;\n            } else {\n                dict.Add(digit, 1);\n            }\n            n /= 10;\n        }\n        foreach (var kvp in dict) {\n            if (kvp.Value > kvp.Key) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            if (digits[digit] > digit) {\n                return false;\n            }\n            digits[digit]++;\n            n /= 10;\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        int[] digits = new int[10];\n        while (n > 0) {\n            digits[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var dict = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = n % 10;\n            if (dict.ContainsKey(digit)) {\n                dict[digit]++;\n            } else {\n                dict[digit] = 1;\n            }\n            n /= 10;\n        }\n        foreach (var key in dict.Keys) {\n            if (dict[key] > key) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            if (++digits[digit] > digit) {\n                return false;\n            }\n            n /= 10;\n        }\n        return true;",
    "        var counts = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            counts[digit]++;\n            n /= 10;\n        }\n        for (var i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        Dictionary<int, int> freq = new Dictionary<int, int>();\n        while (n > 0) {\n            int d = (int)(n % 10);\n            if (freq.ContainsKey(d)) {\n                freq[d]++;\n            } else {\n                freq[d] = 1;\n            }\n            n /= 10;\n        }\n        foreach (var kv in freq) {\n            if (kv.Value > kv.Key) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        Dictionary<int, int> freq = new Dictionary<int, int>();\n        while (n > 0) {\n            int digit = (int)(n % 10);\n            if (freq.ContainsKey(digit)) {\n                freq[digit] += 1;\n            } else {\n                freq[digit] = 1;\n            }\n            n /= 10;\n        }\n        foreach (var kvp in freq) {\n            if (kvp.Value > kvp.Key) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = n.ToString().ToCharArray().Select(c => c - '0').ToList();\n        var counts = new int[10];\n        foreach (var d in digits) {\n            counts[d]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            if (digits.ContainsKey(digit)) {\n                digits[digit]++;\n            } else {\n                digits[digit] = 1;\n            }\n            n /= 10;\n        }\n        foreach (var digit in digits) {\n            if (digit.Value > digit.Key) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = new int[10];\n        while (n > 0) {\n            digits[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            if (digits[digit] > digit) {\n                return false;\n            }\n            n /= 10;\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            if (freq[digit] > digit) {\n                return false;\n            }\n            freq[digit]++;\n            n /= 10;\n        }\n        return true;",
    "        var counts = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            counts[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (var i = 0; i < digits.Length; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var freq = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            freq[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            digits[digit]++;\n            n /= 10;\n        }\n        for (var i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var s = n.ToString();\n        var d = new int[10];\n        foreach (var c in s) {\n            d[c - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (d[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = n.ToString().Select(c => c - '0').ToList();\n        var freq = new int[10];\n        foreach (var d in digits) {\n            freq[d]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = n.ToString().ToCharArray();\n        var counts = new int[10];\n        foreach (var digit in digits) {\n            counts[digit - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            if (digits[digit] > digit) {\n                return false;\n            }\n            digits[digit]++;\n            n /= 10;\n        }\n        return true;",
    "        // Write your code here\n        Dictionary<int, int> freq = new Dictionary<int, int>();\n        while (n > 0) {\n            int digit = (int)n % 10;\n            if (freq.ContainsKey(digit)) {\n                freq[digit]++;\n            } else {\n                freq[digit] = 1;\n            }\n            n /= 10;\n        }\n        foreach (int key in freq.Keys) {\n            if (freq[key] > key) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            digits[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var freq = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            if (!freq.ContainsKey(digit)) {\n                freq[digit] = 0;\n            }\n            freq[digit]++;\n            n /= 10;\n        }\n        foreach (var kvp in freq) {\n            if (kvp.Value > kvp.Key) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            if (digits.ContainsKey(digit)) {\n                digits[digit]++;\n            } else {\n                digits[digit] = 1;\n            }\n            n /= 10;\n        }\n        foreach (var kvp in digits) {\n            if (kvp.Value > kvp.Key) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            if (digits[digit] > digit) {\n                return false;\n            }\n            digits[digit]++;\n            n /= 10;\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            freq[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            if (digits[digit] > digit) {\n                return false;\n            }\n            digits[digit]++;\n            n /= 10;\n        }\n        return true;",
    "        var counts = new int[10];\n        while (n > 0) {\n            var d = n % 10;\n            counts[d]++;\n            n /= 10;\n        }\n        for (int i = 0; i < counts.Length; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            freq[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = new int[10];\n        while (n != 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < digits.Length; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            if (++digits[digit] > digit) {\n                return false;\n            }\n            n /= 10;\n        }\n        return true;",
    "        // Write your code here\n        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (var i = 0; i < digits.Length; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var dict = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = n % 10;\n            if (dict.ContainsKey(digit)) {\n                dict[digit]++;\n            } else {\n                dict.Add(digit, 1);\n            }\n            n /= 10;\n        }\n        foreach (var kvp in dict) {\n            if (kvp.Value > kvp.Key) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            if (++digits[digit] > digit) {\n                return false;\n            }\n            n /= 10;\n        }\n        return true;",
    "        // Write your code here\n        var digits = n.ToString().ToCharArray().Select(x => int.Parse(x.ToString())).ToArray();\n        var digitCount = new int[10];\n        foreach (var digit in digits) {\n            digitCount[digit]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digitCount[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            digits[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            digits[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            digits[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = n.ToString().ToCharArray();\n        var counts = new int[10];\n        foreach (var digit in digits) {\n            counts[digit - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = n.ToString().ToCharArray();\n        var counts = new int[10];\n        foreach (var digit in digits) {\n            counts[digit - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            if (!digits.ContainsKey(digit)) {\n                digits[digit] = 0;\n            }\n            digits[digit]++;\n            n /= 10;\n        }\n        foreach (var kvp in digits) {\n            if (kvp.Value > kvp.Key) {\n                return false;\n            }\n        }\n        return true;",
    "        int[] freq = new int[10];\n        while (n > 0) {\n            freq[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        int[] digits = new int[10];\n        while (n > 0) {\n            digits[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            digits[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            freq[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            if (++digits[digit] > digit) {\n                return false;\n            }\n            n /= 10;\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            freq[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            freq[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var counts = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            counts[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            freq[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            digits[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here.\n        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            if (digits[digit] > digit) {\n                return false;\n            }\n            digits[digit]++;\n            n /= 10;\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            if (digits[digit] > digit) {\n                return false;\n            }\n            digits[digit]++;\n            n /= 10;\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            freq[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 1; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = n.ToString().Select(c => c - '0').ToArray();\n        var counts = new int[10];\n        foreach (var d in digits) {\n            counts[d]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            if (digits.ContainsKey(digit)) {\n                digits[digit]++;\n            } else {\n                digits[digit] = 1;\n            }\n            n /= 10;\n        }\n        foreach (var kvp in digits) {\n            if (kvp.Value > kvp.Key) {\n                return false;\n            }\n        }\n        return true;",
    "        var dict = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            if (dict.ContainsKey(digit)) {\n                dict[digit]++;\n            } else {\n                dict[digit] = 1;\n            }\n            n /= 10;\n        }\n        foreach (var kvp in dict) {\n            if (kvp.Value > kvp.Key) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (var i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < digits.Length; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            freq[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            if (digits[digit] >= digit) {\n                return false;\n            }\n            digits[digit]++;\n            n /= 10;\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            freq[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = new int[10];\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            if (++digits[digit] > digit) {\n                return false;\n            }\n            n /= 10;\n        }\n        return true;",
    "        Dictionary<int, int> freq = new Dictionary<int, int>();\n        while (n > 0) {\n            int digit = (int)(n % 10);\n            if (freq.ContainsKey(digit)) {\n                freq[digit]++;\n            } else {\n                freq[digit] = 1;\n            }\n            n /= 10;\n        }\n        foreach (var kvp in freq) {\n            if (kvp.Value > kvp.Key) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            digits[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        Dictionary<int, int> freq = new Dictionary<int, int>();\n        while (n > 0) {\n            int digit = (int)(n % 10);\n            if (!freq.ContainsKey(digit)) {\n                freq[digit] = 1;\n            } else {\n                freq[digit] += 1;\n            }\n            n /= 10;\n        }\n        foreach (var kv in freq) {\n            if (kv.Value > kv.Key) {\n                return false;\n            }\n        }\n        return true;",
    "        var counts = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            counts[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var counts = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            counts[digit]++;\n            n /= 10;\n        }\n        for (var i = 0; i < counts.Length; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            freq[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            if (++digits[digit] > digit) {\n                return false;\n            }\n            n /= 10;\n        }\n        return true;",
    "        // Write your code here\n        int[] count = new int[10];\n        while (n > 0) {\n            count[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (count[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            n /= 10;\n            if (digits.ContainsKey(digit)) {\n                digits[digit]++;\n            } else {\n                digits[digit] = 1;\n            }\n        }\n        foreach (var digit in digits) {\n            if (digit.Value > digit.Key) {\n                return false;\n            }\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            var d = n % 10;\n            freq[d]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = n.ToString().Select(c => c - '0').ToArray();\n        var freq = new int[10];\n        foreach (var d in digits) {\n            freq[d]++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            if (digits[digit] > digit) {\n                return false;\n            }\n            digits[digit]++;\n            n /= 10;\n        }\n        return true;",
    "        var counts = new int[10];\n        while (n > 0) {\n            counts[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            digits[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var freq = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            freq[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            freq[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = n.ToString().ToCharArray();\n        var counts = new int[10];\n        foreach (var d in digits) {\n            counts[d - '0']++;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < digits.Length; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            freq[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var count = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            count[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (count[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            if (digits[digit] > digit) {\n                return false;\n            }\n            digits[digit]++;\n            n /= 10;\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var d = n % 10;\n            if (++digits[d] > d) {\n                return false;\n            }\n            n /= 10;\n        }\n        return true;",
    "        // Write your code here\n        string s = n.ToString();\n        int[] freq = new int[10];\n        for (int i = 0; i < s.Length; i++) {\n            freq[s[i] - '0']++;\n        }\n        for (int i = 0; i < s.Length; i++) {\n            if (freq[s[i] - '0'] > (s[i] - '0')) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            digits[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var counts = new int[10];\n        while (n > 0) {\n            counts[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            if (digits[digit] > digit) {\n                return false;\n            }\n            n /= 10;\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var dict = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            if (dict.ContainsKey(digit)) {\n                dict[digit]++;\n            } else {\n                dict[digit] = 1;\n            }\n            n = n / 10;\n        }\n        foreach (var kv in dict) {\n            if (kv.Key < kv.Value) {\n                return false;\n            }\n        }\n        return true;",
    "        var freq = new int[10];\n        while (n > 0) {\n            int digit = (int)(n % 10);\n            freq[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (freq[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var counts = new int[10];\n        while (n > 0) {\n            counts[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here.\n        var digits = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            digits[digit]++;\n            n /= 10;\n        }\n        for (var i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var counts = new int[10];\n        while (n > 0) {\n            var digit = n % 10;\n            counts[digit]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (counts[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            digits[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var map = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            if (map.ContainsKey(digit)) {\n                map[digit]++;\n            } else {\n                map[digit] = 1;\n            }\n            n /= 10;\n        }\n        foreach (var kvp in map) {\n            if (kvp.Value > kvp.Key) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        var dict = new Dictionary<int, int>();\n        while (n > 0) {\n            var digit = (int)(n % 10);\n            if (dict.ContainsKey(digit)) {\n                dict[digit]++;\n            } else {\n                dict[digit] = 1;\n            }\n            n /= 10;\n        }\n        foreach (var kvp in dict) {\n            if (kvp.Value > kvp.Key) {\n                return false;\n            }\n        }\n        return true;",
    "        var digits = new int[10];\n        while (n > 0) {\n            digits[n % 10]++;\n            n /= 10;\n        }\n        for (int i = 0; i < 10; i++) {\n            if (digits[i] > i) {\n                return false;\n            }\n        }\n        return true;"
  ]
}
{
  "name": "mbpp_588_big_diff",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the difference between largest and smallest value in a given list.\n    public static long BigDiff(List<long> nums) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_588_big_diff.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(BigDiff((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))) == (3L));\n    Debug.Assert(BigDiff((new List<long>(new long[]{(long)4L, (long)5L, (long)12L}))) == (8L));\n    Debug.Assert(BigDiff((new List<long>(new long[]{(long)9L, (long)2L, (long)3L}))) == (7L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long min = nums[0];\n        long max = nums[0];\n        for (int i = 1; i < nums.Count; i++) {\n            if (nums[i] > max) {\n                max = nums[i];\n            }\n            if (nums[i] < min) {\n                min = nums[i];\n            }\n        }\n        return max - min;",
    "        long max = nums[0];\n        long min = nums[0];\n        for (int i = 1; i < nums.Count; i++) {\n            if (nums[i] > max) {\n                max = nums[i];\n            }\n            if (nums[i] < min) {\n                min = nums[i];\n            }\n        }\n        return max - min;",
    "        long min = nums[0];\n        long max = nums[0];\n        for (int i = 1; i < nums.Count; i++) {\n            if (nums[i] < min) {\n                min = nums[i];\n            }\n            if (nums[i] > max) {\n                max = nums[i];\n            }\n        }\n        return max - min;",
    "        long max = nums[0];\n        long min = nums[0];\n        for (int i = 1; i < nums.Count; i++) {\n            if (nums[i] > max) {\n                max = nums[i];\n            }\n            if (nums[i] < min) {\n                min = nums[i];\n            }\n        }\n        return max - min;",
    "        long min = nums[0];\n        long max = nums[0];\n        for (int i = 0; i < nums.Count; i++) {\n            if (nums[i] < min) {\n                min = nums[i];\n            }\n            if (nums[i] > max) {\n                max = nums[i];\n            }\n        }\n        return max - min;",
    "        long max = nums[0];\n        long min = nums[0];\n        for (int i = 1; i < nums.Count; i++) {\n            if (nums[i] > max) {\n                max = nums[i];\n            }\n            if (nums[i] < min) {\n                min = nums[i];\n            }\n        }\n        return max - min;",
    "        long max = nums[0];\n        long min = nums[0];\n        for (int i = 1; i < nums.Count; i++) {\n            if (nums[i] > max) {\n                max = nums[i];\n            }\n            if (nums[i] < min) {\n                min = nums[i];\n            }\n        }\n        return max - min;",
    "        long max = nums[0];\n        long min = nums[0];\n        for (int i = 0; i < nums.Count; i++) {\n            if (nums[i] > max) {\n                max = nums[i];\n            }\n            if (nums[i] < min) {\n                min = nums[i];\n            }\n        }\n        return max - min;",
    "        long max = nums[0];\n        long min = nums[0];\n        for (int i = 0; i < nums.Count; i++) {\n            if (nums[i] > max) {\n                max = nums[i];\n            }\n            if (nums[i] < min) {\n                min = nums[i];\n            }\n        }\n        return max - min;",
    "        long max = nums[0];\n        long min = nums[0];\n        for (int i = 1; i < nums.Count; i++) {\n            if (nums[i] > max) {\n                max = nums[i];\n            }\n            if (nums[i] < min) {\n                min = nums[i];\n            }\n        }\n        return max - min;",
    "        long max = nums[0];\n        long min = nums[0];\n        for (int i = 0; i < nums.Count; i++) {\n            if (nums[i] > max) {\n                max = nums[i];\n            }\n            if (nums[i] < min) {\n                min = nums[i];\n            }\n        }\n        return max - min;",
    "        long max = nums[0];\n        long min = nums[0];\n        foreach (long num in nums) {\n            if (num > max) {\n                max = num;\n            }\n            if (num < min) {\n                min = num;\n            }\n        }\n        return max - min;",
    "        long max = nums[0];\n        long min = nums[0];\n        for (int i = 1; i < nums.Count; i++) {\n            if (nums[i] > max) {\n                max = nums[i];\n            }\n            if (nums[i] < min) {\n                min = nums[i];\n            }\n        }\n        return max - min;",
    "        long min = nums[0];\n        long max = nums[0];\n        for (int i = 1; i < nums.Count; i++) {\n            if (nums[i] < min) {\n                min = nums[i];\n            }\n            if (nums[i] > max) {\n                max = nums[i];\n            }\n        }\n        return max - min;",
    "        long max = nums[0];\n        long min = nums[0];\n        for (int i = 0; i < nums.Count; i++) {\n            if (nums[i] > max) {\n                max = nums[i];\n            }\n            if (nums[i] < min) {\n                min = nums[i];\n            }\n        }\n        return max - min;",
    "        long max = nums[0];\n        long min = nums[0];\n        for (int i = 0; i < nums.Count; i++) {\n            if (nums[i] > max) {\n                max = nums[i];\n            }\n            if (nums[i] < min) {\n                min = nums[i];\n            }\n        }\n        return max - min;",
    "        long min = nums[0];\n        long max = nums[0];\n        for (int i = 1; i < nums.Count; i++) {\n            if (nums[i] < min) {\n                min = nums[i];\n            }\n            if (nums[i] > max) {\n                max = nums[i];\n            }\n        }\n        return max - min;",
    "        long max = nums[0];\n        long min = nums[0];\n        for (int i = 0; i < nums.Count; i++) {\n            if (nums[i] > max) {\n                max = nums[i];\n            }\n            if (nums[i] < min) {\n                min = nums[i];\n            }\n        }\n        return max - min;",
    "        long max = nums[0];\n        long min = nums[0];\n        for (int i = 1; i < nums.Count; i++) {\n            if (nums[i] > max) {\n                max = nums[i];\n            }\n            if (nums[i] < min) {\n                min = nums[i];\n            }\n        }\n        return max - min;",
    "        long max = nums[0];\n        long min = nums[0];\n        for (int i = 0; i < nums.Count; i++) {\n            if (nums[i] > max) {\n                max = nums[i];\n            }\n            if (nums[i] < min) {\n                min = nums[i];\n            }\n        }\n        return max - min;"
  ]
}
{
  "name": "mbpp_730_consecutive_duplicates",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to remove consecutive duplicates of a given list.\n    public static object ConsecutiveDuplicates(object nums) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_730_consecutive_duplicates.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ConsecutiveDuplicates((new object(new long[]{(long)0L, (long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)4L, (long)5L, (long)6L, (long)6L, (long)6L, (long)7L, (long)8L, (long)9L, (long)4L, (long)4L}))).Equals((new object(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L, (long)4L}))));\n    Debug.Assert(ConsecutiveDuplicates((new object(new long[]{(long)10L, (long)10L, (long)15L, (long)19L, (long)18L, (long)18L, (long)17L, (long)26L, (long)26L, (long)17L, (long)18L, (long)10L}))).Equals((new object(new long[]{(long)10L, (long)15L, (long)19L, (long)18L, (long)17L, (long)26L, (long)17L, (long)18L, (long)10L}))));\n    Debug.Assert(ConsecutiveDuplicates((new object(new string[]{(string)\"a\", (string)\"a\", (string)\"b\", (string)\"c\", (string)\"d\", (string)\"d\"}))).Equals((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\", (string)\"d\"}))));\n    Debug.Assert(ConsecutiveDuplicates((new object(new string[]{(string)\"a\", (string)\"a\", (string)\"b\", (string)\"c\", (string)\"d\", (string)\"d\", (string)\"a\", (string)\"a\"}))).Equals((new object(new string[]{(string)\"a\", (string)\"b\", (string)\"c\", (string)\"d\", (string)\"a\"}))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        List<object> result = new List<object>();\n        object last = null;\n        foreach (object num in (List<object>)nums) {\n            if (num != last) {\n                result.Add(num);\n            }\n            last = num;\n        }\n        return result;",
    "        var list = (List<int>)nums;\n        var result = new List<int>();\n        var last = list[0];\n        result.Add(last);\n        for (int i = 1; i < list.Count; i++) {\n            if (list[i] != last) {\n                result.Add(list[i]);\n                last = list[i];\n            }\n        }\n        return result;",
    "        var list = (List<object>)nums;\n        var result = new List<object>();\n        var last = list[0];\n        result.Add(last);\n        for (int i = 1; i < list.Count; i++) {\n            if (list[i] != last) {\n                result.Add(list[i]);\n                last = list[i];\n            }\n        }\n        return result;",
    "        List<object> result = new List<object>();\n        object last = null;\n        foreach (object num in (List<object>)nums) {\n            if (num != last) {\n                result.Add(num);\n                last = num;\n            }\n        }\n        return result;",
    "        if (nums is List<object>) {\n            List<object> list = (List<object>)nums;\n            List<object> result = new List<object>();\n            object last = null;\n            foreach (object obj in list) {\n                if (obj != last) {\n                    result.Add(obj);\n                    last = obj;\n                }\n            }\n            return result;\n        } else {\n            return nums;\n        }",
    "        var list = (List<object>)nums;\n        var result = new List<object>();\n        var last = list[0];\n        result.Add(last);\n        for (int i = 1; i < list.Count; i++) {\n            if (list[i] != last) {\n                result.Add(list[i]);\n                last = list[i];\n            }\n        }\n        return result;",
    "        List<object> list = new List<object>();\n        object last = null;\n        foreach (object n in (List<object>)nums) {\n            if (n != last) {\n                list.Add(n);\n                last = n;\n            }\n        }\n        return list;",
    "        var list = (List<object>)nums;\n        var result = new List<object>();\n        var last = list[0];\n        result.Add(last);\n        for (int i = 1; i < list.Count; i++) {\n            if (list[i] != last) {\n                result.Add(list[i]);\n                last = list[i];\n            }\n        }\n        return result;",
    "        var list = (List<object>)nums;\n        var result = new List<object>();\n        for (int i = 0; i < list.Count; i++) {\n            if (i == 0 || list[i] != list[i - 1]) {\n                result.Add(list[i]);\n            }\n        }\n        return result;",
    "        var list = (List<object>)nums;\n        var result = new List<object>();\n        var last = list[0];\n        result.Add(last);\n        for (int i = 1; i < list.Count; i++) {\n            if (list[i] != last) {\n                result.Add(list[i]);\n                last = list[i];\n            }\n        }\n        return result;",
    "        var list = (List<object>)nums;\n        var newList = new List<object>();\n        var last = list[0];\n        newList.Add(last);\n        for (int i = 1; i < list.Count; i++) {\n            if (list[i].Equals(last)) {\n                continue;\n            }\n            newList.Add(list[i]);\n            last = list[i];\n        }\n        return newList;",
    "        var list = (List<object>)nums;\n        var result = new List<object>();\n        var last = list[0];\n        result.Add(last);\n        for (int i = 1; i < list.Count; i++) {\n            if (list[i] != last) {\n                result.Add(list[i]);\n                last = list[i];\n            }\n        }\n        return result;",
    "        List<object> result = new List<object>();\n        object last = null;\n        foreach (object num in (List<object>)nums) {\n            if (num != last) {\n                result.Add(num);\n                last = num;\n            }\n        }\n        return result;",
    "        var result = new List<object>();\n        var last = nums;\n        foreach (var num in (List<object>)nums) {\n            if (num != last) {\n                result.Add(num);\n                last = num;\n            }\n        }\n        return result;",
    "        List<object> result = new List<object>();\n        List<object> numsList = (List<object>)nums;\n        object last = numsList[0];\n        result.Add(last);\n        for (int i = 1; i < numsList.Count; i++) {\n            if (numsList[i] != last) {\n                result.Add(numsList[i]);\n                last = numsList[i];\n            }\n        }\n        return result;",
    "        var list = (List<object>)nums;\n        var result = new List<object>();\n        var last = list[0];\n        result.Add(last);\n        for (int i = 1; i < list.Count; i++) {\n            if (list[i] != last) {\n                result.Add(list[i]);\n                last = list[i];\n            }\n        }\n        return result;",
    "        var list = (List<object>)nums;\n        var result = new List<object>();\n        var last = list[0];\n        result.Add(last);\n        for (int i = 1; i < list.Count; i++) {\n            var current = list[i];\n            if (current != last) {\n                result.Add(current);\n            }\n            last = current;\n        }\n        return result;",
    "        List<object> list = new List<object>();\n        object last = null;\n        foreach (object num in (List<object>)nums) {\n            if (num != last) {\n                list.Add(num);\n                last = num;\n            }\n        }\n        return list;",
    "        var list = (List<object>)nums;\n        var result = new List<object>();\n        var last = list[0];\n        result.Add(last);\n        for (int i = 1; i < list.Count; i++) {\n            if (list[i] != last) {\n                result.Add(list[i]);\n                last = list[i];\n            }\n        }\n        return result;",
    "        if (nums is List<object>) {\n            var list = (List<object>)nums;\n            if (list.Count == 0) {\n                return list;\n            }\n            var result = new List<object>();\n            result.Add(list[0]);\n            for (int i = 1; i < list.Count; i++) {\n                if (list[i].Equals(list[i - 1])) {\n                    continue;\n                }\n                result.Add(list[i]);\n            }\n            return result;\n        }\n        return nums;"
  ]
}
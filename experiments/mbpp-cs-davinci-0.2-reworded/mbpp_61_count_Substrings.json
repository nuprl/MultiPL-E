{
  "name": "mbpp_61_count_Substrings",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of substrings with the sum of digits equal to their length.\n    public static long CountSubstrings(string s) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_61_count_Substrings.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountSubstrings((\"112112\")) == (6L));\n    Debug.Assert(CountSubstrings((\"111\")) == (6L));\n    Debug.Assert(CountSubstrings((\"1101112\")) == (12L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            int sum = 0;\n            for (int j = i; j < s.Length; j++) {\n                sum += s[j] - '0';\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        // TODO: Implement this function\n        return 0;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        int n = s.Length;\n        long[] dp = new long[n];\n        long[] sum = new long[n];\n        for (int i = 0; i < n; i++) {\n            dp[i] = (s[i] - '0') * (i + 1);\n            sum[i] = (s[i] - '0') * (i + 1);\n        }\n        for (int i = 1; i < n; i++) {\n            for (int j = 0; j < i; j++) {\n                if (sum[j] == (i - j)) {\n                    dp[i] += (i - j + 1);\n                }\n                sum[j] += (s[i] - '0');\n            }\n        }\n        return dp.Sum();",
    "        // Write your code here\n        long result = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == (j - i + 1)) {\n                    result++;\n                }\n            }\n        }\n        return result;",
    "        long count = 0;\n        int n = s.Length;\n        for (int i = 0; i < n; i++) {\n            for (int j = i; j < n; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += (int)Char.GetNumericValue(s[k]);\n                }\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            int sum = 0;\n            for (int j = i; j < s.Length; j++) {\n                sum += s[j] - '0';\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            for (int j = i; j < s.Length; j++) {\n                int sum = 0;\n                for (int k = i; k <= j; k++) {\n                    sum += s[k] - '0';\n                }\n                if (sum == j - i + 1) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            int sum = 0;\n            for (int j = i; j < s.Length; j++) {\n                sum += s[j] - '0';\n                if (sum == (j - i + 1)) {\n                    count++;\n                }\n            }\n        }\n        return count;"
  ]
}
{
  "name": "mbpp_619_move_num",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_619_move_num.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bf3e8e92a194458b62a956628ae5809>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bf3e8e92a194458b62a956628ae5809>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string num_str = \"\";\n        string alpha_str = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num_str += test_str[i];\n            } else {\n                alpha_str += test_str[i];\n            }\n        }\n        return alpha_str + num_str;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"0123456789\";\n        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (nums.Contains(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!nums.Contains(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fa7b32be1d234cbd8c64ea5dc10d166d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fa7b32be1d234cbd8c64ea5dc10d166d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Convert the string to a char array.\n        char[] char_array = test_str.ToCharArray();\n        // Create a new string builder.\n        StringBuilder sb = new StringBuilder();\n        // Loop through the char array.\n        for (int i = 0; i < char_array.Length; i++) {\n            // If the current char is a number.\n            if (char_array[i] >= '0' && char_array[i] <= '9') {\n                // Append the char to the string builder.\n                sb.Append(char_array[i]);\n            }\n        }\n        // Loop through the char array.\n        for (int i = 0; i < char_array.Length; i++) {\n            // If the current char is not a number.\n            if (char_array[i] < '0' || char_array[i] > '9') {\n                // Append the char to the string builder.\n                sb.Append(char_array[i]);\n            }\n        }\n        // Return the string builder as a string.\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38755bd5dab449d48e9355bdd1def939>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <38755bd5dab449d48e9355bdd1def939>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a new string to store the result.\n        string result = \"\";\n        // Create a new string to store the numbers.\n        string nums = \"\";\n        // Iterate through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // Check if the current character is a number.\n            if (Char.IsDigit(test_str[i])) {\n                // If it is, add it to the nums string.\n                nums += test_str[i];\n            } else {\n                // If it isn't, add it to the result string.\n                result += test_str[i];\n            }\n        }\n        // Return the result string with the numbers string appended to the end.\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        string alpha = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                alpha += test_str[i];\n            }\n        }\n        result = alpha + num;\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string letters = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                letters += test_str[i];\n            }\n        }\n        return letters + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bf3e8e92a194458b62a956628ae5809>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bf3e8e92a194458b62a956628ae5809>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsNumber(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        var sb = new StringBuilder();\n        var nums = new StringBuilder();\n        foreach (var c in test_str) {\n            if (char.IsDigit(c)) {\n                nums.Append(c);\n            } else {\n                sb.Append(c);\n            }\n        }\n        return sb.Append(nums).ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string str = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                str += test_str[i];\n            }\n        }\n        return str + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        int i = 0;\n        int j = test_str.Length - 1;\n        char[] test_arr = test_str.ToCharArray();\n        while (i < j) {\n            if (Char.IsDigit(test_arr[i]) && !Char.IsDigit(test_arr[j])) {\n                char temp = test_arr[i];\n                test_arr[i] = test_arr[j];\n                test_arr[j] = temp;\n                i++;\n                j--;\n            }\n            else if (Char.IsDigit(test_arr[i]) && Char.IsDigit(test_arr[j])) {\n                j--;\n            }\n            else if (!Char.IsDigit(test_arr[i]) && !Char.IsDigit(test_arr[j])) {\n                i++;\n            }\n            else {\n                i++;\n                j--;\n            }\n        }\n        return new string(test_arr);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <34b3a0863cce4a3a8b9fab9ef9dc5931>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <34b3a0863cce4a3a8b9fab9ef9dc5931>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a string builder to store the result.\n        StringBuilder result = new StringBuilder();\n        // Create a string builder to store the numbers.\n        StringBuilder nums = new StringBuilder();\n        // Iterate through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is a number, add it to the nums string builder.\n            if (Char.IsDigit(test_str[i])) {\n                nums.Append(test_str[i]);\n            }\n            // Otherwise, add it to the result string builder.\n            else {\n                result.Append(test_str[i]);\n            }\n        }\n        // Append the numbers to the result string builder.\n        result.Append(nums);\n        // Return the result.\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a new string to hold the result.\n        string result = \"\";\n        // Create a new string to hold the numbers.\n        string nums = \"\";\n        // Iterate through the string.\n        foreach (char c in test_str) {\n            // If the character is a number, add it to the nums string.\n            if (Char.IsNumber(c)) {\n                nums += c;\n            }\n            // Otherwise, add it to the result string.\n            else {\n                result += c;\n            }\n        }\n        // Return the result string with the numbers appended to the end.\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string str = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                str += test_str[i];\n            }\n        }\n        return str + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num_str = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (char.IsDigit(test_str[i])) {\n                num_str += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num_str;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            }\n            else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        var sb = new StringBuilder();\n        var nums = new StringBuilder();\n        foreach (var c in test_str) {\n            if (char.IsDigit(c)) {\n                nums.Append(c);\n            } else {\n                sb.Append(c);\n            }\n        }\n        return sb.Append(nums).ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        var sb = new StringBuilder();\n        var nums = new StringBuilder();\n        foreach (char c in test_str) {\n            if (c >= '0' && c <= '9') {\n                nums.Append(c);\n            } else {\n                sb.Append(c);\n            }\n        }\n        sb.Append(nums);\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a string builder to store the result.\n        StringBuilder result = new StringBuilder();\n        // Create a string builder to store the numbers.\n        StringBuilder nums = new StringBuilder();\n        // Iterate through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the current character is a number, add it to the nums string builder.\n            if (Char.IsDigit(test_str[i])) {\n                nums.Append(test_str[i]);\n            }\n            // Otherwise, add it to the result string builder.\n            else {\n                result.Append(test_str[i]);\n            }\n        }\n        // Append the nums string builder to the result string builder.\n        result.Append(nums);\n        // Return the result.\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a new string to hold the result.\n        string result = \"\";\n        // Create a new string to hold the numbers.\n        string nums = \"\";\n        // Loop through the string.\n        foreach (char c in test_str) {\n            // If the character is a number, add it to the nums string.\n            if (Char.IsDigit(c)) {\n                nums += c;\n            }\n            // If the character is not a number, add it to the result string.\n            else {\n                result += c;\n            }\n        }\n        // Return the result string with the numbers added to the end.\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        StringBuilder sb = new StringBuilder();\n        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                sb2.Append(test_str[i]);\n            } else {\n                sb.Append(test_str[i]);\n            }\n        }\n        return sb.Append(sb2).ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a new string to hold the result.\n        string result = \"\";\n        // Loop through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is a number, add it to the result.\n            if (Char.IsNumber(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        // Loop through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is not a number, add it to the result.\n            if (!Char.IsNumber(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        // Return the result.\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25965e2f0a724002aa65a1739688c9d2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <25965e2f0a724002aa65a1739688c9d2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        StringBuilder sb = new StringBuilder();\n        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                sb2.Append(test_str[i]);\n            } else {\n                sb.Append(test_str[i]);\n            }\n        }\n        sb.Append(sb2);\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string res = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                res += test_str[i];\n            }\n        }\n        return res + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string chars = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                chars += c;\n            }\n        }\n        return chars + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bf3e8e92a194458b62a956628ae5809>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bf3e8e92a194458b62a956628ae5809>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a new string to hold the result.\n        string result = \"\";\n        // Iterate through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the current character is a number, add it to the result string.\n            if (Char.IsNumber(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        // Iterate through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the current character is not a number, add it to the result string.\n            if (!Char.IsNumber(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        // Return the result string.\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <148889d5f7ad4891a7eb6f94a174b66c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <148889d5f7ad4891a7eb6f94a174b66c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string str = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                str += test_str[i];\n            }\n        }\n        return str + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string chars = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                chars += c;\n            }\n        }\n        return chars + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bf3e8e92a194458b62a956628ae5809>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bf3e8e92a194458b62a956628ae5809>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a new string to store the result.\n        string result = \"\";\n        // Create a new string to store the numbers.\n        string nums = \"\";\n        // Loop through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is a number, add it to the nums string.\n            if (Char.IsNumber(test_str[i])) {\n                nums += test_str[i];\n            }\n            // Otherwise, add it to the result string.\n            else {\n                result += test_str[i];\n            }\n        }\n        // Return the result string with the numbers appended to the end.\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string num = \"\";\n        string str = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                str += test_str[i];\n            }\n        }\n        return str + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a list of characters to hold the string.\n        List<char> str_list = new List<char>();\n        // Create a list of characters to hold the numbers.\n        List<char> num_list = new List<char>();\n        // Iterate through the string.\n        foreach (char c in test_str) {\n            // If the character is a number, add it to the number list.\n            if (Char.IsDigit(c)) {\n                num_list.Add(c);\n            }\n            // If the character is not a number, add it to the string list.\n            else {\n                str_list.Add(c);\n            }\n        }\n        // Add the numbers to the string list.\n        str_list.AddRange(num_list);\n        // Return the string list as a string.\n        return new string(str_list.ToArray());\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bf3e8e92a194458b62a956628ae5809>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bf3e8e92a194458b62a956628ae5809>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string res = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                res += test_str[i];\n            }\n        }\n        return res + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bf3e8e92a194458b62a956628ae5809>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bf3e8e92a194458b62a956628ae5809>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string numbers = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                numbers += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + numbers;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string num_str = \"\";\n        string char_str = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num_str += test_str[i];\n            } else {\n                char_str += test_str[i];\n            }\n        }\n        return char_str + num_str;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a string builder to store the result.\n        StringBuilder result = new StringBuilder();\n        // Create a string builder to store the numbers.\n        StringBuilder nums = new StringBuilder();\n        // Iterate through the string.\n        foreach (char c in test_str) {\n            // If the character is a number.\n            if (Char.IsDigit(c)) {\n                // Add the character to the numbers string builder.\n                nums.Append(c);\n            } else {\n                // Add the character to the result string builder.\n                result.Append(c);\n            }\n        }\n        // Add the numbers to the result string builder.\n        result.Append(nums);\n        // Return the result.\n        return result.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string str = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                str += test_str[i];\n            }\n        }\n        return str + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string no_nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsNumber(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                no_nums += test_str[i];\n            }\n        }\n        return no_nums + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        string alpha = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                alpha += test_str[i];\n            }\n        }\n        result = alpha + num;\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        var sb = new StringBuilder();\n        var nums = new StringBuilder();\n        foreach (var c in test_str) {\n            if (c >= '0' && c <= '9') {\n                nums.Append(c);\n            } else {\n                sb.Append(c);\n            }\n        }\n        sb.Append(nums);\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        char[] test_arr = test_str.ToCharArray();\n        int i = 0;\n        int j = test_arr.Length - 1;\n        while (i < j) {\n            if (test_arr[i] >= '0' && test_arr[i] <= '9') {\n                if (test_arr[j] >= '0' && test_arr[j] <= '9') {\n                    j--;\n                } else {\n                    char temp = test_arr[i];\n                    test_arr[i] = test_arr[j];\n                    test_arr[j] = temp;\n                    i++;\n                    j--;\n                }\n            } else {\n                i++;\n            }\n        }\n        return new string(test_arr);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a744c72d4c76468d8d3d2df3355d4800>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a744c72d4c76468d8d3d2df3355d4800>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string chars = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                chars += c;\n            }\n        }\n        return chars + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        var sb = new StringBuilder();\n        var nums = new StringBuilder();\n        foreach (var ch in test_str) {\n            if (Char.IsDigit(ch)) {\n                nums.Append(ch);\n            } else {\n                sb.Append(ch);\n            }\n        }\n        return sb.Append(nums).ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a new string to store the result\n        string result = \"\";\n        // Create a new string to store the numbers\n        string nums = \"\";\n        // Loop through the string\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is a number\n            if (Char.IsDigit(test_str[i])) {\n                // Add it to the nums string\n                nums += test_str[i];\n            }\n            // If the character is not a number\n            else {\n                // Add it to the result string\n                result += test_str[i];\n            }\n        }\n        // Return the result string with the numbers added to the end\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        StringBuilder sb = new StringBuilder();\n        StringBuilder nums = new StringBuilder();\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums.Append(test_str[i]);\n            } else {\n                sb.Append(test_str[i]);\n            }\n        }\n        sb.Append(nums);\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string chars = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                chars += c;\n            }\n        }\n        return chars + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        string alpha = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                alpha += test_str[i];\n            }\n        }\n        result = alpha + num;\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string str = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                str += test_str[i];\n            }\n        }\n        return str + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a new string to store the result.\n        string result_str = \"\";\n        // Create a new string to store the numbers.\n        string num_str = \"\";\n        // Loop through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // Check if the character is a number.\n            if (char.IsDigit(test_str[i])) {\n                // Add the number to the number string.\n                num_str += test_str[i];\n            } else {\n                // Add the character to the result string.\n                result_str += test_str[i];\n            }\n        }\n        // Add the number string to the result string.\n        result_str += num_str;\n        // Return the result string.\n        return result_str;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a new string to store the result.\n        string result = \"\";\n        // Create a new string to store the numbers.\n        string nums = \"\";\n        // Iterate through the given string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the current character is a number, add it to the nums string.\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            }\n            // Otherwise, add it to the result string.\n            else {\n                result += test_str[i];\n            }\n        }\n        // Return the result string with the numbers appended to the end.\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a new string to store the result.\n        string result = \"\";\n        // Loop through the string.\n        foreach (char c in test_str) {\n            // If the character is a number, add it to the end of the result.\n            if (Char.IsDigit(c)) {\n                result += c;\n            }\n        }\n        // Loop through the string.\n        foreach (char c in test_str) {\n            // If the character is not a number, add it to the end of the result.\n            if (!Char.IsDigit(c)) {\n                result += c;\n            }\n        }\n        // Return the result.\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <82d7ffe7061840d6ab0e148360919e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <82d7ffe7061840d6ab0e148360919e0b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bf3e8e92a194458b62a956628ae5809>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bf3e8e92a194458b62a956628ae5809>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        var nums = new List<char>();\n        var chars = new List<char>();\n        foreach(var c in test_str) {\n            if(char.IsDigit(c)) {\n                nums.Add(c);\n            } else {\n                chars.Add(c);\n            }\n        }\n        return new string(chars.ToArray()) + new string(nums.ToArray());\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        var sb = new StringBuilder();\n        var nums = new StringBuilder();\n        foreach (var c in test_str) {\n            if (char.IsDigit(c)) {\n                nums.Append(c);\n            } else {\n                sb.Append(c);\n            }\n        }\n        return sb.Append(nums).ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a list to store the numbers.\n        List<char> nums = new List<char>();\n        // Create a list to store the letters.\n        List<char> letters = new List<char>();\n        // Iterate through the string.\n        foreach (char c in test_str) {\n            // If the character is a number, add it to the nums list.\n            if (Char.IsDigit(c)) {\n                nums.Add(c);\n            }\n            // If the character is a letter, add it to the letters list.\n            else {\n                letters.Add(c);\n            }\n        }\n        // Add the letters to the nums list.\n        nums.AddRange(letters);\n        // Return the string representation of the nums list.\n        return new string(nums.ToArray());\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c43e209b03d542cdb98fbc90e2ed5f71>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c43e209b03d542cdb98fbc90e2ed5f71>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a list of characters\n        List<char> char_list = new List<char>();\n        // Create a list of numbers\n        List<char> num_list = new List<char>();\n        // Iterate through the string\n        foreach (char c in test_str) {\n            // If the character is a number\n            if (Char.IsNumber(c)) {\n                // Add it to the number list\n                num_list.Add(c);\n            } else {\n                // Add it to the character list\n                char_list.Add(c);\n            }\n        }\n        // Join the character list\n        string char_str = new string(char_list.ToArray());\n        // Join the number list\n        string num_str = new string(num_list.ToArray());\n        // Return the concatenated string\n        return char_str + num_str;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string letters = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                letters += test_str[i];\n            }\n        }\n        return letters + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string res = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                res += test_str[i];\n            }\n        }\n        return res + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string chars = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                chars += c;\n            }\n        }\n        return chars + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string chars = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                chars += c;\n            }\n        }\n        return chars + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string num_str = \"\";\n        string char_str = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num_str += test_str[i];\n            } else {\n                char_str += test_str[i];\n            }\n        }\n        return char_str + num_str;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string num_str = \"\";\n        string char_str = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (char.IsDigit(test_str[i])) {\n                num_str += test_str[i];\n            } else {\n                char_str += test_str[i];\n            }\n        }\n        return char_str + num_str;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bf3e8e92a194458b62a956628ae5809>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bf3e8e92a194458b62a956628ae5809>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bf3e8e92a194458b62a956628ae5809>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bf3e8e92a194458b62a956628ae5809>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string chars = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                chars += c;\n            }\n        }\n        return chars + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bf3e8e92a194458b62a956628ae5809>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bf3e8e92a194458b62a956628ae5809>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        var sb = new StringBuilder();\n        var nums = new StringBuilder();\n        foreach (char c in test_str) {\n            if (char.IsDigit(c)) {\n                nums.Append(c);\n            } else {\n                sb.Append(c);\n            }\n        }\n        return sb.ToString() + nums.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string num = \"\";\n        string str = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                str += test_str[i];\n            }\n        }\n        return str + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        StringBuilder sb = new StringBuilder();\n        StringBuilder sb2 = new StringBuilder();\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                sb2.Append(test_str[i]);\n            } else {\n                sb.Append(test_str[i]);\n            }\n        }\n        return sb.Append(sb2).ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        var sb = new StringBuilder();\n        var nums = new StringBuilder();\n        foreach (var c in test_str) {\n            if (c >= '0' && c <= '9') {\n                nums.Append(c);\n            } else {\n                sb.Append(c);\n            }\n        }\n        sb.Append(nums);\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"0123456789\";\n        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (nums.Contains(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!nums.Contains(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fa7b32be1d234cbd8c64ea5dc10d166d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fa7b32be1d234cbd8c64ea5dc10d166d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        int i = 0;\n        int j = test_str.Length - 1;\n        char[] test_arr = test_str.ToCharArray();\n        while (i < j) {\n            if (Char.IsDigit(test_arr[i])) {\n                if (!Char.IsDigit(test_arr[j])) {\n                    char temp = test_arr[i];\n                    test_arr[i] = test_arr[j];\n                    test_arr[j] = temp;\n                } else {\n                    j--;\n                }\n            } else {\n                i++;\n            }\n        }\n        return new string(test_arr);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3eff74c2721b49c08f517716bdde3bb8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3eff74c2721b49c08f517716bdde3bb8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string letters = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                letters += test_str[i];\n            }\n        }\n        return letters + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a new string to hold the result.\n        string result = \"\";\n        // Loop through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is a number, add it to the result string.\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        // Loop through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is not a number, add it to the result string.\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        // Return the result.\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1b3deaea5bf244b9bfb4d6124db98281>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1b3deaea5bf244b9bfb4d6124db98281>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string num_str = \"\";\n        string char_str = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                num_str += c;\n            } else {\n                char_str += c;\n            }\n        }\n        return char_str + num_str;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string non_nums = \"\";\n        foreach (char c in test_str) {\n            if (char.IsDigit(c)) {\n                nums += c;\n            } else {\n                non_nums += c;\n            }\n        }\n        return non_nums + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a new string to store the result.\n        string result = \"\";\n        // Create a new string to store the numbers.\n        string num = \"\";\n        // Iterate through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is a number, add it to the num string.\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            }\n            // If the character is not a number, add it to the result string.\n            else {\n                result += test_str[i];\n            }\n        }\n        // Return the result string with the numbers added to the end.\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        int i = 0;\n        int j = test_str.Length - 1;\n        char[] test_arr = test_str.ToCharArray();\n        while (i < j) {\n            if (Char.IsDigit(test_arr[i])) {\n                if (Char.IsLetter(test_arr[j])) {\n                    char temp = test_arr[i];\n                    test_arr[i] = test_arr[j];\n                    test_arr[j] = temp;\n                    i++;\n                    j--;\n                } else {\n                    j--;\n                }\n            } else {\n                i++;\n            }\n        }\n        return new string(test_arr);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <131ecdbe47eb4982ad10da703767bf87>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <131ecdbe47eb4982ad10da703767bf87>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        string alpha = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsNumber(c)) {\n                num += c;\n            } else {\n                alpha += c;\n            }\n        }\n        result = alpha + num;\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string num_str = \"\";\n        string char_str = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                num_str += c;\n            } else {\n                char_str += c;\n            }\n        }\n        return char_str + num_str;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a new string to hold the result.\n        string result = \"\";\n        // Loop through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the current character is a number.\n            if (Char.IsNumber(test_str[i])) {\n                // Append the number to the result string.\n                result += test_str[i];\n            }\n        }\n        // Loop through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the current character is not a number.\n            if (!Char.IsNumber(test_str[i])) {\n                // Append the character to the result string.\n                result += test_str[i];\n            }\n        }\n        // Return the result string.\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f6be94aa3b4a4dbdac7befbbc2ae84d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f6be94aa3b4a4dbdac7befbbc2ae84d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a new string to store the result.\n        string result = \"\";\n        // Loop through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is a number, add it to the result.\n            if (Char.IsNumber(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        // Loop through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is not a number, add it to the result.\n            if (!Char.IsNumber(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        // Return the result.\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f21bdb8f2d254c089c328000d49a29a0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f21bdb8f2d254c089c328000d49a29a0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                result += c;\n            }\n        }\n        foreach (char c in test_str) {\n            if (!Char.IsDigit(c)) {\n                result += c;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6065e28d6876400aac9d5b5d8e333ca6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6065e28d6876400aac9d5b5d8e333ca6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Write your code here\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1fd351985b714c9f865a5fb209ac5dd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1fd351985b714c9f865a5fb209ac5dd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string nums = \"\";\n        string chars = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                chars += test_str[i];\n            }\n        }\n        return chars + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        int i = 0;\n        int j = test_str.Length - 1;\n        char[] test_arr = test_str.ToCharArray();\n        while (i < j) {\n            while (i < j && !Char.IsDigit(test_arr[i])) {\n                i++;\n            }\n            while (i < j && !Char.IsLetter(test_arr[j])) {\n                j--;\n            }\n            if (i < j) {\n                char temp = test_arr[i];\n                test_arr[i] = test_arr[j];\n                test_arr[j] = temp;\n            }\n        }\n        return new string(test_arr);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <815a0372dc3349e5a4f7800059668298>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <815a0372dc3349e5a4f7800059668298>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a list of characters\n        List<char> char_list = new List<char>();\n        // Create a list of numbers\n        List<char> num_list = new List<char>();\n        // Iterate through the string\n        foreach (char c in test_str) {\n            // If the character is a number\n            if (Char.IsDigit(c)) {\n                // Add the character to the number list\n                num_list.Add(c);\n            }\n            // Otherwise\n            else {\n                // Add the character to the character list\n                char_list.Add(c);\n            }\n        }\n        // Add the characters to the number list\n        num_list.AddRange(char_list);\n        // Return the string\n        return new string(num_list.ToArray());\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122866,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f2577816c0114738bbbc78094baa2961>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f2577816c0114738bbbc78094baa2961>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a list of characters\n        List<char> char_list = new List<char>();\n        // Create a list of numbers\n        List<char> num_list = new List<char>();\n        // Iterate through the string\n        foreach (char c in test_str) {\n            // If the character is a number\n            if (char.IsNumber(c)) {\n                // Add it to the number list\n                num_list.Add(c);\n            } else {\n                // Otherwise add it to the character list\n                char_list.Add(c);\n            }\n        }\n        // Join the character list\n        string char_str = string.Join(\"\", char_list);\n        // Join the number list\n        string num_str = string.Join(\"\", num_list);\n        // Return the character string + number string\n        return char_str + num_str;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122866,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a list to hold the numbers\n        List<char> nums = new List<char>();\n        // Create a list to hold the letters\n        List<char> letters = new List<char>();\n        // Loop through the string\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is a number\n            if (Char.IsDigit(test_str[i])) {\n                // Add it to the list of numbers\n                nums.Add(test_str[i]);\n            } else {\n                // Add it to the list of letters\n                letters.Add(test_str[i]);\n            }\n        }\n        // Create a new string builder\n        StringBuilder sb = new StringBuilder();\n        // Loop through the letters\n        foreach (char letter in letters) {\n            // Add the letter to the string builder\n            sb.Append(letter);\n        }\n        // Loop through the numbers\n        foreach (char num in nums) {\n            // Add the number to the string builder\n            sb.Append(num);\n        }\n        // Return the string builder as a string\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122866,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string num = \"\";\n        string str = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                str += test_str[i];\n            }\n        }\n        return str + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        StringBuilder sb = new StringBuilder();\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                sb.Append(c);\n            }\n        }\n        foreach (char c in test_str) {\n            if (!Char.IsDigit(c)) {\n                sb.Append(c);\n            }\n        }\n        return sb.ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122866,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3aed971f92446c7aa770fc2f95544a4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3aed971f92446c7aa770fc2f95544a4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a new string to store the result.\n        string result = \"\";\n        // Loop through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the current character is a number.\n            if (Char.IsDigit(test_str[i])) {\n                // Add the number to the result.\n                result += test_str[i];\n            }\n        }\n        // Loop through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the current character is not a number.\n            if (!Char.IsDigit(test_str[i])) {\n                // Add the character to the result.\n                result += test_str[i];\n            }\n        }\n        // Return the result.\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122866,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7758074dc49e43c1a202be62d06b7df7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7758074dc49e43c1a202be62d06b7df7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsNumber(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string res = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                res += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                res += test_str[i];\n            }\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122866,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09d4fbecc60142ed9b476f51386caef2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <09d4fbecc60142ed9b476f51386caef2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a new string to store the result\n        string result = \"\";\n        // Loop through the string\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the current character is a number\n            if (Char.IsDigit(test_str[i])) {\n                // Add it to the result\n                result += test_str[i];\n            }\n        }\n        // Loop through the string\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the current character is not a number\n            if (!Char.IsDigit(test_str[i])) {\n                // Add it to the result\n                result += test_str[i];\n            }\n        }\n        // Return the result\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122866,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7db844a5cc54aee96ec721d95262865>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7db844a5cc54aee96ec721d95262865>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bf3e8e92a194458b62a956628ae5809>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bf3e8e92a194458b62a956628ae5809>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a new string to store the result.\n        string result = \"\";\n        // Create a new string to store the numbers.\n        string nums = \"\";\n        // Iterate through the string.\n        for (int i = 0; i < test_str.Length; i++) {\n            // If the character is a number, add it to the nums string.\n            if (Char.IsNumber(test_str[i])) {\n                nums += test_str[i];\n            }\n            // If the character is not a number, add it to the result string.\n            else {\n                result += test_str[i];\n            }\n        }\n        // Return the result string with the numbers appended to the end.\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122866,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string num = \"\";\n        string str = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                str += test_str[i];\n            }\n        }\n        return str + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string num = \"\";\n        string str = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                str += test_str[i];\n            }\n        }\n        return str + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122864,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (char.IsDigit(test_str[i])) {\n                nums += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122866,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        string nums = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums += c;\n            } else {\n                result += c;\n            }\n        }\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        var sb = new StringBuilder();\n        var nums = new StringBuilder();\n        foreach (var c in test_str) {\n            if (Char.IsDigit(c)) {\n                nums.Append(c);\n            } else {\n                sb.Append(c);\n            }\n        }\n        return sb.Append(nums).ToString();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122866,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        foreach (char c in test_str) {\n            if (Char.IsDigit(c)) {\n                result += c;\n            }\n        }\n        foreach (char c in test_str) {\n            if (!Char.IsDigit(c)) {\n                result += c;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122865,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6065e28d6876400aac9d5b5d8e333ca6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6065e28d6876400aac9d5b5d8e333ca6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Create a new string to store the result.\n        string result = \"\";\n        // Create a new string to store the numbers.\n        string nums = \"\";\n        // Iterate through the string.\n        foreach (char c in test_str) {\n            // If the character is a number, add it to the nums string.\n            if (Char.IsDigit(c)) {\n                nums += c;\n            }\n            // Otherwise, add it to the result string.\n            else {\n                result += c;\n            }\n        }\n        // Return the result string with the numbers appended.\n        return result + nums;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122866,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        // Write your code here\n        string result = \"\";\n        string num = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                num += test_str[i];\n            } else {\n                result += test_str[i];\n            }\n        }\n        return result + num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1666122866,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to move all the numbers to the end of the given string.\n    public static string MoveNum(string test_str) {\n        string result = \"\";\n        for (int i = 0; i < test_str.Length; i++) {\n            if (Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        for (int i = 0; i < test_str.Length; i++) {\n            if (!Char.IsDigit(test_str[i])) {\n                result += test_str[i];\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(MoveNum((\"I1love143you55three3000thousand\")).Equals((\"Iloveyouthreethousand1143553000\")));\n    Debug.Assert(MoveNum((\"Avengers124Assemble\")).Equals((\"AvengersAssemble124\")));\n    Debug.Assert(MoveNum((\"Its11our12path13to14see15things16do17things\")).Equals((\"Itsourpathtoseethingsdothings11121314151617\")));\n    }\n\n}\n",
      "timestamp": 1665510049,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bf3e8e92a194458b62a956628ae5809>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bf3e8e92a194458b62a956628ae5809>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_91_find_substring",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_91_find_substring.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c7a26df50eb344e3b159387d70d19d75>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c7a26df50eb344e3b159387d70d19d75>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        bool found = false;\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                found = true;\n                break;\n            }\n        }\n        return found;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        // TODO: Implement this function\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122755,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bfd85f15134e4304874ce9c3814edb86>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bfd85f15134e4304874ce9c3814edb86>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (var str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122754,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        // O(n)\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122754,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        return str1.Any(x => x.Contains(sub_str));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122755,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        for (int i = 0; i < str1.Count; i++) {\n            if (str1[i].Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122754,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        for (int i = 0; i < str1.Count; i++) {\n            if (str1[i].Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122754,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        for (int i = 0; i < str1.Count; i++) {\n            if (str1[i].Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122754,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        return str1.Any(str => str.Contains(sub_str));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122755,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        return str1.Any(str => str.Contains(sub_str));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122755,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        return str1.Any(s => s.Contains(sub_str));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122755,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (var str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122754,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        // Write your code here\n        return str1.Any(s => s.Contains(sub_str));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122755,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        for (int i = 0; i < str1.Count; i++) {\n            if (str1[i].Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122754,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        return str1.Any(x => x.Contains(sub_str));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122755,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        // Loop through the list of strings\n        foreach (string str in str1) {\n            // Check if the substring is present in the current string\n            if (str.Contains(sub_str)) {\n                // If it is, return true\n                return true;\n            }\n        }\n        // If it is not, return false\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122754,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (var item in str1) {\n            if (item.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122754,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach(string s in str1) {\n            if(s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122754,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (var str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122754,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        return str1.Any(s => s.Contains(sub_str));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122755,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach(string s in str1) {\n            if(s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122754,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach(string s in str1) {\n            if(s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122754,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (var str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122754,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        return str1.Any(x => x.Contains(sub_str));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122755,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        return str1.Any(s => s.Contains(sub_str));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122755,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        bool found = false;\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                found = true;\n                break;\n            }\n        }\n        return found;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (var str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122754,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string str in str1) {\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        // Loop through each string in the list\n        foreach (string str in str1) {\n            // If the substring is present in the string, return true\n            if (str.Contains(sub_str)) {\n                return true;\n            }\n        }\n        // If the substring is not present in any of the strings, return false\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1666122755,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if a string is present as a substring in a given list of string values.\n    public static bool FindSubstring(List<string> str1, string sub_str) {\n        foreach (string s in str1) {\n            if (s.Contains(sub_str)) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ack\")) == (true));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"abc\")) == (false));\n    Debug.Assert(FindSubstring((new List<string>(new string[]{(string)\"red\", (string)\"black\", (string)\"white\", (string)\"green\", (string)\"orange\"})), (\"ange\")) == (true));\n    }\n\n}\n",
      "timestamp": 1665510243,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
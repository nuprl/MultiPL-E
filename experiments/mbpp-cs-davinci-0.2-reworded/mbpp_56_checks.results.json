{
  "name": "mbpp_56_checks",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_56_checks.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = Reverse(n);\n        return n == 2 * rev - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpro330zyq.cs(11,20): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        // Convert the number to a string.\n        string s = n.ToString();\n        // Reverse the string.\n        string r = new string(s.Reverse().ToArray());\n        // Convert the string back to a number.\n        long rn = long.Parse(r);\n        // Return whether the number is one less than twice its reverse.\n        return n == 2 * rn - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long reverse = 0;\n        long temp = n;\n        while (temp > 0) {\n            reverse = reverse * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == reverse + 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d235306766e24ec9b3176925bd945f44>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long x = n;\n        while (x > 0) {\n            r = r * 10 + x % 10;\n            x /= 10;\n        }\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var r = Reverse(n);\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk5d6_m7z.cs(11,17): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var rev = Reverse(n);\n        return n == rev * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpu5_4l30j.cs(11,19): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = 0;\n        long num = n;\n        while (num > 0) {\n            rev = rev * 10 + num % 10;\n            num /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        return n == (n / 10 + n % 10 * 10);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <404a3eaaef434b3abc55492995647935>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = long.Parse(new string(n.ToString().Reverse().ToArray()));\n        return n == (2 * r) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkrak3wpa.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var r = n.ToString().Reverse().ToArray();\n        var s = new string(r);\n        var m = long.Parse(s);\n        return n == 2 * m - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Reverse the string\n        string r = new string(s.Reverse().ToArray());\n        // Convert to long\n        long rn = long.Parse(r);\n        // Check if n is one less than twice its reverse\n        return n == 2 * rn - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        return n == (n / 10) * 19 - 9;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <35b4a76b29264dcfbc677b08cf7daae9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return (n == 2 * r - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0xphhrzg.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return (n == 2 * r - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0xphhrzg.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var rev = Reverse(n);\n        return n == rev * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpu5_4l30j.cs(11,19): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1a69215da2f48f7a6eae429670b76ca>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        // Convert the number to a string.\n        string s = n.ToString();\n        // Reverse the string.\n        string r = new string(s.Reverse().ToArray());\n        // Convert the reversed string to a number.\n        long rn = long.Parse(r);\n        // Check if the number is one less than twice its reverse.\n        return n == 2 * rn - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = 10 * r + t % 10;\n            t /= 10;\n        }\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        return n == Reverse(n) + 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp01vqgl31.cs(11,21): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        var x = long.Parse(r);\n        return n == 2 * x - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = Reverse(n);\n        return n == 2 * rev - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpro330zyq.cs(11,20): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        return n == (n / 10) * 19 - 9;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <35b4a76b29264dcfbc677b08cf7daae9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long m = n;\n        while (m > 0) {\n            r = r * 10 + m % 10;\n            m /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = 0;\n        long num = n;\n        while (num > 0) {\n            rev = rev * 10 + num % 10;\n            num /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        return n == 2 * Reverse(n) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpflpre8mf.cs(11,25): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = 0;\n        long num = n;\n        while (num > 0) {\n            rev = rev * 10 + num % 10;\n            num /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = Reverse(n);\n        return n == rev * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp68oyorl0.cs(11,20): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = 0;\n        long num = n;\n        while (num > 0) {\n            rev = rev * 10 + num % 10;\n            num /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx9lzyfh3.cs(11,17): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        return n == (n % 10) * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <660456cf51dc4f20ac1f2b06866ad4bc>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return (n == rev + 1) || (n == 2 * rev - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Reverse the string\n        string r = new string(s.Reverse().ToArray());\n        // Convert back to long\n        long rn = long.Parse(r);\n        // Check if n is one less than twice its reverse\n        return n == 2 * rn - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx9lzyfh3.cs(11,17): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return (n == 2 * r - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0xphhrzg.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <492aa5c95d47457284d91b1b3b29a4d0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long reverse = 0;\n        long temp = n;\n        while (temp > 0) {\n            reverse = reverse * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == reverse + 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d235306766e24ec9b3176925bd945f44>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = Reverse(n);\n        return n == 2 * rev - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpro330zyq.cs(11,20): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r - 1 || n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx9lzyfh3.cs(11,17): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        return n == (n / 10) * 19 - 9;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <35b4a76b29264dcfbc677b08cf7daae9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkqy04hc7.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Reverse string\n        char[] arr = s.ToCharArray();\n        Array.Reverse(arr);\n        string r = new string(arr);\n        // Check if n is one less than twice its reverse\n        return n == 2 * long.Parse(r) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkqy04hc7.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        return n == Reverse(n) + 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp01vqgl31.cs(11,21): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        return n == (long)(n.ToString().Reverse().ToArray()) + 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprsanbzoj.cs(11,21): error CS0030: Cannot convert type 'char[]' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <492aa5c95d47457284d91b1b3b29a4d0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1a69215da2f48f7a6eae429670b76ca>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        var rn = long.Parse(r);\n        return n == 2 * rn - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        return n == (n / 10 + n % 10 * 10);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <404a3eaaef434b3abc55492995647935>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkrak3wpa.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var rev = Reverse(n);\n        return n == rev * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpu5_4l30j.cs(11,19): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long m = n;\n        while (m > 0) {\n            r = r * 10 + m % 10;\n            m /= 10;\n        }\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = Reverse(n);\n        return n == rev * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp68oyorl0.cs(11,20): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1a69215da2f48f7a6eae429670b76ca>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long reverse = 0;\n        long temp = n;\n        while (temp > 0) {\n            reverse = reverse * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == reverse + 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d235306766e24ec9b3176925bd945f44>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        return n == (long)(n.ToString().Reverse().ToArray()) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmabea0gm.cs(11,21): error CS0030: Cannot convert type 'char[]' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        string s = n.ToString();\n        string r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx9lzyfh3.cs(11,17): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r + r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        return n == (long)Math.Pow(2, n.ToString().Length) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3c8aca93cb2b4d9f86ed7cf010cbb176>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        // return n == (long)Math.Pow(2, Math.Floor(Math.Log(n, 2)));\n        return n == (long)Math.Pow(2, Math.Floor(Math.Log(n, 2)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a0cb36e2dbf64033ad2e1773d5418354>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return (n == 2 * r - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0xphhrzg.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var reverse = Reverse(n);\n        return n == reverse * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3r9ut9pb.cs(11,23): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var rev = Reverse(n);\n        return n == 2 * rev - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1qmv2zg5.cs(11,19): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        return n == (n / 10 + n % 10 * (long)Math.Pow(10, Math.Floor(Math.Log10(n))));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d3acc8d702dc4b5c81e3cfd318fdf6d1>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        return n == (n % 10) * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <660456cf51dc4f20ac1f2b06866ad4bc>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        string s = n.ToString();\n        string r = new string(s.Reverse().ToArray());\n        long rn = long.Parse(r);\n        return (n == 2*rn - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        return n == Reverse(n) * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpajcol57r.cs(11,21): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx9lzyfh3.cs(11,17): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkrak3wpa.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long reverse = 0;\n        long temp = n;\n        while (temp > 0) {\n            reverse = reverse * 10 + temp % 10;\n            temp /= 10;\n        }\n        return (n == reverse - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <525d460b9df442728fcdfee3983b81b2>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1a69215da2f48f7a6eae429670b76ca>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var r = Reverse(n);\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk5d6_m7z.cs(11,17): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = 0;\n        long tmp = n;\n        while (tmp > 0) {\n            rev = rev * 10 + tmp % 10;\n            tmp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        return n == (long)(n.ToString().Reverse().Aggregate(\"\", (a, b) => a + b)) * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmh1f74oz.cs(11,21): error CS0030: Cannot convert type 'string' to 'long'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1a69215da2f48f7a6eae429670b76ca>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var rev = Reverse(n);\n        return n == rev * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpu5_4l30j.cs(11,19): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1a69215da2f48f7a6eae429670b76ca>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        // Convert the number to a string\n        string s = n.ToString();\n        // Reverse the string\n        string r = new string(s.Reverse().ToArray());\n        // Convert the reversed string to a number\n        long rn = long.Parse(r);\n        // Check if the number is one less than twice its reverse\n        return n == 2 * rn - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var rev = Reverse(n);\n        return n == rev * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpu5_4l30j.cs(11,19): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var r = Reverse(n);\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk5d6_m7z.cs(11,17): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return (n == 2 * r - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0xphhrzg.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var rev = Reverse(n);\n        return n == rev * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpu5_4l30j.cs(11,19): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        return n == (n / 10 + n % 10 * 10);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <404a3eaaef434b3abc55492995647935>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = Reverse(n);\n        return (n == rev * 2 - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp8hbt6jz.cs(11,20): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var r = Reverse(n);\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpk5d6_m7z.cs(11,17): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2*r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0y4d1b_0.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return (n == rev + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd36ca3d59ea46e6b167f3e9a58f2ab1>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long m = n;\n        while (m > 0) {\n            r = r * 10 + m % 10;\n            m /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var rev = Reverse(n);\n        return n == rev * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpu5_4l30j.cs(11,19): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = 0;\n        long num = n;\n        while (num > 0) {\n            rev = rev * 10 + num % 10;\n            num /= 10;\n        }\n        return n == rev + 1 || n == rev - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <931b6541673643148ee61d6c4236d159>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1 || n == 2 * rev - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == (long.Parse(r) * 2) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        return n == Reverse(n - 1) * 2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg33xtcur.cs(11,21): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123999,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = Reverse(n);\n        return (n == rev * 2 - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpp8hbt6jz.cs(11,20): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long reverse = 0;\n        long temp = n;\n        while (temp > 0) {\n            reverse = reverse * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == reverse + 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d235306766e24ec9b3176925bd945f44>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        var x = long.Parse(r);\n        return n == 2 * x - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var reverse = long.Parse(new string(n.ToString().Reverse().ToArray()));\n        return n == reverse * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123999,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        return n == (n / 10) * 19 - 9;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <35b4a76b29264dcfbc677b08cf7daae9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == long.Parse(r) * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = Reverse(n);\n        return n == 2 * rev - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpro330zyq.cs(11,20): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long reverse = 0;\n        long temp = n;\n        while (temp > 0) {\n            reverse = reverse * 10 + temp % 10;\n            temp = temp / 10;\n        }\n        return (n == reverse + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123999,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <36adcdd5f77e4d1f80f9ec7fcda5b3c4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        return n == (long)(n / 10) * 9;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123999,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <62637d93b3b74229ad183df869e52144>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = 0;\n        long num = n;\n        while (num > 0) {\n            rev = rev * 10 + num % 10;\n            num /= 10;\n        }\n        return n == 2 * rev - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123999,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123999,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = Reverse(n);\n        return n == 2 * rev - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpro330zyq.cs(11,20): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var s = n.ToString();\n        var r = new string(s.Reverse().ToArray());\n        return n == 2 * long.Parse(r) - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123997,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Reverse it\n        char[] c = s.ToCharArray();\n        Array.Reverse(c);\n        string r = new string(c);\n        // Convert back to long\n        long rn = long.Parse(r);\n        // Check if n is one less than twice its reverse\n        return n == 2 * rn - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123999,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = 0;\n        long num = n;\n        while (num > 0) {\n            rev = rev * 10 + num % 10;\n            num /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = 0;\n        long t = n;\n        while (t > 0) {\n            r = r * 10 + t % 10;\n            t /= 10;\n        }\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123999,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1a69215da2f48f7a6eae429670b76ca>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2*r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0y4d1b_0.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == 2 * r - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzl_xdoi8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp != 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123999,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev + 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1a69215da2f48f7a6eae429670b76ca>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        var rev = Reverse(n);\n        return n == 2 * rev - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123998,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1qmv2zg5.cs(11,19): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return (n == 2*r - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123999,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqbk02wy8.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = 0;\n        long temp = n;\n        while (temp > 0) {\n            rev = rev * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == rev - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123999,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3139c7ef55bb40508061f92cdf4dc15e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long r = Reverse(n);\n        return n == r * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkrak3wpa.cs(11,18): error CS0103: The name 'Reverse' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        // Convert to string\n        string s = n.ToString();\n        // Reverse the string\n        char[] charArray = s.ToCharArray();\n        Array.Reverse(charArray);\n        string r = new string(charArray);\n        // Convert back to int\n        long rn = Convert.ToInt64(r);\n        // Check if n is one less than twice its reverse\n        if (n == 2*rn - 1) {\n            return true;\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123999,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long rev = 0;\n        long num = n;\n        while (num > 0) {\n            rev = rev * 10 + num % 10;\n            num /= 10;\n        }\n        return n == rev * 2 - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1665510553,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check if a given number is one less than twice its reverse.\n    public static bool Checks(long n) {\n        long reverse = 0;\n        long temp = n;\n        while (temp > 0) {\n            reverse = reverse * 10 + temp % 10;\n            temp /= 10;\n        }\n        return n == reverse + 1 || n == reverse - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Checks((70L)) == (false));\n    Debug.Assert(Checks((23L)) == (false));\n    Debug.Assert(Checks((73L)) == (true));\n    }\n\n}\n",
      "timestamp": 1666123999,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ebe90140c8954ec8b72d9c687975be88>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_732_replace_specialchar",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to replace all occurrences of spaces, commas, or dots with a colon.\n    public static string ReplaceSpecialchar(string text) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_732_replace_specialchar.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReplaceSpecialchar((\"Python language, Programming language.\")).Equals((\"Python:language::Programming:language:\")));\n    Debug.Assert(ReplaceSpecialchar((\"a b c,d e f\")).Equals((\"a:b:c:d:e:f\")));\n    Debug.Assert(ReplaceSpecialchar((\"ram reshma,ram rahim\")).Equals((\"ram:reshma:ram:rahim\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return text.Replace(\" \", \":\").Replace(\",\", \":\").Replace(\".\", \":\");",
    "        return text.Replace(\" \", \":\").Replace(\",\", \":\").Replace(\".\", \":\");",
    "        return text.Replace(\" \", \":\").Replace(\",\", \":\").Replace(\".\", \":\");",
    "        return text.Replace(\" \", \":\").Replace(\",\", \":\").Replace(\".\", \":\");",
    "        return text.Replace(\",\", \":\").Replace(\" \", \":\").Replace(\".\", \":\");",
    "        return text.Replace(\" \", \":\").Replace(\",\", \":\").Replace(\".\", \":\");",
    "        return text.Replace(\" \", \":\").Replace(\",\", \":\").Replace(\".\", \":\");",
    "        return text.Replace(\" \", \":\").Replace(\",\", \":\").Replace(\".\", \":\");",
    "        return text.Replace(\" \", \":\").Replace(\",\", \":\").Replace(\".\", \":\");",
    "        string result = \"\";\n        foreach (char c in text) {\n            if (c == ' ' || c == ',' || c == '.') {\n                result += \":\";\n            } else {\n                result += c;\n            }\n        }\n        return result;",
    "        return text.Replace(\" \", \":\").Replace(\",\", \":\").Replace(\".\", \":\");",
    "        return text.Replace(\" \", \":\").Replace(\",\", \":\").Replace(\".\", \":\");",
    "        return text.Replace(\" \", \":\").Replace(\",\", \":\").Replace(\".\", \":\");",
    "        string[] specialchar = { \" \", \",\", \".\" };\n        foreach (string c in specialchar) {\n            text = text.Replace(c, \":\");\n        }\n        return text;",
    "        return text.Replace(\" \", \":\").Replace(\",\", \":\").Replace(\".\", \":\");",
    "        string result = \"\";\n        for (int i = 0; i < text.Length; i++) {\n            if (text[i] == ' ' || text[i] == ',' || text[i] == '.') {\n                result += ':';\n            } else {\n                result += text[i];\n            }\n        }\n        return result;",
    "        string result = \"\";\n        foreach (char c in text) {\n            if (c == ' ' || c == ',' || c == '.') {\n                result += ':';\n            } else {\n                result += c;\n            }\n        }\n        return result;",
    "        return text.Replace(\" \", \":\").Replace(\",\", \":\").Replace(\".\", \":\");",
    "        return text.Replace(\" \", \":\").Replace(\",\", \":\").Replace(\".\", \":\");",
    "        return text.Replace(\" \", \":\").Replace(\",\", \":\").Replace(\".\", \":\");"
  ]
}
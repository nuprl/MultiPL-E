{
  "name": "mbpp_88_freq_count",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_88_freq_count.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long x in list1) {\n            if (freq.ContainsKey(x)) {\n                freq[x]++;\n            } else {\n                freq[x] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bacc2fbc1d864da89723528f069285e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bacc2fbc1d864da89723528f069285e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (dict.ContainsKey(i)) {\n                dict[i]++;\n            } else {\n                dict[i] = 1;\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3ea7a7a52db4a1b975e95af6c0c2686>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3ea7a7a52db4a1b975e95af6c0c2686>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict1 = new Dictionary<long,long>();\n        foreach (long item in list1) {\n            if (dict1.ContainsKey(item)) {\n                dict1[item]++;\n            } else {\n                dict1.Add(item,1);\n            }\n        }\n        return dict1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd749c071a674bf483949fc3c2612bcf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd749c071a674bf483949fc3c2612bcf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long x in list1) {\n            if (freq.ContainsKey(x)) {\n                freq[x]++;\n            } else {\n                freq[x] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bacc2fbc1d864da89723528f069285e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bacc2fbc1d864da89723528f069285e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long i in list1) {\n            if(freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4d2dbc058cac476a82f5ddd7ecf8231f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4d2dbc058cac476a82f5ddd7ecf8231f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long x in list1) {\n            if (freq.ContainsKey(x)) {\n                freq[x] += 1;\n            } else {\n                freq[x] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4817996cb1204ebdaaf62a1aae212229>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4817996cb1204ebdaaf62a1aae212229>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long x in list1) {\n            if (!freq.ContainsKey(x)) {\n                freq[x] = 0;\n            }\n            freq[x]++;\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5cc4cc45d1b74c33a3358a223ef69468>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5cc4cc45d1b74c33a3358a223ef69468>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f8c7ddece9cd47d8b9e4f381b5533b66>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f8c7ddece9cd47d8b9e4f381b5533b66>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f8c7ddece9cd47d8b9e4f381b5533b66>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f8c7ddece9cd47d8b9e4f381b5533b66>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> freqDict = new Dictionary<long, long>();\n        foreach (long item in list1) {\n            if (freqDict.ContainsKey(item)) {\n                freqDict[item]++;\n            } else {\n                freqDict.Add(item, 1);\n            }\n        }\n        return freqDict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <505a4e07b22d47d9a3f0246098f5095a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <505a4e07b22d47d9a3f0246098f5095a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict1 = new Dictionary<long,long>();\n        foreach(long i in list1) {\n            if(dict1.ContainsKey(i)) {\n                dict1[i]++;\n            } else {\n                dict1.Add(i,1);\n            }\n        }\n        return dict1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9a497e912e1a44faac09ab9ebe8235f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9a497e912e1a44faac09ab9ebe8235f5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i, 1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <323ea72d1f47487394d7236df8262054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <323ea72d1f47487394d7236df8262054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long i in list1) {\n            if(freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7d4d9bb18014c69a7739095a8692d37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7d4d9bb18014c69a7739095a8692d37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict1 = new Dictionary<long,long>();\n        foreach (long num in list1) {\n            if (dict1.ContainsKey(num)) {\n                dict1[num]++;\n            } else {\n                dict1[num] = 1;\n            }\n        }\n        return dict1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8e343e86dd254854bac078af06f5c394>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8e343e86dd254854bac078af06f5c394>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict1 = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (dict1.ContainsKey(i)) {\n                dict1[i]++;\n            } else {\n                dict1.Add(i,1);\n            }\n        }\n        return dict1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <803b22f0b0974470abd695e9f260f1b7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <803b22f0b0974470abd695e9f260f1b7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long x in list1) {\n            if (freq.ContainsKey(x)) {\n                freq[x]++;\n            } else {\n                freq[x] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bacc2fbc1d864da89723528f069285e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bacc2fbc1d864da89723528f069285e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long i in list1) {\n            if(freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7d4d9bb18014c69a7739095a8692d37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7d4d9bb18014c69a7739095a8692d37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach(long i in list1) {\n            if(dict.ContainsKey(i)) {\n                dict[i]++;\n            } else {\n                dict[i] = 1;\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <965f3f076cd841f18b6863cc0bcfbe4c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <965f3f076cd841f18b6863cc0bcfbe4c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long item in list1) {\n            if (freq.ContainsKey(item)) {\n                freq[item]++;\n            } else {\n                freq[item] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f9e3ecadb77d44c4a9a204d47030f583>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f9e3ecadb77d44c4a9a204d47030f583>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach(long i in list1) {\n            if(dict.ContainsKey(i)) {\n                dict[i]++;\n            } else {\n                dict[i] = 1;\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <965f3f076cd841f18b6863cc0bcfbe4c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <965f3f076cd841f18b6863cc0bcfbe4c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i, 1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <323ea72d1f47487394d7236df8262054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <323ea72d1f47487394d7236df8262054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (dict.ContainsKey(i)) {\n                dict[i]++;\n            } else {\n                dict[i] = 1;\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3ea7a7a52db4a1b975e95af6c0c2686>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3ea7a7a52db4a1b975e95af6c0c2686>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i, 1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <323ea72d1f47487394d7236df8262054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <323ea72d1f47487394d7236df8262054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long num in list1) {\n            if (freq.ContainsKey(num)) {\n                freq[num]++;\n            } else {\n                freq[num] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2e9186ee5af44fb6ab54264d90d1f652>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2e9186ee5af44fb6ab54264d90d1f652>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict1 = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (dict1.ContainsKey(i)) {\n                dict1[i]++;\n            } else {\n                dict1.Add(i,1);\n            }\n        }\n        return dict1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <803b22f0b0974470abd695e9f260f1b7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <803b22f0b0974470abd695e9f260f1b7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long x in list1) {\n            if(freq.ContainsKey(x)) {\n                freq[x]++;\n            } else {\n                freq[x] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eddcb465af9a4867bb76524eb152e138>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eddcb465af9a4867bb76524eb152e138>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long i in list1) {\n            if(freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7d4d9bb18014c69a7739095a8692d37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7d4d9bb18014c69a7739095a8692d37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach(long i in list1) {\n            if(dict.ContainsKey(i)) {\n                dict[i]++;\n            } else {\n                dict.Add(i,1);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <05e84ac4c17f47969593be29dcbe83e7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <05e84ac4c17f47969593be29dcbe83e7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict1 = new Dictionary<long,long>();\n        foreach (long x in list1) {\n            if (dict1.ContainsKey(x)) {\n                dict1[x]++;\n            } else {\n                dict1[x] = 1;\n            }\n        }\n        return dict1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bb715ff8fa6e4d8d866bd3cf2ec5beca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bb715ff8fa6e4d8d866bd3cf2ec5beca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict1 = new Dictionary<long,long>();\n        foreach (long num in list1) {\n            if (dict1.ContainsKey(num)) {\n                dict1[num]++;\n            } else {\n                dict1[num] = 1;\n            }\n        }\n        return dict1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8e343e86dd254854bac078af06f5c394>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8e343e86dd254854bac078af06f5c394>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long x in list1) {\n            if (freq.ContainsKey(x)) {\n                freq[x]++;\n            } else {\n                freq[x] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bacc2fbc1d864da89723528f069285e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bacc2fbc1d864da89723528f069285e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (long l in list1) {\n            if (dict.ContainsKey(l)) {\n                dict[l] += 1;\n            } else {\n                dict[l] = 1;\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f88862e4fcda490dab9b84300e666db2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f88862e4fcda490dab9b84300e666db2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long i in list1) {\n            if(freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4d2dbc058cac476a82f5ddd7ecf8231f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4d2dbc058cac476a82f5ddd7ecf8231f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict1 = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (dict1.ContainsKey(i)) {\n                dict1[i] += 1;\n            } else {\n                dict1[i] = 1;\n            }\n        }\n        return dict1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <86ff1bd43cbe42b28bd1a26e33ba5d9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <86ff1bd43cbe42b28bd1a26e33ba5d9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (dict.ContainsKey(i)) {\n                dict[i]++;\n            } else {\n                dict[i] = 1;\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3ea7a7a52db4a1b975e95af6c0c2686>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3ea7a7a52db4a1b975e95af6c0c2686>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long item in list1) {\n            if (freq.ContainsKey(item)) {\n                freq[item]++;\n            } else {\n                freq[item] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f9e3ecadb77d44c4a9a204d47030f583>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f9e3ecadb77d44c4a9a204d47030f583>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict1 = new Dictionary<long,long>();\n        foreach (long item in list1) {\n            if (dict1.ContainsKey(item)) {\n                dict1[item] += 1;\n            } else {\n                dict1[item] = 1;\n            }\n        }\n        return dict1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e343321e25bf4ca0af7e69e01edfb618>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e343321e25bf4ca0af7e69e01edfb618>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (dict.ContainsKey(i)) {\n                dict[i]++;\n            } else {\n                dict[i] = 1;\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3ea7a7a52db4a1b975e95af6c0c2686>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3ea7a7a52db4a1b975e95af6c0c2686>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict1 = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (dict1.ContainsKey(i)) {\n                dict1[i]++;\n            } else {\n                dict1.Add(i,1);\n            }\n        }\n        return dict1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <803b22f0b0974470abd695e9f260f1b7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <803b22f0b0974470abd695e9f260f1b7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach(long i in list1) {\n            if(dict.ContainsKey(i)) {\n                dict[i]++;\n            } else {\n                dict.Add(i,1);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <05e84ac4c17f47969593be29dcbe83e7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <05e84ac4c17f47969593be29dcbe83e7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i, 1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <323ea72d1f47487394d7236df8262054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <323ea72d1f47487394d7236df8262054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long x in list1) {\n            if(freq.ContainsKey(x)) {\n                freq[x]++;\n            } else {\n                freq.Add(x,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8aa0890e4e32455a9220f368a17f7eaf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8aa0890e4e32455a9220f368a17f7eaf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long i in list1) {\n            if(freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4d2dbc058cac476a82f5ddd7ecf8231f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4d2dbc058cac476a82f5ddd7ecf8231f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (long x in list1) {\n            if (dict.ContainsKey(x)) {\n                dict[x]++;\n            } else {\n                dict[x] = 1;\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0d0d560462e844b28925aebf8022cf80>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0d0d560462e844b28925aebf8022cf80>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            }\n            else {\n                freq.Add(i, 1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ba51023a41154d9da7dd7d3d7ec6fd7d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ba51023a41154d9da7dd7d3d7ec6fd7d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (dict.ContainsKey(i)) {\n                dict[i] += 1;\n            } else {\n                dict.Add(i, 1);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <223c77eb36334024af6825187970a880>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <223c77eb36334024af6825187970a880>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (long item in list1) {\n            if (dict.ContainsKey(item)) {\n                dict[item]++;\n            } else {\n                dict.Add(item,1);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e922518633bc42c781ea1705aac37784>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e922518633bc42c781ea1705aac37784>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict1 = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (dict1.ContainsKey(i)) {\n                dict1[i]++;\n            } else {\n                dict1.Add(i,1);\n            }\n        }\n        return dict1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <803b22f0b0974470abd695e9f260f1b7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <803b22f0b0974470abd695e9f260f1b7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (long item in list1) {\n            if (dict.ContainsKey(item)) {\n                dict[item]++;\n            } else {\n                dict.Add(item,1);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e922518633bc42c781ea1705aac37784>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e922518633bc42c781ea1705aac37784>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict1 = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (dict1.ContainsKey(i)) {\n                dict1[i]++;\n            } else {\n                dict1[i] = 1;\n            }\n        }\n        return dict1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1e4d26dd4474b03b92929c906c819bb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1e4d26dd4474b03b92929c906c819bb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long i in list1) {\n            if(freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7d4d9bb18014c69a7739095a8692d37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7d4d9bb18014c69a7739095a8692d37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long item in list1) {\n            if (freq.ContainsKey(item)) {\n                freq[item]++;\n            } else {\n                freq[item] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f9e3ecadb77d44c4a9a204d47030f583>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f9e3ecadb77d44c4a9a204d47030f583>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (dict.ContainsKey(i)) {\n                dict[i]++;\n            } else {\n                dict[i] = 1;\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3ea7a7a52db4a1b975e95af6c0c2686>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3ea7a7a52db4a1b975e95af6c0c2686>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict1 = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (dict1.ContainsKey(i)) {\n                dict1[i]++;\n            } else {\n                dict1[i] = 1;\n            }\n        }\n        return dict1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1e4d26dd4474b03b92929c906c819bb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1e4d26dd4474b03b92929c906c819bb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i, 1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <323ea72d1f47487394d7236df8262054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <323ea72d1f47487394d7236df8262054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> dict = new Dictionary<long, long>();\n        foreach (long i in list1) {\n            if (dict.ContainsKey(i)) {\n                dict[i]++;\n            } else {\n                dict.Add(i, 1);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a1743caefa944eda801548b7ba286bb4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a1743caefa944eda801548b7ba286bb4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long i in list1) {\n            if(freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7d4d9bb18014c69a7739095a8692d37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7d4d9bb18014c69a7739095a8692d37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long x in list1) {\n            if (freq.ContainsKey(x)) {\n                freq[x]++;\n            } else {\n                freq[x] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bacc2fbc1d864da89723528f069285e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bacc2fbc1d864da89723528f069285e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i, 1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <323ea72d1f47487394d7236df8262054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <323ea72d1f47487394d7236df8262054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long num in list1) {\n            if (freq.ContainsKey(num)) {\n                freq[num]++;\n            } else {\n                freq[num] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2e9186ee5af44fb6ab54264d90d1f652>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2e9186ee5af44fb6ab54264d90d1f652>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long x in list1) {\n            if (freq.ContainsKey(x)) {\n                freq[x]++;\n            } else {\n                freq[x] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bacc2fbc1d864da89723528f069285e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bacc2fbc1d864da89723528f069285e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long num in list1) {\n            if (freq.ContainsKey(num)) {\n                freq[num]++;\n            }\n            else {\n                freq[num] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <798ab6db123a450289dc45af9c84ba6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <798ab6db123a450289dc45af9c84ba6c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long i in list1) {\n            if(freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4d2dbc058cac476a82f5ddd7ecf8231f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4d2dbc058cac476a82f5ddd7ecf8231f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long n in list1) {\n            if (freq.ContainsKey(n)) {\n                freq[n]++;\n            } else {\n                freq[n] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <af0299d43ca14989a79d49e8e140a097>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <af0299d43ca14989a79d49e8e140a097>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long x in list1) {\n            if(freq.ContainsKey(x)) {\n                freq[x]++;\n            } else {\n                freq[x] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eddcb465af9a4867bb76524eb152e138>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eddcb465af9a4867bb76524eb152e138>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> dict = new Dictionary<long, long>();\n        foreach (long i in list1) {\n            if (dict.ContainsKey(i)) {\n                dict[i]++;\n            } else {\n                dict[i] = 1;\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bf6750f802324a5da6bb027a0436282d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bf6750f802324a5da6bb027a0436282d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long item in list1) {\n            if (freq.ContainsKey(item)) {\n                freq[item] += 1;\n            } else {\n                freq[item] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124315,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <56d82e2212284ffabb8e3e97ee1a0bd9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <56d82e2212284ffabb8e3e97ee1a0bd9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long item in list1) {\n            if (freq.ContainsKey(item)) {\n                freq[item]++;\n            } else {\n                freq[item] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f9e3ecadb77d44c4a9a204d47030f583>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f9e3ecadb77d44c4a9a204d47030f583>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long num in list1) {\n            if (freq.ContainsKey(num)) {\n                freq[num]++;\n            } else {\n                freq[num] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2e9186ee5af44fb6ab54264d90d1f652>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2e9186ee5af44fb6ab54264d90d1f652>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long x in list1) {\n            if (freq.ContainsKey(x)) {\n                freq[x]++;\n            } else {\n                freq[x] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bacc2fbc1d864da89723528f069285e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bacc2fbc1d864da89723528f069285e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach(long i in list1) {\n            if(dict.ContainsKey(i)) {\n                dict[i]++;\n            } else {\n                dict.Add(i,1);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <05e84ac4c17f47969593be29dcbe83e7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <05e84ac4c17f47969593be29dcbe83e7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long l in list1) {\n            if (!freq.ContainsKey(l)) {\n                freq.Add(l, 1);\n            } else {\n                freq[l]++;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124315,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <31da4b4ec5124651ac7d478392b42a14>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <31da4b4ec5124651ac7d478392b42a14>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long item in list1) {\n            if (freq.ContainsKey(item)) {\n                freq[item]++;\n            } else {\n                freq[item] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f9e3ecadb77d44c4a9a204d47030f583>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f9e3ecadb77d44c4a9a204d47030f583>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            }\n            else {\n                freq.Add(i, 1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124315,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <26f73fcdb1e94a3ca05e752bbbd7cf4b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <26f73fcdb1e94a3ca05e752bbbd7cf4b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f8c7ddece9cd47d8b9e4f381b5533b66>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f8c7ddece9cd47d8b9e4f381b5533b66>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i, 1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <323ea72d1f47487394d7236df8262054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <323ea72d1f47487394d7236df8262054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i, 1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <323ea72d1f47487394d7236df8262054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <323ea72d1f47487394d7236df8262054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (long item in list1) {\n            if (dict.ContainsKey(item)) {\n                dict[item]++;\n            } else {\n                dict[item] = 1;\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124315,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fad22402dc684479a29dcce79556c5a0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fad22402dc684479a29dcce79556c5a0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            }\n            else {\n                freq.Add(i, 1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124315,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <26f73fcdb1e94a3ca05e752bbbd7cf4b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <26f73fcdb1e94a3ca05e752bbbd7cf4b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (long element in list1) {\n            if (dict.ContainsKey(element)) {\n                dict[element]++;\n            } else {\n                dict[element] = 1;\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124315,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <57ae0cb26ca3420caa843d7b5d218d37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <57ae0cb26ca3420caa843d7b5d218d37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long i in list1) {\n            if(freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7d4d9bb18014c69a7739095a8692d37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7d4d9bb18014c69a7739095a8692d37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i, 1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124315,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0db3e0f49eb84e7c927ffbf5d1ed6723>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0db3e0f49eb84e7c927ffbf5d1ed6723>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i] += 1;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124315,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8da63fe53e164313a5e3a3259bc8dc67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8da63fe53e164313a5e3a3259bc8dc67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict1 = new Dictionary<long,long>();\n        foreach(long num in list1) {\n            if(dict1.ContainsKey(num)) {\n                dict1[num] += 1;\n            } else {\n                dict1.Add(num,1);\n            }\n        }\n        return dict1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124315,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a96130bc183940639a2ca59317edca96>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a96130bc183940639a2ca59317edca96>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict1 = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (dict1.ContainsKey(i)) {\n                dict1[i]++;\n            } else {\n                dict1[i] = 1;\n            }\n        }\n        return dict1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1e4d26dd4474b03b92929c906c819bb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1e4d26dd4474b03b92929c906c819bb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i] += 1;\n            } else {\n                freq.Add(i, 1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124315,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5e9db5e30f3248998ba0451b83905cba>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5e9db5e30f3248998ba0451b83905cba>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long x in list1) {\n            if (freq.ContainsKey(x)) {\n                freq[x]++;\n            } else {\n                freq[x] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bacc2fbc1d864da89723528f069285e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bacc2fbc1d864da89723528f069285e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> dict = new Dictionary<long, long>();\n        foreach (long i in list1) {\n            if (dict.ContainsKey(i)) {\n                dict[i]++;\n            } else {\n                dict.Add(i, 1);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a1743caefa944eda801548b7ba286bb4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a1743caefa944eda801548b7ba286bb4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f8c7ddece9cd47d8b9e4f381b5533b66>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f8c7ddece9cd47d8b9e4f381b5533b66>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (dict.ContainsKey(i)) {\n                dict[i]++;\n            } else {\n                dict[i] = 1;\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3ea7a7a52db4a1b975e95af6c0c2686>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3ea7a7a52db4a1b975e95af6c0c2686>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long x in list1) {\n            if(freq.ContainsKey(x)) {\n                freq[x]++;\n            } else {\n                freq[x] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eddcb465af9a4867bb76524eb152e138>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eddcb465af9a4867bb76524eb152e138>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long x in list1) {\n            if (freq.ContainsKey(x)) {\n                freq[x]++;\n            } else {\n                freq[x] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124315,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3ceb61f39d4447199df3b2c5def240cc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3ceb61f39d4447199df3b2c5def240cc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long i in list1) {\n            if(freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7d4d9bb18014c69a7739095a8692d37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7d4d9bb18014c69a7739095a8692d37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i, 1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <323ea72d1f47487394d7236df8262054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <323ea72d1f47487394d7236df8262054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i, 1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <323ea72d1f47487394d7236df8262054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <323ea72d1f47487394d7236df8262054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict1 = new Dictionary<long,long>();\n        foreach (long num in list1) {\n            if (dict1.ContainsKey(num)) {\n                dict1[num]++;\n            } else {\n                dict1.Add(num,1);\n            }\n        }\n        return dict1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124315,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a551a897df17438bb7b171d5b77d4622>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a551a897df17438bb7b171d5b77d4622>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i, 1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <323ea72d1f47487394d7236df8262054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <323ea72d1f47487394d7236df8262054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long item in list1) {\n            if (freq.ContainsKey(item)) {\n                freq[item]++;\n            } else {\n                freq[item] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f9e3ecadb77d44c4a9a204d47030f583>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f9e3ecadb77d44c4a9a204d47030f583>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i] += 1;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124315,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8da63fe53e164313a5e3a3259bc8dc67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8da63fe53e164313a5e3a3259bc8dc67>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i, 1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <323ea72d1f47487394d7236df8262054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <323ea72d1f47487394d7236df8262054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (long item in list1) {\n            if (dict.ContainsKey(item)) {\n                dict[item]++;\n            } else {\n                dict[item] = 1;\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124315,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fad22402dc684479a29dcce79556c5a0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fad22402dc684479a29dcce79556c5a0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (dict.ContainsKey(i)) {\n                dict[i]++;\n            } else {\n                dict.Add(i,1);\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124315,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5d41824789c34a05b572b74250b1f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5d41824789c34a05b572b74250b1f91f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long x in list1) {\n            if(freq.ContainsKey(x)) {\n                freq[x]++;\n            } else {\n                freq[x] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eddcb465af9a4867bb76524eb152e138>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eddcb465af9a4867bb76524eb152e138>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        var dict = new Dictionary<long, long>();\n        foreach (var item in list1) {\n            if (dict.ContainsKey(item)) {\n                dict[item]++;\n            } else {\n                dict[item] = 1;\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124315,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a52f7c41dd894fad9871e1793e7f665a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a52f7c41dd894fad9871e1793e7f665a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long item in list1) {\n            if(freq.ContainsKey(item)) {\n                freq[item]++;\n            }\n            else {\n                freq[item] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124315,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <32eeee26c7d3447eaa22f92b358c8e26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <32eeee26c7d3447eaa22f92b358c8e26>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        for (int i = 0; i < list1.Count; i++) {\n            if (freq.ContainsKey(list1[i])) {\n                freq[list1[i]]++;\n            } else {\n                freq[list1[i]] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124315,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <574c595a35684de99e3de6613391e4c4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <574c595a35684de99e3de6613391e4c4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long x in list1) {\n            if (freq.ContainsKey(x)) {\n                freq[x]++;\n            } else {\n                freq[x] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bacc2fbc1d864da89723528f069285e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bacc2fbc1d864da89723528f069285e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            }\n            else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124315,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6098908e80ac4abca69efec7842bd152>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6098908e80ac4abca69efec7842bd152>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (dict.ContainsKey(i)) {\n                dict[i]++;\n            } else {\n                dict[i] = 1;\n            }\n        }\n        return dict;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3ea7a7a52db4a1b975e95af6c0c2686>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3ea7a7a52db4a1b975e95af6c0c2686>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long i in list1) {\n            if(freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4d2dbc058cac476a82f5ddd7ecf8231f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4d2dbc058cac476a82f5ddd7ecf8231f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long item in list1) {\n            if (freq.ContainsKey(item)) {\n                freq[item]++;\n            } else {\n                freq.Add(item,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124315,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4b9e4a4c024b476789be738d1b0bc391>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4b9e4a4c024b476789be738d1b0bc391>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long x in list1) {\n            if (freq.ContainsKey(x)) {\n                freq[x]++;\n            } else {\n                freq[x] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bacc2fbc1d864da89723528f069285e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bacc2fbc1d864da89723528f069285e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long i in list1) {\n            if(freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4d2dbc058cac476a82f5ddd7ecf8231f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4d2dbc058cac476a82f5ddd7ecf8231f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long x in list1) {\n            if(freq.ContainsKey(x)) {\n                freq[x]++;\n            } else {\n                freq[x] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eddcb465af9a4867bb76524eb152e138>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eddcb465af9a4867bb76524eb152e138>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long x in list1) {\n            if(freq.ContainsKey(x)) {\n                freq[x]++;\n            } else {\n                freq[x] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eddcb465af9a4867bb76524eb152e138>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eddcb465af9a4867bb76524eb152e138>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long item in list1) {\n            if (freq.ContainsKey(item)) {\n                freq[item]++;\n            } else {\n                freq[item] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f9e3ecadb77d44c4a9a204d47030f583>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f9e3ecadb77d44c4a9a204d47030f583>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f8c7ddece9cd47d8b9e4f381b5533b66>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f8c7ddece9cd47d8b9e4f381b5533b66>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long i in list1) {\n            if(freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4d2dbc058cac476a82f5ddd7ecf8231f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4d2dbc058cac476a82f5ddd7ecf8231f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long i in list1) {\n            if(freq.ContainsKey(i)) {\n                freq[i]++;\n            }\n            else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124315,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <258237ed48b44aa8b60798149139ce23>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <258237ed48b44aa8b60798149139ce23>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict1 = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (dict1.ContainsKey(i)) {\n                dict1[i] += 1;\n            } else {\n                dict1[i] = 1;\n            }\n        }\n        return dict1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <86ff1bd43cbe42b28bd1a26e33ba5d9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <86ff1bd43cbe42b28bd1a26e33ba5d9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict1 = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (dict1.ContainsKey(i)) {\n                dict1[i]++;\n            } else {\n                dict1.Add(i,1);\n            }\n        }\n        return dict1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <803b22f0b0974470abd695e9f260f1b7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <803b22f0b0974470abd695e9f260f1b7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bd04aeabbf5f4da8abeba701c5f0429f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long item in list1) {\n            if (freq.ContainsKey(item)) {\n                freq[item]++;\n            } else {\n                freq[item] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f9e3ecadb77d44c4a9a204d47030f583>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f9e3ecadb77d44c4a9a204d47030f583>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long i in list1) {\n            if(freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7d4d9bb18014c69a7739095a8692d37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7d4d9bb18014c69a7739095a8692d37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> dict1 = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (dict1.ContainsKey(i)) {\n                dict1[i]++;\n            } else {\n                dict1[i] = 1;\n            }\n        }\n        return dict1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1e4d26dd4474b03b92929c906c819bb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e1e4d26dd4474b03b92929c906c819bb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach(long i in list1) {\n            if(freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq.Add(i,1);\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4d2dbc058cac476a82f5ddd7ecf8231f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4d2dbc058cac476a82f5ddd7ecf8231f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long i in list1) {\n            if (freq.ContainsKey(i)) {\n                freq[i]++;\n            } else {\n                freq[i] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1665509684,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b9615bc684b04166a7d1639556caf41a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to get the frequency of all the elements in a list, returned as a dictionary.\n    public static Dictionary<long,long> FreqCount(List<long> list1) {\n        Dictionary<long,long> freq = new Dictionary<long,long>();\n        foreach (long item in list1) {\n            if (freq.ContainsKey(item)) {\n                freq[item]++;\n            } else {\n                freq[item] = 1;\n            }\n        }\n        return freq;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)10L, (long)10L, (long)10L, (long)10L, (long)20L, (long)20L, (long)20L, (long)20L, (long)40L, (long)40L, (long)50L, (long)50L, (long)30L}))).Equals((new Dictionary<long,long>(){{10L, 4L}, {20L, 4L}, {40L, 2L}, {50L, 2L}, {30L, 1L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)3L, (long)2L, (long)4L, (long)1L, (long)3L, (long)1L, (long)4L}))).Equals((new Dictionary<long,long>(){{1L, 3L}, {2L, 2L}, {3L, 3L}, {4L, 3L}})));\n    Debug.Assert(FreqCount((new List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)4L, (long)9L, (long)10L, (long)4L, (long)5L, (long)6L, (long)7L, (long)9L, (long)5L}))).Equals((new Dictionary<long,long>(){{10L, 1L}, {5L, 3L}, {6L, 2L}, {7L, 2L}, {4L, 2L}, {9L, 2L}})));\n    }\n\n}\n",
      "timestamp": 1666124314,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f9e3ecadb77d44c4a9a204d47030f583>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f9e3ecadb77d44c4a9a204d47030f583>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    }
  ]
}
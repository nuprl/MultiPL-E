{
  "name": "mbpp_445_index_multiplication",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to perform index wise multiplication of tuple elements in the given two tuples.\n    public static long IndexMultiplication(long test_tup1, long test_tup2) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_445_index_multiplication.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(IndexMultiplication((long)Tuple.Create(Tuple.Create(1L, 3L), Tuple.Create(4L, 5L), Tuple.Create(2L, 9L), Tuple.Create(1L, 10L)), (long)Tuple.Create(Tuple.Create(6L, 7L), Tuple.Create(3L, 9L), Tuple.Create(1L, 1L), Tuple.Create(7L, 3L))) == (long)Tuple.Create(Tuple.Create(6L, 21L), Tuple.Create(12L, 45L), Tuple.Create(2L, 9L), Tuple.Create(7L, 30L)));\n    Debug.Assert(IndexMultiplication((long)Tuple.Create(Tuple.Create(2L, 4L), Tuple.Create(5L, 6L), Tuple.Create(3L, 10L), Tuple.Create(2L, 11L)), (long)Tuple.Create(Tuple.Create(7L, 8L), Tuple.Create(4L, 10L), Tuple.Create(2L, 2L), Tuple.Create(8L, 4L))) == (long)Tuple.Create(Tuple.Create(14L, 32L), Tuple.Create(20L, 60L), Tuple.Create(6L, 20L), Tuple.Create(16L, 44L)));\n    Debug.Assert(IndexMultiplication((long)Tuple.Create(Tuple.Create(3L, 5L), Tuple.Create(6L, 7L), Tuple.Create(4L, 11L), Tuple.Create(3L, 12L)), (long)Tuple.Create(Tuple.Create(8L, 9L), Tuple.Create(5L, 11L), Tuple.Create(3L, 3L), Tuple.Create(9L, 5L))) == (long)Tuple.Create(Tuple.Create(24L, 45L), Tuple.Create(30L, 77L), Tuple.Create(12L, 33L), Tuple.Create(27L, 60L)));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long result = 0;\n        for (int i = 0; i < test_tup1.Length; i++) {\n            result += test_tup1[i] * test_tup2[i];\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < test_tup1.Length; i++) {\n            result += test_tup1[i] * test_tup2[i];\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < test_tup1.Length; i++) {\n            result += test_tup1[i] * test_tup2[i];\n        }\n        return result;",
    "        long result = 0;\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        return result;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long result = 0;\n        int i = 0;\n        while (test_tup1 > 0) {\n            result += (test_tup1 % 10) * (test_tup2 % 10) * (long)Math.Pow(10, i);\n            test_tup1 /= 10;\n            test_tup2 /= 10;\n            i++;\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < test_tup1.Length; i++) {\n            result += test_tup1[i] * test_tup2[i];\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < test_tup1.Length; i++) {\n            result += test_tup1[i] * test_tup2[i];\n        }\n        return result;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long result = 0;\n        for (int i = 0; i < test_tup1.Length; i++) {\n            result += test_tup1[i] * test_tup2[i];\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < test_tup1.Length; i++) {\n            result += test_tup1[i] * test_tup2[i];\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < test_tup1.Length; i++) {\n            result += test_tup1[i] * test_tup2[i];\n        }\n        return result;",
    "        long result = 0;\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        return result;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long result = 0;\n        for (int i = 0; i < test_tup1.Length; i++)\n        {\n            result += test_tup1[i] * test_tup2[i];\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < test_tup1.Length; i++) {\n            result += test_tup1[i] * test_tup2[i];\n        }\n        return result;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long result = 0;\n        for (int i = 0; i < test_tup1.Length; i++) {\n            result += test_tup1[i] * test_tup2[i];\n        }\n        return result;",
    "        long result = 0;\n        // Write your code here\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < test_tup1.Length; i++) {\n            result += test_tup1[i] * test_tup2[i];\n        }\n        return result;",
    "        long result = 0;\n        for (int i = 0; i < test_tup1.Length; i++) {\n            result += test_tup1[i] * test_tup2[i];\n        }\n        return result;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long result = 0;\n        for (int i = 0; i < test_tup1.Length; i++) {\n            result += test_tup1[i] * test_tup2[i];\n        }\n        return result;",
    "        return test_tup1 * test_tup2;",
    "        long result = 0;\n        for (int i = 0; i < test_tup1.Length; i++) {\n            result += test_tup1[i] * test_tup2[i];\n        }\n        return result;"
  ]
}
{
  "name": "mbpp_803_is_perfect_square",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given number is a perfect square or not. https://www.geeksforgeeks.org/check-if-given-number-is-perfect-square-in-cpp/\n    public static bool IsPerfectSquare(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_803_is_perfect_square.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsPerfectSquare((10L)) == (false));\n    Debug.Assert(IsPerfectSquare((36L)) == (true));\n    Debug.Assert(IsPerfectSquare((14L)) == (false));\n    Debug.Assert(IsPerfectSquare((196L)) == (true));\n    Debug.Assert(IsPerfectSquare((125L)) == (false));\n    Debug.Assert(IsPerfectSquare((15625L)) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        if (n < 0) {\n            return false;\n        }\n        if (n == 0 || n == 1) {\n            return true;\n        }\n        long start = 1;\n        long end = n;\n        while (start <= end) {\n            long mid = (start + end) / 2;\n            if (mid * mid == n) {\n                return true;\n            }\n            if (mid * mid < n) {\n                start = mid + 1;\n            } else {\n                end = mid - 1;\n            }\n        }\n        return false;",
    "        long s = (long)Math.Sqrt(n);\n        return (s * s == n);",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long start = 1, end = n;\n        while (start <= end) {\n            long mid = (start + end) / 2;\n            if (mid * mid == n) return true;\n            if (mid * mid < n) start = mid + 1;\n            else end = mid - 1;\n        }\n        return false;",
    "        long s = (long)Math.Sqrt(n);\n        return (s * s == n);",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        long x = n / 2;\n        while (x * x > n) {\n            x = (x + n / x) / 2;\n        }\n        return x * x == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        // Newton's method\n        long x = n;\n        while (x * x > n) {\n            x = (x + n / x) / 2;\n        }\n        return x * x == n;",
    "        if (n < 0) {\n            return false;\n        }\n        long tst = (long)(Math.Sqrt(n) + 0.5);\n        return tst * tst == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0)\n            return false;\n        if (n == 0 || n == 1)\n            return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) {\n            return false;\n        }\n        long tst = (long)(Math.Sqrt(n) + 0.5);\n        return tst * tst == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) {\n            return false;\n        }\n        if (n == 0 || n == 1) {\n            return true;\n        }\n        long start = 1;\n        long end = n;\n        while (start <= end) {\n            long mid = (start + end) / 2;\n            if (mid * mid == n) {\n                return true;\n            }\n            if (mid * mid < n) {\n                start = mid + 1;\n            } else {\n                end = mid - 1;\n            }\n        }\n        return false;",
    "        long s = (long)Math.Sqrt(n);\n        return (s * s == n);",
    "        if (n < 0) {\n            return false;\n        }\n        long tst = (long)(Math.Sqrt(n) + 0.5);\n        return tst * tst == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) {\n            return false;\n        }\n        long tst = (long)(Math.Sqrt(n) + 0.5);\n        return tst * tst == n;",
    "        if (n < 0)\n            return false;\n        if (n == 0 || n == 1)\n            return true;\n        long t = n;\n        while (t > n / t)\n            t = (t + n / t) / 2;\n        return t * t == n;",
    "        if (n < 0) return false;\n        long tst = (long)(Math.Sqrt(n) + 0.5);\n        return tst * tst == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        long sqrt = (long)Math.Sqrt(n);\n        return sqrt * sqrt == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) {\n            return false;\n        }\n        if (n == 0 || n == 1) {\n            return true;\n        }\n        long start = 1;\n        long end = n;\n        while (start <= end) {\n            long mid = (start + end) / 2;\n            if (mid * mid == n) {\n                return true;\n            }\n            if (mid * mid < n) {\n                start = mid + 1;\n            }\n            else {\n                end = mid - 1;\n            }\n        }\n        return false;",
    "        if (n < 0) {\n            return false;\n        }\n        if (n == 0 || n == 1) {\n            return true;\n        }\n        long start = 1;\n        long end = n;\n        while (start <= end) {\n            long mid = (start + end) / 2;\n            if (mid * mid == n) {\n                return true;\n            }\n            if (mid * mid < n) {\n                start = mid + 1;\n            } else {\n                end = mid - 1;\n            }\n        }\n        return false;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        // Newton's method\n        long x = n;\n        while (x * x > n) {\n            x = (x + n / x) / 2;\n        }\n        return x * x == n;",
    "        if (n < 0) return false;\n        long tst = (long)(Math.Sqrt(n) + 0.5);\n        return tst * tst == n;",
    "        // Newton's method\n        long x = n;\n        while (x * x > n) {\n            x = (x + n / x) / 2;\n        }\n        return x * x == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        long tst = (long)(Math.Sqrt(n) + 0.5);\n        return tst * tst == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        long sqrt = (long)Math.Sqrt(n);\n        return sqrt * sqrt == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) {\n            return false;\n        }\n        if (n == 0 || n == 1) {\n            return true;\n        }\n        long start = 1;\n        long end = n;\n        while (start <= end) {\n            long mid = (start + end) / 2;\n            if (mid * mid == n) {\n                return true;\n            }\n            if (mid * mid < n) {\n                start = mid + 1;\n            } else {\n                end = mid - 1;\n            }\n        }\n        return false;",
    "        if (n < 0) {\n            return false;\n        }\n        if (n == 0 || n == 1) {\n            return true;\n        }\n        long start = 1;\n        long end = n;\n        while (start <= end) {\n            long mid = (start + end) / 2;\n            if (mid * mid == n) {\n                return true;\n            }\n            if (mid * mid < n) {\n                start = mid + 1;\n            } else {\n                end = mid - 1;\n            }\n        }\n        return false;",
    "        if (n < 0) {\n            return false;\n        }\n        long tst = (long)(Math.Sqrt(n) + 0.5);\n        return tst * tst == n;",
    "        long s = (long)Math.Sqrt(n);\n        return (s*s == n);",
    "        if (n < 0) {\n            return false;\n        }\n        long tst = (long)(Math.Sqrt(n) + 0.5);\n        return tst * tst == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long start = 1, end = n;\n        while (start <= end) {\n            long mid = (start + end) / 2;\n            if (mid * mid == n) return true;\n            if (mid * mid < n) start = mid + 1;\n            else end = mid - 1;\n        }\n        return false;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long start = 1, end = n;\n        while (start <= end) {\n            long mid = (start + end) / 2;\n            if (mid * mid == n) return true;\n            if (mid * mid < n) start = mid + 1;\n            else end = mid - 1;\n        }\n        return false;",
    "        if (n < 0) return false;\n        long tst = (long)(Math.Sqrt(n) + 0.5);\n        return tst * tst == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        long sqrt = (long)Math.Sqrt(n);\n        return sqrt * sqrt == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        long tst = (long)(Math.Sqrt(n) + 0.5);\n        return tst * tst == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        long sqrt = (long)Math.Sqrt(n);\n        return (sqrt * sqrt == n);",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) {\n            return false;\n        }\n        long tst = (long)(Math.Sqrt(n) + 0.5);\n        return tst * tst == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        // Newton's method\n        long x = n;\n        while (x * x > n) {\n            x = (x + n / x) / 2;\n        }\n        return x * x == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        // Newton's method\n        long x = n;\n        while (x * x > n) {\n            x = (x + n / x) / 2;\n        }\n        return x * x == n;",
    "        if (n < 0) {\n            return false;\n        }\n        long tst = (long)(Math.Sqrt(n) + 0.5);\n        return tst * tst == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) {\n            return false;\n        }\n        if (n == 0 || n == 1) {\n            return true;\n        }\n        long start = 1;\n        long end = n;\n        while (start <= end) {\n            long mid = (start + end) / 2;\n            if (mid * mid == n) {\n                return true;\n            }\n            if (mid * mid < n) {\n                start = mid + 1;\n            } else {\n                end = mid - 1;\n            }\n        }\n        return false;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) {\n            return false;\n        }\n        long tst = (long)(Math.Sqrt(n) + 0.5);\n        return tst * tst == n;",
    "        if (n < 0) {\n            return false;\n        }\n        long tst = (long)(Math.Sqrt(n) + 0.5);\n        return tst * tst == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) {\n            return false;\n        }\n        if (n == 0 || n == 1) {\n            return true;\n        }\n        long start = 1;\n        long end = n;\n        while (start <= end) {\n            long mid = (start + end) / 2;\n            if (mid * mid == n) {\n                return true;\n            }\n            if (mid * mid < n) {\n                start = mid + 1;\n            } else {\n                end = mid - 1;\n            }\n        }\n        return false;",
    "        // Newton's method\n        long x = n;\n        while (x * x > n) {\n            x = (x + n / x) / 2;\n        }\n        return x * x == n;",
    "        if (n < 0)\n            return false;\n        if (n == 0 || n == 1)\n            return true;\n        long start = 1, end = n, ans = 0;\n        while (start <= end) {\n            long mid = (start + end) / 2;\n            if (mid * mid == n)\n                return true;\n            if (mid * mid < n) {\n                start = mid + 1;\n                ans = mid;\n            } else\n                end = mid - 1;\n        }\n        return false;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long start = 1, end = n;\n        while (start <= end) {\n            long mid = (start + end) / 2;\n            if (mid * mid == n) return true;\n            if (mid * mid < n) start = mid + 1;\n            else end = mid - 1;\n        }\n        return false;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0)\n            return false;\n        if (n == 0 || n == 1)\n            return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        long s = (long)Math.Sqrt(n);\n        return (s * s == n);",
    "        long s = (long)Math.Sqrt(n);\n        return (s * s == n);",
    "        if (n < 0) {\n            return false;\n        }\n        long tst = (long)(Math.Sqrt(n) + 0.5);\n        return tst * tst == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        // Newton's method\n        long x = n;\n        while (x * x > n) {\n            x = (x + n / x) / 2;\n        }\n        return x * x == n;",
    "        if (n < 0) {\n            return false;\n        }\n        long tst = (long)(Math.Sqrt(n) + 0.5);\n        return tst * tst == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long start = 1, end = n, ans = 0;\n        while (start <= end) {\n            long mid = (start + end) / 2;\n            if (mid * mid == n) return true;\n            if (mid * mid < n) {\n                start = mid + 1;\n                ans = mid;\n            } else {\n                end = mid - 1;\n            }\n        }\n        return false;",
    "        long s = (long)Math.Sqrt(n);\n        return (s*s == n);",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        long x = n;\n        while (x * x > n) {\n            x = (x + n / x) / 2;\n        }\n        return x * x == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long start = 1, end = n;\n        while (start <= end) {\n            long mid = (start + end) / 2;\n            if (mid * mid == n) return true;\n            if (mid * mid < n) start = mid + 1;\n            else end = mid - 1;\n        }\n        return false;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long start = 1, end = n;\n        while (start <= end) {\n            long mid = (start + end) / 2;\n            if (mid * mid == n) return true;\n            if (mid * mid < n) start = mid + 1;\n            else end = mid - 1;\n        }\n        return false;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) {\n            return false;\n        }\n        if (n == 0 || n == 1) {\n            return true;\n        }\n        long start = 1;\n        long end = n;\n        while (start <= end) {\n            long mid = (start + end) / 2;\n            if (mid * mid == n) {\n                return true;\n            }\n            if (mid * mid < n) {\n                start = mid + 1;\n            } else {\n                end = mid - 1;\n            }\n        }\n        return false;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) {\n            return false;\n        }\n        if (n == 0 || n == 1) {\n            return true;\n        }\n        long start = 1;\n        long end = n;\n        while (start <= end) {\n            long mid = (start + end) / 2;\n            if (mid * mid == n) {\n                return true;\n            }\n            if (mid * mid < n) {\n                start = mid + 1;\n            } else {\n                end = mid - 1;\n            }\n        }\n        return false;",
    "        long s = (long)Math.Sqrt(n);\n        return (s * s == n);",
    "        if (n < 0) {\n            return false;\n        }\n        if (n == 0 || n == 1) {\n            return true;\n        }\n        long start = 1;\n        long end = n;\n        while (start <= end) {\n            long mid = (start + end) / 2;\n            if (mid * mid == n) {\n                return true;\n            }\n            if (mid * mid < n) {\n                start = mid + 1;\n            } else {\n                end = mid - 1;\n            }\n        }\n        return false;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) {\n            return false;\n        }\n        long tst = (long)(Math.Sqrt(n) + 0.5);\n        return tst * tst == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) {\n            return false;\n        }\n        long tst = (long)(Math.Sqrt(n) + 0.5);\n        return tst * tst == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long start = 1, end = n, ans = 0;\n        while (start <= end) {\n            long mid = (start + end) / 2;\n            if (mid * mid == n) return true;\n            if (mid * mid < n) {\n                start = mid + 1;\n                ans = mid;\n            } else {\n                end = mid - 1;\n            }\n        }\n        return false;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        long s = (long)Math.Sqrt(n);\n        return (s * s == n);",
    "        if (n < 0) return false;\n        long tst = (long)(Math.Sqrt(n) + 0.5);\n        return tst * tst == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        long sqrt = (long)Math.Sqrt(n);\n        return (sqrt * sqrt == n);",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        // Newton's method\n        long x = n;\n        while (x * x > n) {\n            x = (x + n / x) / 2;\n        }\n        return x * x == n;",
    "        if (n < 0) return false;\n        long tst = (long)(Math.Sqrt(n) + 0.5);\n        return tst * tst == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) {\n            return false;\n        }\n        long tst = (long)(Math.Sqrt(n) + 0.5);\n        return tst * tst == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0)\n            return false;\n        if (n == 0 || n == 1)\n            return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0)\n            return false;\n        if (n == 0 || n == 1)\n            return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        long sqrt = (long)Math.Sqrt(n);\n        return sqrt * sqrt == n;",
    "        if (n < 0) {\n            return false;\n        }\n        long tst = (long)(Math.Sqrt(n) + 0.5);\n        return tst * tst == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long start = 1, end = n, ans = 0;\n        while (start <= end) {\n            long mid = (start + end) / 2;\n            if (mid * mid == n) return true;\n            if (mid * mid < n) {\n                start = mid + 1;\n                ans = mid;\n            } else {\n                end = mid - 1;\n            }\n        }\n        return false;",
    "        long s = (long)Math.Sqrt(n);\n        return (s * s == n);",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long start = 1, end = n;\n        while (start <= end) {\n            long mid = (start + end) / 2;\n            if (mid * mid == n) return true;\n            if (mid * mid < n) start = mid + 1;\n            else end = mid - 1;\n        }\n        return false;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n;\n        while (t > n / t) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) {\n            return false;\n        }\n        if (n == 0 || n == 1) {\n            return true;\n        }\n        long start = 1;\n        long end = n;\n        while (start <= end) {\n            long mid = (start + end) / 2;\n            if (mid * mid == n) {\n                return true;\n            }\n            if (mid * mid < n) {\n                start = mid + 1;\n            } else {\n                end = mid - 1;\n            }\n        }\n        return false;",
    "        if (n < 0) {\n            return false;\n        }\n        long tst = (long)(Math.Sqrt(n) + 0.5);\n        return tst * tst == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;",
    "        if (n < 0) return false;\n        if (n == 0 || n == 1) return true;\n        long t = n / 2;\n        while (t * t > n) {\n            t = (t + n / t) / 2;\n        }\n        return t * t == n;"
  ]
}
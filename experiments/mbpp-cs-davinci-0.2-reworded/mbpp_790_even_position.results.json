{
  "name": "mbpp_790_even_position",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_790_even_position.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        return nums.Where((x, i) => i % 2 == 0).All(x => x % 2 == 0);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for(int i = 0; i < nums.Count; i++) {\n            if(i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1666122880,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1666122880,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0) {\n                if (nums[i] % 2 != 0) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1666122880,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0) {\n                if (nums[i] % 2 != 0) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1666122880,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0) {\n                if (nums[i] % 2 != 0) {\n                    return false;\n                }\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1666122880,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1666122880,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1666122880,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        return nums.Select((x, i) => new { x, i })\n            .Where(x => x.i % 2 == 0)\n            .All(x => x.x % 2 == 0);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1666122880,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 == 0) {\n                return true;\n            }\n        }\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1666122880,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        // Your code here\n        return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1666122880,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7634aeccc8a401d99de2092a39bd593>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for(int i = 0; i < nums.Count; i++) {\n            if(i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1666122880,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i++) {\n            if (i % 2 == 0 && nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether every even index contains even numbers of a given list.\n    public static bool EvenPosition(List<long> nums) {\n        for (int i = 0; i < nums.Count; i += 2) {\n            if (nums[i] % 2 != 0) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)3L, (long)2L, (long)1L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (false));\n    Debug.Assert(EvenPosition((new List<long>(new long[]{(long)2L, (long)1L, (long)4L}))) == (true));\n    }\n\n}\n",
      "timestamp": 1665510179,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_123_amicable_numbers_sum",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_123_amicable_numbers_sum.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sum1 = 0;\n            long sum2 = 0;\n            for (long j = 1; j <= i/2; j++) {\n                if (i % j == 0) {\n                    sum1 += j;\n                }\n            }\n            for (long j = 1; j <= sum1/2; j++) {\n                if (sum1 % j == 0) {\n                    sum2 += j;\n                }\n            }\n            if (sum2 == i && sum1 != i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = DivisorsSum(i);\n            if (a != i && DivisorsSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = DivisorsSum(i);\n            if (a == i)\n                continue;\n            long b = DivisorsSum(a);\n            if (b == i)\n                sum += i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            long b = DivisorsSum(a);\n            if (i == b && a != b) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (a != b && DivisorsSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorSum(i);\n            if (a != i && DivisorSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorSum(a);\n            if (b > a && DivisorSum(b) == a) {\n                sum += a;\n                sum += b;\n            }\n        }\n        return sum;",
    "        // Create a list of all the divisors of each number from 1 to limit.\n        var divisors = new List<long>();\n        for (long i = 1; i <= limit; i++) {\n            divisors.Add(DivisorsSum(i));\n        }\n        // Find all the amicable numbers.\n        var amicableNumbers = new List<long>();\n        for (long i = 1; i <= limit; i++) {\n            if (divisors[(int)i - 1] <= limit && divisors[(int)i - 1] != i && divisors[(int)divisors[(int)i - 1] - 1] == i) {\n                amicableNumbers.Add(i);\n            }\n        }\n        // Return the sum of all the amicable numbers.\n        return amicableNumbers.Sum();",
    "        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (i != sumOfDivisors && DivisorsSum(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfDivisors(i);\n            long b = SumOfDivisors(a);\n            if (b == i && a != b) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a > i && SumOfDivisors(a) == i) {\n                sum += i;\n                sum += a;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a == i) continue;\n            long b = SumOfProperDivisors(a);\n            if (b == i) sum += i;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = SumOfDivisors(i);\n            long sum2 = SumOfDivisors(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            long b = DivisorsSum(a);\n            if (i == b && i != a) {\n                sum += i;\n            }\n        }\n        return sum;"
  ]
}
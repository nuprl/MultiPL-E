{
  "name": "mbpp_57_find_Max_Num",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_57_find_Max_Num.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long maxNum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            maxNum = maxNum * 10 + arr[i];\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        string res = \"\";\n        foreach (long i in arr) {\n            res += i;\n        }\n        return long.Parse(res);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long ret = 0;\n        foreach (long i in arr) {\n            ret = ret * 10 + i;\n        }\n        return ret;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        // arr.Sort();\n        // arr.Reverse();\n        // string result = \"\";\n        // foreach(var i in arr) {\n        //     result += i.ToString();\n        // }\n        // return long.Parse(result);\n        return long.Parse(string.Join(\"\", arr.OrderByDescending(x => x)));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        long result = 0;\n        foreach (long num in arr) {\n            result = result * 10 + num;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long num = 0;\n        foreach (long i in arr) {\n            num = num * 10 + i;\n        }\n        return num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        long temp = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = 0; j < arr.Count; j++) {\n                if (arr[i] > arr[j]) {\n                    temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        string s = \"\";\n        foreach (long i in arr) {\n            s += i.ToString();\n        }\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long max = 0;\n        foreach (long i in arr) {\n            max = max * 10 + i;\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long res = 0;\n        foreach (long i in arr) {\n            res = res * 10 + i;\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long maxNum = 0;\n        foreach (long num in arr) {\n            maxNum = maxNum * 10 + num;\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long result = 0;\n        foreach (long item in arr) {\n            result = result * 10 + item;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3591e3a50f5946689a9efbfa23136e3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3591e3a50f5946689a9efbfa23136e3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long maxNum = 0;\n        foreach (long num in arr) {\n            maxNum = maxNum * 10 + num;\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        StringBuilder sb = new StringBuilder();\n        foreach(long num in arr) {\n            sb.Append(num);\n        }\n        return long.Parse(sb.ToString());\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        arr.Sort();\n        arr.Reverse();\n        foreach (long i in arr) {\n            max = max * 10 + i;\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        arr.Sort();\n        arr.Reverse();\n        string result = \"\";\n        foreach (long i in arr) {\n            result += i.ToString();\n        }\n        return long.Parse(result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long maxNum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            maxNum += arr[i] * (long)Math.Pow(10, i);\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f6c5f280d9794a6185b3b4425d88395c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f6c5f280d9794a6185b3b4425d88395c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long result = 0;\n        foreach (long digit in arr) {\n            result = result * 10 + digit;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        long num = 0;\n        foreach (long i in arr) {\n            num = num * 10 + i;\n        }\n        return num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        arr.Sort();\n        arr.Reverse();\n        foreach (long i in arr) {\n            max = max * 10 + i;\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long result = 0;\n        foreach (long num in arr) {\n            result = result * 10 + num;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for(int i = 0; i < arr.Count; i++) {\n            if(arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <96a6b30fddb142aaacd59e6e8314d9d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <96a6b30fddb142aaacd59e6e8314d9d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        List<long> sorted = arr.OrderByDescending(x => x).ToList();\n        long max = 0;\n        foreach (long num in sorted) {\n            max = max * 10 + num;\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        List<long> arr1 = new List<long>();\n        arr1 = arr.OrderByDescending(x => x).ToList();\n        string str = string.Join(\"\", arr1);\n        long num = Convert.ToInt64(str);\n        return num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            max += arr[i] * (long)Math.Pow(10, i);\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e8ffc261a5af4a678878e6bd66f68c02>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e8ffc261a5af4a678878e6bd66f68c02>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        long max2 = 0;\n        long max3 = 0;\n        long max4 = 0;\n        long max5 = 0;\n        long max6 = 0;\n        long max7 = 0;\n        long max8 = 0;\n        long max9 = 0;\n        long max10 = 0;\n        long max11 = 0;\n        long max12 = 0;\n        long max13 = 0;\n        long max14 = 0;\n        long max15 = 0;\n        long max16 = 0;\n        long max17 = 0;\n        long max18 = 0;\n        long max19 = 0;\n        long max20 = 0;\n        long max21 = 0;\n        long max22 = 0;\n        long max23 = 0;\n        long max24 = 0;\n        long max25 = 0;\n        long max26 = 0;\n        long max27 = 0;\n        long max28 = 0;\n        long max29 = 0;\n        long max30 = 0;\n        long max31 = 0;\n        long max32 = 0;\n        long max33 = 0;\n        long max34 = 0;\n        long max35 = 0;\n        long max36 = 0;\n        long max37 = 0;\n        long max38 = 0;\n        long max39 = 0;\n        long max40 = 0;\n        long max41 = 0;\n        long max42 = 0;\n        long max43 = 0;\n        long max44 = 0;\n        long max45 = 0;\n        long max46 = 0;\n        long max47 = 0;\n        long max48 = 0;\n        long max49 = 0;\n        long max50 = 0;\n        long max51 = 0;\n        long max52 = 0;\n        long max53 = 0;\n        long max54 = 0;\n        long max55 = 0;\n        long max56 = 0;\n        long max57 = 0;\n        long max58 = 0;\n        long max59 = 0;\n        long max60 = 0;\n        long max61 = 0;\n        long max62 = 0;\n        long max63 = 0;\n       \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp18axfcy1.cs(12,14): warning CS0219: The variable 'max' is assigned but its value is never used\n/tmp/tmp18axfcy1.cs(13,14): warning CS0219: The variable 'max2' is assigned but its value is never used\n/tmp/tmp18axfcy1.cs(14,14): warning CS0219: The variable 'max3' is assigned but its value is never used\n/tmp/tmp18axfcy1.cs(15,14): warning CS0219: The variable 'max4' is assigned but its value is never used\n/tmp/tmp18axfcy1.cs(16,14): warning CS0219: The variable 'max5' is assigned but its value is never used\n/tmp/tmp18axfcy1.cs(17,14): warning CS0219: The variable 'max6' is assigned but its value is never used\n/tmp/tmp18axfcy1.cs(18,14): warning CS0219: The variable 'max7' is assigned but its value is never used\n/tmp/tmp18axfcy1.cs(19,14): warning CS0219: The variable 'max8' is assigned but its value is never used\n/tmp/tmp18axfcy1.cs(20,14): warning CS0219: The variable 'max9' is assigned but its value is never used\n/tmp/tmp18axfcy1.cs(21,14): warning CS0219: The variable 'max10' is assigned but its value is never used\n/tmp/tmp18axfcy1.cs(22,14): warning CS0219: The variable 'max11' is assigned but its value is never used\n/tmp/tmp18axfcy1.cs(23,14): warning CS0219: The variable 'max12' is assigned but its value is never used\n/tmp/tmp18axfcy1.cs(24,14): warning CS0219: The variable 'max13' is assigned but its value is never used\n/tmp/tmp18axfcy1.cs(25,14): warning CS0219: The variable 'max14' is assigned but its value is never used\n/tmp/tmp18axfcy1.cs(26,14): warning CS0219: The variable 'max15' is assigned but its value is never used\n/tmp/tmp18axfcy1.cs(27,14): warning CS0219: The variable 'max16' is assigned but its value is never used\n/tmp/tmp18axfcy1.cs(28,14): warning CS0219: The variable 'max17' is assigned but its value is never used\n/tmp/tmp18axfcy1.cs(29,14): warning CS0219: The variable 'max18' is assigned but its value is never used\n/tmp/tmp18axfcy1.cs(30,14): warning CS021",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cd72db33451a4b93b621289caf658415>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cd72db33451a4b93b621289caf658415>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            max = Math.Max(max, arr[i]);\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <21fb225f22db497dafb0c2a7b4537b8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <21fb225f22db497dafb0c2a7b4537b8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long max = 0;\n        foreach (long num in arr) {\n            max = max * 10 + num;\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = 0; j < arr.Count; j++) {\n                if (arr[i] > arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long result = 0;\n        foreach (long x in arr) {\n            result = result * 10 + x;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        long temp = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = 0; j < arr.Count; j++) {\n                if (arr[i] > arr[j]) {\n                    temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3591e3a50f5946689a9efbfa23136e3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3591e3a50f5946689a9efbfa23136e3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for(int i = 0; i < arr.Count; i++) {\n            if(arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <96a6b30fddb142aaacd59e6e8314d9d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <96a6b30fddb142aaacd59e6e8314d9d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = 0; j < arr.Count; j++) {\n                if (arr[i] > arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            max += arr[i] * (long)Math.Pow(10, i);\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e8ffc261a5af4a678878e6bd66f68c02>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e8ffc261a5af4a678878e6bd66f68c02>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        arr.Sort();\n        arr.Reverse();\n        long result = 0;\n        foreach (long i in arr) {\n            result = result * 10 + i;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = 0; j < arr.Count; j++) {\n                if (arr[i] > arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        string num = \"\";\n        foreach(long i in arr) {\n            num += i.ToString();\n        }\n        return long.Parse(num);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        long max = 0;\n        foreach(long i in arr) {\n            max = max * 10 + i;\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long max = 0;\n        arr.Sort();\n        arr.Reverse();\n        for(int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        long result = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            result += arr[i] * (long)Math.Pow(10, i);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce48304b0f0f464485f7a29b1cb746fd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce48304b0f0f464485f7a29b1cb746fd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long max = 0;\n        arr.Sort();\n        arr.Reverse();\n        foreach (long num in arr) {\n            max = max * 10 + num;\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here.\n        List<long> sorted = arr.OrderByDescending(x => x).ToList();\n        StringBuilder sb = new StringBuilder();\n        foreach (long num in sorted) {\n            sb.Append(num);\n        }\n        return long.Parse(sb.ToString());\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long res = 0;\n        foreach (long i in arr) {\n            res = res * 10 + i;\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long max = 0;\n        foreach (long num in arr) {\n            max = max * 10 + num;\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        //long max = 0;\n        //long max_num = 0;\n        //for (int i = 0; i < arr.Count; i++) {\n        //    long num = arr[i];\n        //    long num_length = (long)Math.Log10(num) + 1;\n        //    if (num_length > max) {\n        //        max = num_length;\n        //        max_num = num;\n        //    }\n        //}\n        //return max_num;\n        return arr.Max();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <825a6f7d08974262855f58b2d7974e0a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <825a6f7d08974262855f58b2d7974e0a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        long num = 0;\n        foreach(long i in arr) {\n            num = num * 10 + i;\n        }\n        return num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        long max = 0;\n        foreach(long num in arr) {\n            max = max * 10 + num;\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long maxNum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            maxNum = maxNum * 10 + arr[i];\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long max = 0;\n        arr.Sort();\n        arr.Reverse();\n        foreach (long i in arr) {\n            max = max * 10 + i;\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        long num = 0;\n        foreach (long i in arr) {\n            num = num * 10 + i;\n        }\n        return num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        long temp = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = 0; j < arr.Count; j++) {\n                if (arr[i] > arr[j]) {\n                    temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long num = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            num += arr[i] * (long)Math.Pow(10, i);\n        }\n        return num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <34709e3dd61a4006b0509e57af8ad95a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <34709e3dd61a4006b0509e57af8ad95a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long result = 0;\n        foreach (long x in arr) {\n            result = result * 10 + x;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        arr.Sort();\n        arr.Reverse();\n        foreach (long i in arr) {\n            max = max * 10 + i;\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = 0; j < arr.Count; j++) {\n                if (arr[i] > arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long result = 0;\n        foreach (long x in arr) {\n            result = result * 10 + x;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3591e3a50f5946689a9efbfa23136e3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3591e3a50f5946689a9efbfa23136e3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        string result = \"\";\n        foreach (long i in arr) {\n            result += i.ToString();\n        }\n        return long.Parse(result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        string res = \"\";\n        foreach (long i in arr) {\n            res += i.ToString();\n        }\n        return long.Parse(res);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long maxNum = 0;\n        foreach (long num in arr) {\n            maxNum = maxNum * 10 + num;\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long maxNum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            maxNum += arr[i] * (long)Math.Pow(10, i);\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f6c5f280d9794a6185b3b4425d88395c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f6c5f280d9794a6185b3b4425d88395c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        List<long> sorted = arr.OrderByDescending(x => x).ToList();\n        long maxNum = 0;\n        foreach (long num in sorted) {\n            maxNum = maxNum * 10 + num;\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long num = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            num += arr[i] * (long)Math.Pow(10, i);\n        }\n        return num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <34709e3dd61a4006b0509e57af8ad95a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <34709e3dd61a4006b0509e57af8ad95a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long maxNum = 0;\n        foreach (long num in arr) {\n            maxNum = maxNum * 10 + num;\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        arr.Sort();\n        arr.Reverse();\n        foreach (long num in arr) {\n            max = max * 10 + num;\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        long temp = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        arr.Sort();\n        arr.Reverse();\n        long result = 0;\n        foreach (var item in arr) {\n            result = result * 10 + item;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long num = 0;\n        foreach (long i in arr) {\n            num = num * 10 + i;\n        }\n        return num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        string result = \"\";\n        foreach(long i in arr) {\n            result += i;\n        }\n        return Convert.ToInt64(result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        List<long> sorted = arr.OrderByDescending(x => x).ToList();\n        string result = \"\";\n        foreach (long num in sorted) {\n            result += num.ToString();\n        }\n        return long.Parse(result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long maxNum = 0;\n        foreach (long num in arr) {\n            maxNum = maxNum * 10 + num;\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for(int i = 0; i < arr.Count; i++) {\n            if(arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <96a6b30fddb142aaacd59e6e8314d9d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <96a6b30fddb142aaacd59e6e8314d9d4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        string result = \"\";\n        foreach (long i in arr) {\n            result += i.ToString();\n        }\n        return long.Parse(result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = 0; j < arr.Count; j++) {\n                if (arr[i] > arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long maxNum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        foreach (long num in arr) {\n            maxNum = maxNum * 10 + num;\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long num = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            num += arr[i] * (long)Math.Pow(10, i);\n        }\n        return num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <34709e3dd61a4006b0509e57af8ad95a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <34709e3dd61a4006b0509e57af8ad95a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long maxNum = 0;\n        arr.Sort();\n        arr.Reverse();\n        foreach (long num in arr) {\n            maxNum = maxNum * 10 + num;\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long max = 0;\n        foreach (long i in arr) {\n            max = max * 10 + i;\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long maxNum = 0;\n        foreach (long num in arr) {\n            maxNum = maxNum * 10 + num;\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long maxNum = 0;\n        foreach (long num in arr) {\n            maxNum = maxNum * 10 + num;\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        long num = 0;\n        foreach (long i in arr) {\n            num = num * 10 + i;\n        }\n        return num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            max += arr[i] * (long)Math.Pow(10, i);\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e8ffc261a5af4a678878e6bd66f68c02>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e8ffc261a5af4a678878e6bd66f68c02>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long result = 0;\n        foreach (long item in arr) {\n            result = result * 10 + item;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        string str = \"\";\n        foreach (long num in arr) {\n            str += num.ToString();\n        }\n        return long.Parse(str);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3591e3a50f5946689a9efbfa23136e3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3591e3a50f5946689a9efbfa23136e3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        //long max = arr.Max();\n        //long min = arr.Min();\n        //long max_index = arr.IndexOf(max);\n        //long min_index = arr.IndexOf(min);\n        //arr.RemoveAt((int)max_index);\n        //arr.RemoveAt((int)min_index);\n        //arr.Insert((int)max_index, min);\n        //arr.Insert((int)min_index, max);\n        //long num = 0;\n        //for (int i = 0; i < arr.Count; i++) {\n        //    num = num * 10 + arr[i];\n        //}\n        //return num;\n        arr.Sort();\n        arr.Reverse();\n        long num = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            num = num * 10 + arr[i];\n        }\n        return num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3591e3a50f5946689a9efbfa23136e3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3591e3a50f5946689a9efbfa23136e3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        arr.Sort();\n        arr.Reverse();\n        long result = 0;\n        foreach (long num in arr) {\n            result = result * 10 + num;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        arr.Sort();\n        arr.Reverse();\n        long result = 0;\n        foreach (long num in arr) {\n            result = result * 10 + num;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long num = 0;\n        foreach (long i in arr) {\n            num = num * 10 + i;\n        }\n        return num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long maxNum = 0;\n        foreach (long num in arr) {\n            maxNum = maxNum * 10 + num;\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        long num = 0;\n        foreach (long i in arr) {\n            num = num * 10 + i;\n        }\n        return num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long result = 0;\n        foreach (long num in arr) {\n            result = result * 10 + num;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long result = 0;\n        foreach (long num in arr) {\n            result = result * 10 + num;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        string result = \"\";\n        foreach(long i in arr) {\n            result += i.ToString();\n        }\n        return long.Parse(result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long num = 0;\n        foreach (long i in arr) {\n            num = num * 10 + i;\n        }\n        return num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            max = Math.Max(max, arr[i]);\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f02b1eaabc1140c091503f9b87c516a4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f02b1eaabc1140c091503f9b87c516a4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long max = 0;\n        foreach (long i in arr) {\n            max = max * 10 + i;\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = 0; j < arr.Count; j++) {\n                if (i != j) {\n                    long num = arr[i] * 10 + arr[j];\n                    if (num > max) {\n                        max = num;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <106171fd4ca945d28d9c02edf6600223>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <106171fd4ca945d28d9c02edf6600223>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long maxNum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            maxNum += arr[i] * (long)Math.Pow(10, i);\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f6c5f280d9794a6185b3b4425d88395c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f6c5f280d9794a6185b3b4425d88395c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        string res = \"\";\n        for (int i = 0; i < arr.Count; i++) {\n            res += arr[i].ToString();\n        }\n        return long.Parse(res);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        long result = 0;\n        foreach (long num in arr) {\n            result = result * 10 + num;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long num = 0;\n        foreach (long i in arr) {\n            num = num * 10 + i;\n        }\n        return num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long maxNum = 0;\n        foreach (long num in arr) {\n            maxNum = maxNum * 10 + num;\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = 0; j < arr.Count; j++) {\n                if (arr[i] > arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        string result = \"\";\n        foreach(long num in arr) {\n            result += num.ToString();\n        }\n        return long.Parse(result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long maxNum = 0;\n        foreach (long num in arr) {\n            maxNum = maxNum * 10 + num;\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        long max = 0;\n        foreach (long i in arr) {\n            max = max * 10 + i;\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            long num = arr[i];\n            long temp = num;\n            for (int j = i + 1; j < arr.Count; j++) {\n                temp = temp * 10 + arr[j];\n                if (temp > num) {\n                    num = temp;\n                }\n            }\n            if (num > max) {\n                max = num;\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <51039a93ad2548df886f132cd7008a5d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <51039a93ad2548df886f132cd7008a5d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long maxNum = 0;\n        foreach (long num in arr) {\n            maxNum = maxNum * 10 + num;\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            long num = arr[i];\n            for (int j = 0; j < arr.Count; j++) {\n                if (i != j) {\n                    num = num * 10 + arr[j];\n                }\n            }\n            if (num > max) {\n                max = num;\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <939440ebab9b4d14bcfe0887f4f0a99f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <939440ebab9b4d14bcfe0887f4f0a99f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        string result = \"\";\n        foreach (long num in arr) {\n            result += num.ToString();\n        }\n        return long.Parse(result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long maxNum = 0;\n        foreach (long i in arr) {\n            maxNum = maxNum * 10 + i;\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        long result = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            result += arr[i] * (long)Math.Pow(10, i);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce48304b0f0f464485f7a29b1cb746fd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ce48304b0f0f464485f7a29b1cb746fd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        string maxNum = \"\";\n        foreach(long num in arr) {\n            maxNum += num;\n        }\n        return long.Parse(maxNum);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long max = 0;\n        foreach (long num in arr) {\n            max = max * 10 + num;\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        string result = \"\";\n        foreach (long num in arr) {\n            result += num.ToString();\n        }\n        return long.Parse(result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long maxNum = 0;\n        foreach(long num in arr) {\n            maxNum = maxNum * 10 + num;\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        arr.Sort();\n        arr.Reverse();\n        foreach(long i in arr) {\n            max = max * 10 + i;\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        string result = \"\";\n        foreach (long num in arr) {\n            result += num.ToString();\n        }\n        return Convert.ToInt64(result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long max = 0;\n        long temp = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3591e3a50f5946689a9efbfa23136e3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3591e3a50f5946689a9efbfa23136e3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        long maxNum = 0;\n        List<long> sortedArr = arr.OrderByDescending(x => x).ToList();\n        foreach (long num in sortedArr) {\n            maxNum = maxNum * 10 + num;\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        List<long> sorted = arr.OrderByDescending(x => x).ToList();\n        long result = 0;\n        for (int i = 0; i < sorted.Count; i++) {\n            result += sorted[i] * (long)Math.Pow(10, i);\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <de26e6d55da449ea9af189c1ea3adcde>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <de26e6d55da449ea9af189c1ea3adcde>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        long temp = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        arr.Sort();\n        arr.Reverse();\n        long max = 0;\n        foreach (long i in arr) {\n            max = max * 10 + i;\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long maxNum = 0;\n        foreach(long num in arr) {\n            maxNum = maxNum * 10 + num;\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long maxNum = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            maxNum += arr[i] * (long)Math.Pow(10, i);\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f6c5f280d9794a6185b3b4425d88395c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f6c5f280d9794a6185b3b4425d88395c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        arr.Sort();\n        arr.Reverse();\n        long max = 0;\n        foreach (long num in arr) {\n            max = max * 10 + num;\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long maxNum = 0;\n        foreach (long num in arr) {\n            maxNum = maxNum * 10 + num;\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        string result = \"\";\n        foreach (var item in arr) {\n            result += item.ToString();\n        }\n        return Convert.ToInt64(result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long result = 0;\n        foreach (var item in arr) {\n            result = result * 10 + item;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long max = 0;\n        foreach(long num in arr) {\n            max = max * 10 + num;\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        arr.Sort();\n        arr.Reverse();\n        long max = 0;\n        foreach (long i in arr) {\n            max = max * 10 + i;\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        long num = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            num = num * 10 + arr[i];\n        }\n        return num;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        string result = \"\";\n        foreach(long num in arr) {\n            result += num.ToString();\n        }\n        return long.Parse(result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        long temp = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = 0; j < arr.Count; j++) {\n                if (arr[i] > arr[j]) {\n                    temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3591e3a50f5946689a9efbfa23136e3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3591e3a50f5946689a9efbfa23136e3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122463,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cd72db33451a4b93b621289caf658415>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cd72db33451a4b93b621289caf658415>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        long temp = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122464,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here.\n        arr.Sort();\n        arr.Reverse();\n        long result = 0;\n        foreach (long num in arr) {\n            result = result * 10 + num;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        long temp = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = 0; j < arr.Count; j++) {\n                if (arr[i] > arr[j]) {\n                    temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        string s = \"\";\n        foreach (long i in arr) {\n            s += i.ToString();\n        }\n        return long.Parse(s);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3591e3a50f5946689a9efbfa23136e3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3591e3a50f5946689a9efbfa23136e3b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = i + 1; j < arr.Count; j++) {\n                if (arr[i] < arr[j]) {\n                    long temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        long maxNum = 0;\n        foreach (long num in arr) {\n            maxNum = maxNum * 10 + num;\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122465,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long max = 0;\n        long temp = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = 0; j < arr.Count; j++) {\n                if (arr[i] > arr[j]) {\n                    temp = arr[i];\n                    arr[i] = arr[j];\n                    arr[j] = temp;\n                }\n            }\n        }\n        for (int i = 0; i < arr.Count; i++) {\n            max = max * 10 + arr[i];\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122466,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        arr.Sort();\n        arr.Reverse();\n        long result = 0;\n        foreach (long num in arr) {\n            result = result * 10 + num;\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        arr.Sort();\n        arr.Reverse();\n        long maxNum = 0;\n        foreach (long num in arr) {\n            maxNum = maxNum * 10 + num;\n        }\n        return maxNum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        if (arr.Count == 0) {\n            return 0;\n        }\n        arr.Sort();\n        arr.Reverse();\n        long res = 0;\n        foreach (long num in arr) {\n            res = res * 10 + num;\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122466,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long max = 0;\n        long temp = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            for (int j = 0; j < arr.Count; j++) {\n                if (i != j) {\n                    temp = arr[i] * 10 + arr[j];\n                    if (temp > max) {\n                        max = temp;\n                    }\n                }\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1666122466,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <65ff9189c471488bb2ce4bd35f8d0cc4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <65ff9189c471488bb2ce4bd35f8d0cc4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest number that can be formed with the given list of digits.\n    public static long FindMaxNum(List<long> arr) {\n        // Write your code here\n        long max = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n            }\n        }\n        return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (321L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)4L, (long)5L, (long)6L, (long)1L}))) == (6541L));\n    Debug.Assert(FindMaxNum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)9L}))) == (9321L));\n    }\n\n}\n",
      "timestamp": 1665509934,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5f5e8d8ecd27483ab42bed8c14a94ea5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_96_divisor",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_96_divisor.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count += 1;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= Math.Sqrt(n); i++) {\n            if (n % i == 0) {\n                if (n / i == i) {\n                    count += 1;\n                } else {\n                    count += 2;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666122622,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count += 1;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        long sqrt = (long)Math.Sqrt(n);\n        for (long i = 1; i <= sqrt; i++) {\n            if (n % i == 0) {\n                count += 2;\n            }\n        }\n        if (sqrt * sqrt == n) {\n            count--;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666122622,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long cnt = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                cnt++;\n            }\n        }\n        return cnt;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666122622,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= Math.Sqrt(n); i++) {\n            if (n % i == 0) {\n                if (n / i == i) {\n                    count += 1;\n                } else {\n                    count += 2;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666122622,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long divisor = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                divisor++;\n            }\n        }\n        return divisor;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666122622,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count += 1;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count += 1;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long result = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                result++;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666122622,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long divisor = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                divisor++;\n            }\n        }\n        return divisor;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666122622,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long result = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                result++;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666122622,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long cnt = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                cnt++;\n            }\n        }\n        return cnt;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666122622,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count += 1;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510043,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long result = 1;\n        for (int i = 2; i <= n; i++) {\n            if (n % i == 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666122622,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long result = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                result++;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666122622,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        long sqrt = (long)Math.Sqrt(n);\n        for (long i = 1; i <= sqrt; i++) {\n            if (n % i == 0) {\n                count += 2;\n            }\n        }\n        if (sqrt * sqrt == n) {\n            count--;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1666122622,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the number of divisors of a given integer.\n    public static long Divisor(long n) {\n        long count = 0;\n        for (long i = 1; i <= n; i++) {\n            if (n % i == 0) {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Divisor((15L)) == (4L));\n    Debug.Assert(Divisor((12L)) == (6L));\n    Debug.Assert(Divisor((9L)) == (3L));\n    }\n\n}\n",
      "timestamp": 1665510044,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_395_first_non_repeating_character",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_395_first_non_repeating_character.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and its count\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        // Iterate through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is already in the dictionary, increment the count\n            if (dict.ContainsKey(str1[i])) {\n                dict[str1[i]]++;\n            }\n            // If the character is not in the dictionary, add it with a count of 1\n            else {\n                dict.Add(str1[i], 1);\n            }\n        }\n        // Iterate through the string again\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character count is 1, return the character\n            if (dict[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <94c21abc8bc740f89a2df7d514121609>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <94c21abc8bc740f89a2df7d514121609>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and its count\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and add the character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <2b11e72494214ced8cd37d7b359074c9>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <2b11e72494214ced8cd37d7b359074c9>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c] += 1;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <3ac241505b2143f88ae1d2857ed0b532>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <3ac241505b2143f88ae1d2857ed0b532>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict.ContainsKey(str1[i])) {\n                dict[str1[i]]++;\n            } else {\n                dict.Add(str1[i], 1);\n            }\n        }\n        foreach (var item in dict) {\n            if (item.Value == 1) {\n                return item.Key.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c274c340d7d84e2ab7edb7f281d09fa0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the characters and their counts\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and add the characters to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a9512f0260524f57a8f7d052590881d2>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0a65047cfdec43049f6fdc2262879faa>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <2a627ae7f7d1412da5619ae7e03b20dc>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <2a627ae7f7d1412da5619ae7e03b20dc>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (var c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <308787c1b3104351ad4ea94e234d1d65>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charDict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charDict.ContainsKey(c)) {\n                charDict[c] += 1;\n            } else {\n                charDict[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (charDict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <08cb77b7e7a742b89cd0d46f4979622a>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and its count\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and add the character and its count to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <125520c6b2b541439a07086c800157e8>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <125520c6b2b541439a07086c800157e8>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <352b56bcec754554be67de526349e231>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and its count\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        // Loop through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is not in the dictionary, add it\n            if (!dict.ContainsKey(str1[i])) {\n                dict.Add(str1[i], 1);\n            }\n            // Otherwise, increment the count\n            else {\n                dict[str1[i]]++;\n            }\n        }\n        // Loop through the string again\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character count is 1, return it\n            if (dict[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <53123221982f432ca0ff4b9a5a81e739>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <53123221982f432ca0ff4b9a5a81e739>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        char[] str = str1.ToCharArray();\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        for (int i = 0; i < str.Length; i++) {\n            if (charCount.ContainsKey(str[i])) {\n                charCount[str[i]]++;\n            } else {\n                charCount.Add(str[i], 1);\n            }\n        }\n        for (int i = 0; i < str.Length; i++) {\n            if (charCount[str[i]] == 1) {\n                return str[i].ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6cbefafb92a040f99814d6054da93c5e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (charCount.ContainsKey(str1[i])) {\n                charCount[str1[i]]++;\n            } else {\n                charCount.Add(str1[i], 1);\n            }\n        }\n        for (int i = 0; i < str1.Length; i++) {\n            if (charCount[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c394d4b3eb2c4d3b99bbb53aeaf46456>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        foreach (var c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eee2bd29e9eb4636afe45dc8b31e6213>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <83ec688a767b4fe8a6320e8227cad5dd>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and increment the count of each character\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character with a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <1a3cf23f04cd44d9a6242b705f2e653d>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <1a3cf23f04cd44d9a6242b705f2e653d>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c] += 1;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9c4fbb91329f4d18971d3af34069d0ee>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is not in the dictionary, add it\n            if (!charCount.ContainsKey(str1[i])) {\n                charCount.Add(str1[i], 1);\n            }\n            // If the character is in the dictionary, increment the count\n            else {\n                charCount[str1[i]]++;\n            }\n        }\n        // Loop through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character count is 1, return the character\n            if (charCount[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <5fd38bb3ce164151b873b2f76a868622>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <5fd38bb3ce164151b873b2f76a868622>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it with a count of 1\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // Otherwise, increment the count of the character\n            else {\n                charCount[c]++;\n            }\n        }\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character count is 1, return the character\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <b0da6c0d208e4cb2beb3c8218bcb68ec>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <b0da6c0d208e4cb2beb3c8218bcb68ec>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string str2 = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str2.IndexOf(str1[i]) == -1) {\n                str2 += str1[i];\n            } else {\n                str2 = str2.Replace(str1[i].ToString(), \"\");\n            }\n        }\n        return str2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <145c15d914954959be414b2ea642900e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <145c15d914954959be414b2ea642900e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"No non-repeating characters found\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7cfb31c3a731422ca215e59d174e5ffe>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict.ContainsKey(str1[i])) {\n                dict[str1[i]]++;\n            } else {\n                dict.Add(str1[i], 1);\n            }\n        }\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a9a573454c2142bd9e8825d472cd049f>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var str = str1.ToLower();\n        var dict = new Dictionary<char, int>();\n        foreach (var c in str) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (var c in str) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <317536bd7bef46b8a6cda37080ce291b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                result = c.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <07ec8e9e3c2449e2bf6e316c45b1bc01>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and its count.\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add the character to the dictionary.\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string and return the first character that has a count of 1.\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <13e1199f1788498b8b774dd76c3070e9>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <13e1199f1788498b8b774dd76c3070e9>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b44fe0fcd7084482a0dea5479e9eb5d5>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict.ContainsKey(str1[i])) {\n                dict[str1[i]]++;\n            } else {\n                dict.Add(str1[i], 1);\n            }\n        }\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a9a573454c2142bd9e8825d472cd049f>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> d = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (d.ContainsKey(c)) {\n                d[c]++;\n            } else {\n                d.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (d[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee0adccddb5b4632a19435adbf780e17>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n\n        // Iterate through each character in the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            } else {\n                // If the character is in the dictionary, increment the count\n                charCount[c]++;\n            }\n        }\n\n        // Iterate through each character in the string\n        foreach (char c in str1) {\n            // If the character count is 1, return the character\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n\n        // If no characters have a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <a258534e801b47db8d4ccea18f850987>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <a258534e801b47db8d4ccea18f850987>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        char[] arr = str1.ToCharArray();\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < arr.Length; i++) {\n            if (dict.ContainsKey(arr[i])) {\n                dict[arr[i]]++;\n            } else {\n                dict.Add(arr[i], 1);\n            }\n        }\n        foreach (KeyValuePair<char, int> kvp in dict) {\n            if (kvp.Value == 1) {\n                return kvp.Key.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <901d6f1859684f3bb0315d64c8827fa8>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dic = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dic.ContainsKey(c)) {\n                dic[c] += 1;\n            } else {\n                dic.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dic[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e96e6c7e4107426ab425a51a5023a1de>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it with a count of 1\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // If the character is already in the dictionary, increment the count\n            else {\n                charCount[c]++;\n            }\n        }\n        // Iterate through the string again\n        foreach (char c in str1) {\n            // If the character is in the dictionary and the count is 1, return it\n            if (charCount.ContainsKey(c) && charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <be4e3c64e383456aa77e8daa5dace25e>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <be4e3c64e383456aa77e8daa5dace25e>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        foreach (var c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eee2bd29e9eb4636afe45dc8b31e6213>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0a65047cfdec43049f6fdc2262879faa>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and increment the count of each character\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        // Loop through the string again and return the first character with a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ac4497621a94eebae7a0796815daa19>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict.ContainsKey(str1[i])) {\n                dict[str1[i]]++;\n            }\n            else {\n                dict.Add(str1[i], 1);\n            }\n        }\n        foreach (KeyValuePair<char, int> kvp in dict) {\n            if (kvp.Value == 1) {\n                return kvp.Key.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7d6e84a62a7543d7a45b39384fd2df71>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and count the number of times each character appears\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string again and find the first character with a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <84694b4e1e19418a843a68ab0ec366fd>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <84694b4e1e19418a843a68ab0ec366fd>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // This is a naive solution that uses a dictionary to store the number of times a character appears in the string.\n        // It then iterates through the string and returns the first character that appears only once.\n        // This solution has a time complexity of O(n) and a space complexity of O(n).\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <be58e578c95a4accbdee9aefd665e7c5>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <be58e578c95a4accbdee9aefd665e7c5>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (var c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <393c8c80d4944a5494ba60ff4f43d314>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <2a627ae7f7d1412da5619ae7e03b20dc>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <2a627ae7f7d1412da5619ae7e03b20dc>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character.\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through each character in the string.\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it and set the count to 1.\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // Otherwise, increment the count.\n            else {\n                charCount[c]++;\n            }\n        }\n        // Loop through each character in the string.\n        foreach (char c in str1) {\n            // If the character count is 1, return the character.\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no characters have a count of 1, return null.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <1b771dbf2c4e4028b29d6e7029545549>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <1b771dbf2c4e4028b29d6e7029545549>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and the number of times it appears in the string.\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through each character in the string.\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it.\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // If the character is in the dictionary, increment its count.\n            else {\n                charCount[c]++;\n            }\n        }\n        // Loop through each character in the string again.\n        foreach (char c in str1) {\n            // If the character appears only once in the string, return it.\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character appears only once, return null.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <2153a59a88044832b9502b29b783a3e1>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <2153a59a88044832b9502b29b783a3e1>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        char[] charArray = str1.ToCharArray();\n        Dictionary<char, int> charDict = new Dictionary<char, int>();\n        foreach (char c in charArray) {\n            if (charDict.ContainsKey(c)) {\n                charDict[c]++;\n            } else {\n                charDict.Add(c, 1);\n            }\n        }\n        foreach (char c in charArray) {\n            if (charDict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c4c369de69924cf18fe8bcc205555777>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict.ContainsKey(str1[i])) {\n                dict[str1[i]]++;\n            } else {\n                dict.Add(str1[i], 1);\n            }\n        }\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a9a573454c2142bd9e8825d472cd049f>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character is already in the dictionary, increment the count\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            }\n            // Otherwise, add the character to the dictionary with a count of 1\n            else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character count is 1, return the character\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <484d82be2fbe47eba31c213dd4b65ca1>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <484d82be2fbe47eba31c213dd4b65ca1>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b44fe0fcd7084482a0dea5479e9eb5d5>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict.ContainsKey(str1[i])) {\n                dict[str1[i]]++;\n            } else {\n                dict.Add(str1[i], 1);\n            }\n        }\n        foreach (KeyValuePair<char, int> kvp in dict) {\n            if (kvp.Value == 1) {\n                return kvp.Key.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4629b22cfd7540ef8891dc7d8d40c32c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0a65047cfdec43049f6fdc2262879faa>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and the number of times it appears.\n        Dictionary<char, int> charDict = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (charDict.ContainsKey(str1[i])) {\n                charDict[str1[i]]++;\n            } else {\n                charDict.Add(str1[i], 1);\n            }\n        }\n        // Loop through the dictionary and find the first character that has a value of 1.\n        foreach (KeyValuePair<char, int> kvp in charDict) {\n            if (kvp.Value == 1) {\n                return kvp.Key.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <17f7a47987d0491a83ddae0af51fcc22>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0a65047cfdec43049f6fdc2262879faa>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (var c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <308787c1b3104351ad4ea94e234d1d65>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (var c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <308787c1b3104351ad4ea94e234d1d65>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3010f51041bb4d528652fafde73c6457>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <ff425ab646574c7284c75f60957ea558>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <ff425ab646574c7284c75f60957ea558>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict.ContainsKey(str1[i])) {\n                dict[str1[i]] += 1;\n            } else {\n                dict.Add(str1[i], 1);\n            }\n        }\n        foreach (KeyValuePair<char, int> kvp in dict) {\n            if (kvp.Value == 1) {\n                result = kvp.Key.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f4c6e2bc08904139af5860e92d48817c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cbecd4cbd88248c2ba1b41b3400de09e>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (var ch in str1) {\n            if (dict.ContainsKey(ch)) {\n                dict[ch]++;\n            } else {\n                dict.Add(ch, 1);\n            }\n        }\n        foreach (var ch in str1) {\n            if (dict[ch] == 1) {\n                return ch.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8c1e4e16ea4d49c5bccb646d36702780>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (var c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <308787c1b3104351ad4ea94e234d1d65>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and its count\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        // Iterate through the string and add the character to the dictionary\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c] += 1;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        // Iterate through the string and find the first character that has a count of 1\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <3848adfb841e487487ddf54268dc3c78>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <3848adfb841e487487ddf54268dc3c78>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // If the character is in the dictionary, increment its count\n            else {\n                charCount[c]++;\n            }\n        }\n        // Iterate through the string again\n        foreach (char c in str1) {\n            // If the character count is 1, return it\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <4af0149387f14336836a863576dfaf54>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <4af0149387f14336836a863576dfaf54>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                result = c.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3399d54357184b109ed9fbedd7c8dc59>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dic = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (dic.ContainsKey(str1[i])) {\n                dic[str1[i]]++;\n            } else {\n                dic.Add(str1[i], 1);\n            }\n        }\n        foreach (KeyValuePair<char, int> kvp in dic) {\n            if (kvp.Value == 1) {\n                return kvp.Key.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aca71d4e74164a0489ffe6c0a3f7d36f>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <83ec688a767b4fe8a6320e8227cad5dd>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (!dict.ContainsKey(c)) {\n                dict[c] = 0;\n            }\n            dict[c]++;\n        }\n        foreach (var c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc62cc71948f48f98c5bea6c4cd27c70>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b44fe0fcd7084482a0dea5479e9eb5d5>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                result = c.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3399d54357184b109ed9fbedd7c8dc59>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character.\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        // Iterate through the string and add the character to the dictionary.\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        // Iterate through the string and return the first character that has a count of 1.\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <74dff451c99f4de99119f3f92fff6f41>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <74dff451c99f4de99119f3f92fff6f41>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3010f51041bb4d528652fafde73c6457>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var char_count = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (char_count.ContainsKey(c)) {\n                char_count[c]++;\n            } else {\n                char_count[c] = 1;\n            }\n        }\n        foreach (var c in str1) {\n            if (char_count[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7c0bed38e1234ed6a3d53c047a27704b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b4d5aeeb090148619cc5971462bf4520>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it with a count of 1\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // If the character is in the dictionary, increment the count\n            else {\n                charCount[c]++;\n            }\n        }\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character count is 1, return the character\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no characters have a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8e8542b8b14f4ee7910a0d4a784e3589>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8e8542b8b14f4ee7910a0d4a784e3589>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c9799fb3ccaa4b3fae4a1e21c52e9f03>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict.ContainsKey(str1[i])) {\n                dict[str1[i]]++;\n            } else {\n                dict.Add(str1[i], 1);\n            }\n        }\n        foreach (KeyValuePair<char, int> kvp in dict) {\n            if (kvp.Value == 1) {\n                return kvp.Key.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4629b22cfd7540ef8891dc7d8d40c32c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to hold the character and the number of times it appears in the string.\n        Dictionary<char, int> charDict = new Dictionary<char, int>();\n        // Loop through the string and add the character and the number of times it appears to the dictionary.\n        foreach (char c in str1) {\n            if (charDict.ContainsKey(c)) {\n                charDict[c] += 1;\n            } else {\n                charDict.Add(c, 1);\n            }\n        }\n        // Loop through the string and return the first character that appears only once.\n        foreach (char c in str1) {\n            if (charDict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character appears only once, return null.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <4ac70e95a0ef40b6b7095ef86855e5c5>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <4ac70e95a0ef40b6b7095ef86855e5c5>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c] += 1;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (var c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d77755d29f0541e4b2b97e76d1b8226f>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and count the number of times each character appears\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string again and find the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1ca50087469346e3a144f80a5907c8b3>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc6131c273a448d3ba052cbb777b8876>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict.ContainsKey(str1[i])) {\n                dict[str1[i]] += 1;\n            } else {\n                dict.Add(str1[i], 1);\n            }\n        }\n        foreach (var item in dict) {\n            if (item.Value == 1) {\n                result = item.Key.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e34a4a149cd34d5591e8f7951d5bbfb0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                result = c.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3399d54357184b109ed9fbedd7c8dc59>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (var c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ad4513d0b35e41c5bd4a6f5662d3fedb>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict.ContainsKey(str1[i])) {\n                dict[str1[i]]++;\n            } else {\n                dict.Add(str1[i], 1);\n            }\n        }\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a9a573454c2142bd9e8825d472cd049f>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                result = c.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <07ec8e9e3c2449e2bf6e316c45b1bc01>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and its count.\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        // Iterate through the string and add the character to the dictionary.\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        // Iterate through the string and return the first character with count of 1.\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"No non-repeating character found.\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <77f48f37804a44fb8b08273b23690fd2>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <be58a349cf874b3885ca82985da82240>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        foreach (var c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eee2bd29e9eb4636afe45dc8b31e6213>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (var ch in str1) {\n            if (dict.ContainsKey(ch)) {\n                dict[ch]++;\n            } else {\n                dict[ch] = 1;\n            }\n        }\n        foreach (var ch in str1) {\n            if (dict[ch] == 1) {\n                return ch.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1bb738dbc49a409398b16cf08987fa31>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict.ContainsKey(str1[i])) {\n                dict[str1[i]]++;\n            } else {\n                dict.Add(str1[i], 1);\n            }\n        }\n        foreach (KeyValuePair<char, int> kvp in dict) {\n            if (kvp.Value == 1) {\n                result = kvp.Key.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <da0d90eee3944e99a58faf002f052010>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c] += 1;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0a76e596abcb45859a35eac789939b9a>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> d = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (d.ContainsKey(str1[i])) {\n                d[str1[i]]++;\n            } else {\n                d.Add(str1[i], 1);\n            }\n        }\n        foreach (var item in d) {\n            if (item.Value == 1) {\n                return item.Key.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <790be7cc49fa435ba7228011d3ac0cfc>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                result = c.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <07ec8e9e3c2449e2bf6e316c45b1bc01>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                result = c.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <07ec8e9e3c2449e2bf6e316c45b1bc01>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // If the character is in the dictionary, increment the count\n            else {\n                charCount[c]++;\n            }\n        }\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character count is 1, return the character\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7f0572c39c7f49e7b3548c36ffa30801>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7f0572c39c7f49e7b3548c36ffa30801>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach(char c in str1) {\n            if(dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach(char c in str1) {\n            if(dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3da779e85d5b4ed5b6432046e0e38cba>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b44fe0fcd7084482a0dea5479e9eb5d5>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                result = c.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <07ec8e9e3c2449e2bf6e316c45b1bc01>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b4d5aeeb090148619cc5971462bf4520>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add the character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character with a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If there are no characters with a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <fdf77c4ecd944b72b17097f9bd66d828>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <fdf77c4ecd944b72b17097f9bd66d828>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0a65047cfdec43049f6fdc2262879faa>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <83ec688a767b4fe8a6320e8227cad5dd>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to keep track of the number of times a character occurs\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no characters have a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <674655b98d7b48b8a5e6234f8046969a>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <674655b98d7b48b8a5e6234f8046969a>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string\n        for(int i = 0; i < str1.Length; i++) {\n            // If the character is not in the dictionary, add it\n            if(!charCount.ContainsKey(str1[i])) {\n                charCount.Add(str1[i], 1);\n            }\n            // If the character is in the dictionary, increment the count\n            else {\n                charCount[str1[i]]++;\n            }\n        }\n        // Iterate through the string again\n        for(int i = 0; i < str1.Length; i++) {\n            // If the character count is 1, return the character\n            if(charCount[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // If no characters are non-repeating, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <2621c0f3945e41d8bfd2feae76fe3ee2>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <2621c0f3945e41d8bfd2feae76fe3ee2>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict.ContainsKey(str1[i])) {\n                dict[str1[i]]++;\n            } else {\n                dict.Add(str1[i], 1);\n            }\n        }\n        foreach (var item in dict) {\n            if (item.Value == 1) {\n                return item.Key.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c274c340d7d84e2ab7edb7f281d09fa0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (charCount.ContainsKey(str1[i])) {\n                charCount[str1[i]]++;\n            } else {\n                charCount.Add(str1[i], 1);\n            }\n        }\n        for (int i = 0; i < str1.Length; i++) {\n            if (charCount[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c394d4b3eb2c4d3b99bbb53aeaf46456>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0a65047cfdec43049f6fdc2262879faa>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict.ContainsKey(str1[i])) {\n                dict[str1[i]] += 1;\n            } else {\n                dict.Add(str1[i], 1);\n            }\n        }\n        foreach (KeyValuePair<char, int> kvp in dict) {\n            if (kvp.Value == 1) {\n                return kvp.Key.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0a1586ae11f14bee9e99d9d05cf783c9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        foreach (var c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eee2bd29e9eb4636afe45dc8b31e6213>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <83ec688a767b4fe8a6320e8227cad5dd>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <be58a349cf874b3885ca82985da82240>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dic = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dic.ContainsKey(c)) {\n                dic[c]++;\n            } else {\n                dic.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dic[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c7091f3713604a6695e77d6464c4474f>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // create a dictionary to store the character and its count\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // iterate through the string and add the character and its count to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // iterate through the string again and return the first character with a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // if no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <6103e6f8826745b1bfcfd66041367102>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <6103e6f8826745b1bfcfd66041367102>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and its count\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add the character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character with a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <bf88c73e11e343dbb3d80a0bc007455c>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <bf88c73e11e343dbb3d80a0bc007455c>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8b9d54541d5e48d69325e3a5f2c84e86>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8b9d54541d5e48d69325e3a5f2c84e86>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and its count.\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        // Iterate through the string and store the character and its count in the dictionary.\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        // Iterate through the string and return the first character that has a count of 1.\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8909c6db57974e89b3e3fd43d73bf75e>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <8909c6db57974e89b3e3fd43d73bf75e>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                result = c.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <07ec8e9e3c2449e2bf6e316c45b1bc01>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (var ch in str1) {\n            if (charCount.ContainsKey(ch)) {\n                charCount[ch] = charCount[ch] + 1;\n            } else {\n                charCount.Add(ch, 1);\n            }\n        }\n        foreach (var ch in str1) {\n            if (charCount[ch] == 1) {\n                return ch.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ffec0314add44b12a89f8770ee3f89ee>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character in the string\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it with a count of 1\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // If the character is in the dictionary, increment the count\n            else {\n                charCount[c]++;\n            }\n        }\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character count is 1, return the character\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <334eaeb32fcd4e39a192c51fc0aefe85>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <334eaeb32fcd4e39a192c51fc0aefe85>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <2a627ae7f7d1412da5619ae7e03b20dc>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <2a627ae7f7d1412da5619ae7e03b20dc>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <352b56bcec754554be67de526349e231>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (var c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ad4513d0b35e41c5bd4a6f5662d3fedb>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        foreach (var c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eee2bd29e9eb4636afe45dc8b31e6213>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character in the string.\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through each character in the string.\n        foreach (char c in str1) {\n            // If the character is already in the dictionary, increment the count.\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            }\n            // If the character is not in the dictionary, add it and set the count to 1.\n            else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through each character in the string.\n        foreach (char c in str1) {\n            // If the character count is 1, return the character.\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no characters have a count of 1, return null.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <bf7eef08fb08455c9dc949020c356f9f>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <bf7eef08fb08455c9dc949020c356f9f>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to hold the character and the number of times it appears in the string.\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string.\n        foreach (char c in str1) {\n            // If the character is in the dictionary, increment the count.\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            }\n            // Otherwise, add the character to the dictionary and set the count to 1.\n            else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string again.\n        foreach (char c in str1) {\n            // If the character is in the dictionary and the count is 1, return the character.\n            if (charCount.ContainsKey(c) && charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // Otherwise, return an empty string.\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee39b60527644ee0acf90a7ce4d0bf85>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var result = \"\";\n        var charCount = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (var c in str1) {\n            if (charCount[c] == 1) {\n                result = c.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f7a938b986a54c7aa2ed7b562dad18b7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <db34e7aaad2e442ba8754a150c9d1f7f>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c] += 1;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                result += c;\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2f51bb533ec74b6397630dee4f1033aa>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to hold the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it with a count of 1\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            }\n            // If the character is in the dictionary, increment the count\n            else {\n                charCount[c]++;\n            }\n        }\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character count is 1, return the character\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <ea9faca7b22743099461ccdefcc93d65>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <ea9faca7b22743099461ccdefcc93d65>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c] += 1;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <15f26ea5f55e44a9a58c233e46cac748>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            }\n            else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f9cbeac68be0489199d0effee9ec93ec>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict.ContainsKey(str1[i])) {\n                dict[str1[i]] += 1;\n            } else {\n                dict.Add(str1[i], 1);\n            }\n        }\n        foreach (KeyValuePair<char, int> kvp in dict) {\n            if (kvp.Value == 1) {\n                result = kvp.Key.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f4c6e2bc08904139af5860e92d48817c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (charCount.ContainsKey(str1[i])) {\n                charCount[str1[i]]++;\n            } else {\n                charCount.Add(str1[i], 1);\n            }\n        }\n        for (int i = 0; i < str1.Length; i++) {\n            if (charCount[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c394d4b3eb2c4d3b99bbb53aeaf46456>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and add the character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <a8a7bbe57a9c4749a9d0988fa3fbe813>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <a8a7bbe57a9c4749a9d0988fa3fbe813>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <83ec688a767b4fe8a6320e8227cad5dd>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict[c] = 1;\n            }\n        }\n        foreach (var c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ad4513d0b35e41c5bd4a6f5662d3fedb>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character.\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary.\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1.\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <c61e42935b2c49ca92e6f6d96007898f>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <c61e42935b2c49ca92e6f6d96007898f>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var result = \"\";\n        var charCount = new Dictionary<char, int>();\n        foreach(var c in str1) {\n            if(charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach(var c in str1) {\n            if(charCount[c] == 1) {\n                result = c.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <85af755eba484f5d85ea37b50a2da622>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount[c] = 1;\n            }\n        }\n        foreach (var c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eee2bd29e9eb4636afe45dc8b31e6213>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var dict = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (var c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <393c8c80d4944a5494ba60ff4f43d314>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Loop through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Loop through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <2a627ae7f7d1412da5619ae7e03b20dc>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <2a627ae7f7d1412da5619ae7e03b20dc>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> d = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (d.ContainsKey(c)) {\n                d[c]++;\n            } else {\n                d.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (d[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ee0adccddb5b4632a19435adbf780e17>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it\n            if (!dict.ContainsKey(c)) {\n                dict.Add(c, 1);\n            }\n            // If the character is in the dictionary, increment the count\n            else {\n                dict[c]++;\n            }\n        }\n        // Loop through each character in the string\n        foreach (char c in str1) {\n            // If the character count is 1, return it\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // Return null if no non-repeating characters are found\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <cd346c8915f14a0cb725e20523137b94>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <cd346c8915f14a0cb725e20523137b94>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <db34e7aaad2e442ba8754a150c9d1f7f>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to keep track of the number of times a character appears\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that only appears once\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no characters appear only once, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <80f96357fe324649b17968941334e62e>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <80f96357fe324649b17968941334e62e>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                result = c.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3399d54357184b109ed9fbedd7c8dc59>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (var c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <308787c1b3104351ad4ea94e234d1d65>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and its count\n        Dictionary<char, int> charDict = new Dictionary<char, int>();\n        // Loop through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is not in the dictionary, add it\n            if (!charDict.ContainsKey(str1[i])) {\n                charDict.Add(str1[i], 1);\n            } else {\n                // If the character is in the dictionary, increment the count\n                charDict[str1[i]]++;\n            }\n        }\n        // Loop through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character count is 1, return it\n            if (charDict[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <ae524d06c32e470a80498291fc62e465>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <ae524d06c32e470a80498291fc62e465>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // loop through each character in the string\n        foreach (char c in str1) {\n            // if the character is not in the dictionary, add it\n            if (!charCount.ContainsKey(c)) {\n                charCount.Add(c, 1);\n            } else {\n                // if the character is in the dictionary, increment the count\n                charCount[c]++;\n            }\n        }\n        // loop through each character in the string\n        foreach (char c in str1) {\n            // if the character count is 1, return it\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // if no non-repeating characters are found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <f4a4ab629bff4cfda81df2beb6254467>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <f4a4ab629bff4cfda81df2beb6254467>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and the number of times it appears in the string\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        // Loop through the string\n        foreach (char c in str1) {\n            // If the character is not in the dictionary, add it\n            if (!dict.ContainsKey(c)) {\n                dict.Add(c, 1);\n            }\n            // If the character is in the dictionary, increment the value\n            else {\n                dict[c]++;\n            }\n        }\n        // Loop through the string\n        foreach (char c in str1) {\n            // If the character appears only once, return it\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no characters appear only once, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <14ca7a5cdc6a482e8091b75449a05a83>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <14ca7a5cdc6a482e8091b75449a05a83>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <83ec688a767b4fe8a6320e8227cad5dd>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                result = c.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123329,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3399d54357184b109ed9fbedd7c8dc59>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // create a dictionary to store the number of times a character appears in the string\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // loop through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // if the character is already in the dictionary, increment the count\n            if (charCount.ContainsKey(str1[i])) {\n                charCount[str1[i]]++;\n            }\n            // if the character is not in the dictionary, add it and set the count to 1\n            else {\n                charCount.Add(str1[i], 1);\n            }\n        }\n        // loop through the string\n        for (int i = 0; i < str1.Length; i++) {\n            // if the character count is 1, return the character\n            if (charCount[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // if no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <c19fd8dfe5d745959ad05ed9e31a73f8>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <c19fd8dfe5d745959ad05ed9e31a73f8>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and the number of times it appears in the string\n        Dictionary<char, int> charDict = new Dictionary<char, int>();\n        // Loop through each character in the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the character is not in the dictionary, add it and set the value to 1\n            if (!charDict.ContainsKey(str1[i])) {\n                charDict.Add(str1[i], 1);\n            }\n            // If the character is in the dictionary, increment the value by 1\n            else {\n                charDict[str1[i]]++;\n            }\n        }\n        // Loop through each character in the string\n        for (int i = 0; i < str1.Length; i++) {\n            // If the value of the character is 1, return the character\n            if (charDict[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // If no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <02d4292cd3fe4edd9db59973544fe503>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <02d4292cd3fe4edd9db59973544fe503>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character in the string\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and count the number of times each character appears\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6bdab7b01ccd4218a0d35ef6a0b496ca>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the character and its count\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        // Loop through the string and add the character to the dictionary\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict.ContainsKey(str1[i])) {\n                dict[str1[i]] += 1;\n            } else {\n                dict.Add(str1[i], 1);\n            }\n        }\n        // Loop through the string and return the first character that has a count of 1\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict[str1[i]] == 1) {\n                return str1[i].ToString();\n            }\n        }\n        // If there are no characters with a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <26cb99ed828f46b0a9830c6268210526>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <26cb99ed828f46b0a9830c6268210526>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"No non-repeating characters\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d3526ddb9bff48d6b03189b71ebea4b9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (charCount.ContainsKey(str1[i])) {\n                charCount[str1[i]]++;\n            } else {\n                charCount.Add(str1[i], 1);\n            }\n        }\n        foreach (var item in charCount) {\n            if (item.Value == 1) {\n                result = item.Key.ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a558e34ae3f04f3b98464104112bfc30>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        // Loop through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c] += 1;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        // Loop through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7f17aadce4f649d49eb289626f1eedf8>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7f17aadce4f649d49eb289626f1eedf8>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (var c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (var c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <308787c1b3104351ad4ea94e234d1d65>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        char[] str = str1.ToCharArray();\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < str.Length; i++) {\n            if (dict.ContainsKey(str[i])) {\n                dict[str[i]]++;\n            } else {\n                dict.Add(str[i], 1);\n            }\n        }\n        foreach (var item in dict) {\n            if (item.Value == 1) {\n                return item.Key.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <313ea35b71d8412fa316107758783e6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123328,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <83ec688a767b4fe8a6320e8227cad5dd>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character.\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary.\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string and return the first character that has a count of 1.\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no character has a count of 1, return null.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e5dbbf8af165422eac006f4dcdb99419>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e5dbbf8af165422eac006f4dcdb99419>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCounts = new Dictionary<char, int>();\n        foreach (char ch in str1) {\n            if (charCounts.ContainsKey(ch)) {\n                charCounts[ch]++;\n            } else {\n                charCounts.Add(ch, 1);\n            }\n        }\n        foreach (char ch in str1) {\n            if (charCounts[ch] == 1) {\n                return ch.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fe432a2711cd4596afbaef9d665cb06f>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add each character to the dictionary\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // If no characters have a count of 1, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <4768a1a6f6da49a19a751360c10a4311>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <4768a1a6f6da49a19a751360c10a4311>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict.ContainsKey(str1[i])) {\n                dict[str1[i]] += 1;\n            } else {\n                dict.Add(str1[i], 1);\n            }\n        }\n        foreach (KeyValuePair<char, int> kvp in dict) {\n            if (kvp.Value == 1) {\n                return kvp.Key.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0a1586ae11f14bee9e99d9d05cf783c9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        char[] str = str1.ToCharArray();\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < str.Length; i++) {\n            if (dict.ContainsKey(str[i])) {\n                dict[str[i]]++;\n            } else {\n                dict.Add(str[i], 1);\n            }\n        }\n        for (int i = 0; i < str.Length; i++) {\n            if (dict[str[i]] == 1) {\n                return str[i].ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d76505b241fd4ab5826834efa1f79ebb>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1665510136,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e9ae17618ba24440a59a359502e6cd6b>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // create a dictionary to store the character and its count\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        // loop through the string\n        foreach (char c in str1) {\n            // if the character is not in the dictionary, add it and set the count to 1\n            if (!dict.ContainsKey(c)) {\n                dict.Add(c, 1);\n            }\n            // if the character is in the dictionary, increment the count\n            else {\n                dict[c]++;\n            }\n        }\n        // loop through the string again\n        foreach (char c in str1) {\n            // if the character count is 1, return the character\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        // if no character is found, return null\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <6ac16227dc344b42875fcaa02990f354>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <6ac16227dc344b42875fcaa02990f354>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < str1.Length; i++) {\n            if (dict.ContainsKey(str1[i])) {\n                dict[str1[i]] += 1;\n            } else {\n                dict.Add(str1[i], 1);\n            }\n        }\n        foreach (KeyValuePair<char, int> kvp in dict) {\n            if (kvp.Value == 1) {\n                return kvp.Key.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123330,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0a1586ae11f14bee9e99d9d05cf783c9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character.\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        // Loop through the string and add each character to the dictionary.\n        foreach (char c in str1) {\n            if (dict.ContainsKey(c)) {\n                dict[c]++;\n            } else {\n                dict.Add(c, 1);\n            }\n        }\n        // Loop through the string again and return the first character that has a count of 1.\n        foreach (char c in str1) {\n            if (dict[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <b312aee0c0024bf3881d048317967f64>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <b312aee0c0024bf3881d048317967f64>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        char[] arr = str1.ToCharArray();\n        Dictionary<char, int> dict = new Dictionary<char, int>();\n        for (int i = 0; i < arr.Length; i++) {\n            if (dict.ContainsKey(arr[i])) {\n                dict[arr[i]] += 1;\n            } else {\n                dict.Add(arr[i], 1);\n            }\n        }\n        for (int i = 0; i < arr.Length; i++) {\n            if (dict[arr[i]] == 1) {\n                return arr[i].ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <5b97676a96c445b888eafd029ce0bd0a>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        var charCount = new Dictionary<char, int>();\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123331,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <db34e7aaad2e442ba8754a150c9d1f7f>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        string result = \"\";\n        for (int i = 0; i < str1.Length; i++) {\n            if (str1.IndexOf(str1[i]) == str1.LastIndexOf(str1[i])) {\n                result = str1[i].ToString();\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <662cff5d0ca749899458d536cb7b5cf8>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first non-repeated character in a given string.\n    public static string FirstNonRepeatingCharacter(string str1) {\n        // Create a dictionary to store the count of each character in the string\n        Dictionary<char, int> charCount = new Dictionary<char, int>();\n        // Iterate through the string and add the character to the dictionary\n        // If the character already exists in the dictionary, increment the count\n        foreach (char c in str1) {\n            if (charCount.ContainsKey(c)) {\n                charCount[c]++;\n            } else {\n                charCount.Add(c, 1);\n            }\n        }\n        // Iterate through the string again and return the first character that has a count of 1\n        foreach (char c in str1) {\n            if (charCount[c] == 1) {\n                return c.ToString();\n            }\n        }\n        return \"No non-repeating character found\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstNonRepeatingCharacter((\"abcabc\")).Equals(null));\n    Debug.Assert(FirstNonRepeatingCharacter((\"abc\")).Equals((\"a\")));\n    Debug.Assert(FirstNonRepeatingCharacter((\"ababc\")).Equals((\"c\")));\n    }\n\n}\n",
      "timestamp": 1666123332,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <278a861863af41629938fae5cdb6354c>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_637_noprofit_noloss",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether the given amount has no profit and no loss\n    public static bool NoprofitNoloss(long actual_cost, long sale_amount) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_637_noprofit_noloss.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(NoprofitNoloss((1500L), (1200L)) == (false));\n    Debug.Assert(NoprofitNoloss((100L), (100L)) == (true));\n    Debug.Assert(NoprofitNoloss((2000L), (5000L)) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return actual_cost == sale_amount;",
    "        return actual_cost == sale_amount;",
    "        return actual_cost == sale_amount;",
    "        return actual_cost == sale_amount;",
    "        return actual_cost == sale_amount;",
    "        return actual_cost == sale_amount;",
    "        if (actual_cost == sale_amount) {\n            return true;\n        }\n        return false;",
    "        return actual_cost == sale_amount;",
    "        return actual_cost == sale_amount;",
    "        return actual_cost == sale_amount;",
    "        return actual_cost == sale_amount;",
    "        return actual_cost == sale_amount;",
    "        return actual_cost == sale_amount;",
    "        return actual_cost == sale_amount;",
    "        return actual_cost == sale_amount;",
    "        return actual_cost == sale_amount;",
    "        if (actual_cost == sale_amount)\n            return true;\n        else\n            return false;",
    "        return actual_cost == sale_amount;",
    "        return actual_cost == sale_amount;",
    "        // Write your code here\n        return actual_cost == sale_amount;"
  ]
}
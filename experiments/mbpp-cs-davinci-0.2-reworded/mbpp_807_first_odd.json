{
  "name": "mbpp_807_first_odd",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the first odd number in a given list of numbers.\n    public static long FirstOdd(List<long> nums) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_807_first_odd.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FirstOdd((new List<long>(new long[]{(long)1L, (long)3L, (long)5L}))) == (1L));\n    Debug.Assert(FirstOdd((new List<long>(new long[]{(long)2L, (long)4L, (long)1L, (long)3L}))) == (1L));\n    Debug.Assert(FirstOdd((new List<long>(new long[]{(long)8L, (long)9L, (long)1L}))) == (9L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return nums.First(n => n % 2 == 1);",
    "        for (int i = 0; i < nums.Count; i++) {\n            if (nums[i] % 2 == 1) {\n                return nums[i];\n            }\n        }\n        return -1;",
    "        // Your code here\n        return nums.First(n => n % 2 == 1);",
    "        foreach (long num in nums) {\n            if (num % 2 == 1) {\n                return num;\n            }\n        }\n        return -1;",
    "        return nums.First(x => x % 2 == 1);",
    "        long result = 0;\n        foreach (long num in nums) {\n            if (num % 2 != 0) {\n                result = num;\n                break;\n            }\n        }\n        return result;",
    "        foreach (long num in nums) {\n            if (num % 2 == 1) {\n                return num;\n            }\n        }\n        return -1;",
    "        // Write your code here\n        return nums.First(n => n % 2 != 0);",
    "        foreach (long num in nums) {\n            if (num % 2 == 1) {\n                return num;\n            }\n        }\n        return 0;",
    "        // Your code here\n        return nums.First(x => x % 2 == 1);",
    "        foreach (long num in nums) {\n            if (num % 2 == 1) {\n                return num;\n            }\n        }\n        return 0;",
    "        long firstOdd = 0;\n        for (int i = 0; i < nums.Count; i++) {\n            if (nums[i] % 2 == 1) {\n                firstOdd = nums[i];\n                break;\n            }\n        }\n        return firstOdd;",
    "        long firstOdd = 0;\n        foreach (long num in nums) {\n            if (num % 2 != 0) {\n                firstOdd = num;\n                break;\n            }\n        }\n        return firstOdd;",
    "        return nums.First(x => x % 2 == 1);",
    "        foreach (long num in nums) {\n            if (num % 2 == 1) {\n                return num;\n            }\n        }\n        return -1;",
    "        long result = 0;\n        foreach (long num in nums) {\n            if (num % 2 != 0) {\n                result = num;\n                break;\n            }\n        }\n        return result;",
    "        for (int i = 0; i < nums.Count; i++) {\n            if (nums[i] % 2 != 0) {\n                return nums[i];\n            }\n        }\n        return -1;",
    "        foreach (long num in nums) {\n            if (num % 2 == 1) {\n                return num;\n            }\n        }\n        return -1;",
    "        foreach (long num in nums) {\n            if (num % 2 == 1) {\n                return num;\n            }\n        }\n        return -1;",
    "        foreach (long num in nums) {\n            if (num % 2 != 0) {\n                return num;\n            }\n        }\n        return -1;"
  ]
}
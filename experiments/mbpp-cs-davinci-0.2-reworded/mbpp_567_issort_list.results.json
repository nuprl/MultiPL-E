{
  "name": "mbpp_567_issort_list",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_567_issort_list.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool result = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                result = false;\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool sorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                sorted = false;\n                break;\n            }\n        }\n        return sorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool sorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                sorted = false;\n                break;\n            }\n        }\n        return sorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool result = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                result = false;\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool result = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                result = false;\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1])\n                return false;\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool sorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                sorted = false;\n                break;\n            }\n        }\n        return sorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool result = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                result = false;\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool issorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                issorted = false;\n                break;\n            }\n        }\n        return issorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool sort = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                sort = false;\n                break;\n            }\n        }\n        return sort;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool result = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                result = false;\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool result = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                result = false;\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        if (list1.Count == 0) {\n            return true;\n        }\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool result = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                result = false;\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSort = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSort = false;\n                break;\n            }\n        }\n        return isSort;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool flag = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                flag = false;\n                break;\n            }\n        }\n        return flag;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool sorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                sorted = false;\n                break;\n            }\n        }\n        return sorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool issorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                issorted = false;\n                break;\n            }\n        }\n        return issorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool issort = true;\n        for (int i = 1; i < list1.Count; i++) {\n            if (list1[i] < list1[i - 1]) {\n                issort = false;\n                break;\n            }\n        }\n        return issort;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool sorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                sorted = false;\n                break;\n            }\n        }\n        return sorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool sort = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                sort = false;\n                break;\n            }\n        }\n        return sort;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool sorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                sorted = false;\n                break;\n            }\n        }\n        return sorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool result = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                result = false;\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool result = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                result = false;\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSort = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSort = false;\n                break;\n            }\n        }\n        return isSort;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool issorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                issorted = false;\n                break;\n            }\n        }\n        return issorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool sorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                sorted = false;\n                break;\n            }\n        }\n        return sorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSort = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSort = false;\n                break;\n            }\n        }\n        return isSort;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1666123714,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool result = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                result = false;\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool sorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                sorted = false;\n                break;\n            }\n        }\n        return sorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool result = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                result = false;\n                break;\n            }\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool sorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                sorted = false;\n                break;\n            }\n        }\n        return sorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        bool isSorted = true;\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                isSorted = false;\n                break;\n            }\n        }\n        return isSorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a specified list is sorted or not.\n    public static bool IssortList(List<long> list1) {\n        for (int i = 0; i < list1.Count - 1; i++) {\n            if (list1[i] > list1[i + 1]) {\n                return false;\n            }\n        }\n        return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)16L, (long)17L}))) == (true));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)12L, (long)14L, (long)20L, (long)17L}))) == (false));\n    Debug.Assert(IssortList((new List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)6L, (long)8L, (long)10L, (long)15L, (long)14L, (long)20L}))) == (false));\n    }\n\n}\n",
      "timestamp": 1665510399,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
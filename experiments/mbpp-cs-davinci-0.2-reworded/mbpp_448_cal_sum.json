{
  "name": "mbpp_448_cal_sum",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate the sum of perrin numbers.\n    public static long CalSum(long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_448_cal_sum.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CalSum((9L)) == (49L));\n    Debug.Assert(CalSum((10L)) == (66L));\n    Debug.Assert(CalSum((11L)) == (88L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n        for (long i = 0; i < n; i++) {\n            if (i == 0) {\n                p = 3;\n            } else if (i == 1) {\n                p = 0;\n                q = 2;\n            } else {\n                r = p;\n                p = q;\n                q = r;\n            }\n            sum += p;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i < n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i < n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        // ...\n        return 0;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 0; i < n; i++) {\n            sum += perrin[2];\n            perrin[0] = perrin[1];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0] + perrin[1];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 0; i < n; i++) {\n            sum += perrin[2];\n            perrin[0] = perrin[1];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0] + perrin[1];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i < n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i < n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (int i = 3; i <= n; i++) {\n            c = a + b;\n            a = b;\n            b = c;\n            sum += c;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++)\n            sum += Perrin(i);\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (long i = 0; i < n; i++) {\n            sum += perrin[0];\n            perrin[0] = perrin[1] + perrin[2];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 2;\n        for (long i = 3; i <= n; i++) {\n            p = q;\n            q = r;\n            r = p + q;\n            sum += r;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (long i = 3; i <= n; i++) {\n            c = a + b;\n            a = b;\n            b = c;\n            sum += c;\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long p1 = 3;\n        long p2 = 2;\n        for (long i = 3; i <= n; i++) {\n            p = p1 + p2;\n            p2 = p1;\n            p1 = p;\n            sum += p;\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 3;\n        while (p <= n) {\n            sum += p;\n            p = p * 3 + 2;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i < n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i < n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 0;\n        long b = 0;\n        long c = 3;\n        for (long i = 0; i < n; i++) {\n            sum += c;\n            a = b;\n            b = c;\n            c = a + b;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 1;\n        for (long i = 0; i < n; i++) {\n            sum += a;\n            long tmp = a;\n            a = b;\n            b = c;\n            c = tmp;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[] { 3, 0, 2 };\n        for (long i = 0; i < n; i++) {\n            sum += perrin[0];\n            perrin[0] = perrin[1];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0] + perrin[1];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n        for (long i = 0; i < n; i++) {\n            if (i == 0) {\n                p = 3;\n                q = 0;\n                r = 2;\n            } else if (i == 1) {\n                p = 0;\n                q = 2;\n                r = 3;\n            } else if (i == 2) {\n                p = 2;\n                q = 3;\n                r = 5;\n            } else {\n                p = q;\n                q = r;\n                r = p + q;\n            }\n            sum += r;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        if (n < 0) {\n            return 0;\n        }\n        long sum = 0;\n        long p = 0;\n        long q = 2;\n        long r = 3;\n        while (n > 0) {\n            sum += p;\n            p = q;\n            q = r;\n            r = p + q;\n            n--;\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 3;\n        while (p <= n) {\n            sum += p;\n            p = p * 3 + 2;\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long p1 = 3;\n        long p2 = 2;\n        for (long i = 3; i <= n; i++) {\n            p = p1 + p2;\n            p2 = p1;\n            p1 = p;\n            sum += p;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i < n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i < n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i < n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i < n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        // ...\n        return 0;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (long i = 3; i <= n; i++) {\n            c = a + b;\n            sum += c;\n            a = b;\n            b = c;\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long p1 = 3;\n        long p2 = 2;\n        long p3 = 1;\n        for (long i = 0; i < n; i++) {\n            p = p1 + p2;\n            p3 = p2;\n            p2 = p1;\n            p1 = p;\n            sum += p;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 0; i < n; i++) {\n            sum += perrin[0];\n            perrin[0] = perrin[1] + perrin[2];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0];\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 3;\n        while (p <= n) {\n            sum += p;\n            p = p * 3 + 2;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 0; i < n; i++) {\n            sum += perrin[2];\n            perrin[0] = perrin[1];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0] + perrin[1];\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (long i = 0; i < n; i++) {\n            sum += a;\n            c = a;\n            a = b;\n            b = c;\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n        for (long i = 0; i < n; i++) {\n            if (i == 0) {\n                p = 3;\n                q = 0;\n                r = 2;\n            } else if (i == 1) {\n                p = 0;\n                q = 2;\n                r = 3;\n            } else if (i == 2) {\n                p = 2;\n                q = 3;\n                r = 5;\n            } else {\n                p = q;\n                q = r;\n                r = p + q;\n            }\n            sum += r;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long p1 = 3;\n        long p2 = 2;\n        long p3 = 1;\n        for (long i = 1; i <= n; i++) {\n            p = p1 + p2;\n            p3 = p2;\n            p2 = p1;\n            p1 = p;\n            sum += p;\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n        for (long i = 0; i < n; i++) {\n            if (i == 0) {\n                p = 3;\n                q = 0;\n                r = 2;\n            } else if (i == 1) {\n                p = 2;\n                q = 3;\n                r = 3;\n            } else if (i == 2) {\n                p = 3;\n                q = 2;\n                r = 3;\n            } else {\n                p = q;\n                q = r;\n                r = p + q;\n            }\n            sum += r;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 3;\n        for (long i = 3; i <= n; i++) {\n            p = q;\n            q = r;\n            r = p + q;\n            sum += r;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i < n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (long i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long p1 = 3;\n        long p2 = 2;\n        for (long i = 0; i < n; i++) {\n            p = p1 + p2;\n            p2 = p1;\n            p1 = p;\n            sum += p;\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 2;\n        for (long i = 3; i <= n; i++) {\n            p = q;\n            q = r;\n            r = p + q;\n            sum += r;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        // Your code goes here.\n        long sum = 0;\n        long[] perrin = new long[n];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i < n; i++)\n        {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i < n; i++)\n        {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (long i = 3; i <= n; i++) {\n            c = a + b;\n            sum += c;\n            a = b;\n            b = c;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n+1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i-2] + perrin[i-3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n        for (long i = 0; i < n; i++) {\n            if (i == 0) {\n                p = 3;\n            } else if (i == 1) {\n                q = 0;\n            } else if (i == 2) {\n                r = 2;\n            } else {\n                p = q;\n                q = r;\n                r = p + q;\n            }\n            sum += r;\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 1;\n        for (long i = 0; i < n; i++) {\n            sum += a;\n            long temp = a;\n            a = b;\n            b = c;\n            c = temp;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 3;\n        while (p <= n) {\n            sum += p;\n            p = p * 3 + 2;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (long i = 3; i <= n; i++) {\n            c = a + b;\n            sum += c;\n            a = b;\n            b = c;\n        }\n        return sum;",
    "        long sum = 0;\n        long p0 = 3;\n        long p1 = 0;\n        long p2 = 2;\n        for (long i = 0; i < n; i++) {\n            sum += p0;\n            long p3 = p2;\n            p2 = p1;\n            p1 = p0;\n            p0 = p2 + p3;\n        }\n        return sum;",
    "        long a = 3, b = 0, c = 2, sum = 2;\n        while (c <= n) {\n            sum += c;\n            long tmp = a;\n            a = c;\n            c = b + c;\n            b = tmp;\n        }\n        return sum;",
    "        // Your code here.\n        return 0;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (long i = 3; i <= n; i++) {\n            c = a + b;\n            a = b;\n            b = c;\n            sum += c;\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n        for (long i = 0; i < n; i++) {\n            if (i == 0) {\n                p = 3;\n                q = 0;\n                r = 2;\n            } else if (i == 1) {\n                p = 0;\n                q = 2;\n                r = 3;\n            } else if (i == 2) {\n                p = 2;\n                q = 3;\n                r = 5;\n            } else {\n                p = q;\n                q = r;\n                r = p + q;\n            }\n            sum += r;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0, q = 0, r = 3;\n        for (long i = 0; i < n; i++) {\n            sum += r;\n            p = q;\n            q = r;\n            r = p + q;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 0; i < n; i++) {\n            sum += perrin[2];\n            perrin[0] = perrin[1];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0] + perrin[1];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (long i = 0; i < n; i++) {\n            sum += perrin[0];\n            perrin[0] = perrin[1] + perrin[2];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0];\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long p1 = 3;\n        long p2 = 2;\n        long p3 = 1;\n        while (p < n) {\n            sum += p;\n            p = p1;\n            p1 = p2;\n            p2 = p3;\n            p3 = p + p1;\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long p_1 = 0;\n        long p_2 = 0;\n        for (long i = 1; i <= n; i++) {\n            if (i == 1) {\n                p = 3;\n            } else if (i == 2) {\n                p = 0;\n            } else {\n                p = p_1 + p_2;\n            }\n            sum += p;\n            p_2 = p_1;\n            p_1 = p;\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (long i = 0; i < n; i++) {\n            sum += a;\n            c = a;\n            a = b;\n            b = c;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i < n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (long i = 0; i < n; i++) {\n            sum += a;\n            c = a;\n            a = b;\n            b = c;\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n        for (long i = 0; i < n; i++) {\n            if (i == 0) {\n                p = 3;\n            } else if (i == 1) {\n                p = 0;\n                q = 2;\n            } else if (i == 2) {\n                p = 2;\n                q = 3;\n                r = 0;\n            } else {\n                p = q;\n                q = r;\n                r = p + q;\n            }\n            sum += p;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 0; i < n; i++) {\n            sum += perrin[2];\n            perrin[0] = perrin[1];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0] + perrin[1];\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 3;\n        while (p <= n) {\n            sum += p;\n            p = p * 3 + 2;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 3;\n        while (p <= n) {\n            sum += p;\n            p = Perrin(p);\n        }\n        return sum;",
    "        long a = 0, b = 2, c = 3;\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += a;\n            long tmp = a;\n            a = b;\n            b = c;\n            c += tmp;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 0; i < n; i++) {\n            sum += perrin[0];\n            perrin[0] = perrin[1] + perrin[2];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += PerrinNumber(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        // TODO: Implement your solution here\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n        for (long i = 0; i < n; i++) {\n            if (i == 0) {\n                p = 3;\n            } else if (i == 1) {\n                q = 0;\n            } else if (i == 2) {\n                r = 2;\n            } else {\n                p = q;\n                q = r;\n                r = p + q;\n            }\n            sum += r;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n        for (long i = 0; i < n; i++) {\n            if (i == 0) {\n                p = 3;\n                q = 0;\n                r = 2;\n            } else if (i == 1) {\n                p = 2;\n                q = 3;\n                r = 3;\n            } else if (i == 2) {\n                p = 3;\n                q = 2;\n                r = 3;\n            } else {\n                p = q;\n                q = r;\n                r = p + q;\n            }\n            sum += r;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i < n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i < n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 0; i < n; i++) {\n            sum += perrin[2];\n            perrin[0] = perrin[1];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0] + perrin[1];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (long i = 3; i <= n; i++) {\n            long temp = perrin[0];\n            perrin[0] = perrin[1];\n            perrin[1] = perrin[2];\n            perrin[2] = temp + perrin[0];\n            sum += perrin[2];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n        for (long i = 0; i < n; i++) {\n            if (i == 0) {\n                p = 3;\n                sum += p;\n            } else if (i == 1) {\n                q = 0;\n                sum += q;\n            } else if (i == 2) {\n                r = 2;\n                sum += r;\n            } else {\n                long temp = p + q;\n                sum += temp;\n                p = q;\n                q = r;\n                r = temp;\n            }\n        }\n        return sum;",
    "        long sum = 0;\n        long perrin = 2;\n        long perrin1 = 3;\n        long perrin2 = 1;\n        for (long i = 3; i <= n; i++) {\n            perrin = perrin1 + perrin2;\n            sum += perrin;\n            perrin2 = perrin1;\n            perrin1 = perrin;\n        }\n        return sum;",
    "        // Your code here.\n        return 0;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (long i = 0; i < n; i++) {\n            sum += perrin[0];\n            perrin[0] = perrin[1] + perrin[2];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0];\n        }\n        return sum;",
    "        // The perrin numbers are defined by the recurrence relation:\n        // P(0) = 3\n        // P(1) = 0\n        // P(2) = 2\n        // P(n) = P(n-2) + P(n-3)\n        // The sum of the first n perrin numbers is given by the formula:\n        // S(n) = (n+1)*P(n) + 2*(n-1)*P(n-1) + (n-2)*P(n-2)\n        // The sum of the first n perrin numbers modulo m is given by the formula:\n        // S(n) mod m = (n+1)*P(n) mod m + 2*(n-1)*P(n-1) mod m + (n-2)*P(n-2) mod m\n        // We can calculate the sum of the first n perrin numbers modulo m by using the\n        // recurrence relation for the perrin numbers and the above formula.\n        // We can calculate the sum of the first n perrin numbers modulo m in O(n) time.\n        // We can calculate the sum of the first n perrin numbers modulo m in O(1) space.\n        long a = 3;\n        long b = 0;\n        long c = 2;\n        long sum = 0;\n        for (long i = 0; i < n; i++) {\n            long d = a + b;\n            long e = b + c;\n            long f = c + d;\n            sum += (i+1)*d + 2*(i-1)*e + (i-2)*f;\n            a = d;\n            b = e;\n            c = f;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i % 3] = perrin[(i - 1) % 3] + perrin[(i - 2) % 3];\n            sum += perrin[i % 3];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i < n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i < n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 0; i < n; i++) {\n            sum += perrin[2];\n            perrin[0] = perrin[1];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0] + perrin[1];\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (long i = 3; i <= n; i++) {\n            c = a + b;\n            a = b;\n            b = c;\n            sum += c;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long p1 = 3;\n        long p2 = 2;\n        for (int i = 0; i < n; i++) {\n            p = p1 + p2;\n            sum += p;\n            p2 = p1;\n            p1 = p;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i < n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i < n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (long i = 0; i < n; i++) {\n            sum += perrin[0];\n            long temp = perrin[0] + perrin[1];\n            perrin[1] = perrin[0];\n            perrin[0] = perrin[2];\n            perrin[2] = temp;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i < n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i < n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 2;\n        for (long i = 0; i < n; i++) {\n            sum += r;\n            p = q;\n            q = r;\n            r = p + q;\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n        for (long i = 0; i < n; i++) {\n            if (i == 0) {\n                p = 3;\n                q = 0;\n                r = 2;\n            } else if (i == 1) {\n                p = 0;\n                q = 2;\n                r = 3;\n            } else if (i == 2) {\n                p = 2;\n                q = 3;\n                r = 5;\n            } else {\n                p = q;\n                q = r;\n                r = p + q;\n            }\n            sum += r;\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 1;\n        for (long i = 3; i <= n; i++) {\n            sum += a;\n            long a1 = a;\n            a = b;\n            b = c;\n            c = a1 + b;\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long p1 = 3;\n        long p2 = 2;\n        for (long i = 3; i <= n; i++) {\n            p = p1 + p2;\n            p2 = p1;\n            p1 = p;\n            sum += p;\n        }\n        return sum;",
    "        // TODO:\n        return 0;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i < n + 1; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n        for (long i = 0; i < n; i++) {\n            if (i == 0) {\n                p = 3;\n                q = 0;\n                r = 2;\n            } else if (i == 1) {\n                p = 0;\n                q = 2;\n                r = 3;\n            } else if (i == 2) {\n                p = 2;\n                q = 3;\n                r = 5;\n            } else {\n                p = q;\n                q = r;\n                r = p + q;\n            }\n            sum += r;\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (int i = 3; i <= n; i++) {\n            c = a + b;\n            sum += c;\n            a = b;\n            b = c;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 0; i < n; i++) {\n            sum += perrin[2];\n            perrin[0] = perrin[1];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0] + perrin[1];\n        }\n        return sum;",
    "        long sum = 0;\n        long p0 = 3;\n        long p1 = 0;\n        long p2 = 2;\n        for (long i = 0; i < n; i++) {\n            sum += p2;\n            long p3 = p2;\n            p2 = p1;\n            p1 = p0;\n            p0 = p3;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            long temp = perrin[0];\n            perrin[0] = perrin[1];\n            perrin[1] = perrin[2];\n            perrin[2] = temp + perrin[1];\n            sum += perrin[2];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 1; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n        for (long i = 0; i < n; i++) {\n            if (i == 0) {\n                p = 3;\n                q = 0;\n                r = 2;\n            } else if (i == 1) {\n                p = 2;\n                q = 3;\n                r = 3;\n            } else if (i == 2) {\n                p = 3;\n                q = 2;\n                r = 3;\n            } else {\n                p = q;\n                q = r;\n                r = p + q;\n            }\n            sum += r;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (long i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (long i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 2;\n        for (long i = 3; i <= n; i++) {\n            p = q;\n            q = r;\n            r = p + q;\n            sum += r;\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (long i = 0; i < n; i++) {\n            sum += perrin[0];\n            perrin[0] = perrin[1] + perrin[2];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long p1 = 3;\n        long p2 = 2;\n        long p3 = 3;\n        while (p < n) {\n            sum += p;\n            p = p1;\n            p1 = p2;\n            p2 = p3;\n            p3 = p + p1;\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 3;\n        while (p <= n) {\n            sum += p;\n            p = p * 3 + 2;\n        }\n        return sum;",
    "        long sum = 0;\n        long a = 3;\n        long b = 2;\n        long c = 0;\n        for (long i = 3; i <= n; i++) {\n            c = a + b;\n            a = b;\n            b = c;\n            sum += c;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 0; i < n; i++) {\n            sum += perrin[0];\n            perrin[0] = perrin[1] + perrin[2];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 3;\n        while (p <= n) {\n            sum += p;\n            p = Perrin(p);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 0; i < n; i++) {\n            sum += perrin[2];\n            perrin[0] = perrin[1];\n            perrin[1] = perrin[2];\n            perrin[2] = perrin[0] + perrin[1];\n        }\n        return sum;",
    "        long sum = 0;\n        for (long i = 0; i <= n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i < n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i < n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 3;\n        while (p <= n) {\n            sum += p;\n            p = p * 3 + 2;\n        }\n        return sum;",
    "        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += Perrin(i);\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 2;\n        long r = 3;\n        for (long i = 2; i <= n; i++) {\n            sum += p;\n            p = q;\n            q = r;\n            r = p + q;\n        }\n        return sum;",
    "        long sum = 0;\n        long p = 0;\n        long q = 0;\n        long r = 3;\n        for (long i = 0; i < n; i++) {\n            sum += r;\n            p = q;\n            q = r;\n            r = p + q;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[n + 1];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 3; i <= n; i++) {\n            perrin[i] = perrin[i - 2] + perrin[i - 3];\n        }\n        for (int i = 0; i <= n; i++) {\n            sum += perrin[i];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3] { 3, 0, 2 };\n        for (long i = 0; i < n; i++) {\n            sum += perrin[0];\n            perrin[0] = perrin[1];\n            perrin[1] = perrin[2];\n            perrin[2] = sum;\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 0; i < n; i++) {\n            sum += perrin[0];\n            long temp = perrin[0];\n            perrin[0] = perrin[1];\n            perrin[1] = perrin[2];\n            perrin[2] = temp + perrin[1];\n        }\n        return sum;",
    "        long sum = 0;\n        long[] perrin = new long[3];\n        perrin[0] = 3;\n        perrin[1] = 0;\n        perrin[2] = 2;\n        for (int i = 2; i <= n; i++) {\n            long temp = perrin[0];\n            perrin[0] = perrin[1];\n            perrin[1] = perrin[2];\n            perrin[2] = temp + perrin[0];\n            sum += perrin[2];\n        }\n        return sum;"
  ]
}
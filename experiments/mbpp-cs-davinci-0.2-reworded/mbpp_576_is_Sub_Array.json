{
  "name": "mbpp_576_is_Sub_Array",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to check whether a list is sublist of another or not.\n    public static bool IsSubArray(List<long> A, List<long> B) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_576_is_Sub_Array.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsSubArray((new List<long>(new long[]{(long)1L, (long)4L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)1L, (long)2L}))) == (false));\n    Debug.Assert(IsSubArray((new List<long>(new long[]{(long)1L, (long)2L, (long)1L})), (new List<long>(new long[]{(long)1L, (long)2L, (long)1L}))) == (true));\n    Debug.Assert(IsSubArray((new List<long>(new long[]{(long)1L, (long)0L, (long)2L, (long)2L})), (new List<long>(new long[]{(long)2L, (long)2L, (long)0L}))) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        int n = A.Count;\n        int m = B.Count;\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (A[i + j] != B[j]) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;",
    "        int n = A.Count;\n        int m = B.Count;\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (A[i + j] != B[j]) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count == 0) return true;\n        if (B.Count == 0) return false;\n        if (A.Count > B.Count) return false;\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.Count < B.Count) return false;\n        for (int i = 0; i < A.Count - B.Count + 1; i++) {\n            bool isSub = true;\n            for (int j = 0; j < B.Count; j++) {\n                if (A[i + j] != B[j]) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool match = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    match = false;\n                    break;\n                }\n            }\n            if (match) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSub = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i <= B.Count - A.Count; i++) {\n            if (A.SequenceEqual(B.GetRange(i, A.Count))) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count; i++) {\n            if (A[0] == B[i]) {\n                bool found = true;\n                for (int j = 0; j < A.Count; j++) {\n                    if (A[j] != B[i + j]) {\n                        found = false;\n                        break;\n                    }\n                }\n                if (found) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        if (A.Count < B.Count) {\n            return false;\n        }\n        for (int i = 0; i < A.Count; i++) {\n            if (A[i] == B[0]) {\n                bool isSub = true;\n                for (int j = 1; j < B.Count; j++) {\n                    if (i + j >= A.Count || A[i + j] != B[j]) {\n                        isSub = false;\n                        break;\n                    }\n                }\n                if (isSub) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool match = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    match = false;\n                    break;\n                }\n            }\n            if (match) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count == 0) {\n            return true;\n        }\n        if (B.Count == 0) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        return i == A.Count;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool match = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    match = false;\n                    break;\n                }\n            }\n            if (match) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (B[i + j] != A[j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.Count > B.Count) return false;\n        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        if (i == A.Count) return true;\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            if (A.SequenceEqual(B.GetRange(i, A.Count))) {\n                return true;\n            }\n        }\n        return false;",
    "        // if A is empty, it is a subarray of B\n        if (A.Count == 0) {\n            return true;\n        }\n        // if B is empty, it is not a subarray of A\n        if (B.Count == 0) {\n            return false;\n        }\n        // if A is longer than B, it is not a subarray of B\n        if (A.Count > B.Count) {\n            return false;\n        }\n        // if A is shorter than B, it is not a subarray of B\n        if (A.Count < B.Count) {\n            return false;\n        }\n        // if A and B are the same length, check if they are equal\n        if (A.Count == B.Count) {\n            for (int i = 0; i < A.Count; i++) {\n                if (A[i] != B[i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n        // if A is shorter than B, check if A is a subarray of B\n        if (A.Count < B.Count) {\n            for (int i = 0; i < B.Count - A.Count; i++) {\n                bool isSubArray = true;\n                for (int j = 0; j < A.Count; j++) {\n                    if (A[j] != B[i + j]) {\n                        isSubArray = false;\n                        break;\n                    }\n                }\n                if (isSubArray) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return false;",
    "        if (A.Count == 0) return true;\n        if (B.Count == 0) return false;\n        if (A.Count > B.Count) return false;\n        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        return i == A.Count;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        return j == B.Count;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i <= B.Count - A.Count; i++) {\n            if (A.SequenceEqual(B.GetRange(i, A.Count))) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                j = 0;\n                i++;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0, j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count < B.Count) {\n            return false;\n        }\n        for (int i = 0; i < A.Count - B.Count + 1; i++) {\n            bool match = true;\n            for (int j = 0; j < B.Count; j++) {\n                if (A[i + j] != B[j]) {\n                    match = false;\n                    break;\n                }\n            }\n            if (match) {\n                return true;\n            }\n        }\n        return false;",
    "        for (int i = 0; i < A.Count; i++) {\n            if (A[i] != B[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        if (A.Count == 0)\n            return true;\n        if (B.Count == 0)\n            return false;\n        if (A.Count > B.Count)\n            return false;\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray)\n                return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool match = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    match = false;\n                    break;\n                }\n            }\n            if (match) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSub = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool match = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    match = false;\n                    break;\n                }\n            }\n            if (match) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) return false;\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        }\n        return false;",
    "        if (A.Count == 0) return true;\n        if (B.Count == 0) return false;\n        if (A.Count > B.Count) return false;\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool match = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    match = false;\n                    break;\n                }\n            }\n            if (match) return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count < B.Count) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        return j == B.Count;",
    "        int i = 0, j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) return false;\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i <= B.Count - A.Count; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSub = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count; i++) {\n            bool match = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    match = false;\n                    break;\n                }\n            }\n            if (match) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSub = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count < B.Count) {\n            return false;\n        }\n        for (int i = 0; i < A.Count - B.Count + 1; i++) {\n            bool match = true;\n            for (int j = 0; j < B.Count; j++) {\n                if (A[i + j] != B[j]) {\n                    match = false;\n                    break;\n                }\n            }\n            if (match) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i <= B.Count - A.Count; i++) {\n            if (A.SequenceEqual(B.GetRange(i, A.Count))) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.Count == 0) return true;\n        if (B.Count == 0) return false;\n        if (A.Count > B.Count) return false;\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            if (A[0] == B[i]) {\n                bool found = true;\n                for (int j = 1; j < A.Count; j++) {\n                    if (A[j] != B[i + j]) {\n                        found = false;\n                        break;\n                    }\n                }\n                if (found) return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i <= B.Count - A.Count; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        int n = A.Count;\n        int m = B.Count;\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++)\n                if (A[i + j] != B[j])\n                    break;\n            if (j == m)\n                return true;\n        }\n        return false;",
    "        if (A.Count < B.Count) {\n            return false;\n        }\n        for (int i = 0; i < A.Count - B.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < B.Count; j++) {\n                if (A[i + j] != B[j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        int n = A.Count;\n        int m = B.Count;\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (A[i + j] != B[j]) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        }\n        return false;",
    "        int n = A.Count;\n        int m = B.Count;\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++)\n                if (A[i + j] != B[j])\n                    break;\n            if (j == m)\n                return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count == 0 || B.Count == 0) {\n            return false;\n        }\n        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            if (B[i] == A[0]) {\n                bool isSub = true;\n                for (int j = 1; j < A.Count; j++) {\n                    if (B[i + j] != A[j]) {\n                        isSub = false;\n                        break;\n                    }\n                }\n                if (isSub) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool flag = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    flag = false;\n                    break;\n                }\n            }\n            if (flag) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i <= B.Count - A.Count; i++) {\n            if (A.SequenceEqual(B.GetRange(i, A.Count))) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) return false;\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            if (A.SequenceEqual(B.GetRange(i, A.Count))) return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count; i++) {\n            if (A.SequenceEqual(B.GetRange(i, A.Count))) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count; i++) {\n            if (B[i] == A[0]) {\n                bool isSub = true;\n                for (int j = 0; j < A.Count; j++) {\n                    if (i + j >= B.Count || B[i + j] != A[j]) {\n                        isSub = false;\n                        break;\n                    }\n                }\n                if (isSub) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        int n = A.Count;\n        int m = B.Count;\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (A[i + j] != B[j]) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        int n = A.Count;\n        int m = B.Count;\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (A[i + j] != B[j]) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count; i++) {\n            if (A[0] == B[i]) {\n                bool flag = true;\n                for (int j = 0; j < A.Count; j++) {\n                    if (A[j] != B[i + j]) {\n                        flag = false;\n                        break;\n                    }\n                }\n                if (flag) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        if (A.Count == 0) return true;\n        if (B.Count == 0) return false;\n        if (A.Count > B.Count) return false;\n        int i = 0;\n        int j = 0;\n        while (i < B.Count) {\n            if (A[j] == B[i]) {\n                j++;\n                if (j == A.Count) return true;\n            } else {\n                j = 0;\n            }\n            i++;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count; i++) {\n            if (A[0] == B[i]) {\n                bool isSubArray = true;\n                for (int j = 0; j < A.Count; j++) {\n                    if (A[j] != B[i + j]) {\n                        isSubArray = false;\n                        break;\n                    }\n                }\n                if (isSubArray) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) return false;\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            if (A.SequenceEqual(B.GetRange(i, A.Count))) return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i <= B.Count - A.Count; i++) {\n            if (A.SequenceEqual(B.GetRange(i, A.Count))) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSub = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) return false;\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool match = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    match = false;\n                    break;\n                }\n            }\n            if (match) return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            if (A.SequenceEqual(B.GetRange(i, A.Count))) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) return false;\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            if (A.SequenceEqual(B.GetRange(i, A.Count))) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count == 0) {\n            return true;\n        }\n        if (B.Count == 0) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        if (i == A.Count) {\n            return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            if (A.SequenceEqual(B.GetRange(i, A.Count))) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        return j == B.Count;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool match = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    match = false;\n                    break;\n                }\n            }\n            if (match) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool match = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    match = false;\n                    break;\n                }\n            }\n            if (match) {\n                return true;\n            }\n        }\n        return false;",
    "        var lenA = A.Count;\n        var lenB = B.Count;\n        if (lenA > lenB) {\n            return false;\n        }\n        for (int i = 0; i < lenB - lenA + 1; i++) {\n            var subB = B.GetRange(i, lenA);\n            if (subB.SequenceEqual(A)) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) return false;\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            if (A.SequenceEqual(B.GetRange(i, A.Count))) return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count; i++) {\n            if (A[0] == B[i]) {\n                int j = 0;\n                while (j < A.Count && A[j] == B[i + j]) {\n                    j++;\n                }\n                if (j == A.Count) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i <= B.Count - A.Count; i++) {\n            if (A.SequenceEqual(B.GetRange(i, A.Count))) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        return j == B.Count;",
    "        if (A.Count == 0) {\n            return true;\n        }\n        if (B.Count == 0) {\n            return false;\n        }\n        if (A.Count > B.Count) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        if (i == A.Count) {\n            return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        return j == B.Count;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            if (A.SequenceEqual(B.GetRange(i, A.Count))) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            if (A.SequenceEqual(B.GetRange(i, A.Count))) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (B[i + j] != A[j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        int n = A.Count;\n        int m = B.Count;\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (A[i + j] != B[j]) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        return j == B.Count;",
    "        if (A.Count > B.Count) return false;\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            if (A.SequenceEqual(B.GetRange(i, A.Count))) return true;\n        }\n        return false;",
    "        int n = A.Count;\n        int m = B.Count;\n        for (int i = 0; i <= n - m; i++) {\n            int j;\n            for (j = 0; j < m; j++) {\n                if (A[i + j] != B[j]) {\n                    break;\n                }\n            }\n            if (j == m) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count == 0) return true;\n        if (B.Count == 0) return false;\n        if (A.Count > B.Count) return false;\n        bool found = false;\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            if (B[i] == A[0]) {\n                found = true;\n                for (int j = 1; j < A.Count; j++) {\n                    if (B[i + j] != A[j]) {\n                        found = false;\n                        break;\n                    }\n                }\n            }\n            if (found) return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool match = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    match = false;\n                    break;\n                }\n            }\n            if (match) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSub = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i+j]) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSub = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i <= B.Count - A.Count; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        for (int i = 0; i < A.Count; i++) {\n            if (A[i] != B[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        if (A.Count > B.Count) return false;\n        for (int i = 0; i <= B.Count - A.Count; i++) {\n            bool isSub = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool match = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    match = false;\n                    break;\n                }\n            }\n            if (match) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < B.Count && j < A.Count) {\n            if (B[i] == A[j]) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == A.Count) {\n            return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        }\n        return false;",
    "        if (A.Count == 0) {\n            return true;\n        }\n        if (B.Count == 0) {\n            return false;\n        }\n        if (A.Count > B.Count) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = 0;\n                j++;\n            }\n        }\n        if (i == A.Count) {\n            return true;\n        }\n        return false;",
    "        if (A.Count < B.Count) {\n            return false;\n        }\n        for (int i = 0; i < A.Count - B.Count + 1; i++) {\n            bool isSub = true;\n            for (int j = 0; j < B.Count; j++) {\n                if (A[i + j] != B[j]) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count == 0) return true;\n        if (B.Count == 0) return false;\n        if (A.Count > B.Count) return false;\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) return false;\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSub = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count)\n            return false;\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSub = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub)\n                return true;\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.Count == 0) {\n            return true;\n        }\n        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count; i++) {\n            if (A[0] == B[i]) {\n                bool isSub = true;\n                for (int j = 1; j < A.Count; j++) {\n                    if (A[j] != B[i + j]) {\n                        isSub = false;\n                        break;\n                    }\n                }\n                if (isSub) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i++;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count; i++) {\n            if (A[0] == B[i]) {\n                bool found = true;\n                for (int j = 1; j < A.Count; j++) {\n                    if (i + j >= B.Count || A[j] != B[i + j]) {\n                        found = false;\n                        break;\n                    }\n                }\n                if (found) {\n                    return true;\n                }\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) return false;\n        for (int i = 0; i <= B.Count - A.Count; i++) {\n            bool isSub = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSub = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count == 0) {\n            return true;\n        }\n        if (B.Count == 0) {\n            return false;\n        }\n        if (A.Count > B.Count) {\n            return false;\n        }\n        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                j++;\n            }\n        }\n        if (i == A.Count) {\n            return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) return false;\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        return j == B.Count;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        return j == B.Count;",
    "        // A is a subarray of B if B contains A as a contiguous sublist.\n        // A is a subarray of B if there exists a non-empty list C such that A = B[i:j] for some i and j.\n        // A is a subarray of B if there exists a non-empty list C such that A = B[i:j] for some i and j.\n        // A is a subarray of B if there exists a non-empty list C such that A = B[i:j] for some i and j.\n        // A is a subarray of B if there exists a non-empty list C such that A = B[i:j] for some i and j.\n        // A is a subarray of B if there exists a non-empty list C such that A = B[i:j] for some i and j.\n        // A is a subarray of B if there exists a non-empty list C such that A = B[i:j] for some i and j.\n        // A is a subarray of B if there exists a non-empty list C such that A = B[i:j] for some i and j.\n        // A is a subarray of B if there exists a non-empty list C such that A = B[i:j] for some i and j.\n        // A is a subarray of B if there exists a non-empty list C such that A = B[i:j] for some i and j.\n        // A is a subarray of B if there exists a non-empty list C such that A = B[i:j] for some i and j.\n        // A is a subarray of B if there exists a non-empty list C such that A = B[i:j] for some i and j.\n        // A is a subarray of B if there exists a non-empty list C such that A = B[i:j] for some i and j.\n        // A is a subarray of B if there exists a non-empty list C such that A = B[i:j] for some i and j.\n        // A is a subarray of B if there exists a non-empty list C such that A = B[i:j] for some i and j.\n       ",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool match = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    match = false;\n                    break;\n                }\n            }\n            if (match) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        if (j == B.Count) {\n            return true;\n        } else {\n            return false;\n        }",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i <= B.Count - A.Count; i++) {\n            bool isSubArray = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSubArray = false;\n                    break;\n                }\n            }\n            if (isSubArray) {\n                return true;\n            }\n        }\n        return false;",
    "        int i = 0;\n        int j = 0;\n        while (i < A.Count && j < B.Count) {\n            if (A[i] == B[j]) {\n                i++;\n                j++;\n            } else {\n                i = i - j + 1;\n                j = 0;\n            }\n        }\n        return j == B.Count;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool found = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    found = false;\n                    break;\n                }\n            }\n            if (found) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool match = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    match = false;\n                    break;\n                }\n            }\n            if (match) {\n                return true;\n            }\n        }\n        return false;",
    "        if (A.Count == 0) return true;\n        if (B.Count == 0) return false;\n        if (A.Count > B.Count) return false;\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool match = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    match = false;\n                    break;\n                }\n            }\n            if (match) return true;\n        }\n        return false;",
    "        if (A.Count > B.Count) {\n            return false;\n        }\n        for (int i = 0; i < B.Count - A.Count + 1; i++) {\n            bool isSub = true;\n            for (int j = 0; j < A.Count; j++) {\n                if (A[j] != B[i + j]) {\n                    isSub = false;\n                    break;\n                }\n            }\n            if (isSub) {\n                return true;\n            }\n        }\n        return false;"
  ]
}
{
  "name": "mbpp_129_magic_square_test",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to calculate whether the matrix is a magic square.\n    public static bool MagicSquareTest(List<List<long>> my_matrix) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_129_magic_square_test.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(MagicSquareTest((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)7L, (long)12L, (long)1L, (long)14L}), (List<long>)new List<long>(new long[]{(long)2L, (long)13L, (long)8L, (long)11L}), (List<long>)new List<long>(new long[]{(long)16L, (long)3L, (long)10L, (long)5L}), (List<long>)new List<long>(new long[]{(long)9L, (long)6L, (long)15L, (long)4L})}))) == (true));\n    Debug.Assert(MagicSquareTest((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)2L, (long)7L, (long)6L}), (List<long>)new List<long>(new long[]{(long)9L, (long)5L, (long)1L}), (List<long>)new List<long>(new long[]{(long)4L, (long)3L, (long)8L})}))) == (true));\n    Debug.Assert(MagicSquareTest((new List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)2L, (long)7L, (long)6L}), (List<long>)new List<long>(new long[]{(long)9L, (long)5L, (long)1L}), (List<long>)new List<long>(new long[]{(long)4L, (long)3L, (long)7L})}))) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        // Check if the matrix is square.\n        if (my_matrix.Count != my_matrix[0].Count) {\n            return false;\n        }\n        // Check if the matrix is a magic square.\n        long sum = 0;\n        for (int i = 0; i < my_matrix.Count; i++) {\n            sum += my_matrix[0][i];\n        }\n        for (int i = 0; i < my_matrix.Count; i++) {\n            long row_sum = 0;\n            long col_sum = 0;\n            for (int j = 0; j < my_matrix.Count; j++) {\n                row_sum += my_matrix[i][j];\n                col_sum += my_matrix[j][i];\n            }\n            if (row_sum != sum || col_sum != sum) {\n                return false;\n            }\n        }\n        long diag_sum = 0;\n        long anti_diag_sum = 0;\n        for (int i = 0; i < my_matrix.Count; i++) {\n            diag_sum += my_matrix[i][i];\n            anti_diag_sum += my_matrix[i][my_matrix.Count - 1 - i];\n        }\n        if (diag_sum != sum || anti_diag_sum != sum) {\n            return false;\n        }\n        return true;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long sum = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n       ",
    "        // TODO: Implement this function.\n        return false;",
    "        long sum = 0;\n        for (int i = 0; i < my_matrix.Count; i++) {\n            sum += my_matrix[i][i];\n        }\n        for (int i = 0; i < my_matrix.Count; i++) {\n            long sum_row = 0;\n            long sum_col = 0;\n            for (int j = 0; j < my_matrix.Count; j++) {\n                sum_row += my_matrix[i][j];\n                sum_col += my_matrix[j][i];\n            }\n            if (sum_row != sum || sum_col != sum) {\n                return false;\n            }\n        }\n        return true;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long sum = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n       ",
    "        // Write your code here.\n        return false;",
    "        // Check if the matrix is a square matrix.\n        if (my_matrix.Count != my_matrix[0].Count) {\n            return false;\n        }\n        // Check if the matrix is a magic square.\n        long sum = 0;\n        for (int i = 0; i < my_matrix.Count; i++) {\n            sum += my_matrix[0][i];\n        }\n        for (int i = 0; i < my_matrix.Count; i++) {\n            long row_sum = 0;\n            long col_sum = 0;\n            for (int j = 0; j < my_matrix[i].Count; j++) {\n                row_sum += my_matrix[i][j];\n                col_sum += my_matrix[j][i];\n            }\n            if (row_sum != sum || col_sum != sum) {\n                return false;\n            }\n        }\n        long diag_sum1 = 0;\n        long diag_sum2 = 0;\n        for (int i = 0; i < my_matrix.Count; i++) {\n            diag_sum1 += my_matrix[i][i];\n            diag_sum2 += my_matrix[i][my_matrix.Count - i - 1];\n        }\n        if (diag_sum1 != sum || diag_sum2 != sum) {\n            return false;\n        }\n        return true;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long sum = 0;\n        for (int i = 0; i < my_matrix.Count; i++) {\n            sum += my_matrix[0][i];\n        }\n        for (int i = 0; i < my_matrix.Count; i++) {\n            long rowSum = 0;\n            long colSum = 0;\n            for (int j = 0; j < my_matrix.Count; j++) {\n                rowSum += my_matrix[i][j];\n                colSum += my_matrix[j][i];\n            }\n            if (rowSum != sum || colSum != sum) {\n                return false;\n            }\n        }\n        long diagSum = 0;\n        long diagSum2 = 0;\n        for (int i = 0; i < my_matrix.Count; i++) {\n            diagSum += my_matrix[i][i];\n            diagSum2 += my_matrix[i][my_matrix.Count - i - 1];\n        }\n        if (diagSum != sum || diagSum2 != sum) {\n            return false;\n        }\n        return true;",
    "        // Write your code here.\n        return false;",
    "        // Check that the matrix is square.\n        int n = my_matrix.Count;\n        if (n != my_matrix[0].Count) {\n            return false;\n        }\n        // Check that the matrix is filled with the integers 1 to n^2.\n        HashSet<long> my_set = new HashSet<long>();\n        for (int i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                my_set.Add(my_matrix[i][j]);\n            }\n        }\n        for (int i = 1; i <= n * n; i++) {\n            if (!my_set.Contains(i)) {\n                return false;\n            }\n        }\n        // Check that the sum of the rows and columns is the same.\n        long sum = 0;\n        for (int i = 0; i < n; i++) {\n            sum += my_matrix[0][i];\n        }\n        for (int i = 0; i < n; i++) {\n            long row_sum = 0;\n            long col_sum = 0;\n            for (int j = 0; j < n; j++) {\n                row_sum += my_matrix[i][j];\n                col_sum += my_matrix[j][i];\n            }\n            if (row_sum != sum || col_sum != sum) {\n                return false;\n            }\n        }\n        // Check that the sum of the diagonals is the same.\n        long diag_sum1 = 0;\n        long diag_sum2 = 0;\n        for (int i = 0; i < n; i++) {\n            diag_sum1 += my_matrix[i][i];\n            diag_sum2 += my_matrix[i][n - i - 1];\n        }\n        if (diag_sum1 != sum || diag_sum2 != sum) {\n            return false;\n        }\n        return true;",
    "        // Check if the matrix is a square matrix.\n        if (my_matrix.Count != my_matrix[0].Count) {\n            return false;\n        }\n        // Check if the matrix is a magic square.\n        long sum = 0;\n        for (int i = 0; i < my_matrix.Count; i++) {\n            sum += my_matrix[0][i];\n        }\n        for (int i = 0; i < my_matrix.Count; i++) {\n            long row_sum = 0;\n            long col_sum = 0;\n            for (int j = 0; j < my_matrix[i].Count; j++) {\n                row_sum += my_matrix[i][j];\n                col_sum += my_matrix[j][i];\n            }\n            if (row_sum != sum || col_sum != sum) {\n                return false;\n            }\n        }\n        long diag_sum1 = 0;\n        long diag_sum2 = 0;\n        for (int i = 0; i < my_matrix.Count; i++) {\n            diag_sum1 += my_matrix[i][i];\n            diag_sum2 += my_matrix[i][my_matrix.Count - 1 - i];\n        }\n        if (diag_sum1 != sum || diag_sum2 != sum) {\n            return false;\n        }\n        return true;",
    "        // Your code here.\n        return false;",
    "        // Check if the matrix is square\n        if (my_matrix.Count != my_matrix[0].Count) {\n            return false;\n        }\n        // Check if the matrix is a magic square\n        long magic_sum = my_matrix.Count * (my_matrix.Count * my_matrix.Count + 1) / 2;\n        for (int i = 0; i < my_matrix.Count; i++) {\n            long row_sum = 0;\n            long col_sum = 0;\n            for (int j = 0; j < my_matrix[i].Count; j++) {\n                row_sum += my_matrix[i][j];\n                col_sum += my_matrix[j][i];\n            }\n            if (row_sum != magic_sum || col_sum != magic_sum) {\n                return false;\n            }\n        }\n        return true;",
    "        // Your code here\n        return false;",
    "        // TODO: Implement your solution here\n        return false;",
    "        // Calculate the sum of the first row.\n        long sum = 0;\n        for (int i = 0; i < my_matrix[0].Count; i++) {\n            sum += my_matrix[0][i];\n        }\n        // Check if the sum of the other rows is the same.\n        for (int i = 1; i < my_matrix.Count; i++) {\n            long row_sum = 0;\n            for (int j = 0; j < my_matrix[i].Count; j++) {\n                row_sum += my_matrix[i][j];\n            }\n            if (row_sum != sum) {\n                return false;\n            }\n        }\n        // Check if the sum of the columns is the same.\n        for (int i = 0; i < my_matrix[0].Count; i++) {\n            long col_sum = 0;\n            for (int j = 0; j < my_matrix.Count; j++) {\n                col_sum += my_matrix[j][i];\n            }\n            if (col_sum != sum) {\n                return false;\n            }\n        }\n        // Check if the sum of the diagonals is the same.\n        long diag_sum = 0;\n        for (int i = 0; i < my_matrix.Count; i++) {\n            diag_sum += my_matrix[i][i];\n        }\n        if (diag_sum != sum) {\n            return false;\n        }\n        diag_sum = 0;\n        for (int i = 0; i < my_matrix.Count; i++) {\n            diag_sum += my_matrix[i][my_matrix.Count - i - 1];\n        }\n        if (diag_sum != sum) {\n            return false;\n        }\n        return true;",
    "        // Write your code here.\n        long sum = 0;\n        long sum1 = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long sum = 0;\n        long sum_diag = 0;\n        long sum_diag2 = 0;\n        for (int i = 0; i < my_matrix.Count; i++) {\n            for (int j = 0; j < my_matrix[i].Count; j++) {\n                sum += my_matrix[i][j];\n                if (i == j) {\n                    sum_diag += my_matrix[i][j];\n                }\n                if (i + j == my_matrix.Count - 1) {\n                    sum_diag2 += my_matrix[i][j];\n                }\n            }\n        }\n        if (sum_diag != sum || sum_diag2 != sum) {\n            return false;\n        }\n        for (int i = 0; i < my_matrix.Count; i++) {\n            long sum_row = 0;\n            long sum_col = 0;\n            for (int j = 0; j < my_matrix[i].Count; j++) {\n                sum_row += my_matrix[i][j];\n                sum_col += my_matrix[j][i];\n            }\n            if (sum_row != sum || sum_col != sum) {\n                return false;\n            }\n        }\n        return true;",
    "        // Check if the matrix is square.\n        if (my_matrix.Count != my_matrix[0].Count) {\n            return false;\n        }\n        // Check if the matrix is a magic square.\n        long sum = 0;\n        for (int i = 0; i < my_matrix.Count; i++) {\n            sum += my_matrix[0][i];\n        }\n        for (int i = 0; i < my_matrix.Count; i++) {\n            long row_sum = 0;\n            long col_sum = 0;\n            for (int j = 0; j < my_matrix[i].Count; j++) {\n                row_sum += my_matrix[i][j];\n                col_sum += my_matrix[j][i];\n            }\n            if (row_sum != sum || col_sum != sum) {\n                return false;\n            }\n        }\n        long diag_sum = 0;\n        long anti_diag_sum = 0;\n        for (int i = 0; i < my_matrix.Count; i++) {\n            diag_sum += my_matrix[i][i];\n            anti_diag_sum += my_matrix[i][my_matrix.Count - i - 1];\n        }\n        if (diag_sum != sum || anti_diag_sum != sum) {\n            return false;\n        }\n        return true;",
    "        // Your code here.\n        return false;"
  ]
}
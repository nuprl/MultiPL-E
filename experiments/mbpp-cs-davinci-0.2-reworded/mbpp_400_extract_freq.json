{
  "name": "mbpp_400_extract_freq",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to extract the number of unique tuples in the given list.\n    public static long ExtractFreq(List<long> test_list) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_400_extract_freq.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ExtractFreq((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(3L, 4L), (Tuple<long, long>)Tuple.Create(1L, 2L), (Tuple<long, long>)Tuple.Create(4L, 3L), (Tuple<long, long>)Tuple.Create(5L, 6L)}))) == (3L));\n    Debug.Assert(ExtractFreq((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(4L, 15L), (Tuple<long, long>)Tuple.Create(2L, 3L), (Tuple<long, long>)Tuple.Create(5L, 4L), (Tuple<long, long>)Tuple.Create(6L, 7L)}))) == (4L));\n    Debug.Assert(ExtractFreq((new List<long>(new Tuple<long, long>[]{(Tuple<long, long>)Tuple.Create(5L, 16L), (Tuple<long, long>)Tuple.Create(2L, 3L), (Tuple<long, long>)Tuple.Create(6L, 5L), (Tuple<long, long>)Tuple.Create(6L, 9L)}))) == (4L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        // Your code goes here.\n        return 0;",
    "        long freq = 0;\n        long[] test_array = test_list.ToArray();\n        Array.Sort(test_array);\n        for (int i = 0; i < test_array.Length; i++) {\n            for (int j = i + 1; j < test_array.Length; j++) {\n                for (int k = j + 1; k < test_array.Length; k++) {\n                    if (test_array[i] + test_array[j] + test_array[k] == 0) {\n                        freq++;\n                    }\n                }\n            }\n        }\n        return freq;",
    "        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long freq = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    freq++;\n                }\n            }\n        }\n        return freq;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long count = 0;\n        Dictionary<long, long> dict = new Dictionary<long, long>();\n        foreach (long item in test_list) {\n            if (dict.ContainsKey(item)) {\n                dict[item]++;\n            } else {\n                dict.Add(item, 1);\n            }\n        }\n        foreach (long item in dict.Keys) {\n            count += dict[item] * (dict[item] - 1) / 2;\n        }\n        return count;",
    "        // Your code here\n        return 0;",
    "        long freq = 0;\n        // Your code here.\n        return freq;",
    "        long result = 0;\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        return result;",
    "        // Write your code here\n        long count = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long freq = 0;\n        // Write your code here.\n        return freq;",
    "        long freq = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                for (int k = j + 1; k < test_list.Count; k++) {\n                    if (test_list[i] + test_list[j] + test_list[k] == 0) {\n                        freq++;\n                    }\n                }\n            }\n        }\n        return freq;",
    "        long result = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                if (test_list[i] == test_list[j]) {\n                    result++;\n                }\n            }\n        }\n        return result;",
    "        long freq = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                for (int k = j + 1; k < test_list.Count; k++) {\n                    if (test_list[i] + test_list[j] + test_list[k] == 0) {\n                        freq++;\n                    }\n                }\n            }\n        }\n        return freq;",
    "        long freq = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            long a = test_list[i];\n            for (int j = i + 1; j < test_list.Count; j++) {\n                long b = test_list[j];\n                for (int k = j + 1; k < test_list.Count; k++) {\n                    long c = test_list[k];\n                    if (a + b + c == 0) {\n                        freq++;\n                    }\n                }\n            }\n        }\n        return freq;",
    "        long freq = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                for (int k = j + 1; k < test_list.Count; k++) {\n                    if (test_list[i] == test_list[j] || test_list[i] == test_list[k] || test_list[j] == test_list[k]) {\n                        continue;\n                    }\n                    freq++;\n                }\n            }\n        }\n        return freq;",
    "        long freq = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                for (int k = j + 1; k < test_list.Count; k++) {\n                    if (test_list[i] + test_list[j] + test_list[k] == 0) {\n                        freq++;\n                    }\n                }\n            }\n        }\n        return freq;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        long freq = 0;\n        for (int i = 0; i < test_list.Count; i++) {\n            for (int j = i + 1; j < test_list.Count; j++) {\n                for (int k = j + 1; k < test_list.Count; k++) {\n                    if (test_list[i] + test_list[j] + test_list[k] == 0) {\n                        freq++;\n                    }\n                }\n            }\n        }\n        return freq;",
    "        long result = 0;\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        return result;",
    "        long result = 0;\n        // Write your code here.\n        return result;"
  ]
}
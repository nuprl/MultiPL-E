{
  "name": "mbpp_801_test_three_equal",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_801_test_three_equal.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a6e9d9fb180a4563b6d6752bb9eff635>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || z == x) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return x == y && y == z ? 3 : x == y || y == z || x == z ? 2 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || x == z || y == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x != y && y != z && x != z) {\n            return 0;\n        } else {\n            return 2;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return (x == y) && (y == z) ? 3 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0373106566304b8ca5e062da4dc5dc86>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (z == x) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a361b8ce20f64d3dbc7799e75f659c37>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) count++;\n        if (x == z) count++;\n        if (y == z) count++;\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <de1920501098408895980e7b064e43b8>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || z == x) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count += 1;\n        }\n        if (x == z) {\n            count += 1;\n        }\n        if (y == z) {\n            count += 1;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f60ed4a99f494f3cafeff548e8470e78>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a6e9d9fb180a4563b6d6752bb9eff635>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        else if (x == y || y == z || x == z) {\n            return 2;\n        }\n        else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123394,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z)\n            return 3;\n        if (x == y || y == z || x == z)\n            return 2;\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return (x == y && y == z) ? 3 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b89926b0acf44a62ab44d77c50217267>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        // Your code here\n        if (x == y && y == z) {\n            return 3;\n        }\n        else if (x == y || y == z || x == z) {\n            return 2;\n        }\n        else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a6e9d9fb180a4563b6d6752bb9eff635>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || z == x) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) count++;\n        if (x == z) count++;\n        if (y == z) count++;\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <de1920501098408895980e7b064e43b8>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) return 3;\n        if (x == y || y == z || x == z) return 2;\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || x == z || y == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a6e9d9fb180a4563b6d6752bb9eff635>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a6e9d9fb180a4563b6d6752bb9eff635>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (z == x) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a361b8ce20f64d3dbc7799e75f659c37>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return (x == y) ? (x == z) ? 3 : 2 : (y == z) ? 2 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a6e9d9fb180a4563b6d6752bb9eff635>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count += 1;\n        }\n        if (y == z) {\n            count += 1;\n        }\n        if (x == z) {\n            count += 1;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <66f014a186d343c991710c1eecc0b276>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || z == x) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        else if (x == y || y == z || x == z) {\n            return 2;\n        }\n        else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123394,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) count++;\n        if (x == z) count++;\n        if (y == z) count++;\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <de1920501098408895980e7b064e43b8>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y && y == z) {\n            count = 3;\n        } else if (x == y || y == z || x == z) {\n            count = 2;\n        } else {\n            count = 0;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return (x == y && y == z) ? 3 : (x == y || y == z || x == z) ? 2 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || z == x) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        else if (x == y || y == z || x == z) {\n            return 2;\n        }\n        else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123394,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y && x == z) {\n            count = 3;\n        } else if (x == y || x == z || y == z) {\n            count = 2;\n        } else {\n            count = 0;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (z == x) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a361b8ce20f64d3dbc7799e75f659c37>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (z == x) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a361b8ce20f64d3dbc7799e75f659c37>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a6e9d9fb180a4563b6d6752bb9eff635>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y && x == z) {\n            count = 3;\n        } else if (x == y || x == z || y == z) {\n            count = 2;\n        } else {\n            count = 0;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a6e9d9fb180a4563b6d6752bb9eff635>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y && y == z) {\n            count = 3;\n        } else if (x == y || y == z || x == z) {\n            count = 2;\n        } else {\n            count = 0;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || z == x) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (z == x) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a361b8ce20f64d3dbc7799e75f659c37>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a6e9d9fb180a4563b6d6752bb9eff635>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a6e9d9fb180a4563b6d6752bb9eff635>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y && y == z) {\n            count = 3;\n        } else if (x == y || y == z || x == z) {\n            count = 2;\n        } else {\n            count = 0;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || z == x) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || z == x) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || z == x) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (z == x) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a361b8ce20f64d3dbc7799e75f659c37>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a6e9d9fb180a4563b6d6752bb9eff635>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) count++;\n        if (x == z) count++;\n        if (y == z) count++;\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <de1920501098408895980e7b064e43b8>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count += 1;\n        }\n        if (y == z) {\n            count += 1;\n        }\n        if (z == x) {\n            count += 1;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b8c59291b4ce4572b44b2d13779673bb>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a6e9d9fb180a4563b6d6752bb9eff635>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || z == x) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || z == x) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || z == x) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return (x == y && y == z) ? 3 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b89926b0acf44a62ab44d77c50217267>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (z == x) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a361b8ce20f64d3dbc7799e75f659c37>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (z == x) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a361b8ce20f64d3dbc7799e75f659c37>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a6e9d9fb180a4563b6d6752bb9eff635>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a6e9d9fb180a4563b6d6752bb9eff635>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) return 3;\n        if (x == y || y == z || x == z) return 2;\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a6e9d9fb180a4563b6d6752bb9eff635>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (z == x) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a361b8ce20f64d3dbc7799e75f659c37>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        return x == y && y == z ? 3 : x == y || y == z || z == x ? 2 : 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) count++;\n        if (x == z) count++;\n        if (y == z) count++;\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <de1920501098408895980e7b064e43b8>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        else if (x == y || y == z || x == z) {\n            return 2;\n        }\n        else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123394,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y && x == z) {\n            count = 3;\n        } else if (x == y || x == z || y == z) {\n            count = 2;\n        } else {\n            count = 0;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || z == x) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a6e9d9fb180a4563b6d6752bb9eff635>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || z == x) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || z == x) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || z == x) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) count++;\n        if (x == z) count++;\n        if (y == z) count++;\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1666123395,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <de1920501098408895980e7b064e43b8>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || z == x) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        } else if (x == y || y == z || x == z) {\n            return 2;\n        } else {\n            return 0;\n        }\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        long count = 0;\n        if (x == y) {\n            count++;\n        }\n        if (x == z) {\n            count++;\n        }\n        if (y == z) {\n            count++;\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510265,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cfd16940d26c422eb931eb9ab04db8f9>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to count the number of equal numbers from three given integers.\n    public static long TestThreeEqual(long x, long y, long z) {\n        if (x == y && y == z) {\n            return 3;\n        }\n        if (x == y || y == z || x == z) {\n            return 2;\n        }\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TestThreeEqual((1L), (1L), (1L)) == (3L));\n    Debug.Assert(TestThreeEqual((-1L), (-2L), (-3L)) == (0L));\n    Debug.Assert(TestThreeEqual((1L), (2L), (2L)) == (2L));\n    }\n\n}\n",
      "timestamp": 1665510264,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
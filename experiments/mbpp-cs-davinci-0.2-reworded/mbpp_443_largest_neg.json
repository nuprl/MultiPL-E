{
  "name": "mbpp_443_largest_neg",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a csthon function to find the largest negative number from the given list.\n    public static long LargestNeg(List<long> list1) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_443_largest_neg.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestNeg((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)-4L, (long)-6L}))) == (-6L));\n    Debug.Assert(LargestNeg((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)-8L, (long)-9L}))) == (-9L));\n    Debug.Assert(LargestNeg((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)-1L}))) == (-1L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long largest = 0;\n        foreach (long num in list1) {\n            if (num < 0 && num > largest) {\n                largest = num;\n            }\n        }\n        return largest;",
    "        long largest = 0;\n        foreach (long i in list1) {\n            if (i < 0) {\n                if (i > largest) {\n                    largest = i;\n                }\n            }\n        }\n        return largest;",
    "        long largest = 0;\n        foreach (long num in list1) {\n            if (num < 0 && num > largest) {\n                largest = num;\n            }\n        }\n        return largest;",
    "        long largest = 0;\n        foreach (long num in list1) {\n            if (num < 0 && num > largest) {\n                largest = num;\n            }\n        }\n        return largest;",
    "        long largest = 0;\n        foreach (long num in list1) {\n            if (num < 0 && num > largest) {\n                largest = num;\n            }\n        }\n        return largest;",
    "        long largest = 0;\n        foreach (long num in list1) {\n            if (num < 0 && num > largest) {\n                largest = num;\n            }\n        }\n        return largest;",
    "        long largest = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] < 0 && list1[i] > largest) {\n                largest = list1[i];\n            }\n        }\n        return largest;",
    "        long largest = 0;\n        foreach (long i in list1) {\n            if (i < 0 && i > largest) {\n                largest = i;\n            }\n        }\n        return largest;",
    "        long largest = 0;\n        for (int i = 0; i < list1.Count; i++) {\n            if (list1[i] < 0) {\n                if (list1[i] > largest) {\n                    largest = list1[i];\n                }\n            }\n        }\n        return largest;",
    "        long largest = 0;\n        foreach (long i in list1) {\n            if (i < 0) {\n                if (i > largest) {\n                    largest = i;\n                }\n            }\n        }\n        return largest;",
    "        long largest = 0;\n        foreach (long i in list1) {\n            if (i < 0) {\n                if (i > largest) {\n                    largest = i;\n                }\n            }\n        }\n        return largest;",
    "        long max = 0;\n        foreach (long num in list1) {\n            if (num < 0 && num > max) {\n                max = num;\n            }\n        }\n        return max;",
    "        long largest = 0;\n        foreach (long num in list1) {\n            if (num < 0 && num > largest) {\n                largest = num;\n            }\n        }\n        return largest;",
    "        long largest = 0;\n        foreach (long num in list1) {\n            if (num < largest) {\n                largest = num;\n            }\n        }\n        return largest;",
    "        long largest = 0;\n        foreach (long num in list1) {\n            if (num < 0 && num > largest) {\n                largest = num;\n            }\n        }\n        return largest;",
    "        long largest = 0;\n        foreach (long num in list1) {\n            if (num < 0 && num > largest) {\n                largest = num;\n            }\n        }\n        return largest;",
    "        return list1.Where(x => x < 0).Max();",
    "        long largest = 0;\n        foreach (long num in list1) {\n            if (num < 0 && num > largest) {\n                largest = num;\n            }\n        }\n        return largest;",
    "        long largest = 0;\n        foreach (long num in list1) {\n            if (num < largest) {\n                largest = num;\n            }\n        }\n        return largest;",
    "        long largest = 0;\n        foreach (long i in list1) {\n            if (i < 0 && i > largest) {\n                largest = i;\n            }\n        }\n        return largest;"
  ]
}
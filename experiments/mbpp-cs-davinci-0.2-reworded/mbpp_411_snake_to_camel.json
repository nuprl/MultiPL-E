{
  "name": "mbpp_411_snake_to_camel",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to convert the given snake case string to camel case string.\n    public static string SnakeToCamel(string word) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_411_snake_to_camel.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(SnakeToCamel((\"android_tv\")).Equals((\"AndroidTv\")));\n    Debug.Assert(SnakeToCamel((\"google_pixel\")).Equals((\"GooglePixel\")));\n    Debug.Assert(SnakeToCamel((\"apple_watch\")).Equals((\"AppleWatch\")));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(w.Substring(0, 1).ToUpper() + w.Substring(1).ToLower());\n        }\n        return sb.ToString();",
    "        string[] words = word.Split('_');\n        string camel = \"\";\n        foreach (string w in words) {\n            camel += w.Substring(0, 1).ToUpper() + w.Substring(1);\n        }\n        return camel;",
    "        var camel = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            camel.Append(char.ToUpper(w[0]));\n            camel.Append(w.Substring(1));\n        }\n        return camel.ToString();",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        result.Append(words[0]);\n        for (int i = 1; i < words.Length; i++) {\n            result.Append(words[i].Substring(0, 1).ToUpper());\n            result.Append(words[i].Substring(1));\n        }\n        return result.ToString();",
    "        // Write your code here.\n        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            result.Append(w.Substring(0, 1).ToUpper() + w.Substring(1));\n        }\n        return result.ToString();",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        result.Append(words[0]);\n        for (int i = 1; i < words.Length; i++) {\n            result.Append(words[i].Substring(0, 1).ToUpper());\n            result.Append(words[i].Substring(1));\n        }\n        return result.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n        }\n        return result;",
    "        string result = \"\";\n        for (int i = 0; i < word.Length; i++) {\n            if (word[i] == '_') {\n                result += char.ToUpper(word[i + 1]);\n                i++;\n            } else {\n                result += word[i];\n            }\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i].ToLower();\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1).ToLower();\n            }\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(w.Substring(0, 1).ToUpper());\n            sb.Append(w.Substring(1).ToLower());\n        }\n        return sb.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(w.Substring(0, 1).ToUpper());\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        foreach (string w in words) {\n            result += w.Substring(0, 1).ToUpper() + w.Substring(1);\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        var camel = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            camel.Append(char.ToUpper(w[0]));\n            camel.Append(w.Substring(1));\n        }\n        return camel.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(char.ToUpper(w[0]));\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(char.ToUpper(w[0]));\n            sb.Append(w.Substring(1).ToLower());\n        }\n        return sb.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(w.Substring(0, 1).ToUpper() + w.Substring(1));\n        }\n        return sb.ToString();",
    "        var camel = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            camel.Append(w.Substring(0, 1).ToUpper());\n            camel.Append(w.Substring(1));\n        }\n        return camel.ToString();",
    "        string result = \"\";\n        for (int i = 0; i < word.Length; i++) {\n            if (word[i] == '_') {\n                result += char.ToUpper(word[i + 1]);\n                i++;\n            } else {\n                result += word[i];\n            }\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(char.ToUpper(w[0]));\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result.Append(words[i]);\n            } else {\n                result.Append(words[i].Substring(0, 1).ToUpper());\n                result.Append(words[i].Substring(1));\n            }\n        }\n        return result.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(w.Substring(0, 1).ToUpper());\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        bool isFirst = true;\n        foreach (char c in word) {\n            if (c == '_') {\n                isFirst = true;\n            } else {\n                if (isFirst) {\n                    sb.Append(Char.ToUpper(c));\n                    isFirst = false;\n                } else {\n                    sb.Append(c);\n                }\n            }\n        }\n        return sb.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string camel = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                camel += words[i];\n            } else {\n                camel += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return camel;",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(char.ToUpper(w[0]));\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        bool isFirst = true;\n        foreach (char c in word) {\n            if (c == '_') {\n                isFirst = true;\n            } else {\n                if (isFirst) {\n                    sb.Append(char.ToUpper(c));\n                    isFirst = false;\n                } else {\n                    sb.Append(c);\n                }\n            }\n        }\n        return sb.ToString();",
    "        string[] words = word.Split('_');\n        string camel = \"\";\n        foreach (string w in words) {\n            camel += w.Substring(0, 1).ToUpper() + w.Substring(1);\n        }\n        return camel;",
    "        var result = new StringBuilder();\n        var isFirst = true;\n        foreach (var c in word) {\n            if (c == '_') {\n                isFirst = true;\n            } else if (isFirst) {\n                result.Append(char.ToUpper(c));\n                isFirst = false;\n            } else {\n                result.Append(c);\n            }\n        }\n        return result.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        foreach (string w in words) {\n            result += w.Substring(0, 1).ToUpper() + w.Substring(1);\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(w.Substring(0, 1).ToUpper() + w.Substring(1));\n        }\n        return sb.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(char.ToUpper(w[0]));\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        sb.Append(words[0]);\n        for (int i = 1; i < words.Length; i++) {\n            sb.Append(words[i].Substring(0, 1).ToUpper());\n            sb.Append(words[i].Substring(1));\n        }\n        return sb.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(char.ToUpper(w[0]));\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        string[] words = word.Split('_');\n        string camel = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                camel += words[i];\n            } else {\n                camel += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return camel;",
    "        string result = \"\";\n        bool isFirst = true;\n        foreach (char c in word) {\n            if (c == '_') {\n                isFirst = true;\n            } else {\n                if (isFirst) {\n                    result += c.ToString().ToUpper();\n                    isFirst = false;\n                } else {\n                    result += c;\n                }\n            }\n        }\n        return result;",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            result.Append(char.ToUpper(w[0]));\n            result.Append(w.Substring(1));\n        }\n        return result.ToString();",
    "        var sb = new StringBuilder();\n        var isFirst = true;\n        foreach (var c in word) {\n            if (c == '_') {\n                isFirst = true;\n            } else {\n                sb.Append(isFirst ? char.ToUpper(c) : c);\n                isFirst = false;\n            }\n        }\n        return sb.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string camel = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                camel += words[i];\n            } else {\n                camel += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return camel;",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(char.ToUpper(w[0]));\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string camel = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                camel += words[i];\n            } else {\n                camel += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return camel;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        foreach (string w in words) {\n            result += w.Substring(0, 1).ToUpper() + w.Substring(1);\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        foreach (string w in words) {\n            result += w.Substring(0, 1).ToUpper() + w.Substring(1);\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(w.Substring(0, 1).ToUpper());\n            sb.Append(w.Substring(1).ToLower());\n        }\n        return sb.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(w.Substring(0, 1).ToUpper() + w.Substring(1));\n        }\n        return sb.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(w.Substring(0, 1).ToUpper() + w.Substring(1));\n        }\n        return sb.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        // Write your code here\n        string result = \"\";\n        for (int i = 0; i < word.Length; i++) {\n            if (word[i] == '_') {\n                result += Char.ToUpper(word[i + 1]);\n                i++;\n            } else {\n                result += word[i];\n            }\n        }\n        return result;",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            result.Append(w.Substring(0, 1).ToUpper() + w.Substring(1));\n        }\n        return result.ToString();",
    "        // Write your code here\n        string result = \"\";\n        for (int i = 0; i < word.Length; i++) {\n            if (word[i] == '_') {\n                result += char.ToUpper(word[i + 1]);\n                i++;\n            } else {\n                result += word[i];\n            }\n        }\n        return result;",
    "        string result = \"\";\n        bool isFirst = true;\n        foreach (char c in word) {\n            if (c == '_') {\n                isFirst = true;\n            } else {\n                if (isFirst) {\n                    result += char.ToUpper(c);\n                    isFirst = false;\n                } else {\n                    result += c;\n                }\n            }\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.Length; i++) {\n            if (word[i] == '_') {\n                sb.Append(Char.ToUpper(word[i + 1]));\n                i++;\n            } else {\n                sb.Append(word[i]);\n            }\n        }\n        return sb.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        foreach (string w in words) {\n            result += w.Substring(0, 1).ToUpper() + w.Substring(1);\n        }\n        return result;",
    "        // Convert the string to a char array.\n        char[] letters = word.ToCharArray();\n        // Loop through the array.\n        for (int i = 0; i < letters.Length; i++) {\n            // If the current character is an underscore.\n            if (letters[i] == '_') {\n                // Convert the next character to uppercase.\n                letters[i + 1] = char.ToUpper(letters[i + 1]);\n                // Remove the underscore.\n                letters = letters.Where((val, idx) => idx != i).ToArray();\n            }\n        }\n        // Return the new string.\n        return new string(letters);",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        result.Append(words[0]);\n        for (var i = 1; i < words.Length; i++) {\n            result.Append(words[i].Substring(0, 1).ToUpper() + words[i].Substring(1));\n        }\n        return result.ToString();",
    "        string result = \"\";\n        bool isFirst = true;\n        foreach (char c in word) {\n            if (c == '_') {\n                isFirst = true;\n            } else {\n                if (isFirst) {\n                    result += Char.ToUpper(c);\n                    isFirst = false;\n                } else {\n                    result += c;\n                }\n            }\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        foreach (string w in words) {\n            result += w.Substring(0, 1).ToUpper() + w.Substring(1);\n        }\n        return result;",
    "        string result = \"\";\n        for (int i = 0; i < word.Length; i++) {\n            if (word[i] == '_') {\n                result += char.ToUpper(word[i + 1]);\n                i++;\n            } else {\n                result += word[i];\n            }\n        }\n        return result;",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        result.Append(words[0]);\n        for (int i = 1; i < words.Length; i++) {\n            result.Append(words[i].Substring(0, 1).ToUpper() + words[i].Substring(1));\n        }\n        return result.ToString();",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            result.Append(w.Substring(0, 1).ToUpper());\n            result.Append(w.Substring(1));\n        }\n        return result.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(char.ToUpper(w[0]));\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        string[] words = word.Split('_');\n        string camel = words[0];\n        for (int i = 1; i < words.Length; i++) {\n            camel += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n        }\n        return camel;",
    "        string[] words = word.Split('_');\n        string result = words[0];\n        for (int i = 1; i < words.Length; i++) {\n            result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        bool nextUpper = false;\n        foreach (char c in word) {\n            if (c == '_') {\n                nextUpper = true;\n            } else {\n                if (nextUpper) {\n                    sb.Append(char.ToUpper(c));\n                    nextUpper = false;\n                } else {\n                    sb.Append(c);\n                }\n            }\n        }\n        return sb.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(w.Substring(0, 1).ToUpper() + w.Substring(1));\n        }\n        return sb.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        sb.Append(words[0]);\n        for (int i = 1; i < words.Length; i++) {\n            sb.Append(char.ToUpper(words[i][0]));\n            sb.Append(words[i].Substring(1));\n        }\n        return sb.ToString();",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            result.Append(w.Substring(0, 1).ToUpper() + w.Substring(1));\n        }\n        return result.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(char.ToUpper(w[0]));\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(w.Substring(0, 1).ToUpper());\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        // Write your code here\n        string[] words = word.Split('_');\n        string camel = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                camel += words[i];\n            } else {\n                camel += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return camel;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(w[0].ToString().ToUpper());\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        // Write your code here\n        return \"\";",
    "        string result = \"\";\n        bool isUpper = false;\n        foreach (char c in word) {\n            if (c == '_') {\n                isUpper = true;\n                continue;\n            }\n            if (isUpper) {\n                result += char.ToUpper(c);\n                isUpper = false;\n            } else {\n                result += c;\n            }\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(w.Substring(0, 1).ToUpper() + w.Substring(1));\n        }\n        return sb.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(char.ToUpper(w[0]));\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        // Write your code here\n        return null;",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            result.Append(char.ToUpper(w[0]));\n            result.Append(w.Substring(1).ToLower());\n        }\n        return result.ToString();",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            result.Append(w.Substring(0, 1).ToUpper() + w.Substring(1).ToLower());\n        }\n        return result.ToString();",
    "        string result = \"\";\n        for (int i = 0; i < word.Length; i++) {\n            if (word[i] == '_') {\n                result += Char.ToUpper(word[i + 1]);\n                i++;\n            } else {\n                result += word[i];\n            }\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        string result = \"\";\n        bool isUpper = false;\n        for (int i = 0; i < word.Length; i++) {\n            if (word[i] == '_') {\n                isUpper = true;\n            } else {\n                if (isUpper) {\n                    result += Char.ToUpper(word[i]);\n                    isUpper = false;\n                } else {\n                    result += word[i];\n                }\n            }\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        var isFirst = true;\n        foreach (var c in word) {\n            if (c == '_') {\n                isFirst = true;\n            } else {\n                if (isFirst) {\n                    sb.Append(char.ToUpper(c));\n                    isFirst = false;\n                } else {\n                    sb.Append(c);\n                }\n            }\n        }\n        return sb.ToString();",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            result.Append(w.Substring(0, 1).ToUpper() + w.Substring(1));\n        }\n        return result.ToString();",
    "        // Write your code here\n        return word;",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(w.Substring(0, 1).ToUpper() + w.Substring(1).ToLower());\n        }\n        return sb.ToString();",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            result.Append(w.Substring(0, 1).ToUpper() + w.Substring(1));\n        }\n        return result.ToString();",
    "        var sb = new StringBuilder();\n        for (int i = 0; i < word.Length; i++) {\n            if (word[i] == '_') {\n                sb.Append(word[i + 1].ToString().ToUpper());\n                i++;\n            } else {\n                sb.Append(word[i]);\n            }\n        }\n        return sb.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(char.ToUpper(w[0]));\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        result.Append(words[0]);\n        for (int i = 1; i < words.Length; i++) {\n            result.Append(words[i].Substring(0, 1).ToUpper() + words[i].Substring(1));\n        }\n        return result.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(w.Substring(0, 1).ToUpper() + w.Substring(1));\n        }\n        return sb.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            string w = words[i];\n            if (i == 0) {\n                result += w;\n            } else {\n                result += w.Substring(0, 1).ToUpper() + w.Substring(1);\n            }\n        }\n        return result;",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            result.Append(w.Substring(0, 1).ToUpper());\n            result.Append(w.Substring(1));\n        }\n        return result.ToString();",
    "        string[] words = word.Split('_');\n        string camel = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                camel += words[i];\n            } else {\n                camel += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return camel;",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        result.Append(words[0]);\n        for (int i = 1; i < words.Length; i++) {\n            result.Append(words[i].Substring(0, 1).ToUpper());\n            result.Append(words[i].Substring(1));\n        }\n        return result.ToString();",
    "        string result = \"\";\n        bool isFirst = true;\n        for (int i = 0; i < word.Length; i++) {\n            if (word[i] == '_') {\n                isFirst = true;\n            } else {\n                if (isFirst) {\n                    result += word[i].ToString().ToUpper();\n                    isFirst = false;\n                } else {\n                    result += word[i];\n                }\n            }\n        }\n        return result;",
    "        var camel = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            camel.Append(char.ToUpper(w[0]));\n            camel.Append(w.Substring(1));\n        }\n        return camel.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(char.ToUpper(w[0]));\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            result.Append(char.ToUpper(w[0]));\n            result.Append(w.Substring(1).ToLower());\n        }\n        return result.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        // TODO: Implement this function\n        return \"\";",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        foreach (string w in words) {\n            result += w.Substring(0, 1).ToUpper() + w.Substring(1);\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string res = \"\";\n        foreach (string w in words) {\n            res += w.Substring(0, 1).ToUpper() + w.Substring(1);\n        }\n        return res;",
    "        // TODO: Implement this function.\n        return \"\";",
    "        string[] words = word.Split('_');\n        string camel = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                camel += words[i];\n            } else {\n                camel += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return camel;",
    "        var result = new StringBuilder();\n        var isFirst = true;\n        foreach (var c in word) {\n            if (c == '_') {\n                isFirst = true;\n            } else if (isFirst) {\n                result.Append(char.ToUpper(c));\n                isFirst = false;\n            } else {\n                result.Append(c);\n            }\n        }\n        return result.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        result.Append(words[0]);\n        for (int i = 1; i < words.Length; i++) {\n            result.Append(words[i].Substring(0, 1).ToUpper() + words[i].Substring(1));\n        }\n        return result.ToString();",
    "        var camel = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            camel.Append(char.ToUpper(w[0]));\n            camel.Append(w.Substring(1));\n        }\n        return camel.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        foreach (string w in words) {\n            result += w.Substring(0, 1).ToUpper() + w.Substring(1).ToLower();\n        }\n        return result;",
    "        // Write your code here\n        StringBuilder sb = new StringBuilder();\n        bool isFirst = true;\n        foreach (char c in word) {\n            if (c == '_') {\n                isFirst = true;\n            } else {\n                if (isFirst) {\n                    sb.Append(Char.ToUpper(c));\n                    isFirst = false;\n                } else {\n                    sb.Append(c);\n                }\n            }\n        }\n        return sb.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(char.ToUpper(w[0]));\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(w.Substring(0, 1).ToUpper() + w.Substring(1));\n        }\n        return sb.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(char.ToUpper(w[0]));\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i][0].ToString().ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        result.Append(words[0]);\n        for (int i = 1; i < words.Length; i++) {\n            result.Append(words[i].Substring(0, 1).ToUpper() + words[i].Substring(1));\n        }\n        return result.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            result.Append(w.Substring(0, 1).ToUpper() + w.Substring(1));\n        }\n        return result.ToString();",
    "        // Write your code here\n        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        string result = \"\";\n        for (int i = 0; i < word.Length; i++) {\n            if (word[i] == '_') {\n                result += char.ToUpper(word[i + 1]);\n                i++;\n            } else {\n                result += word[i];\n            }\n        }\n        return result;",
    "        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        var sb = new StringBuilder();\n        var isFirst = true;\n        foreach (var c in word) {\n            if (c == '_') {\n                isFirst = true;\n            } else {\n                if (isFirst) {\n                    sb.Append(Char.ToUpper(c));\n                    isFirst = false;\n                } else {\n                    sb.Append(c);\n                }\n            }\n        }\n        return sb.ToString();",
    "        // Write your code here.\n        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            result.Append(char.ToUpper(w[0]));\n            result.Append(w.Substring(1));\n        }\n        return result.ToString();",
    "        // Write your code here\n        return \"\";",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(char.ToUpper(w[0]));\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        sb.Append(words[0]);\n        for (int i = 1; i < words.Length; i++) {\n            sb.Append(words[i].Substring(0, 1).ToUpper());\n            sb.Append(words[i].Substring(1));\n        }\n        return sb.ToString();",
    "        // Write your code here\n        string[] words = word.Split('_');\n        string camel = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                camel += words[i];\n            } else {\n                camel += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return camel;",
    "        string[] words = word.Split('_');\n        string camel = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                camel += words[i];\n            } else {\n                camel += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return camel;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        foreach (string w in words) {\n            result += w.Substring(0, 1).ToUpper() + w.Substring(1);\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(char.ToUpper(w[0]));\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        // Your code goes here.\n        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        // Write your code here\n        return word;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        foreach (string w in words) {\n            result += w.Substring(0, 1).ToUpper() + w.Substring(1);\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        sb.Append(words[0]);\n        for (int i = 1; i < words.Length; i++) {\n            sb.Append(words[i].Substring(0, 1).ToUpper());\n            sb.Append(words[i].Substring(1));\n        }\n        return sb.ToString();",
    "        string result = \"\";\n        for (int i = 0; i < word.Length; i++) {\n            if (word[i] == '_') {\n                result += char.ToUpper(word[i + 1]);\n                i++;\n            } else {\n                result += word[i];\n            }\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string camel = \"\";\n        foreach (string w in words) {\n            camel += w.Substring(0, 1).ToUpper() + w.Substring(1);\n        }\n        return camel;",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(char.ToUpper(w[0]));\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(char.ToUpper(w[0]));\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        result.Append(words[0]);\n        for (int i = 1; i < words.Length; i++) {\n            result.Append(words[i].Substring(0, 1).ToUpper());\n            result.Append(words[i].Substring(1));\n        }\n        return result.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i].ToLower();\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1).ToLower();\n            }\n        }\n        return result;",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            result.Append(w.Substring(0, 1).ToUpper() + w.Substring(1));\n        }\n        return result.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        foreach (string w in words) {\n            result += w.Substring(0, 1).ToUpper() + w.Substring(1);\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        bool isFirst = true;\n        foreach (char c in word) {\n            if (c == '_') {\n                isFirst = true;\n            } else {\n                sb.Append(isFirst ? char.ToUpper(c) : c);\n                isFirst = false;\n            }\n        }\n        return sb.ToString();",
    "        var camel = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            camel.Append(char.ToUpper(w[0]));\n            camel.Append(w.Substring(1));\n        }\n        return camel.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(char.ToUpper(w[0]));\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        string[] words = word.Split('_');\n        string camel = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                camel += words[i];\n            } else {\n                camel += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return camel;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.Length; i++) {\n            if (word[i] == '_') {\n                sb.Append(word[i + 1].ToString().ToUpper());\n                i++;\n            } else {\n                sb.Append(word[i]);\n            }\n        }\n        return sb.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        string result = \"\";\n        for (int i = 0; i < word.Length; i++) {\n            if (word[i] == '_') {\n                result += char.ToUpper(word[i + 1]);\n                i++;\n            } else {\n                result += word[i];\n            }\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        string result = \"\";\n        bool first = true;\n        for (int i = 0; i < word.Length; i++) {\n            if (word[i] == '_') {\n                first = true;\n            } else {\n                if (first) {\n                    result += word[i].ToString().ToUpper();\n                    first = false;\n                } else {\n                    result += word[i];\n                }\n            }\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder();\n        bool isFirst = true;\n        foreach (char c in word) {\n            if (c == '_') {\n                isFirst = true;\n            } else {\n                sb.Append(isFirst ? char.ToUpper(c) : c);\n                isFirst = false;\n            }\n        }\n        return sb.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(w.Substring(0, 1).ToUpper());\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        result.Append(words[0]);\n        for (int i = 1; i < words.Length; i++) {\n            result.Append(words[i].Substring(0, 1).ToUpper() + words[i].Substring(1));\n        }\n        return result.ToString();",
    "        var camel = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            camel.Append(char.ToUpper(w[0]));\n            camel.Append(w.Substring(1));\n        }\n        return camel.ToString();",
    "        string[] words = word.Split('_');\n        string camel = \"\";\n        foreach (string w in words) {\n            camel += w.Substring(0, 1).ToUpper() + w.Substring(1);\n        }\n        return camel;",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            result.Append(w.Substring(0, 1).ToUpper() + w.Substring(1));\n        }\n        return result.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(char.ToUpper(w[0]));\n            sb.Append(w.Substring(1).ToLower());\n        }\n        return sb.ToString();",
    "        string[] parts = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < parts.Length; i++) {\n            if (i == 0) {\n                result += parts[i];\n            } else {\n                result += parts[i].Substring(0, 1).ToUpper() + parts[i].Substring(1);\n            }\n        }\n        return result;",
    "        string result = \"\";\n        bool isUpper = false;\n        foreach (char c in word) {\n            if (c == '_') {\n                isUpper = true;\n            } else {\n                if (isUpper) {\n                    result += Char.ToUpper(c);\n                    isUpper = false;\n                } else {\n                    result += c;\n                }\n            }\n        }\n        return result;",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        StringBuilder sb = new StringBuilder(word);\n        for (int i = 0; i < sb.Length; i++) {\n            if (sb[i] == '_') {\n                sb[i + 1] = char.ToUpper(sb[i + 1]);\n                sb.Remove(i, 1);\n            }\n        }\n        return sb.ToString();",
    "        StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < word.Length; i++) {\n            if (word[i] == '_') {\n                sb.Append(Char.ToUpper(word[i + 1]));\n                i++;\n            }\n            else {\n                sb.Append(word[i]);\n            }\n        }\n        return sb.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(char.ToUpper(w[0]));\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        var camel = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            camel.Append(w.Substring(0, 1).ToUpper() + w.Substring(1));\n        }\n        return camel.ToString();",
    "        var camel = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            if (w.Length > 0) {\n                camel.Append(w[0].ToString().ToUpper());\n                camel.Append(w.Substring(1));\n            }\n        }\n        return camel.ToString();",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(w.Substring(0, 1).ToUpper());\n            sb.Append(w.Substring(1));\n        }\n        return sb.ToString();",
    "        // Write your code here\n        return null;",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        result.Append(words[0]);\n        for (int i = 1; i < words.Length; i++) {\n            result.Append(words[i].Substring(0, 1).ToUpper());\n            result.Append(words[i].Substring(1));\n        }\n        return result.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        var sb = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            sb.Append(w.Substring(0, 1).ToUpper() + w.Substring(1).ToLower());\n        }\n        return sb.ToString();",
    "        string[] words = word.Split('_');\n        string result = \"\";\n        for (int i = 0; i < words.Length; i++) {\n            if (i == 0) {\n                result += words[i];\n            } else {\n                result += words[i].Substring(0, 1).ToUpper() + words[i].Substring(1);\n            }\n        }\n        return result;",
    "        var result = new StringBuilder();\n        var words = word.Split('_');\n        foreach (var w in words) {\n            result.Append(char.ToUpper(w[0]));\n            result.Append(w.Substring(1));\n        }\n        return result.ToString();",
    "        string[] words = word.Split('_');\n        string camel = \"\";\n        foreach (string w in words) {\n            camel += w.Substring(0, 1).ToUpper() + w.Substring(1);\n        }\n        return camel;"
  ]
}
{
  "name": "mbpp_141_pancake_sort",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort a list of elements.\n    public static List<long> PancakeSort(List<long> nums) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_141_pancake_sort.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(PancakeSort((new List<long>(new long[]{(long)15L, (long)79L, (long)25L, (long)38L, (long)69L}))).Equals((new List<long>(new long[]{(long)15L, (long)25L, (long)38L, (long)69L, (long)79L}))));\n    Debug.Assert(PancakeSort((new List<long>(new long[]{(long)98L, (long)12L, (long)54L, (long)36L, (long)85L}))).Equals((new List<long>(new long[]{(long)12L, (long)36L, (long)54L, (long)85L, (long)98L}))));\n    Debug.Assert(PancakeSort((new List<long>(new long[]{(long)41L, (long)42L, (long)32L, (long)12L, (long)23L}))).Equals((new List<long>(new long[]{(long)12L, (long)23L, (long)32L, (long)41L, (long)42L}))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        while (nums.SequenceEqual(sorted) == false) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            var maxIndex2 = nums.Count - 1 - maxIndex;\n            result.Add(maxIndex + 1);\n            result.Add(maxIndex2 + 1);\n            nums = Flip(nums, maxIndex);\n            nums = Flip(nums, maxIndex2);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            int maxIndex = 0;\n            for (int j = 0; j <= i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.Add(maxIndex + 1);\n                result.Add(i + 1);\n                Reverse(nums, maxIndex);\n                Reverse(nums, i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        for (int i = 0; i < max; i++) {\n            var maxIndex = nums.IndexOf(nums.Max());\n            if (maxIndex != max - 1) {\n                if (maxIndex != 0) {\n                    result.Add(maxIndex + 1);\n                    nums = Reverse(nums, maxIndex + 1);\n                }\n                result.Add(max);\n                nums = Reverse(nums, max);\n            }\n            max--;\n        }\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            int maxIndex = FindMaxIndex(nums, i);\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.Add(maxIndex + 1);\n                Flip(nums, maxIndex);\n            }\n            result.Add(i + 1);\n            Flip(nums, i);\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) {\n                continue;\n            }\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index);\n            }\n            result.Add(nums.Count - i);\n            nums = Flip(nums, nums.Count - 1 - i);\n        }\n        return result;",
    "        var res = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var idx = nums.IndexOf(max);\n            if (idx == max - 1) {\n                max--;\n                continue;\n            }\n            if (idx > 0) {\n                res.Add(idx + 1);\n                nums = Flip(nums, idx + 1);\n            }\n            res.Add(max);\n            nums = Flip(nums, max);\n            max--;\n        }\n        return res;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            if (maxIndex != i) {\n                result.Add(maxIndex + 1);\n                nums.Reverse(0, maxIndex + 1);\n                result.Add(i + 1);\n                nums.Reverse(0, i + 1);\n            }\n        }\n        return result;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) {\n                continue;\n            }\n            if (index != 0) {\n                result.Add(index + 1);\n                nums.Reverse(0, index + 1);\n            }\n            result.Add(nums.Count - i);\n            nums.Reverse(0, nums.Count - i);\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index == max - 1) {\n                max--;\n                continue;\n            }\n            if (index > 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index + 1);\n            }\n            result.Add(max);\n            nums = Flip(nums, max);\n            max--;\n        }\n        return result;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index != i) {\n                result.Add(index + 1);\n                result.Add(i + 1);\n                nums.Reverse(0, index + 1);\n                nums.Reverse(0, i + 1);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        var n = nums.Count;\n        while (n > 0) {\n            var max = nums.IndexOf(nums.Max());\n            if (max != n - 1) {\n                if (max != 0) {\n                    result.Add(max + 1);\n                    nums.Reverse(0, max + 1);\n                }\n                result.Add(n);\n                nums.Reverse(0, n);\n            }\n            n--;\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) continue;\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index);\n            }\n            result.Add(nums.Count - i);\n            nums = Flip(nums, nums.Count - i - 1);\n        }\n        return result;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var ans = new List<long>();\n        while (nums.SequenceEqual(sorted) == false) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            var maxIndex2 = nums.Count - 1;\n            if (maxIndex != maxIndex2) {\n                ans.Add(maxIndex + 1);\n                ans.Add(maxIndex2 + 1);\n                nums = Flip(nums, maxIndex);\n                nums = Flip(nums, maxIndex2);\n            } else {\n                ans.Add(maxIndex + 1);\n                nums = Flip(nums, maxIndex);\n            }\n        }\n        return ans;",
    "        // Write your code here.\n        return nums;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index != max - 1) {\n                if (index != 0) {\n                    result.Add(index + 1);\n                    nums = Flip(nums, index);\n                }\n                result.Add(max);\n                nums = Flip(nums, max - 1);\n            }\n            max--;\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        while (nums.SequenceEqual(sorted) == false) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            if (maxIndex != nums.Count - 1) {\n                result.Add(maxIndex + 1);\n                nums = Reverse(nums, maxIndex + 1);\n                result.Add(nums.Count);\n                nums = Reverse(nums, nums.Count);\n            } else {\n                result.Add(nums.Count);\n                nums = Reverse(nums, nums.Count);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        return nums;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) continue;\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index);\n            }\n            result.Add(nums.Count - i);\n            nums = Flip(nums, nums.Count - i - 1);\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index == max - 1) {\n                max--;\n                continue;\n            }\n            if (index > 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index + 1);\n            }\n            result.Add(max);\n            nums = Flip(nums, max);\n            max--;\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        while (nums.SequenceEqual(sorted) == false) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            result.Add(maxIndex + 1);\n            nums = Flip(nums, maxIndex);\n            result.Add(nums.Count);\n            nums = Flip(nums, nums.Count - 1);\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        while (nums.SequenceEqual(sorted) == false) {\n            var max = nums.Max();\n            var index = nums.IndexOf(max);\n            result.Add(index + 1);\n            result.Add(nums.Count);\n            nums = Flip(nums, index + 1);\n            nums = Flip(nums, nums.Count);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count; i > 0; i--) {\n            int maxIndex = 0;\n            for (int j = 0; j < i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i - 1) {\n                if (maxIndex != 0) {\n                    result.Add(maxIndex + 1);\n                    nums = Flip(nums, maxIndex);\n                }\n                result.Add(i);\n                nums = Flip(nums, i - 1);\n            }\n        }\n        return result;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == 0) {\n                result.Add(1);\n                nums.RemoveAt(0);\n                continue;\n            }\n            if (index == nums.Count - 1) {\n                result.Add(nums.Count);\n                nums.RemoveAt(nums.Count - 1);\n                continue;\n            }\n            result.Add(index + 1);\n            result.Add(nums.Count - index);\n            nums.Reverse(0, index + 1);\n            nums.Reverse(0, nums.Count - index);\n            nums.Reverse(0, nums.Count);\n            nums.RemoveAt(nums.Count - 1);\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index == max - 1) {\n                max--;\n                continue;\n            }\n            if (index > 0) {\n                result.Add(index + 1);\n                nums.Reverse(0, index + 1);\n            }\n            result.Add(max);\n            nums.Reverse(0, max);\n            max--;\n        }\n        return result;",
    "        var res = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var idx = nums.IndexOf(max);\n            if (idx == max - 1) {\n                max--;\n                continue;\n            }\n            if (idx > 0) {\n                res.Add(idx + 1);\n                nums = Reverse(nums, idx + 1);\n            }\n            res.Add(max);\n            nums = Reverse(nums, max);\n            max--;\n        }\n        return res;",
    "        var n = nums.Count;\n        var ans = new List<long>();\n        for (var i = n; i > 0; i--) {\n            var idx = nums.IndexOf(i);\n            if (idx == i - 1) continue;\n            if (idx != 0) {\n                ans.Add(idx + 1);\n                nums = Reverse(nums, idx + 1);\n            }\n            ans.Add(i);\n            nums = Reverse(nums, i);\n        }\n        return ans;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        var index = nums.Count - 1;\n        while (index >= 0) {\n            var i = nums.IndexOf(sorted[index]);\n            if (i == index) {\n                index--;\n                continue;\n            }\n            if (i > 0) {\n                result.Add(i + 1);\n                nums = Flip(nums, i);\n            }\n            result.Add(index + 1);\n            nums = Flip(nums, index);\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index == max - 1) {\n                max--;\n                continue;\n            }\n            if (index > 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index + 1);\n            }\n            result.Add(max);\n            nums = Flip(nums, max);\n            max--;\n        }\n        return result;",
    "        // Write your code here.\n        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index == max - 1) {\n                max--;\n                continue;\n            }\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index + 1);\n            }\n            result.Add(max);\n            nums = Flip(nums, max);\n            max--;\n        }\n        return result;",
    "        for (int i = nums.Count; i > 0; i--) {\n            int maxIndex = 0;\n            for (int j = 0; j < i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i - 1) {\n                nums = Flip(nums, maxIndex);\n                nums = Flip(nums, i - 1);\n            }\n        }\n        return nums;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        for (int i = 0; i < max; i++) {\n            var maxIndex = nums.IndexOf(nums.Max());\n            if (maxIndex == max - 1 - i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.Add(maxIndex + 1);\n                nums = nums.Take(maxIndex + 1).Reverse().Concat(nums.Skip(maxIndex + 1)).ToList();\n            }\n            result.Add(max - i);\n            nums = nums.Take(max - i).Reverse().Concat(nums.Skip(max - i)).ToList();\n        }\n        return result;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var flips = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = sorted.IndexOf(nums[i]);\n            if (index == i) {\n                continue;\n            }\n            if (index != 0) {\n                flips.Add(index + 1);\n                Reverse(nums, index);\n            }\n            flips.Add(i + 1);\n            Reverse(nums, i);\n        }\n        return flips;",
    "        // Write your code here.\n        return nums;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) continue;\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index);\n            }\n            result.Add(i + 1);\n            nums = Flip(nums, i);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.Add(maxIndex + 1);\n                result.Add(i + 1);\n                nums = Flip(nums, maxIndex);\n                nums = Flip(nums, i);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        return nums;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        while (nums.SequenceEqual(sorted) == false) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            var maxIndexSorted = sorted.IndexOf(max);\n            if (maxIndex != maxIndexSorted) {\n                result.Add(maxIndex + 1);\n                nums = Flip(nums, maxIndex);\n            }\n            result.Add(maxIndexSorted + 1);\n            nums = Flip(nums, maxIndexSorted);\n        }\n        return result;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var result = new List<long>();\n        while (nums.SequenceEqual(sorted) == false) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            var maxIndex2 = nums.Count - 1;\n            if (maxIndex != maxIndex2) {\n                result.Add(maxIndex + 1);\n                result.Add(maxIndex2 + 1);\n                nums = Flip(nums, maxIndex);\n                nums = Flip(nums, maxIndex2);\n            }\n            result.Add(maxIndex2 + 1);\n            nums = Flip(nums, maxIndex2);\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            result.Add(index + 1);\n            result.Add(nums.Count - i);\n            nums = Flip(nums, index + 1);\n            nums = Flip(nums, nums.Count - i);\n        }\n        return result;",
    "        List<long> sorted = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            sorted.Add(nums[i]);\n        }\n        sorted.Sort();\n        List<long> flips = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            long num = sorted[i];\n            int index = nums.IndexOf(num);\n            if (index != 0) {\n                nums.RemoveAt(index);\n                nums.Insert(0, num);\n                flips.Add(index + 1);\n            }\n            nums.RemoveAt(0);\n            flips.Add(1);\n        }\n        return flips;",
    "        var result = new List<long>();\n        var max = nums.Max();\n        var maxIndex = nums.IndexOf(max);\n        var maxIndex2 = nums.LastIndexOf(max);\n        if (maxIndex != maxIndex2) {\n            result.Add(maxIndex + 1);\n            result.Add(maxIndex2 + 1);\n            result.Add(maxIndex2 + 1);\n            result.Add(maxIndex + 1);\n        } else {\n            result.Add(maxIndex + 1);\n            result.Add(maxIndex + 1);\n        }\n        nums.RemoveAt(maxIndex);\n        if (maxIndex != maxIndex2) {\n            nums.RemoveAt(maxIndex2 - 1);\n        }\n        if (nums.Count > 0) {\n            result.AddRange(PancakeSort(nums));\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index != max - 1) {\n                if (index != 0) {\n                    result.Add(index + 1);\n                    nums = Reverse(nums, index + 1);\n                }\n                result.Add(max);\n                nums = Reverse(nums, max);\n            }\n            max--;\n        }\n        return result;",
    "        List<long> sorted = new List<long>(nums);\n        sorted.Sort();\n        List<long> result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            int index = nums.IndexOf(sorted[i]);\n            if (index == 0) {\n                continue;\n            }\n            if (index == nums.Count - 1) {\n                result.Add(index + 1);\n                nums.Reverse();\n                continue;\n            }\n            result.Add(index + 1);\n            result.Add(nums.Count - i);\n            nums = nums.GetRange(0, index + 1);\n            nums.Reverse();\n            nums.AddRange(nums.GetRange(0, nums.Count - 1));\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count; i > 0; i--) {\n            var max = nums.IndexOf(nums.Max());\n            if (max != i - 1) {\n                result.Add(max + 1);\n                nums.Reverse(0, max + 1);\n                result.Add(i);\n                nums.Reverse(0, i);\n            }\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        while (nums.SequenceEqual(sorted) == false) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            if (maxIndex != nums.Count - 1) {\n                result.Add(maxIndex + 1);\n                nums = Flip(nums, maxIndex + 1);\n                result.Add(nums.Count);\n                nums = Flip(nums, nums.Count);\n            } else {\n                result.Add(nums.Count);\n                nums = Flip(nums, nums.Count);\n            }\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        while (!nums.SequenceEqual(sorted)) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            result.Add(maxIndex + 1);\n            nums.Reverse(0, maxIndex + 1);\n            result.Add(nums.Count);\n            nums.Reverse();\n        }\n        return result;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var res = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var pos = sorted.IndexOf(nums[i]);\n            if (pos == i) continue;\n            if (pos != 0) {\n                res.Add(pos + 1);\n                Reverse(nums, pos);\n            }\n            res.Add(i + 1);\n            Reverse(nums, i);\n        }\n        return res;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j <= i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.Add(maxIndex + 1);\n                result.Add(i + 1);\n                Reverse(nums, maxIndex);\n                Reverse(nums, i);\n            }\n        }\n        return result;",
    "        var n = nums.Count;\n        var res = new List<long>();\n        for (int i = 0; i < n; i++) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            res.Add(maxIndex + 1);\n            nums.Reverse(0, maxIndex + 1);\n            res.Add(n - i);\n            nums.Reverse(0, n - i);\n        }\n        return res;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.Add(maxIndex + 1);\n                nums = Flip(nums, maxIndex);\n            }\n            result.Add(i + 1);\n            nums = Flip(nums, i);\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index != max - 1) {\n                if (index != 0) {\n                    result.Add(index + 1);\n                    nums = Flip(nums, index + 1);\n                }\n                result.Add(max);\n                nums = Flip(nums, max);\n            }\n            max--;\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            var maxIndex = nums.IndexOf(nums.Max());\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.Add(maxIndex + 1);\n                nums = Flip(nums, maxIndex);\n            }\n            result.Add(i + 1);\n            nums = Flip(nums, i);\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index == max - 1) {\n                max--;\n                continue;\n            }\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index + 1);\n            }\n            result.Add(max);\n            nums = Flip(nums, max);\n            max--;\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var flips = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) {\n                continue;\n            }\n            if (index != 0) {\n                flips.Add(index + 1);\n                nums = Flip(nums, index);\n            }\n            flips.Add(i + 1);\n            nums = Flip(nums, i);\n        }\n        return flips;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var result = new List<long>();\n        while (nums.SequenceEqual(sorted) == false) {\n            var maxIndex = nums.IndexOf(sorted.Last());\n            if (maxIndex != nums.Count - 1) {\n                result.Add(maxIndex + 1);\n                nums = Reverse(nums, maxIndex + 1);\n            }\n            result.Add(nums.Count);\n            nums = Reverse(nums, nums.Count);\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) {\n                continue;\n            }\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index);\n            }\n            result.Add(nums.Count - i);\n            nums = Flip(nums, nums.Count - i - 1);\n        }\n        return result;",
    "        List<long> sorted = new List<long>(nums);\n        sorted.Sort();\n        List<long> flips = new List<long>();\n        for (int i = sorted.Count - 1; i >= 0; i--) {\n            int index = nums.IndexOf(sorted[i]);\n            if (index == i) continue;\n            if (index != 0) {\n                nums.Reverse(0, index + 1);\n                flips.Add(index + 1);\n            }\n            nums.Reverse(0, i + 1);\n            flips.Add(i + 1);\n        }\n        return flips;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i > 0; i--) {\n            int maxIndex = 0;\n            for (int j = 0; j <= i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                if (maxIndex != 0) {\n                    result.Add(maxIndex + 1);\n                    nums = Reverse(nums, maxIndex);\n                }\n                result.Add(i + 1);\n                nums = Reverse(nums, i);\n            }\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var num = sorted[i];\n            var index = nums.IndexOf(num);\n            if (index == i) continue;\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index);\n            }\n            result.Add(i + 1);\n            nums = Flip(nums, i);\n        }\n        return result;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) continue;\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index);\n            }\n            result.Add(i + 1);\n            nums = Flip(nums, i);\n        }\n        return result;",
    "        for (int i = nums.Count - 1; i > 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                Flip(nums, maxIndex);\n                Flip(nums, i);\n            }\n        }\n        return nums;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            var maxIndex = FindMaxIndex(nums, i);\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.Add(maxIndex + 1);\n                Flip(nums, maxIndex);\n            }\n            result.Add(i + 1);\n            Flip(nums, i);\n        }\n        return result;",
    "        // Write your code here.\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            int maxIndex = FindMaxIndex(nums, i);\n            if (maxIndex != i) {\n                Flip(nums, maxIndex);\n                Flip(nums, i);\n            }\n        }\n        return nums;",
    "        var result = new List<long>();\n        for (int i = nums.Count; i > 0; i--) {\n            int maxIndex = 0;\n            for (int j = 0; j < i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i - 1) {\n                result.Add(maxIndex + 1);\n                nums = Flip(nums, maxIndex);\n                result.Add(i);\n                nums = Flip(nums, i - 1);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        for (var i = 0; i < max; i++) {\n            var maxIndex = nums.IndexOf(nums.Max());\n            if (maxIndex != max - 1) {\n                result.Add(maxIndex + 1);\n                result.Add(max);\n                nums = Flip(nums, maxIndex + 1);\n                nums = Flip(nums, max);\n            }\n            max--;\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            var maxIndex = nums.IndexOf(nums.Max());\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.Add(maxIndex + 1);\n                nums = Flip(nums, maxIndex);\n            }\n            result.Add(i + 1);\n            nums = Flip(nums, i);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count; i > 0; i--) {\n            var index = nums.IndexOf(i);\n            if (index == i - 1) continue;\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Reverse(nums, index + 1);\n            }\n            result.Add(i);\n            nums = Reverse(nums, i);\n        }\n        return result;",
    "        // Write your code here.\n        int n = nums.Count;\n        for (int i = 0; i < n; i++) {\n            int max = 0;\n            for (int j = 0; j < n - i; j++) {\n                if (nums[j] > nums[max]) {\n                    max = j;\n                }\n            }\n            Flip(nums, max);\n            Flip(nums, n - i - 1);\n        }\n        return nums;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index == max - 1) {\n                max--;\n                continue;\n            }\n            if (index > 0) {\n                result.Add(index + 1);\n                nums = Reverse(nums, index + 1);\n            }\n            result.Add(max);\n            nums = Reverse(nums, max);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            var max = nums.IndexOf(nums.Max());\n            if (max != i) {\n                if (max != 0) {\n                    result.Add(max + 1);\n                    nums = Flip(nums, max);\n                }\n                result.Add(i + 1);\n                nums = Flip(nums, i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index == max - 1) {\n                max--;\n                continue;\n            }\n            if (index > 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index + 1);\n            }\n            result.Add(max);\n            nums = Flip(nums, max);\n            max--;\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index == max - 1) {\n                max--;\n                continue;\n            }\n            if (index > 0) {\n                result.Add(index + 1);\n                nums = Reverse(nums, index + 1);\n            }\n            result.Add(max);\n            nums = Reverse(nums, max);\n            max--;\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                if (maxIndex != 0) {\n                    result.Add(maxIndex + 1);\n                    nums = Flip(nums, maxIndex);\n                }\n                result.Add(i + 1);\n                nums = Flip(nums, i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Max();\n        var index = nums.IndexOf(max);\n        result.Add(index + 1);\n        result.Add(nums.Count);\n        nums.Reverse(0, index + 1);\n        nums.Reverse();\n        nums.Remove(max);\n        if (nums.Count > 0) {\n            result.AddRange(PancakeSort(nums));\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count; i > 0; i--) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            result.Add(maxIndex + 1);\n            nums.RemoveAt(maxIndex);\n            result.Add(i);\n            nums.RemoveAt(i - 1);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i > 0; i--) {\n            int maxIndex = 0;\n            for (int j = 1; j <= i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.Add(maxIndex + 1);\n                Flip(nums, maxIndex);\n            }\n            result.Add(i + 1);\n            Flip(nums, i);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i > 0; i--) {\n            int maxIndex = 0;\n            for (int j = 1; j <= i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                if (maxIndex != 0) {\n                    result.Add(maxIndex + 1);\n                    nums.Reverse(0, maxIndex + 1);\n                }\n                result.Add(i + 1);\n                nums.Reverse(0, i + 1);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count; i > 0; i--) {\n            int maxIndex = 0;\n            for (int j = 0; j < i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex == i - 1) {\n                continue;\n            }\n            if (maxIndex > 0) {\n                result.Add(maxIndex + 1);\n                nums = Flip(nums, maxIndex + 1);\n            }\n            result.Add(i);\n            nums = Flip(nums, i);\n        }\n        return result;",
    "        // Write your code here.\n        return nums;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == 0) {\n                continue;\n            }\n            if (index == nums.Count - 1) {\n                result.Add(nums.Count);\n                nums.Reverse();\n                continue;\n            }\n            result.Add(index + 1);\n            result.Add(nums.Count - i);\n            nums = nums.Take(index + 1).Reverse().Concat(nums.Skip(index + 1)).ToList();\n            nums.Reverse();\n        }\n        return result;",
    "        // Write your code here.\n        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index == max - 1) {\n                max--;\n                continue;\n            }\n            if (index > 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index);\n            }\n            result.Add(max);\n            nums = Flip(nums, max - 1);\n            max--;\n        }\n        return result;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == 0) {\n                result.Add(1);\n                nums.RemoveAt(0);\n            } else {\n                result.Add(index + 1);\n                result.Add(1);\n                nums.RemoveAt(index);\n            }\n        }\n        return result;",
    "        var n = nums.Count;\n        var ans = new List<long>();\n        for (var i = n; i > 0; i--) {\n            var j = nums.IndexOf(i);\n            if (j == i - 1) continue;\n            if (j != 0) {\n                ans.Add(j + 1);\n                nums = Reverse(nums, j + 1);\n            }\n            ans.Add(i);\n            nums = Reverse(nums, i);\n        }\n        return ans;",
    "        var result = new List<long>();\n        for (int i = nums.Count; i > 0; i--) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            if (maxIndex == i - 1) {\n                nums.RemoveAt(maxIndex);\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.Add(maxIndex + 1);\n                nums = Reverse(nums, maxIndex + 1);\n            }\n            result.Add(i);\n            nums = Reverse(nums, i);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.Add(maxIndex + 1);\n                result.Add(i + 1);\n                Reverse(nums, maxIndex);\n                Reverse(nums, i);\n            }\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        var index = 0;\n        while (nums.SequenceEqual(sorted) == false) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            if (maxIndex != index) {\n                if (maxIndex != nums.Count - 1) {\n                    result.Add(maxIndex + 1);\n                    nums = Flip(nums, maxIndex + 1);\n                }\n                result.Add(index + 1);\n                nums = Flip(nums, index + 1);\n            }\n            index++;\n        }\n        return result;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            result.Add(index + 1);\n            result.Add(nums.Count - i);\n            nums.RemoveAt(index);\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) continue;\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Reverse(nums, index);\n            }\n            result.Add(nums.Count - i);\n            nums = Reverse(nums, nums.Count - i - 1);\n        }\n        return result;",
    "        for (int i = nums.Count - 1; i > 0; i--) {\n            int maxIndex = 0;\n            for (int j = 1; j <= i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                Flip(nums, maxIndex);\n                Flip(nums, i);\n            }\n        }\n        return nums;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        for (var i = 0; i < max; i++) {\n            var maxIndex = nums.IndexOf(nums.Max());\n            if (maxIndex == max - i - 1) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.Add(maxIndex + 1);\n                nums = nums.Take(maxIndex + 1).Reverse().Concat(nums.Skip(maxIndex + 1)).ToList();\n            }\n            result.Add(max - i);\n            nums = nums.Take(max - i).Reverse().Concat(nums.Skip(max - i)).ToList();\n        }\n        return result;",
    "        var result = new List<long>();\n        var n = nums.Count;\n        var max = n;\n        for (var i = 0; i < n; i++) {\n            var maxIndex = nums.IndexOf(max);\n            if (maxIndex == n - i - 1) {\n                max--;\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.Add(maxIndex + 1);\n                nums = Reverse(nums, maxIndex + 1);\n            }\n            result.Add(n - i);\n            nums = Reverse(nums, n - i);\n            max--;\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Max();\n        var maxIndex = nums.IndexOf(max);\n        var maxIndex2 = nums.Count - 1;\n        while (maxIndex != maxIndex2) {\n            if (maxIndex != 0) {\n                result.Add(maxIndex + 1);\n                nums.Reverse(0, maxIndex + 1);\n            }\n            result.Add(maxIndex2 + 1);\n            nums.Reverse(0, maxIndex2 + 1);\n            maxIndex = nums.IndexOf(max);\n            maxIndex2--;\n        }\n        return result;",
    "        // Write your code here.\n        return nums;",
    "        // Write your code here.\n        return nums;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            var maxIndex = nums.IndexOf(nums.Max());\n            if (maxIndex != i) {\n                result.Add(maxIndex + 1);\n                result.Add(i + 1);\n                nums = Flip(nums, maxIndex);\n                nums = Flip(nums, i);\n            }\n        }\n        return result;",
    "        var sortedNums = new List<long>(nums);\n        sortedNums.Sort();\n        var sortedIndices = new List<long>();\n        for (int i = 0; i < sortedNums.Count; i++) {\n            var index = nums.IndexOf(sortedNums[i]);\n            sortedIndices.Add(index);\n            nums.RemoveAt(index);\n        }\n        return sortedIndices;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) continue;\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index);\n            }\n            result.Add(nums.Count - i);\n            nums = Flip(nums, nums.Count - i - 1);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            var maxIndex = nums.IndexOf(nums.Max());\n            if (maxIndex != i) {\n                result.Add(maxIndex + 1);\n                result.Add(i + 1);\n                nums = Flip(nums, maxIndex);\n                nums = Flip(nums, i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.Add(maxIndex + 1);\n                result.Add(i + 1);\n                Reverse(nums, maxIndex);\n                Reverse(nums, i);\n            }\n        }\n        return result;",
    "        var n = nums.Count;\n        var result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            if (maxIndex != n - i - 1) {\n                if (maxIndex != 0) {\n                    result.Add(maxIndex + 1);\n                    nums = Flip(nums, maxIndex);\n                }\n                result.Add(n - i);\n                nums = Flip(nums, n - i - 1);\n            }\n        }\n        return result;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var flips = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = sorted.IndexOf(nums[i]);\n            if (index == i) continue;\n            if (index != 0) {\n                flips.Add(index + 1);\n                Reverse(nums, index);\n            }\n            flips.Add(i + 1);\n            Reverse(nums, i);\n        }\n        return flips;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        for (var i = 0; i < nums.Count; i++) {\n            var maxIndex = nums.IndexOf(nums.Max());\n            if (maxIndex != max - 1) {\n                result.Add(maxIndex + 1);\n                result.Add(max);\n                nums = Flip(nums, maxIndex + 1);\n                nums = Flip(nums, max);\n            }\n            max--;\n        }\n        return result;",
    "        var result = new List<long>(nums);\n        for (int i = 0; i < result.Count; i++) {\n            var maxIndex = result.IndexOf(result.Max());\n            if (maxIndex != result.Count - 1 - i) {\n                result = Flip(result, maxIndex);\n                result = Flip(result, result.Count - 1 - i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index == max - 1) {\n                max--;\n                continue;\n            }\n            if (index > 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index + 1);\n            }\n            result.Add(max);\n            nums = Flip(nums, max);\n            max--;\n        }\n        return result;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var result = new List<long>();\n        for (int i = sorted.Count - 1; i >= 0; i--) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) {\n                continue;\n            }\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index);\n            }\n            result.Add(i + 1);\n            nums = Flip(nums, i);\n        }\n        return result;",
    "        int n = nums.Count;\n        for (int i = 0; i < n; i++) {\n            int maxIndex = 0;\n            for (int j = 0; j < n - i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != n - i - 1) {\n                nums = Flip(nums, maxIndex);\n                nums = Flip(nums, n - i - 1);\n            }\n        }\n        return nums;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var result = new List<long>();\n        while (nums.SequenceEqual(sorted) == false) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            var maxIndexSorted = sorted.IndexOf(max);\n            if (maxIndex != maxIndexSorted) {\n                if (maxIndex != 0) {\n                    result.Add(maxIndex + 1);\n                    nums = Flip(nums, maxIndex);\n                }\n                result.Add(maxIndexSorted + 1);\n                nums = Flip(nums, maxIndexSorted);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i > 0; i--) {\n            var maxIndex = 0;\n            for (int j = 0; j <= i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                if (maxIndex != 0) {\n                    result.Add(maxIndex + 1);\n                    nums = Flip(nums, maxIndex);\n                }\n                result.Add(i + 1);\n                nums = Flip(nums, i);\n            }\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == 0) {\n                continue;\n            }\n            if (index == nums.Count - 1) {\n                result.Add(index + 1);\n                nums.Reverse();\n                continue;\n            }\n            result.Add(index + 1);\n            result.Add(nums.Count - i);\n            nums = nums.Take(index + 1).Reverse().Concat(nums.Skip(index + 1)).ToList();\n            nums.Reverse();\n        }\n        return result;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == 0) {\n                continue;\n            }\n            if (index == nums.Count - 1) {\n                result.Add(index + 1);\n                nums.Reverse();\n                continue;\n            }\n            result.Add(index + 1);\n            result.Add(nums.Count - i);\n            nums = nums.Take(index + 1).Reverse().Concat(nums.Skip(index + 1)).ToList();\n            nums.Reverse();\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            var maxIndex = nums.IndexOf(nums.Max());\n            if (maxIndex != i) {\n                if (maxIndex != 0) {\n                    result.Add(maxIndex + 1);\n                    nums = Flip(nums, maxIndex);\n                }\n                result.Add(i + 1);\n                nums = Flip(nums, i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index != max - 1) {\n                if (index != 0) {\n                    result.Add(index + 1);\n                    nums = Flip(nums, index + 1);\n                }\n                result.Add(max);\n                nums = Flip(nums, max);\n            }\n            max--;\n        }\n        return result;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var result = new List<long>();\n        while (nums.SequenceEqual(sorted) == false) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            var maxIndex2 = nums.Count - 1 - maxIndex;\n            if (maxIndex != 0) {\n                result.Add(maxIndex + 1);\n                nums.Reverse(0, maxIndex + 1);\n            }\n            if (maxIndex2 != 0) {\n                result.Add(maxIndex2 + 1);\n                nums.Reverse(0, maxIndex2 + 1);\n            }\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        while (nums.SequenceEqual(sorted) == false) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            var maxIndexRev = nums.Count - 1 - maxIndex;\n            result.Add(maxIndex + 1);\n            result.Add(maxIndexRev + 1);\n            nums = Reverse(nums, maxIndex + 1);\n            nums = Reverse(nums, maxIndexRev + 1);\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 1) {\n            var index = nums.IndexOf(max);\n            if (index == max - 1) {\n                max--;\n                continue;\n            }\n            if (index > 0) {\n                result.Add(index + 1);\n                nums = Reverse(nums, index + 1);\n            }\n            result.Add(max);\n            nums = Reverse(nums, max);\n            max--;\n        }\n        return result;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var result = new List<long>();\n        while (nums.SequenceEqual(sorted) == false) {\n            var max = nums.Max();\n            var index = nums.IndexOf(max);\n            result.Add(index + 1);\n            nums = Flip(nums, index + 1);\n            result.Add(nums.Count);\n            nums = Flip(nums, nums.Count);\n        }\n        return result;",
    "        // Write your code here.\n        return nums;",
    "        // Write your code here.\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            int maxIndex = FindMaxIndex(nums, i);\n            Flip(nums, maxIndex);\n            Flip(nums, i);\n        }\n        return nums;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        for (var i = 0; i < max; i++) {\n            var maxIndex = nums.IndexOf(nums.Max());\n            if (maxIndex > 0) {\n                result.Add(maxIndex + 1);\n                nums.Reverse(0, maxIndex + 1);\n            }\n            result.Add(max);\n            nums.Reverse(0, max);\n            nums.RemoveAt(max - 1);\n            max--;\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        for (int i = 0; i < max; i++) {\n            var maxIndex = nums.IndexOf(nums.Max());\n            if (maxIndex != max - 1) {\n                if (maxIndex != 0) {\n                    result.Add(maxIndex + 1);\n                    nums = Reverse(nums, maxIndex + 1);\n                }\n                result.Add(max);\n                nums = Reverse(nums, max);\n            }\n            max--;\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count; i > 0; i--) {\n            var index = nums.IndexOf(i);\n            if (index == i - 1) {\n                continue;\n            }\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Reverse(nums, index + 1);\n            }\n            result.Add(i);\n            nums = Reverse(nums, i);\n        }\n        return result;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) {\n                continue;\n            }\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index);\n            }\n            result.Add(i + 1);\n            nums = Flip(nums, i);\n        }\n        return result;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var result = new List<long>();\n        while (nums.Count > 0) {\n            var index = nums.IndexOf(sorted[0]);\n            if (index == 0) {\n                result.Add(nums.Count);\n                nums.RemoveAt(0);\n            } else {\n                result.Add(index + 1);\n                result.Add(nums.Count);\n                nums.Reverse(0, index + 1);\n                nums.Reverse();\n                nums.RemoveAt(0);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        for (var i = 0; i < max; i++) {\n            var maxIndex = nums.IndexOf(nums.Max());\n            if (maxIndex != max - 1) {\n                result.Add(maxIndex + 1);\n                nums = Flip(nums, maxIndex + 1);\n                result.Add(max);\n                nums = Flip(nums, max);\n            }\n            max--;\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        while (nums.SequenceEqual(sorted) == false) {\n            var max = nums.Max();\n            var index = nums.IndexOf(max);\n            result.Add(index + 1);\n            nums = Flip(nums, index + 1);\n            result.Add(nums.Count);\n            nums = Flip(nums, nums.Count);\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index == max - 1) {\n                max--;\n                continue;\n            }\n            if (index > 0) {\n                result.Add(index + 1);\n                nums.Reverse(0, index + 1);\n            }\n            result.Add(max);\n            nums.Reverse(0, max);\n            max--;\n        }\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        int n = nums.Count;\n        for (int i = 0; i < n; i++) {\n            int maxIndex = 0;\n            for (int j = 0; j < n - i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex == n - i - 1) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.Add(maxIndex + 1);\n                Reverse(nums, maxIndex + 1);\n            }\n            result.Add(n - i);\n            Reverse(nums, n - i);\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index != max - 1) {\n                if (index != 0) {\n                    result.Add(index + 1);\n                    nums = Flip(nums, index + 1);\n                }\n                result.Add(max);\n                nums = Flip(nums, max);\n            }\n            max--;\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) {\n                continue;\n            }\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index + 1);\n            }\n            result.Add(i + 1);\n            nums = Flip(nums, i + 1);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            if (maxIndex != i) {\n                result.Add(maxIndex + 1);\n                nums = Flip(nums, maxIndex);\n                result.Add(i + 1);\n                nums = Flip(nums, i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 1) {\n            var maxIndex = nums.IndexOf(max);\n            if (maxIndex != max - 1) {\n                if (maxIndex != 0) {\n                    result.Add(maxIndex + 1);\n                    nums = Reverse(nums, maxIndex + 1);\n                }\n                result.Add(max);\n                nums = Reverse(nums, max);\n            }\n            max--;\n        }\n        return result;",
    "        // Write your code here.\n        return nums;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index == max - 1) {\n                max--;\n                continue;\n            }\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Reverse(nums, index + 1);\n            }\n            result.Add(max);\n            nums = Reverse(nums, max);\n            max--;\n        }\n        return result;",
    "        var n = nums.Count;\n        var result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            if (maxIndex == n - 1 - i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.Add(maxIndex + 1);\n                nums = nums.Take(maxIndex + 1).Reverse().Concat(nums.Skip(maxIndex + 1)).ToList();\n            }\n            result.Add(n - i);\n            nums = nums.Take(n - i).Reverse().Concat(nums.Skip(n - i)).ToList();\n        }\n        return result;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == 0) {\n                continue;\n            }\n            if (index == nums.Count - 1) {\n                result.Add(index + 1);\n                nums.Reverse();\n                continue;\n            }\n            result.Add(index + 1);\n            result.Add(nums.Count - i);\n            nums = nums.GetRange(0, index + 1).Reverse().Concat(nums.GetRange(index + 1, nums.Count - index - 1)).ToList();\n            nums.Reverse();\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        for (int i = 0; i < max; i++) {\n            var index = nums.IndexOf(max - i);\n            if (index == max - i - 1) {\n                continue;\n            }\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Reverse(nums, index + 1);\n            }\n            result.Add(max - i);\n            nums = Reverse(nums, max - i);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            int maxIndex = 0;\n            for (int j = 0; j <= i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                if (maxIndex != 0) {\n                    result.Add(maxIndex + 1);\n                    nums = Reverse(nums, maxIndex);\n                }\n                result.Add(i + 1);\n                nums = Reverse(nums, i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            var maxIndex = 0;\n            for (int j = 0; j <= i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                if (maxIndex != 0) {\n                    result.Add(maxIndex + 1);\n                    nums.Reverse(0, maxIndex + 1);\n                }\n                result.Add(i + 1);\n                nums.Reverse(0, i + 1);\n            }\n        }\n        return result;",
    "        var res = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var idx = nums.IndexOf(max);\n            if (idx == max - 1) {\n                max--;\n                continue;\n            }\n            if (idx > 0) {\n                res.Add(idx + 1);\n                nums = Flip(nums, idx + 1);\n            }\n            res.Add(max);\n            nums = Flip(nums, max);\n            max--;\n        }\n        return res;",
    "        var n = nums.Count;\n        var ans = new List<long>();\n        for (var i = n - 1; i >= 0; i--) {\n            var max = nums.IndexOf(nums.Max());\n            if (max != i) {\n                if (max != 0) {\n                    ans.Add(max + 1);\n                    nums = Reverse(nums, max + 1);\n                }\n                ans.Add(i + 1);\n                nums = Reverse(nums, i + 1);\n            }\n        }\n        return ans;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index != max - 1) {\n                if (index != 0) {\n                    result.Add(index + 1);\n                    nums = Flip(nums, index + 1);\n                }\n                result.Add(max);\n                nums = Flip(nums, max);\n            }\n            max--;\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        for (var i = 0; i < max; i++) {\n            var maxIndex = nums.IndexOf(nums.Max());\n            if (maxIndex != max - 1 - i) {\n                if (maxIndex != 0) {\n                    result.Add(maxIndex + 1);\n                    nums.Reverse(0, maxIndex + 1);\n                }\n                result.Add(max - i);\n                nums.Reverse(0, max - i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            if (maxIndex != i) {\n                if (maxIndex != 0) {\n                    result.Add(maxIndex + 1);\n                    nums.Reverse(0, maxIndex + 1);\n                }\n                result.Add(i + 1);\n                nums.Reverse(0, i + 1);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        return nums;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index == max - 1) {\n                max--;\n                continue;\n            }\n            if (index > 0) {\n                result.Add(index + 1);\n                nums.Reverse(0, index + 1);\n            }\n            result.Add(max);\n            nums.Reverse(0, max);\n            max--;\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count; i > 0; i--) {\n            var maxIndex = nums.IndexOf(nums.Max());\n            if (maxIndex != i - 1) {\n                result.Add(maxIndex + 1);\n                nums = Reverse(nums, maxIndex + 1);\n                result.Add(i);\n                nums = Reverse(nums, i);\n            }\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) {\n                continue;\n            }\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index + 1);\n            }\n            result.Add(i + 1);\n            nums = Flip(nums, i + 1);\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index == max - 1) {\n                max--;\n                continue;\n            }\n            if (index > 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index + 1);\n            }\n            result.Add(max);\n            nums = Flip(nums, max);\n            max--;\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index != max - 1) {\n                if (index != 0) {\n                    result.Add(index + 1);\n                    nums = Flip(nums, index + 1);\n                }\n                result.Add(max);\n                nums = Flip(nums, max);\n            }\n            max--;\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) {\n                continue;\n            }\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index);\n            }\n            result.Add(nums.Count - i);\n            nums = Flip(nums, nums.Count - i - 1);\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index == max - 1) {\n                max--;\n                continue;\n            }\n            if (index > 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index + 1);\n            }\n            result.Add(max);\n            nums = Flip(nums, max);\n            max--;\n        }\n        return result;",
    "        // Write your code here.\n        int n = nums.Count;\n        for (int i = 0; i < n; i++) {\n            int max = i;\n            for (int j = i + 1; j < n; j++) {\n                if (nums[j] > nums[max]) {\n                    max = j;\n                }\n            }\n            Reverse(nums, max);\n            Reverse(nums, i);\n        }\n        return nums;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        while (nums.SequenceEqual(sorted) == false) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            result.Add(maxIndex + 1);\n            nums = Flip(nums, maxIndex + 1);\n            result.Add(nums.Count);\n            nums = Flip(nums, nums.Count);\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index != max - 1) {\n                if (index != 0) {\n                    result.Add(index + 1);\n                    nums = Reverse(nums, index + 1);\n                }\n                result.Add(max);\n                nums = Reverse(nums, max);\n            }\n            max--;\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index != max - 1) {\n                if (index != 0) {\n                    result.Add(index + 1);\n                    nums = Flip(nums, index + 1);\n                }\n                result.Add(max);\n                nums = Flip(nums, max);\n            }\n            max--;\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) {\n                continue;\n            }\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index);\n            }\n            result.Add(nums.Count - i);\n            nums = Flip(nums, nums.Count - i - 1);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            var maxIndex = nums.IndexOf(nums.Max());\n            if (maxIndex != i) {\n                if (maxIndex != 0) {\n                    result.Add(maxIndex + 1);\n                    nums = Flip(nums, maxIndex);\n                }\n                result.Add(i + 1);\n                nums = Flip(nums, i);\n            }\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        while (nums.SequenceEqual(sorted) == false) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            result.Add(maxIndex + 1);\n            Reverse(nums, maxIndex + 1);\n            result.Add(nums.Count);\n            Reverse(nums, nums.Count);\n        }\n        return result;",
    "        var result = new List<long>();\n        var sorted = nums.OrderBy(x => x).ToList();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) continue;\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index);\n            }\n            result.Add(nums.Count - i);\n            nums = Flip(nums, nums.Count - i - 1);\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) continue;\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = nums.Take(index + 1).Reverse().Concat(nums.Skip(index + 1)).ToList();\n            }\n            result.Add(nums.Count - i);\n            nums = nums.Take(nums.Count - i).Reverse().Concat(nums.Skip(nums.Count - i)).ToList();\n        }\n        return result;",
    "        var res = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            int maxIndex = 0;\n            for (int j = 0; j <= i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                if (maxIndex != 0) {\n                    res.Add(maxIndex + 1);\n                    nums.Reverse(0, maxIndex + 1);\n                }\n                res.Add(i + 1);\n                nums.Reverse(0, i + 1);\n            }\n        }\n        return res;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) {\n                continue;\n            }\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index);\n            }\n            result.Add(i + 1);\n            nums = Flip(nums, i);\n        }\n        return result;",
    "        List<long> sorted = new List<long>(nums);\n        sorted.Sort();\n        List<long> flips = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            int index = sorted.IndexOf(nums[i]);\n            if (index == i) continue;\n            if (index != 0) {\n                flips.Add(index + 1);\n                Reverse(nums, index);\n            }\n            flips.Add(i + 1);\n            Reverse(nums, i);\n        }\n        return flips;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) {\n                continue;\n            }\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index);\n            }\n            result.Add(nums.Count - i);\n            nums = Flip(nums, nums.Count - i - 1);\n        }\n        return result;",
    "        List<long> sorted = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            sorted.Add(i + 1);\n        }\n        List<long> flips = new List<long>();\n        while (nums.SequenceEqual(sorted) == false) {\n            int maxIndex = 0;\n            for (int i = 0; i < nums.Count; i++) {\n                if (nums[i] > nums[maxIndex]) {\n                    maxIndex = i;\n                }\n            }\n            if (maxIndex != nums.Count - 1) {\n                flips.Add(maxIndex + 1);\n                nums = Flip(nums, maxIndex + 1);\n            }\n            flips.Add(nums.Count);\n            nums = Flip(nums, nums.Count);\n        }\n        return flips;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            if (index == max - 1) {\n                max--;\n                continue;\n            }\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index + 1);\n            }\n            result.Add(max);\n            nums = Flip(nums, max);\n            max--;\n        }\n        return result;",
    "        var result = new List<long>();\n        var n = nums.Count;\n        for (int i = 0; i < n; i++) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            if (maxIndex == n - i - 1) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.Add(maxIndex + 1);\n                nums.Reverse(0, maxIndex + 1);\n            }\n            result.Add(n - i);\n            nums.Reverse(0, n - i);\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        while (nums.SequenceEqual(sorted) == false) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            result.Add(maxIndex + 1);\n            nums = Flip(nums, maxIndex + 1);\n            result.Add(nums.Count);\n            nums = Flip(nums, nums.Count);\n        }\n        return result;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var result = new List<long>();\n        while (nums.SequenceEqual(sorted) == false) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            var maxIndex2 = nums.Count - 1 - maxIndex;\n            result.Add(maxIndex + 1);\n            result.Add(maxIndex2 + 1);\n            nums = Flip(nums, maxIndex + 1);\n            nums = Flip(nums, maxIndex2 + 1);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            int maxIndex = i;\n            for (int j = 0; j < i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                result.Add(maxIndex + 1);\n                result.Add(i + 1);\n                Reverse(nums, maxIndex);\n                Reverse(nums, i);\n            }\n        }\n        return result;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) {\n                continue;\n            }\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index);\n            }\n            result.Add(i + 1);\n            nums = Flip(nums, i);\n        }\n        return result;",
    "        // Write your code here.\n        var result = new List<long>();\n        var max = nums.Count;\n        while (max > 0) {\n            var index = nums.IndexOf(max);\n            result.Add(index + 1);\n            result.Add(max);\n            nums = Flip(nums, index + 1);\n            nums = Flip(nums, max);\n            max--;\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count; i > 0; i--) {\n            int index = nums.IndexOf(i);\n            if (index == i - 1) continue;\n            if (index > 0) {\n                result.Add(index + 1);\n                nums.Reverse(0, index + 1);\n            }\n            result.Add(i);\n            nums.Reverse(0, i);\n        }\n        return result;",
    "        var result = new List<long>();\n        int n = nums.Count;\n        for (int i = 0; i < n; i++) {\n            int maxIndex = 0;\n            for (int j = 0; j < n - i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != n - i - 1) {\n                result.Add(maxIndex + 1);\n                result.Add(n - i);\n                nums.Reverse(0, maxIndex + 1);\n                nums.Reverse(0, n - i);\n            }\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var res = new List<long>();\n        while (nums.SequenceEqual(sorted) == false) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            res.Add(maxIndex + 1);\n            nums = Flip(nums, maxIndex + 1);\n            res.Add(nums.Count);\n            nums = Flip(nums, nums.Count);\n        }\n        return res;",
    "        var ret = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            int maxIndex = 0;\n            for (int j = 0; j <= i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                if (maxIndex != 0) {\n                    ret.Add(maxIndex + 1);\n                    nums = Flip(nums, maxIndex);\n                }\n                ret.Add(i + 1);\n                nums = Flip(nums, i);\n            }\n        }\n        return ret;",
    "        var n = nums.Count;\n        var res = new List<long>();\n        for (int i = 0; i < n; i++) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            if (maxIndex != n - i - 1) {\n                if (maxIndex != 0) {\n                    res.Add(maxIndex + 1);\n                    nums = Flip(nums, maxIndex);\n                }\n                res.Add(n - i);\n                nums = Flip(nums, n - i - 1);\n            }\n        }\n        return res;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        for (int i = 0; i < max; i++) {\n            var maxIndex = nums.IndexOf(nums.Max());\n            if (maxIndex != max - 1) {\n                if (maxIndex != 0) {\n                    result.Add(maxIndex + 1);\n                    nums = Reverse(nums, maxIndex + 1);\n                }\n                result.Add(max);\n                nums = Reverse(nums, max);\n            }\n            max--;\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            var max = nums.IndexOf(nums.Max());\n            if (max != i) {\n                if (max != 0) {\n                    result.Add(max + 1);\n                    nums = Flip(nums, max);\n                }\n                result.Add(i + 1);\n                nums = Flip(nums, i);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i > 0; i--) {\n            int maxIndex = 0;\n            for (int j = 0; j <= i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                if (maxIndex != 0) {\n                    result.Add(maxIndex + 1);\n                    nums.Reverse(0, maxIndex + 1);\n                }\n                result.Add(i + 1);\n                nums.Reverse(0, i + 1);\n            }\n        }\n        return result;",
    "        var res = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            if (maxIndex != i) {\n                if (maxIndex != 0) {\n                    res.Add(maxIndex + 1);\n                    nums = Flip(nums, maxIndex);\n                }\n                res.Add(i + 1);\n                nums = Flip(nums, i);\n            }\n        }\n        return res;",
    "        List<long> result = new List<long>();\n        int n = nums.Count;\n        for (int i = n; i > 0; i--) {\n            int maxIndex = 0;\n            for (int j = 0; j < i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i - 1) {\n                result.Add(maxIndex + 1);\n                result.Add(i);\n                Reverse(nums, maxIndex);\n                Reverse(nums, i - 1);\n            }\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) continue;\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Reverse(nums, index);\n            }\n            result.Add(nums.Count - i);\n            nums = Reverse(nums, nums.Count - i - 1);\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Max();\n        var maxIndex = nums.IndexOf(max);\n        var maxIndex2 = nums.Count - 1;\n        while (maxIndex != maxIndex2) {\n            result.Add(maxIndex + 1);\n            result.Add(maxIndex2 + 1);\n            nums = Flip(nums, maxIndex);\n            nums = Flip(nums, maxIndex2);\n            maxIndex = nums.IndexOf(max);\n            maxIndex2--;\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        for (int i = 0; i < max; i++) {\n            var maxIndex = nums.IndexOf(nums.Max());\n            if (maxIndex != max - 1 - i) {\n                if (maxIndex != 0) {\n                    result.Add(maxIndex + 1);\n                    nums.Reverse(0, maxIndex + 1);\n                }\n                result.Add(max - i);\n                nums.Reverse(0, max - i);\n            }\n        }\n        return result;",
    "        var n = nums.Count;\n        var result = new List<long>();\n        for (int i = n; i > 0; i--) {\n            var maxIndex = nums.IndexOf(nums.Max());\n            if (maxIndex != i - 1) {\n                result.Add(maxIndex + 1);\n                nums = Flip(nums, maxIndex);\n                result.Add(i);\n                nums = Flip(nums, i - 1);\n            }\n        }\n        return result;",
    "        List<long> sorted = new List<long>(nums);\n        sorted.Sort();\n        List<long> result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            long num = sorted[i];\n            int index = nums.IndexOf(num);\n            if (index == 0) {\n                result.Add(1);\n                nums.RemoveAt(0);\n                continue;\n            }\n            if (index == nums.Count - 1) {\n                result.Add(nums.Count);\n                nums.RemoveAt(nums.Count - 1);\n                continue;\n            }\n            result.Add(index + 1);\n            result.Add(nums.Count);\n            nums.RemoveAt(index);\n            nums.RemoveAt(nums.Count - 1);\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) {\n                continue;\n            }\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index);\n            }\n            result.Add(nums.Count - i);\n            nums = Flip(nums, nums.Count - i - 1);\n        }\n        return result;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            int maxIndex = nums.IndexOf(nums.Max());\n            if (maxIndex != i) {\n                if (maxIndex != 0) {\n                    result.Add(maxIndex + 1);\n                    nums = Flip(nums, maxIndex);\n                }\n                result.Add(i + 1);\n                nums = Flip(nums, i);\n            }\n        }\n        return result;",
    "        var sorted = nums.OrderBy(x => x).ToList();\n        var result = new List<long>();\n        for (int i = 0; i < nums.Count; i++) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) continue;\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index);\n            }\n            result.Add(nums.Count - i);\n            nums = Flip(nums, nums.Count - i - 1);\n        }\n        return result;",
    "        // Write your code here.\n        for (int i = nums.Count; i > 0; i--) {\n            int maxIndex = FindMaxIndex(nums, i);\n            if (maxIndex != i - 1) {\n                Flip(nums, maxIndex);\n                Flip(nums, i - 1);\n            }\n        }\n        return nums;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        for (var i = max; i > 0; i--) {\n            var index = nums.IndexOf(i);\n            if (index == i - 1) {\n                continue;\n            }\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index);\n            }\n            result.Add(i);\n            nums = Flip(nums, i - 1);\n        }\n        return result;",
    "        // Write your code here.\n        return nums;",
    "        var n = nums.Count;\n        var result = new List<long>();\n        for (var i = n; i > 0; i--) {\n            var index = nums.IndexOf(i);\n            if (index == i - 1) {\n                continue;\n            }\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index);\n            }\n            result.Add(i);\n            nums = Flip(nums, i - 1);\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        for (var i = 0; i < max; i++) {\n            var maxIndex = nums.IndexOf(nums.Max());\n            if (maxIndex != max - 1) {\n                result.Add(maxIndex + 1);\n                result.Add(max);\n                nums = Flip(nums, maxIndex + 1);\n                nums = Flip(nums, max);\n            }\n            max--;\n        }\n        return result;",
    "        var sorted = new List<long>(nums);\n        sorted.Sort();\n        var result = new List<long>();\n        for (int i = sorted.Count - 1; i >= 0; i--) {\n            var index = nums.IndexOf(sorted[i]);\n            if (index == i) continue;\n            if (index != 0) {\n                result.Add(index + 1);\n                nums = Flip(nums, index);\n            }\n            result.Add(i + 1);\n            nums = Flip(nums, i);\n        }\n        return result;",
    "        // Write your code here.\n        List<long> sortedNums = new List<long>(nums);\n        sortedNums.Sort();\n        sortedNums.Reverse();\n        return sortedNums;",
    "        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            int maxIndex = 0;\n            for (int j = 0; j <= i; j++) {\n                if (nums[j] > nums[maxIndex]) {\n                    maxIndex = j;\n                }\n            }\n            if (maxIndex != i) {\n                if (maxIndex != 0) {\n                    result.Add(maxIndex + 1);\n                    nums.Reverse(0, maxIndex + 1);\n                }\n                result.Add(i + 1);\n                nums.Reverse(0, i + 1);\n            }\n        }\n        return result;",
    "        var result = new List<long>();\n        var max = nums.Count;\n        for (int i = 0; i < max; i++) {\n            var maxIndex = nums.IndexOf(nums.Max());\n            if (maxIndex == max - i - 1) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.Add(maxIndex + 1);\n                nums = nums.Take(maxIndex + 1).Reverse().Concat(nums.Skip(maxIndex + 1)).ToList();\n            }\n            result.Add(max - i);\n            nums = nums.Take(max - i).Reverse().Concat(nums.Skip(max - i)).ToList();\n        }\n        return result;",
    "        // Write your code here.\n        var result = new List<long>();\n        for (int i = nums.Count - 1; i >= 0; i--) {\n            var max = nums.Max();\n            var maxIndex = nums.IndexOf(max);\n            if (maxIndex == i) {\n                continue;\n            }\n            if (maxIndex != 0) {\n                result.Add(maxIndex + 1);\n                nums = Flip(nums, maxIndex);\n            }\n            result.Add(i + 1);\n            nums = Flip(nums, i);\n        }\n        return result;"
  ]
}
{
  "name": "mbpp_635_heap_sort",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_635_heap_sort.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        return heap.Sort();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps9l4dusq.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new MinHeap();\n        foreach (var item in iterable) {\n            heap.Insert(item);\n        }\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnwolii1z.cs(11,24): error CS0246: The type or namespace name 'MinHeap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpnwolii1z.cs(16,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        return new List<long>();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8821beff14c54f4a95ace7c300e74233>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <8821beff14c54f4a95ace7c300e74233>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement HeapSort\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc1e0f1b3c664a3598a8e8fa43b1d38a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc1e0f1b3c664a3598a8e8fa43b1d38a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: implement me!\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <31b6515a7e4846ab954ec1fa60cb34ef>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <31b6515a7e4846ab954ec1fa60cb34ef>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bcc81f132fa8499dbe5a1215dc078133>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bcc81f132fa8499dbe5a1215dc078133>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement this function.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cb90043d40ec47239690818d05399392>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cb90043d40ec47239690818d05399392>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement this function.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cb90043d40ec47239690818d05399392>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cb90043d40ec47239690818d05399392>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var sorted = new List<long>();\n        while (heap.Count > 0) {\n            sorted.Add(heap.Pop());\n        }\n        return sorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb9149bc7.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpb9149bc7.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <b2760c5e77b2428cb50bafb1e56a3641>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <b2760c5e77b2428cb50bafb1e56a3641>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9917a246d4b343018709f77285682a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9917a246d4b343018709f77285682a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap<long>(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6bbwjn4e.cs(11,24): error CS0246: The type or namespace name 'Heap<>' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp6bbwjn4e.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement this function.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cb90043d40ec47239690818d05399392>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cb90043d40ec47239690818d05399392>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // Your code here.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <964235e47b8b41ad869e4186f1849c7c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <964235e47b8b41ad869e4186f1849c7c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <a5ade56929324cf380783dd9005cd7d0>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <a5ade56929324cf380783dd9005cd7d0>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap<long>(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6bbwjn4e.cs(11,24): error CS0246: The type or namespace name 'Heap<>' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp6bbwjn4e.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap<long>(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6bbwjn4e.cs(11,24): error CS0246: The type or namespace name 'Heap<>' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp6bbwjn4e.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement this function.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f111afe48a0a42cabe0eef2f48216533>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f111afe48a0a42cabe0eef2f48216533>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap<long>(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6bbwjn4e.cs(11,24): error CS0246: The type or namespace name 'Heap<>' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp6bbwjn4e.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9917a246d4b343018709f77285682a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9917a246d4b343018709f77285682a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        return heap.Sort();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps9l4dusq.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9917a246d4b343018709f77285682a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9917a246d4b343018709f77285682a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement this function.\n        return new List<long>();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d396cd93f6b04729895604521a75544e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d396cd93f6b04729895604521a75544e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        return heap.Sort();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps9l4dusq.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap<long>(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6bbwjn4e.cs(11,24): error CS0246: The type or namespace name 'Heap<>' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp6bbwjn4e.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var sorted = new List<long>();\n        while (heap.Count > 0) {\n            sorted.Add(heap.Pop());\n        }\n        return sorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb9149bc7.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpb9149bc7.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var sorted = new List<long>();\n        while (heap.Count > 0) {\n            sorted.Add(heap.Pop());\n        }\n        return sorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb9149bc7.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpb9149bc7.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap<long>(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6bbwjn4e.cs(11,24): error CS0246: The type or namespace name 'Heap<>' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp6bbwjn4e.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <a5ade56929324cf380783dd9005cd7d0>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <a5ade56929324cf380783dd9005cd7d0>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9917a246d4b343018709f77285682a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9917a246d4b343018709f77285682a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return new List<long>();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fcb4d9746af440c3a3a4313f1adeee37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fcb4d9746af440c3a3a4313f1adeee37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement this function.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f111afe48a0a42cabe0eef2f48216533>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f111afe48a0a42cabe0eef2f48216533>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement this function.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cb90043d40ec47239690818d05399392>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cb90043d40ec47239690818d05399392>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement this function.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f111afe48a0a42cabe0eef2f48216533>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f111afe48a0a42cabe0eef2f48216533>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement your solution here.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <783d2527112740ccb28d5485b87f6dac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <783d2527112740ccb28d5485b87f6dac>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement this function.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cb90043d40ec47239690818d05399392>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cb90043d40ec47239690818d05399392>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap();\n        foreach (var item in iterable) {\n            heap.Push(item);\n        }\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4dyje_up.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp4dyje_up.cs(16,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>(iterable.Count);\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx0efnlk8.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpx0efnlk8.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement HeapSort\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc1e0f1b3c664a3598a8e8fa43b1d38a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc1e0f1b3c664a3598a8e8fa43b1d38a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap<long>(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6bbwjn4e.cs(11,24): error CS0246: The type or namespace name 'Heap<>' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp6bbwjn4e.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // Your code here.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <964235e47b8b41ad869e4186f1849c7c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <964235e47b8b41ad869e4186f1849c7c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap();\n        foreach (var item in iterable) {\n            heap.Push(item);\n        }\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4dyje_up.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp4dyje_up.cs(16,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        return heap.Sort();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps9l4dusq.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        return heap.Sort();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps9l4dusq.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement this function.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f111afe48a0a42cabe0eef2f48216533>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f111afe48a0a42cabe0eef2f48216533>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: implement this function.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bc05cf44bfc5418b95b1f0d916b8fbd8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <bc05cf44bfc5418b95b1f0d916b8fbd8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <baa0eca03736450bbde45c8af75abb5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement this function.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f111afe48a0a42cabe0eef2f48216533>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f111afe48a0a42cabe0eef2f48216533>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement the heap sort algorithm.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2b2c6406c2ec455ebada99475369e445>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2b2c6406c2ec455ebada99475369e445>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        return heap.Sort();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps9l4dusq.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: implement heap sort\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a0195caf2fa34df684c821d30712155c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a0195caf2fa34df684c821d30712155c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // Your code here.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <964235e47b8b41ad869e4186f1849c7c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <964235e47b8b41ad869e4186f1849c7c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement heap sort here.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b96055da194438c8c14a1411ad435d8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6b96055da194438c8c14a1411ad435d8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9917a246d4b343018709f77285682a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9917a246d4b343018709f77285682a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: implement heap sort\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a0195caf2fa34df684c821d30712155c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a0195caf2fa34df684c821d30712155c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // Your code here.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <964235e47b8b41ad869e4186f1849c7c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <964235e47b8b41ad869e4186f1849c7c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        return heap.Sort();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps9l4dusq.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap<long>(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6bbwjn4e.cs(11,24): error CS0246: The type or namespace name 'Heap<>' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp6bbwjn4e.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9917a246d4b343018709f77285682a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9917a246d4b343018709f77285682a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        return heap.Sort();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps9l4dusq.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return new List<long>();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fcb4d9746af440c3a3a4313f1adeee37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fcb4d9746af440c3a3a4313f1adeee37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9917a246d4b343018709f77285682a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9917a246d4b343018709f77285682a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap<long>();\n        foreach (var item in iterable) {\n            heap.Push(item);\n        }\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp74jvz5ix.cs(11,24): error CS0246: The type or namespace name 'Heap<>' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp74jvz5ix.cs(16,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9917a246d4b343018709f77285682a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9917a246d4b343018709f77285682a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <b2760c5e77b2428cb50bafb1e56a3641>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <b2760c5e77b2428cb50bafb1e56a3641>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        List<long> result = new List<long>();\n        Heap<long> heap = new Heap<long>(iterable);\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpuobupdzk.cs(12,9): error CS0246: The type or namespace name 'Heap<>' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpuobupdzk.cs(12,31): error CS0246: The type or namespace name 'Heap<>' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpuobupdzk.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap<long>(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6bbwjn4e.cs(11,24): error CS0246: The type or namespace name 'Heap<>' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp6bbwjn4e.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap<long>(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6bbwjn4e.cs(11,24): error CS0246: The type or namespace name 'Heap<>' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp6bbwjn4e.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap<long>(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6bbwjn4e.cs(11,24): error CS0246: The type or namespace name 'Heap<>' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp6bbwjn4e.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <b2760c5e77b2428cb50bafb1e56a3641>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <b2760c5e77b2428cb50bafb1e56a3641>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement HeapSort\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc1e0f1b3c664a3598a8e8fa43b1d38a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fc1e0f1b3c664a3598a8e8fa43b1d38a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap<long>(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6bbwjn4e.cs(11,24): error CS0246: The type or namespace name 'Heap<>' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp6bbwjn4e.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9917a246d4b343018709f77285682a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9917a246d4b343018709f77285682a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var sorted = new List<long>();\n        while (heap.Count > 0) {\n            sorted.Add(heap.Pop());\n        }\n        return sorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb9149bc7.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpb9149bc7.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement this function.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cb90043d40ec47239690818d05399392>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cb90043d40ec47239690818d05399392>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var sorted = new List<long>();\n        while (heap.Count > 0) {\n            sorted.Add(heap.Pop());\n        }\n        return sorted;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb9149bc7.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpb9149bc7.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return new List<long>();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fcb4d9746af440c3a3a4313f1adeee37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fcb4d9746af440c3a3a4313f1adeee37>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9917a246d4b343018709f77285682a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9917a246d4b343018709f77285682a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Write your code here.\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <039374361be344989ff584d9eba9ca56>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <039374361be344989ff584d9eba9ca56>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9917a246d4b343018709f77285682a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9917a246d4b343018709f77285682a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap<long>(iterable);\n        return heap.Sort();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpf6dyc59x.cs(11,24): error CS0246: The type or namespace name 'Heap<>' could not be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement this function.\n        return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cb90043d40ec47239690818d05399392>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object\n  at Problem.Main (System.String[] args) [0x00034] in <cb90043d40ec47239690818d05399392>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: Implement me!\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9917a246d4b343018709f77285682a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9917a246d4b343018709f77285682a49>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap();\n        foreach (var item in iterable) {\n            heap.Push(item);\n        }\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4dyje_up.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp4dyje_up.cs(16,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        // TODO: implement heap sort\n        return iterable;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124220,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a0195caf2fa34df684c821d30712155c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a0195caf2fa34df684c821d30712155c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap<long>(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6bbwjn4e.cs(11,24): error CS0246: The type or namespace name 'Heap<>' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp6bbwjn4e.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap(iterable);\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1665509923,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcgdk3b7q.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmpcgdk3b7q.cs(13,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list.\n    public static List<long> HeapSort(List<long> iterable) {\n        var heap = new Heap();\n        foreach (var item in iterable) {\n            heap.Push(item);\n        }\n        var result = new List<long>();\n        while (heap.Count > 0) {\n            result.Add(heap.Pop());\n        }\n        return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)7L, (long)9L, (long)2L, (long)4L, (long)6L, (long)8L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L, (long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)25L, (long)35L, (long)22L, (long)85L, (long)14L, (long)65L, (long)75L, (long)25L, (long)58L}))).Equals((new List<long>(new long[]{(long)14L, (long)22L, (long)25L, (long)25L, (long)35L, (long)58L, (long)65L, (long)75L, (long)85L}))));\n    Debug.Assert(HeapSort((new List<long>(new long[]{(long)7L, (long)1L, (long)9L, (long)5L}))).Equals((new List<long>(new long[]{(long)1L, (long)5L, (long)7L, (long)9L}))));\n    }\n\n}\n",
      "timestamp": 1666124219,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp4dyje_up.cs(11,24): error CS0246: The type or namespace name 'Heap' could not be found (are you missing a using directive or an assembly reference?)\n/tmp/tmp4dyje_up.cs(16,16): error CS0019: Operator '>' cannot be applied to operands of type 'method group' and 'int'\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
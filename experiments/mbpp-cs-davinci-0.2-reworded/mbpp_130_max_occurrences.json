{
  "name": "mbpp_130_max_occurrences",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the item with maximum frequency in a given list.\n    public static long MaxOccurrences(List<long> nums) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_130_max_occurrences.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxOccurrences((new List<long>(new long[]{(long)2L, (long)3L, (long)8L, (long)4L, (long)7L, (long)9L, (long)8L, (long)2L, (long)6L, (long)5L, (long)1L, (long)6L, (long)1L, (long)2L, (long)3L, (long)2L, (long)4L, (long)6L, (long)9L, (long)1L, (long)2L}))) == (2L));\n    Debug.Assert(MaxOccurrences((new List<long>(new long[]{(long)2L, (long)3L, (long)8L, (long)4L, (long)7L, (long)9L, (long)8L, (long)7L, (long)9L, (long)15L, (long)14L, (long)10L, (long)12L, (long)13L, (long)16L, (long)18L}))) == (8L));\n    Debug.Assert(MaxOccurrences((new List<long>(new long[]{(long)10L, (long)20L, (long)20L, (long)30L, (long)40L, (long)90L, (long)80L, (long)50L, (long)30L, (long)20L, (long)50L, (long)10L}))) == (20L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        return nums.GroupBy(x => x).OrderByDescending(x => x.Count()).First().Key;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        var max = dict.Values.Max();\n        return max;",
    "        var freq = new Dictionary<long, long>();\n        foreach (var n in nums) {\n            if (!freq.ContainsKey(n)) {\n                freq[n] = 0;\n            }\n            freq[n]++;\n        }\n        return freq.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        long maxCount = 0;\n        long maxNum = 0;\n        foreach (var num in counts.Keys) {\n            if (counts[num] > maxCount) {\n                maxCount = counts[num];\n                maxNum = num;\n            }\n        }\n        return maxNum;",
    "        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (freq.ContainsKey(num)) {\n                freq[num]++;\n            } else {\n                freq[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long key in freq.Keys) {\n            if (freq[key] > max) {\n                max = freq[key];\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Aggregate((l, r) => l.Value > r.Value ? l : r).Key;",
    "        // Your code here\n        return 0;",
    "        long max = 0;\n        long maxCount = 0;\n        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n            if (counts[num] > maxCount) {\n                max = num;\n                maxCount = counts[num];\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Aggregate((l, r) => l.Value > r.Value ? l : r).Key;",
    "        // Your code goes here.\n        return 0;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        return counts.Values.Max();",
    "        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (!freq.ContainsKey(num)) {\n                freq[num] = 0;\n            }\n            freq[num]++;\n        }\n        long max = 0;\n        foreach (long num in freq.Keys) {\n            if (freq[num] > max) {\n                max = freq[num];\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        // Your code here\n        return 0;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        return counts.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        long max = 0;\n        foreach (var kvp in counts) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var n in nums) {\n            if (dict.ContainsKey(n)) {\n                dict[n]++;\n            } else {\n                dict[n] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long maxCount = 0;\n        long maxNum = 0;\n        foreach (KeyValuePair<long, long> kvp in counts) {\n            if (kvp.Value > maxCount) {\n                maxCount = kvp.Value;\n                maxNum = kvp.Key;\n            }\n        }\n        return maxNum;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long num in counts.Keys) {\n            if (counts[num] > max) {\n                max = counts[num];\n            }\n        }\n        return max;",
    "        // Write your code here.\n        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (var key in dict.Keys) {\n            if (dict[key] > max) {\n                max = dict[key];\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        // your code goes here\n        var dict = new Dictionary<long, long>();\n        foreach(var num in nums) {\n            if(dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        // Your code goes here.\n        return 0;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        var max = 0L;\n        foreach (var count in counts.Values) {\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (var kvp in dict) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n            }\n        }\n        return max;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (var kvp in counts) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n            }\n        }\n        return max;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (var count in counts.Values) {\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxNum = 0;\n        foreach (var num in dict.Keys) {\n            if (dict[num] > max) {\n                max = dict[num];\n                maxNum = num;\n            }\n        }\n        return maxNum;",
    "        // Your code here.\n        var counts = new Dictionary<long, long>();\n        foreach (var n in nums) {\n            if (counts.ContainsKey(n)) {\n                counts[n]++;\n            } else {\n                counts[n] = 1;\n            }\n        }\n        return counts.Values.Max();",
    "        // Write your code here\n        Dictionary<long, long> dict = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxKey = 0;\n        foreach (KeyValuePair<long, long> kvp in dict) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n                maxKey = kvp.Key;\n            }\n        }\n        return maxKey;",
    "        // Write your code here.\n        Dictionary<long, long> numsDict = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (numsDict.ContainsKey(num)) {\n                numsDict[num]++;\n            } else {\n                numsDict.Add(num, 1);\n            }\n        }\n        long max = 0;\n        foreach (long num in numsDict.Keys) {\n            if (numsDict[num] > max) {\n                max = numsDict[num];\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        var max = 0L;\n        var maxNum = 0L;\n        foreach (var kv in counts) {\n            if (kv.Value > max) {\n                max = kv.Value;\n                maxNum = kv.Key;\n            }\n        }\n        return maxNum;",
    "        // Your code here\n        return 0;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (var kvp in dict) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!dict.ContainsKey(num)) {\n                dict[num] = 0;\n            }\n            dict[num]++;\n        }\n        var max = dict.Values.Max();\n        return dict.First(kvp => kvp.Value == max).Key;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        long maxCount = 0;\n        long maxNum = 0;\n        foreach (var kvp in counts) {\n            if (kvp.Value > maxCount) {\n                maxCount = kvp.Value;\n                maxNum = kvp.Key;\n            }\n        }\n        return maxNum;",
    "        Dictionary<long, long> occurrences = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (occurrences.ContainsKey(num)) {\n                occurrences[num]++;\n            } else {\n                occurrences[num] = 1;\n            }\n        }\n        long maxOccurrences = 0;\n        long maxOccurrencesItem = 0;\n        foreach (KeyValuePair<long, long> kvp in occurrences) {\n            if (kvp.Value > maxOccurrences) {\n                maxOccurrences = kvp.Value;\n                maxOccurrencesItem = kvp.Key;\n            }\n        }\n        return maxOccurrencesItem;",
    "        var groups = nums.GroupBy(x => x);\n        var max = groups.Max(x => x.Count());\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!dict.ContainsKey(num)) {\n                dict[num] = 0;\n            }\n            dict[num]++;\n        }\n        long max = 0;\n        long maxNum = 0;\n        foreach (var kvp in dict) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n                maxNum = kvp.Key;\n            }\n        }\n        return maxNum;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!dict.ContainsKey(num)) {\n                dict[num] = 0;\n            }\n            dict[num]++;\n        }\n        var max = dict.Values.Max();\n        return dict.First(x => x.Value == max).Key;",
    "        // Write your code here\n        return 0;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long key in counts.Keys) {\n            if (counts[key] > max) {\n                max = counts[key];\n            }\n        }\n        return max;",
    "        // Your code here.\n        return 0;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        // Your code here\n        return 0;",
    "        Dictionary<long, long> dict = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxNum = 0;\n        foreach (KeyValuePair<long, long> pair in dict) {\n            if (pair.Value > max) {\n                max = pair.Value;\n                maxNum = pair.Key;\n            }\n        }\n        return maxNum;",
    "        var freq = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!freq.ContainsKey(num)) {\n                freq[num] = 0;\n            }\n            freq[num]++;\n        }\n        return freq.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var n in nums) {\n            if (!counts.ContainsKey(n)) {\n                counts[n] = 0;\n            }\n            counts[n]++;\n        }\n        var max = 0L;\n        var maxCount = 0L;\n        foreach (var kvp in counts) {\n            if (kvp.Value > maxCount) {\n                max = kvp.Key;\n                maxCount = kvp.Value;\n            }\n        }\n        return max;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxVal = 0;\n        foreach (KeyValuePair<long, long> kvp in counts) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n                maxVal = kvp.Key;\n            }\n        }\n        return maxVal;",
    "        // Your code goes here.\n        return 0;",
    "        long max = 0;\n        long maxCount = 0;\n        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n            if (counts[num] > maxCount) {\n                max = num;\n                maxCount = counts[num];\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        return counts.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Aggregate((l, r) => l.Value > r.Value ? l : r).Key;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var n in nums) {\n            if (!counts.ContainsKey(n)) {\n                counts[n] = 0;\n            }\n            counts[n]++;\n        }\n        return counts.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        long maxCount = 0;\n        long maxNum = 0;\n        foreach (var pair in counts) {\n            if (pair.Value > maxCount) {\n                maxCount = pair.Value;\n                maxNum = pair.Key;\n            }\n        }\n        return maxNum;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        var max = dict.Values.Max();\n        return dict.First(x => x.Value == max).Key;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (var pair in dict) {\n            if (pair.Value > max) {\n                max = pair.Value;\n            }\n        }\n        return max;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long key in counts.Keys) {\n            if (counts[key] > max) {\n                max = counts[key];\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        var max = 0L;\n        foreach (var key in dict.Keys) {\n            if (dict[key] > max) {\n                max = dict[key];\n            }\n        }\n        return max;",
    "        // Your code here\n        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict.Add(num, 1);\n            }\n        }\n        return dict.Values.Max();",
    "        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (freq.ContainsKey(num)) {\n                freq[num]++;\n            } else {\n                freq[num] = 1;\n            }\n        }\n        long max = 0;\n        long max_key = 0;\n        foreach (KeyValuePair<long, long> pair in freq) {\n            if (pair.Value > max) {\n                max = pair.Value;\n                max_key = pair.Key;\n            }\n        }\n        return max_key;",
    "        // Your code here.\n        return 0;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        var max = 0L;\n        var maxCount = 0L;\n        foreach (var kvp in counts) {\n            if (kvp.Value > maxCount) {\n                max = kvp.Key;\n                maxCount = kvp.Value;\n            }\n        }\n        return max;",
    "        var freq = new Dictionary<long, long>();\n        foreach (var n in nums) {\n            if (!freq.ContainsKey(n)) {\n                freq[n] = 0;\n            }\n            freq[n]++;\n        }\n        return freq.Values.Max();",
    "        // Your code goes here.\n        return 0;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long num in counts.Keys) {\n            if (counts[num] > max) {\n                max = counts[num];\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        // Your code here\n        Dictionary<long, long> dic = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (dic.ContainsKey(num)) {\n                dic[num]++;\n            } else {\n                dic[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long num in dic.Keys) {\n            if (dic[num] > max) {\n                max = num;\n            }\n        }\n        return max;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        return counts.Values.Max();",
    "        Dictionary<long, long> occurrences = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (occurrences.ContainsKey(num)) {\n                occurrences[num]++;\n            } else {\n                occurrences[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxOccurrences = 0;\n        foreach (KeyValuePair<long, long> pair in occurrences) {\n            if (pair.Value > maxOccurrences) {\n                max = pair.Key;\n                maxOccurrences = pair.Value;\n            }\n        }\n        return max;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long maxCount = 0;\n        long maxNum = 0;\n        foreach (long num in counts.Keys) {\n            if (counts[num] > maxCount) {\n                maxCount = counts[num];\n                maxNum = num;\n            }\n        }\n        return maxNum;",
    "        // Your code here\n        return nums.GroupBy(x => x).OrderByDescending(x => x.Count()).First().Key;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!dict.ContainsKey(num)) {\n                dict[num] = 0;\n            }\n            dict[num]++;\n        }\n        long max = 0;\n        foreach (var pair in dict) {\n            if (pair.Value > max) {\n                max = pair.Value;\n            }\n        }\n        return max;",
    "        // Your code here.\n        return 0;",
    "        // TODO: Implement this function\n        return 0;",
    "        // Your code here\n        return 0;",
    "        // Write your code here.\n        Dictionary<long, long> occurrences = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (occurrences.ContainsKey(num)) {\n                occurrences[num]++;\n            } else {\n                occurrences[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxOccurrences = 0;\n        foreach (long num in occurrences.Keys) {\n            if (occurrences[num] > maxOccurrences) {\n                max = num;\n                maxOccurrences = occurrences[num];\n            }\n        }\n        return max;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        long maxNum = -1;\n        long maxCount = -1;\n        foreach (long num in counts.Keys) {\n            if (counts[num] > maxCount) {\n                maxCount = counts[num];\n                maxNum = num;\n            }\n        }\n        return maxNum;",
    "        // Your code here\n        return 0;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        var max = 0L;\n        var maxNum = 0L;\n        foreach (var kvp in counts) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n                maxNum = kvp.Key;\n            }\n        }\n        return maxNum;",
    "        var counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long num in counts.Keys) {\n            if (counts[num] > max) {\n                max = counts[num];\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long num in dict.Keys) {\n            if (dict[num] > max) {\n                max = dict[num];\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!dict.ContainsKey(num)) {\n                dict[num] = 0;\n            }\n            dict[num]++;\n        }\n        return dict.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        return counts.Values.Max();",
    "        Dictionary<long, long> freqs = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (freqs.ContainsKey(num)) {\n                freqs[num]++;\n            } else {\n                freqs[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long num in freqs.Keys) {\n            if (freqs[num] > max) {\n                max = num;\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        var max = dict.Values.Max();\n        return dict.First(x => x.Value == max).Key;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        var max = dict.Values.Max();\n        return dict.First(x => x.Value == max).Key;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        return counts.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Aggregate((l, r) => l.Value > r.Value ? l : r).Key;",
    "        // Your code goes here.\n        return 0;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long num in counts.Keys) {\n            max = Math.Max(max, counts[num]);\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Aggregate((l, r) => l.Value > r.Value ? l : r).Key;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        return counts.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!dict.ContainsKey(num)) {\n                dict[num] = 0;\n            }\n            dict[num]++;\n        }\n        return dict.Values.Max();",
    "        // Your code goes here.\n        return 0;",
    "        var max = nums.Max();\n        var counts = new long[max + 1];\n        foreach (var n in nums) {\n            counts[n]++;\n        }\n        return counts.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        var max = counts.Values.Max();\n        return counts.First(kvp => kvp.Value == max).Key;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long num in counts.Keys) {\n            if (counts[num] > max) {\n                max = counts[num];\n            }\n        }\n        return max;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        return counts.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Aggregate((l, r) => l.Value > r.Value ? l : r).Key;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        var max = 0L;\n        foreach (var count in counts.Values) {\n            if (count > max) {\n                max = count;\n            }\n        }\n        return max;",
    "        Dictionary<long, long> dict = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long key in dict.Keys) {\n            if (dict[key] > max) {\n                max = dict[key];\n            }\n        }\n        return max;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long maxCount = 0;\n        long maxNum = 0;\n        foreach (KeyValuePair<long, long> pair in counts) {\n            if (pair.Value > maxCount) {\n                maxCount = pair.Value;\n                maxNum = pair.Key;\n            }\n        }\n        return maxNum;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        return counts.Values.Max();",
    "        // Your code here\n        return 0;",
    "        // Write your code here\n        long max = 0;\n        long count = 0;\n        Dictionary<long, long> dict = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict.Add(num, 1);\n            }\n        }\n        foreach (KeyValuePair<long, long> pair in dict) {\n            if (pair.Value > count) {\n                count = pair.Value;\n                max = pair.Key;\n            }\n        }\n        return max;",
    "        Dictionary<long, long> dict = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long key in dict.Keys) {\n            if (dict[key] > max) {\n                max = dict[key];\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long key in dict.Keys) {\n            if (dict[key] > max) {\n                max = dict[key];\n            }\n        }\n        return max;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var n in nums) {\n            if (!counts.ContainsKey(n)) {\n                counts[n] = 0;\n            }\n            counts[n]++;\n        }\n        return counts.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        return counts.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var n in nums) {\n            if (!dict.ContainsKey(n)) {\n                dict[n] = 0;\n            }\n            dict[n]++;\n        }\n        return dict.Values.Max();",
    "        // Your code here\n        return 0;",
    "        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (freq.ContainsKey(num)) {\n                freq[num]++;\n            } else {\n                freq[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxNum = 0;\n        foreach (KeyValuePair<long, long> pair in freq) {\n            if (pair.Value > max) {\n                max = pair.Value;\n                maxNum = pair.Key;\n            }\n        }\n        return maxNum;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!dict.ContainsKey(num)) {\n                dict[num] = 0;\n            }\n            dict[num]++;\n        }\n        return dict.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        return counts.Values.Max();",
    "        Dictionary<long, long> occurrences = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (occurrences.ContainsKey(num)) {\n                occurrences[num]++;\n            } else {\n                occurrences[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long num in occurrences.Keys) {\n            if (occurrences[num] > max) {\n                max = occurrences[num];\n            }\n        }\n        return max;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        long max = 0;\n        long maxCount = 0;\n        foreach (var kvp in counts) {\n            if (kvp.Value > maxCount) {\n                max = kvp.Key;\n                maxCount = kvp.Value;\n            }\n        }\n        return max;",
    "        Dictionary<long, long> dict = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long num in dict.Keys) {\n            if (dict[num] > max) {\n                max = dict[num];\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!dict.ContainsKey(num)) {\n                dict[num] = 0;\n            }\n            dict[num]++;\n        }\n        var max = dict.Values.Max();\n        return dict.Where(x => x.Value == max).Select(x => x.Key).Min();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        var max = counts.Values.Max();\n        return counts.First(kvp => kvp.Value == max).Key;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        return counts.Values.Max();",
    "        var freq = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (freq.ContainsKey(num)) {\n                freq[num]++;\n            } else {\n                freq[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (var kv in freq) {\n            if (kv.Value > max) {\n                max = kv.Value;\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!dict.ContainsKey(num)) {\n                dict[num] = 0;\n            }\n            dict[num]++;\n        }\n        return dict.Values.Max();",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        long max = 0;\n        foreach (long num in counts.Keys) {\n            if (counts[num] > max) {\n                max = counts[num];\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!dict.ContainsKey(num)) {\n                dict[num] = 0;\n            }\n            dict[num]++;\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!dict.ContainsKey(num)) {\n                dict[num] = 0;\n            }\n            dict[num]++;\n        }\n        return dict.Values.Max();",
    "        // Your code goes here.\n        return 0;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        long max = 0;\n        long maxCount = 0;\n        foreach (var kvp in counts) {\n            if (kvp.Value > maxCount) {\n                max = kvp.Key;\n                maxCount = kvp.Value;\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var n in nums) {\n            if (dict.ContainsKey(n)) {\n                dict[n]++;\n            } else {\n                dict[n] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!dict.ContainsKey(num)) {\n                dict[num] = 0;\n            }\n            dict[num]++;\n        }\n        return dict.Values.Max();",
    "        Dictionary<long, long> dict = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxKey = 0;\n        foreach (KeyValuePair<long, long> pair in dict) {\n            if (pair.Value > max) {\n                max = pair.Value;\n                maxKey = pair.Key;\n            }\n        }\n        return maxKey;",
    "        // Your code here\n        return 0;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        long maxCount = 0;\n        long maxNum = 0;\n        foreach (var pair in counts) {\n            if (pair.Value > maxCount) {\n                maxCount = pair.Value;\n                maxNum = pair.Key;\n            }\n        }\n        return maxNum;",
    "        Dictionary<long, long> occurences = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (occurences.ContainsKey(num)) {\n                occurences[num] += 1;\n            } else {\n                occurences[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxKey = 0;\n        foreach (KeyValuePair<long, long> pair in occurences) {\n            if (pair.Value > max) {\n                max = pair.Value;\n                maxKey = pair.Key;\n            }\n        }\n        return maxKey;",
    "        // Your code here.\n        return 0;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long num in counts.Keys) {\n            if (counts[num] > max) {\n                max = counts[num];\n            }\n        }\n        return max;",
    "        Dictionary<long, long> occ = new Dictionary<long, long>();\n        foreach (long n in nums) {\n            if (occ.ContainsKey(n)) {\n                occ[n]++;\n            } else {\n                occ[n] = 1;\n            }\n        }\n        long max = 0;\n        long max_n = 0;\n        foreach (long n in occ.Keys) {\n            if (occ[n] > max) {\n                max = occ[n];\n                max_n = n;\n            }\n        }\n        return max_n;",
    "        Dictionary<long, long> count = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (count.ContainsKey(num)) {\n                count[num]++;\n            } else {\n                count.Add(num, 1);\n            }\n        }\n        long max = 0;\n        foreach (long key in count.Keys) {\n            if (count[key] > max) {\n                max = count[key];\n            }\n        }\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict.Add(num, 1);\n            }\n        }\n        return dict.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num] += 1;\n        }\n        var max = 0L;\n        var maxNum = 0L;\n        foreach (var pair in counts) {\n            if (pair.Value > max) {\n                max = pair.Value;\n                maxNum = pair.Key;\n            }\n        }\n        return maxNum;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        long maxCount = 0;\n        long maxNum = 0;\n        foreach (KeyValuePair<long, long> kvp in counts) {\n            if (kvp.Value > maxCount) {\n                maxCount = kvp.Value;\n                maxNum = kvp.Key;\n            }\n        }\n        return maxNum;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long key in counts.Keys) {\n            if (counts[key] > max) {\n                max = counts[key];\n            }\n        }\n        return max;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long maxCount = 0;\n        long maxNum = 0;\n        foreach (var num in counts.Keys) {\n            if (counts[num] > maxCount) {\n                maxCount = counts[num];\n                maxNum = num;\n            }\n        }\n        return maxNum;",
    "        // Your code goes here.\n        return 0;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long key in counts.Keys) {\n            if (counts[key] > max) {\n                max = counts[key];\n            }\n        }\n        return max;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        var max = 0L;\n        var maxNum = 0L;\n        foreach (var kvp in counts) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n                maxNum = kvp.Key;\n            }\n        }\n        return maxNum;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var n in nums) {\n            if (!counts.ContainsKey(n)) {\n                counts[n] = 0;\n            }\n            counts[n]++;\n        }\n        return counts.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        var max = dict.Values.Max();\n        return max;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var d = new Dictionary<long, long>();\n        foreach (var n in nums) {\n            if (d.ContainsKey(n)) {\n                d[n]++;\n            } else {\n                d[n] = 1;\n            }\n        }\n        return d.Values.Max();",
    "        Dictionary<long, long> d = new Dictionary<long, long>();\n        foreach (long n in nums) {\n            if (d.ContainsKey(n)) {\n                d[n]++;\n            } else {\n                d[n] = 1;\n            }\n        }\n        long max = 0;\n        long maxKey = 0;\n        foreach (KeyValuePair<long, long> kvp in d) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n                maxKey = kvp.Key;\n            }\n        }\n        return maxKey;",
    "        // Your code here.\n        return 0;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long key in counts.Keys) {\n            if (counts[key] > max) {\n                max = counts[key];\n            }\n        }\n        return max;",
    "        // Your code here\n        return 0;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!dict.ContainsKey(num)) {\n                dict[num] = 1;\n            } else {\n                dict[num]++;\n            }\n        }\n        long max = 0;\n        foreach (var kvp in dict) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n            }\n        }\n        return max;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        return counts.Values.Max();",
    "        // TODO: Implement this function\n        return 0;",
    "        // Your code here\n        return 0;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        return counts.Values.Max();",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        return counts.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        var max = 0L;\n        foreach (var pair in dict) {\n            if (pair.Value > max) {\n                max = pair.Value;\n            }\n        }\n        return max;",
    "        // Your code here\n        return 0;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n        }\n        long maxCount = 0;\n        long maxNum = 0;\n        foreach (var kvp in counts) {\n            if (kvp.Value > maxCount) {\n                maxCount = kvp.Value;\n                maxNum = kvp.Key;\n            }\n        }\n        return maxNum;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long num in counts.Keys) {\n            if (counts[num] > max) {\n                max = counts[num];\n            }\n        }\n        return max;",
    "        // Your code here.\n        return 0;",
    "        // TODO: Implement this function\n        return 0;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Aggregate((l, r) => l.Value > r.Value ? l : r).Key;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        // Your code here.\n        return 0;",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long maxCount = 0;\n        long maxNum = 0;\n        foreach (long num in counts.Keys) {\n            if (counts[num] > maxCount) {\n                maxCount = counts[num];\n                maxNum = num;\n            }\n        }\n        return maxNum;",
    "        Dictionary<long, long> freq = new Dictionary<long, long>();\n        foreach (long n in nums) {\n            if (freq.ContainsKey(n)) {\n                freq[n]++;\n            } else {\n                freq[n] = 1;\n            }\n        }\n        long max = 0;\n        long max_key = 0;\n        foreach (KeyValuePair<long, long> pair in freq) {\n            if (pair.Value > max) {\n                max = pair.Value;\n                max_key = pair.Key;\n            }\n        }\n        return max_key;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!dict.ContainsKey(num)) {\n                dict[num] = 1;\n            } else {\n                dict[num]++;\n            }\n        }\n        return dict.Values.Max();",
    "        // Your code here.\n        return 0;",
    "        var max = 0L;\n        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!counts.ContainsKey(num)) {\n                counts[num] = 0;\n            }\n            counts[num]++;\n            max = Math.Max(max, counts[num]);\n        }\n        return max;",
    "        var counts = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        return counts.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        var max = dict.Values.Max();\n        return dict.First(x => x.Value == max).Key;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (!dict.ContainsKey(num)) {\n                dict[num] = 0;\n            }\n            dict[num]++;\n        }\n        long max = 0;\n        foreach (var kvp in dict) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n            }\n        }\n        return max;",
    "        // Your code here\n        return 0;",
    "        // Your code here.\n        return 0;",
    "        Dictionary<long, long> dict = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        long max = 0;\n        long maxKey = 0;\n        foreach (KeyValuePair<long, long> kvp in dict) {\n            if (kvp.Value > max) {\n                max = kvp.Value;\n                maxKey = kvp.Key;\n            }\n        }\n        return maxKey;",
    "        // Your code here.\n        return 0;",
    "        var dict = new Dictionary<long, long>();\n        foreach (var num in nums) {\n            if (dict.ContainsKey(num)) {\n                dict[num]++;\n            } else {\n                dict[num] = 1;\n            }\n        }\n        return dict.Values.Max();",
    "        Dictionary<long, long> counts = new Dictionary<long, long>();\n        foreach (long num in nums) {\n            if (counts.ContainsKey(num)) {\n                counts[num]++;\n            } else {\n                counts[num] = 1;\n            }\n        }\n        long max = 0;\n        foreach (long num in counts.Keys) {\n            if (counts[num] > max) {\n                max = counts[num];\n            }\n        }\n        return max;",
    "        // Your code here.\n        return 0;"
  ]
}
{
  "name": "mbpp_103_eulerian_num",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_103_eulerian_num.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        long[,] eulerian = new long[n + 1, m + 1];\n        for (long i = 0; i <= n; i++) {\n            for (long j = 0; j <= m; j++) {\n                if (i == 0 || j == 0) {\n                    eulerian[i, j] = 1;\n                } else {\n                    eulerian[i, j] = eulerian[i - 1, j - 1] + (i * eulerian[i - 1, j]);\n                }\n            }\n        }\n        return eulerian[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f8dc080190934eaa9c8e13c351dc1b42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f8dc080190934eaa9c8e13c351dc1b42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m)\n            return 0;\n        if (n == m)\n            return 1;\n        if (m == 0)\n            return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // Eulerian number is the number of permutations of n elements with exactly m ascents.\n        // a(n, m) = (n - m) * a(n - 1, m) + (m + 1) * a(n - 1, m - 1)\n        // a(n, 0) = a(n, n) = 1\n        // a(n, m) = 0 if m > n or m < 0\n        // a(n, m) = n! / (n - m)! if m <= n / 2\n        // a(n, m) = a(n, n - m) if m > n / 2\n        // a(n, m) = a(n - 1, m - 1) + a(n - 1, m) if m <= n / 2\n        // a(n, m) = a(n - 1, m) + a(n - 1, m + 1) if m > n / 2\n        // a(n, m) = a(n - 1, m) + a(n - 1, m - 1) if m <= n / 2\n        // a(n, m) = a(n - 1, m - 1) + a(n - 1, m + 1) if m > n / 2\n        // a(n, m) = a(n - 1, m) + a(n - 1, m - 1) if m <= n / 2\n        // a(n, m) = a(n - 1, m - 1) + a(n - 1, m + 1) if m > n / 2\n        // a(n, m) = a(n - 1, m) + a(n - 1, m - 1) if m <= n / 2\n        // a(n, m) = a(n - 1, m - 1) + a(n - 1, m + 1) if m > n / 2\n        // a(n, m) = a(n - 1, m) + a(n - 1, m - 1) if m <= n / 2\n        // a(n, m) = a(n - 1, m - 1) + a(n - 1, m + 1) if m > n / 2\n        // a(n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510550,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpt0qd3g06.cs(10,24): error CS0161: 'Problem.EulerianNum(long, long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // The Eulerian number a(n, m) is the number of permutations of n\n        // elements with exactly m ascents.\n        //\n        // The Eulerian number a(n, m) can be computed using the following\n        // recurrence:\n        //\n        // a(n, m) = (m + 1) * a(n - 1, m) + (n - m) * a(n - 1, m - 1)\n        //\n        // with the initial conditions:\n        //\n        // a(0, 0) = 1\n        // a(n, 0) = 0 for n > 0\n        // a(0, m) = 0 for m > 0\n        //\n        // The Eulerian number a(n, m) can also be computed using the\n        // following formula:\n        //\n        // a(n, m) = n! * (1 / (1! * 1) + 1 / (2! * 2) + ... + 1 / (m! * m))\n        //\n        // The Eulerian number a(n, m) can also be computed using the\n        // following formula:\n        //\n        // a(n, m) = n! * Sum_{k=1..m} (-1)^(k+1) * (1 / k!) *\n        //           Sum_{i=0..k} (1 / (n - i)!) * (k choose i)\n        //\n        // The Eulerian number a(n, m) can also be computed using the\n        // following formula:\n        //\n        // a(n, m) = n! * Sum_{k=1..m} (-1)^(k+1) * (1 / k!) *\n        //           Sum_{i=0..k} (1 / (n - i)!) * (k choose i)\n        //\n        // The Eulerian number a(n, m) can also be computed using the\n        // following formula:\n        //\n        // a(n, m) = n! * Sum_{k=1..m} (-1)^(k+1) * (1 / k!) *\n        //           Sum_{i=0..k} (1 / (n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510550,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvv0wy859.cs(10,24): error CS0161: 'Problem.EulerianNum(long, long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        long ans = 1;\n        for (long i = 0; i < m; i++) {\n            ans *= n - i;\n            ans /= i + 1;\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <35901834d82e479689208b1b9740124c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <35901834d82e479689208b1b9740124c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - 1) * EulerianNum(n - 1, m) + (m + 1) * EulerianNum(n - 1, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e926de1a22d2417ba9f5a74c15eab2c7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e926de1a22d2417ba9f5a74c15eab2c7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        long[,] a = new long[n + 1, m + 1];\n        for (int i = 0; i <= n; i++) {\n            for (int j = 0; j <= m; j++) {\n                if (i == 0 && j == 0) {\n                    a[i, j] = 1;\n                } else if (i == 0) {\n                    a[i, j] = 0;\n                } else if (j == 0) {\n                    a[i, j] = 1;\n                } else {\n                    a[i, j] = (i - j) * a[i - 1, j] + (j + 1) * a[i - 1, j - 1];\n                }\n            }\n        }\n        return a[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca3b409e74374b10b340382b474bda59>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ca3b409e74374b10b340382b474bda59>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (m == 0) return 1;\n        if (m == 1) return n;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m - 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a2f59d853dd14e249313f720cbbc0daf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a2f59d853dd14e249313f720cbbc0daf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // Eulerian number is the number of permutations of n elements with exactly m descents.\n        // Eulerian number can be calculated using the following recurrence relation:\n        // a(n, m) = (n - m) * a(n - 1, m) + (m + 1) * a(n - 1, m - 1)\n        // a(n, 0) = a(n, n) = 1\n        // a(n, m) = 0 if n < m or m < 0\n        // Time complexity: O(n * m)\n        // Space complexity: O(n * m)\n        long[,] dp = new long[n + 1, m + 1];\n        for (int i = 0; i <= n; i++) {\n            for (int j = 0; j <= m; j++) {\n                if (i == 0 && j == 0) {\n                    dp[i, j] = 1;\n                } else if (i == 0 || j == 0) {\n                    dp[i, j] = 0;\n                } else {\n                    dp[i, j] = (i - j) * dp[i - 1, j] + (j + 1) * dp[i - 1, j - 1];\n                }\n            }\n        }\n        return dp[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f8d5aca498cc447689d8470c3706bd81>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <f8d5aca498cc447689d8470c3706bd81>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (m > n) return 0;\n        if (m == n) return 1;\n        if (m == 1) return n;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <922aafbb05e54c2e9357f663a293d141>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <922aafbb05e54c2e9357f663a293d141>:0 \n",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) {\n            return 0;\n        }\n        if (n == m) {\n            return 1;\n        }\n        long ans = 1;\n        for (long i = n - m + 1; i <= n; i++) {\n            ans *= i;\n        }\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b0015c5393f04420897a15c277fbdf17>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b0015c5393f04420897a15c277fbdf17>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        long[,] dp = new long[n + 1, m + 1];\n        for (int i = 0; i <= n; i++) {\n            for (int j = 0; j <= m; j++) {\n                if (i == 0 && j == 0) {\n                    dp[i, j] = 1;\n                } else if (i == 0) {\n                    dp[i, j] = 0;\n                } else if (j == 0) {\n                    dp[i, j] = 1;\n                } else {\n                    dp[i, j] = dp[i - 1, j - 1] + (i * dp[i - 1, j]);\n                }\n            }\n        }\n        return dp[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <47bf81963a5d499291069cbc0a8836c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <47bf81963a5d499291069cbc0a8836c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m)\n            return 0;\n        if (n == m)\n            return 1;\n        if (m == 0)\n            return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d6755392b85243c0b4a30fb7936cbd0d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d6755392b85243c0b4a30fb7936cbd0d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        var dp = new long[n + 1, m + 1];\n        for (int i = 0; i <= n; i++) {\n            dp[i, 0] = 1;\n        }\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= m; j++) {\n                dp[i, j] = dp[i - 1, j - 1] + (i - 1) * dp[i - 1, j];\n            }\n        }\n        return dp[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddc00e23814948eea1e254169217e122>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ddc00e23814948eea1e254169217e122>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // The Eulerian number a(n, m) is the number of permutations of\n        // {1, 2, ..., n} in which exactly m elements are greater than\n        // the previous element.\n        //\n        // The Eulerian number a(n, m) is the coefficient of x^m in the\n        // polynomial expansion of (x + x^2 + ... + x^n)^n.\n        //\n        // The Eulerian number a(n, m) is the number of permutations of\n        // {1, 2, ..., n} in which exactly m elements are greater than\n        // the previous element.\n        //\n        // The Eulerian number a(n, m) is the number of permutations of\n        // {1, 2, ..., n} in which exactly m elements are greater than\n        // the previous element.\n        //\n        // The Eulerian number a(n, m) is the number of permutations of\n        // {1, 2, ..., n} in which exactly m elements are greater than\n        // the previous element.\n        //\n        // The Eulerian number a(n, m) is the number of permutations of\n        // {1, 2, ..., n} in which exactly m elements are greater than\n        // the previous element.\n        //\n        // The Eulerian number a(n, m) is the number of permutations of\n        // {1, 2, ..., n} in which exactly m elements are greater than\n        // the previous element.\n        //\n        // The Eulerian number a(n, m) is the number of permutations of\n        // {1, 2, ..., n} in which exactly m elements are greater than\n        // the previous element.\n        //\n        // The Eulerian number a(n, m) is the number of permutations of\n        // {1, 2, ..., n} in which exactly m elements are greater than\n        // the previous element.\n        //\n        // The Eulerian number a(n, m) is the number of permutations of\n        // {1, 2, ..., n} in which exactly m elements are greater than\n        // the previous element.\n        //\n        //\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123744,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5kcc2l6w.cs(10,24): error CS0161: 'Problem.EulerianNum(long, long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + (m + 1) * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123750,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) {\n            return 0;\n        }\n        if (n == m) {\n            return 1;\n        }\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123750,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) {\n            return 0;\n        }\n        if (n == m) {\n            return 1;\n        }\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123750,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // The Eulerian number a(n, m) is the number of permutations of n\n        // elements with exactly m descents.\n        //\n        // The Eulerian number a(n, m) is the coefficient of x^m in the\n        // polynomial expansion of (1 + x + x^2 + ... + x^(n-1))^n.\n        //\n        // The Eulerian number a(n, m) is the number of permutations of n\n        // elements with exactly m ascents.\n        //\n        // The Eulerian number a(n, m) is the number of permutations of n\n        // elements with exactly m - 1 peaks.\n        //\n        // The Eulerian number a(n, m) is the number of permutations of n\n        // elements with exactly m - 1 valleys.\n        //\n        // The Eulerian number a(n, m) is the number of permutations of n\n        // elements with exactly m - 1 double rises.\n        //\n        // The Eulerian number a(n, m) is the number of permutations of n\n        // elements with exactly m - 1 double falls.\n        //\n        // The Eulerian number a(n, m) is the number of permutations of n\n        // elements with exactly m - 1 double rises and m - 1 double falls.\n        //\n        // The Eulerian number a(n, m) is the number of permutations of n\n        // elements with exactly m - 1 double rises and m - 1 double falls\n        // such that the first element is smaller than the last element.\n        //\n        // The Eulerian number a(n, m) is the number of permutations of n\n        // elements with exactly m - 1 double rises and m - 1 double falls\n        // such that the first element is larger than the last element.\n        //\n        // The Eulerian number a(n, m) is the number of permutations of n\n        // elements with exactly m - 1 double rises and m - 1 double falls\n        // such that the first element is smaller than the last element\n        // and the second element is larger than the second-to-last element.\n        //\n        // The Eulerian number a(\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123744,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp353ff547.cs(10,24): error CS0161: 'Problem.EulerianNum(long, long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (m > n) return 0;\n        if (m == n) return 1;\n        if (m == 1) return n;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <922aafbb05e54c2e9357f663a293d141>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <922aafbb05e54c2e9357f663a293d141>:0 \n",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // The Eulerian number a(n, m) is the number of permutations of\n        // {1, 2, ..., n} in which exactly m elements are greater than\n        // the previous element.\n        //\n        // The Eulerian number a(n, m) can be computed using the following\n        // recurrence relation:\n        //\n        // a(n, m) = (n - m) * a(n - 1, m) + (m + 1) * a(n - 1, m - 1)\n        //\n        // The base cases are a(n, 0) = a(n, n) = 1.\n        //\n        // The Eulerian number a(n, m) can also be computed using the\n        // following formula:\n        //\n        // a(n, m) = n! * Sum(C(n, k) * (-1)^(n - k) / k!, k = 0..m)\n        //\n        // where C(n, k) is the binomial coefficient.\n        //\n        // The Eulerian number a(n, m) can also be computed using the\n        // following formula:\n        //\n        // a(n, m) = n! * Sum(C(n, k) * (-1)^(n - k) / k!, k = 0..m)\n        //\n        // where C(n, k) is the binomial coefficient.\n        //\n        // The Eulerian number a(n, m) can also be computed using the\n        // following formula:\n        //\n        // a(n, m) = n! * Sum(C(n, k) * (-1)^(n - k) / k!, k = 0..m)\n        //\n        // where C(n, k) is the binomial coefficient.\n        //\n        // The Eulerian number a(n, m) can also be computed using the\n        // following formula:\n        //\n        // a(n, m) = n! * Sum(C(n, k) * (-1)^(n - k) / k!, k = 0..m)\n        //\n        // where C(n, k) is the binomial coefficient.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123744,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpaf15lhwb.cs(10,24): error CS0161: 'Problem.EulerianNum(long, long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // We use the recurrence relation:\n        // a(n, m) = (n - m + 1)a(n - 1, m) + (m + 1)a(n - 1, m - 1)\n        // with base cases:\n        // a(n, 0) = a(n, n) = 1\n        // We use dynamic programming to solve this.\n        long[,] a = new long[n + 1, m + 1];\n        for (int i = 0; i <= n; i++) {\n            a[i, 0] = a[i, i] = 1;\n        }\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j < i; j++) {\n                a[i, j] = (i - j + 1) * a[i - 1, j] + (j + 1) * a[i - 1, j - 1];\n            }\n        }\n        return a[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.EulerianNum (System.Int64 n, System.Int64 m) [0x00016] in <d8d40850b88f410f975c310fe679ebfd>:0 \n  at Problem.Main (System.String[] args) [0x00001] in <d8d40850b88f410f975c310fe679ebfd>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.EulerianNum (System.Int64 n, System.Int64 m) [0x00016] in <d8d40850b88f410f975c310fe679ebfd>:0 \n  at Problem.Main (System.String[] args) [0x00001] in <d8d40850b88f410f975c310fe679ebfd>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) {\n            return 0;\n        }\n        if (n == m) {\n            return 1;\n        }\n        if (m == 0) {\n            return 1;\n        }\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123750,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        long[,] eulerian = new long[n + 1, m + 1];\n        for (int i = 0; i <= n; i++) {\n            eulerian[i, 0] = 1;\n        }\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= m; j++) {\n                eulerian[i, j] = eulerian[i - 1, j - 1] - (i - 1) * eulerian[i - 1, j];\n            }\n        }\n        return eulerian[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd9fcc19d7d14f1084c548d1690ac4cd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd9fcc19d7d14f1084c548d1690ac4cd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // The Eulerian number a(n, m) is the number of permutations of n elements\n        // that have exactly m ascents.\n        //\n        // The Eulerian number can be computed using the following recurrence:\n        // a(n, m) = (m + 1) * a(n - 1, m) + (n - m) * a(n - 1, m - 1)\n        //\n        // The base cases are:\n        // a(n, 0) = a(n, n) = 1\n        //\n        // The Eulerian number can also be computed using the following formula:\n        // a(n, m) = (n - m) * (n - m - 1) * ... * (n - m - n + 1) / m!\n        //\n        // The Eulerian number can also be computed using the following formula:\n        // a(n, m) = (n - m) * C(n, m)\n        //\n        // The Eulerian number can also be computed using the following formula:\n        // a(n, m) = C(n, m) * C(n, m - 1)\n        //\n        // The Eulerian number can also be computed using the following formula:\n        // a(n, m) = C(n + 1, m + 1) - C(n, m)\n        //\n        // The Eulerian number can also be computed using the following formula:\n        // a(n, m) = C(n + 1, m + 1) - C(n, m + 1)\n        //\n        // The Eulerian number can also be computed using the following formula:\n        // a(n, m) = C(n + 1, m + 1) - C(n + 1, m)\n        //\n        // The Eulerian number can also be computed using the following formula:\n        // a(n, m) = C(n + 1, m + 1) - C(n, m + 2)\n        //\n        // The Eulerian number can also be computed using the following formula:\n        // a(n, m) = C(n + 1, m + 1) - C(n + 1, m + 2\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123744,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqcr4_9u4.cs(10,24): error CS0161: 'Problem.EulerianNum(long, long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) {\n            return 0;\n        }\n        if (n == m) {\n            return 1;\n        }\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123750,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        long[,] dp = new long[n + 1, m + 1];\n        for (long i = 0; i <= n; i++) {\n            for (long j = 0; j <= m; j++) {\n                if (i == 0 && j == 0) {\n                    dp[i, j] = 1;\n                } else if (i == 0) {\n                    dp[i, j] = 0;\n                } else if (j == 0) {\n                    dp[i, j] = 1;\n                } else {\n                    dp[i, j] = dp[i - 1, j - 1] + (i - 1) * dp[i - 1, j];\n                }\n            }\n        }\n        return dp[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7253646b10441e58a0952a83f39c7fd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d7253646b10441e58a0952a83f39c7fd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        long[,] a = new long[n + 1, m + 1];\n        for (long i = 0; i <= n; i++) {\n            a[i, 0] = 1;\n        }\n        for (long i = 1; i <= n; i++) {\n            for (long j = 1; j <= m; j++) {\n                a[i, j] = a[i - 1, j - 1] + (i - 1) * a[i - 1, j];\n            }\n        }\n        return a[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <581b5e2169114e77bfdbee28da6f6850>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <581b5e2169114e77bfdbee28da6f6850>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // This is the number of permutations of n elements with m ascents.\n        // We can compute this by dynamic programming.\n        // The base case is a(1, 0) = 1.\n        // The recurrence relation is a(n, m) = (n - m) * a(n - 1, m - 1) + (m + 1) * a(n - 1, m).\n        // This is because we can either place the nth element at the beginning,\n        // or at the end.\n        // If we place it at the beginning, then we have n - m - 1 elements left,\n        // and we need m - 1 ascents.\n        // If we place it at the end, then we have n - m elements left,\n        // and we need m ascents.\n        // We can use a 2D array to store the values,\n        // but we can also use a 1D array, since we only need the previous row.\n        long[] a = new long[n + 1];\n        a[0] = 1;\n        for (long i = 1; i <= n; i++) {\n            for (long j = 0; j <= i; j++) {\n                if (j == 0) {\n                    a[j] = 1;\n                } else {\n                    a[j] = (i - j) * a[j - 1] + (j + 1) * a[j];\n                }\n            }\n        }\n        return a[m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <593ba496154642129ab9f280a5c190e4>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        long[,] dp = new long[n + 1, m + 1];\n        for (int i = 0; i <= n; i++) {\n            for (int j = 0; j <= m; j++) {\n                if (i == 0 && j == 0) {\n                    dp[i, j] = 1;\n                } else if (i == 0) {\n                    dp[i, j] = 0;\n                } else if (j == 0) {\n                    dp[i, j] = 1;\n                } else {\n                    dp[i, j] = dp[i - 1, j - 1] + (i - 1) * dp[i - 1, j];\n                }\n            }\n        }\n        return dp[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e330fac99b6f4bf69516b3abd84a3104>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e330fac99b6f4bf69516b3abd84a3104>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == 0 || m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n - 1, m - 1) + (m + 1) * EulerianNum(n - 1, m);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9bf5d729b6524d3db416338463fdb164>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9bf5d729b6524d3db416338463fdb164>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 1) return n;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123750,
      "stdout": "None",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <257e7cd38ef54a5b8715422cef6f0092>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <257e7cd38ef54a5b8715422cef6f0092>:0 \n",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // We use the recurrence relation:\n        // a(n, m) = (n - m + 1) * a(n - 1, m) + (m + 1) * a(n - 1, m - 1)\n        // We use a 2D array to store the values of a(n, m) for all n and m.\n        // We use a bottom-up approach to fill the array.\n        // We start by filling the base cases:\n        // a(n, 0) = 1 for all n >= 0\n        // a(0, m) = 0 for all m > 0\n        // a(n, n) = 1 for all n >= 0\n        // Then we fill the rest of the array.\n        long[,] a = new long[n + 1, m + 1];\n        for (long i = 0; i <= n; i++) {\n            a[i, 0] = 1;\n            a[i, i] = 1;\n        }\n        for (long i = 0; i <= m; i++) {\n            a[0, i] = 0;\n        }\n        for (long i = 1; i <= n; i++) {\n            for (long j = 1; j <= m; j++) {\n                a[i, j] = (i - j + 1) * a[i - 1, j] + (j + 1) * a[i - 1, j - 1];\n            }\n        }\n        return a[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.EulerianNum (System.Int64 n, System.Int64 m) [0x00022] in <2bee1e39b7a64f1f9a3851f73adabe0d>:0 \n  at Problem.Main (System.String[] args) [0x00001] in <2bee1e39b7a64f1f9a3851f73adabe0d>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.EulerianNum (System.Int64 n, System.Int64 m) [0x00022] in <2bee1e39b7a64f1f9a3851f73adabe0d>:0 \n  at Problem.Main (System.String[] args) [0x00001] in <2bee1e39b7a64f1f9a3851f73adabe0d>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        long ans = 1;\n        for (long i = n - m + 1; i <= n; i++)\n            ans *= i;\n        for (long i = 1; i <= m; i++)\n            ans /= i;\n        return ans;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <72489d771c29432091b28731280be22d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <72489d771c29432091b28731280be22d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        long res = 1;\n        for (int i = 1; i <= m; i++) {\n            res *= n - i + 1;\n            res /= i;\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4d8f12c541344471a9b9952f9f36cc0f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4d8f12c541344471a9b9952f9f36cc0f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n == 0 || m == 0) return 1;\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cc72f28872694a75959a6c4eb1671f64>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cc72f28872694a75959a6c4eb1671f64>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (m > n) return 0;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + m * EulerianNum(n, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cf2233acb75445899cf200a6ddd95ad0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cf2233acb75445899cf200a6ddd95ad0>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // a(n, m) = (n+m)! / (n! * m!)\n        return Factorial(n + m) / (Factorial(n) * Factorial(m));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123745,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdqggis9f.cs(12,16): error CS0103: The name 'Factorial' does not exist in the current context\n/tmp/tmpdqggis9f.cs(12,36): error CS0103: The name 'Factorial' does not exist in the current context\n/tmp/tmpdqggis9f.cs(12,51): error CS0103: The name 'Factorial' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        long[,] a = new long[n + 1, m + 1];\n        for (int i = 0; i <= n; i++) {\n            a[i, 0] = 1;\n        }\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= m; j++) {\n                a[i, j] = a[i - 1, j - 1] + (i - 1) * a[i - 1, j];\n            }\n        }\n        return a[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76cf034e6224dd5959cc88045bdf597>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c76cf034e6224dd5959cc88045bdf597>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // The Eulerian number a(n, m) is the number of permutations of\n        // {1, 2, ..., n} in which exactly m elements are greater than\n        // the previous element.\n        //\n        // The Eulerian number a(n, m) is the coefficient of x^m in the\n        // expansion of (x + x^2 + x^3 + ... + x^n)^n.\n        //\n        // The Eulerian number a(n, m) is the number of permutations of\n        // {1, 2, ..., n} in which the elements 1, 2, ..., m are in\n        // increasing order.\n        //\n        // The Eulerian number a(n, m) is the number of permutations of\n        // {1, 2, ..., n} in which the elements n, n-1, ..., n-m+1 are in\n        // decreasing order.\n        //\n        // The Eulerian number a(n, m) is the number of permutations of\n        // {1, 2, ..., n} in which the elements 1, 2, ..., m are in\n        // increasing order and the elements n, n-1, ..., n-m+1 are in\n        // decreasing order.\n        //\n        // The Eulerian number a(n, m) is the number of permutations of\n        // {1, 2, ..., n} in which the elements 1, 2, ..., m are in\n        // increasing order and the elements n, n-1, ..., n-m+1 are in\n        // decreasing order.\n        //\n        // The Eulerian number a(n, m) is the number of permutations of\n        // {1, 2, ..., n} in which the elements 1, 2, ..., m are in\n        // increasing order and the elements n, n-1, ..., n-m+1 are in\n        // decreasing order.\n        //\n        // The Eulerian number a(n, m) is the number of permutations of\n        // {1, 2, ..., n} in which the elements 1, 2, ..., m are in\n        // increasing order and the elements n, n-1,\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123745,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp7jxfal62.cs(10,24): error CS0161: 'Problem.EulerianNum(long, long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m)\n            return 0;\n        if (n == m)\n            return 1;\n        if (m == 0)\n            return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <229ebad070444cdbae683e22af26583f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <229ebad070444cdbae683e22af26583f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        long res = 1;\n        for (long i = 0; i < m; i++) {\n            res *= (n - i);\n        }\n        for (long i = 1; i <= m; i++) {\n            res /= i;\n        }\n        return res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <537df66c2ea34819b29dd1e407c9835c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <537df66c2ea34819b29dd1e407c9835c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - 1) * EulerianNum(n - 1, m) + (m + 1) * EulerianNum(n - 1, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e926de1a22d2417ba9f5a74c15eab2c7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e926de1a22d2417ba9f5a74c15eab2c7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        long[,] dp = new long[n + 1, m + 1];\n        for (long i = 0; i <= n; i++) {\n            for (long j = 0; j <= m; j++) {\n                if (i < j) dp[i, j] = 0;\n                else if (i == j) dp[i, j] = 1;\n                else {\n                    dp[i, j] = (j + 1) * dp[i - 1, j] + (i - j) * dp[i - 1, j - 1];\n                }\n            }\n        }\n        return dp[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.EulerianNum (System.Int64 n, System.Int64 m) [0x00096] in <199b1708310a4649ba9805b503decbdc>:0 \n  at Problem.Main (System.String[] args) [0x00001] in <199b1708310a4649ba9805b503decbdc>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.EulerianNum (System.Int64 n, System.Int64 m) [0x00096] in <199b1708310a4649ba9805b503decbdc>:0 \n  at Problem.Main (System.String[] args) [0x00001] in <199b1708310a4649ba9805b503decbdc>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        long[,] dp = new long[n + 1, m + 1];\n        for (int i = 0; i <= n; i++) {\n            dp[i, 0] = 1;\n        }\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= m; j++) {\n                dp[i, j] = dp[i - 1, j - 1] + (i - 1) * dp[i - 1, j];\n            }\n        }\n        return dp[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1e68d8507f0d4794b2e721f176d06cf1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1e68d8507f0d4794b2e721f176d06cf1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - 1) * EulerianNum(n - 1, m) + (m - 1) * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        long[,] dp = new long[n + 1, m + 1];\n        for (int i = 0; i <= n; i++) {\n            for (int j = 0; j <= m; j++) {\n                if (i == 0 && j == 0) {\n                    dp[i, j] = 1;\n                } else if (i == 0) {\n                    dp[i, j] = 0;\n                } else if (j == 0) {\n                    dp[i, j] = 1;\n                } else {\n                    dp[i, j] = dp[i - 1, j - 1] + (i - 1) * dp[i - 1, j];\n                }\n            }\n        }\n        return dp[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e330fac99b6f4bf69516b3abd84a3104>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e330fac99b6f4bf69516b3abd84a3104>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == 0 || m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n - 1, m - 1) + (m + 1) * EulerianNum(n - 1, m);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9bf5d729b6524d3db416338463fdb164>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9bf5d729b6524d3db416338463fdb164>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <229ebad070444cdbae683e22af26583f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <229ebad070444cdbae683e22af26583f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // The Eulerian number a(n, m) is the number of permutations of\n        // {1, 2, ..., n} in which exactly m elements are greater than\n        // the previous element.\n        //\n        // The Eulerian number a(n, m) can be computed using the following\n        // recurrence relation:\n        //\n        // a(n, m) = (n - m) * a(n - 1, m) + a(n - 1, m - 1)\n        //\n        // The base cases are:\n        //\n        // a(n, 0) = 1\n        // a(n, n) = 1\n        //\n        // The Eulerian number a(n, m) can also be computed using the\n        // following formula:\n        //\n        // a(n, m) = (n - m) * (n - m - 1) * ... * (n - m - n + m + 1) / m!\n        //\n        // The Eulerian number a(n, m) can also be computed using the\n        // following formula:\n        //\n        // a(n, m) = (n - m) * (n - m - 1) * ... * (n - m - n + m + 1) / m!\n        //\n        // The Eulerian number a(n, m) can also be computed using the\n        // following formula:\n        //\n        // a(n, m) = (n - m) * (n - m - 1) * ... * (n - m - n + m + 1) / m!\n        //\n        // The Eulerian number a(n, m) can also be computed using the\n        // following formula:\n        //\n        // a(n, m) = (n - m) * (n - m - 1) * ... * (n - m - n + m + 1) / m!\n        //\n        // The Eulerian number a(n, m) can also be computed using the\n        // following formula:\n        //\n        // a(n, m) = (n - m) * (n - m - 1) * ... * (n - m - n + m + 1) / m!\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123745,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpyd4hqqrm.cs(10,24): error CS0161: 'Problem.EulerianNum(long, long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - 1) * EulerianNum(n - 1, m) + (m - 1) * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // The Eulerian number a(n, m) is the number of permutations of\n        // n elements with exactly m ascents.\n        //\n        // The Eulerian number a(n, m) can be computed using the recurrence\n        // relation:\n        //\n        // a(n, m) = (n - m) a(n - 1, m - 1) + (m + 1) a(n - 1, m)\n        //\n        // with the initial conditions:\n        //\n        // a(0, 0) = 1\n        // a(n, 0) = 0 for n > 0\n        // a(0, m) = 0 for m > 0\n        //\n        // The Eulerian number a(n, m) can also be computed using the\n        // formula:\n        //\n        // a(n, m) = n! * Sum_{k=0..m} (-1)^k / (k! * (n - k)!)\n        //\n        // The Eulerian number a(n, m) can also be computed using the\n        // formula:\n        //\n        // a(n, m) = n! * C(n, m) * C(n, m + 1) / (m + 1)!\n        //\n        // where C(n, k) is the binomial coefficient.\n        //\n        // The Eulerian number a(n, m) can also be computed using the\n        // formula:\n        //\n        // a(n, m) = n! * Sum_{k=0..m} C(n, k) / (k + 1)!\n        //\n        // The Eulerian number a(n, m) can also be computed using the\n        // formula:\n        //\n        // a(n, m) = Sum_{k=0..m} C(n, k) * C(n + k, n)\n        //\n        // The Eulerian number a(n, m) can also be computed using the\n        // formula:\n        //\n        // a(n, m) = Sum_{k=0..m} C(n, k) * C(n + k, k)\n        //\n        // The Eulerian\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123745,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptx9mdo11.cs(10,24): error CS0161: 'Problem.EulerianNum(long, long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        long[,] a = new long[n + 1, m + 1];\n        for (long i = 0; i <= n; i++) {\n            for (long j = 0; j <= m; j++) {\n                if (i == 0) {\n                    a[i, j] = 1;\n                } else if (j == 0) {\n                    a[i, j] = 0;\n                } else {\n                    a[i, j] = (i - j + 1) * a[i - 1, j] + j * a[i - 1, j - 1];\n                }\n            }\n        }\n        return a[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d8e91fc2f09a443e8b439a760814241c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d8e91fc2f09a443e8b439a760814241c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - 1) * EulerianNum(n - 1, m) + (m - 1) * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == 0 || m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n - 1, m - 1) + (m + 1) * EulerianNum(n - 1, m);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9bf5d729b6524d3db416338463fdb164>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9bf5d729b6524d3db416338463fdb164>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) {\n            return 0;\n        }\n        if (n == m) {\n            return 1;\n        }\n        if (m == 0) {\n            return 1;\n        }\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123750,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) {\n            return 0;\n        }\n        if (n == m) {\n            return 1;\n        }\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123750,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) {\n            return 0;\n        }\n        if (m == 0) {\n            return 1;\n        }\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - 1) * EulerianNum(n - 1, m) + (m + 1) * EulerianNum(n - 1, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e926de1a22d2417ba9f5a74c15eab2c7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e926de1a22d2417ba9f5a74c15eab2c7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n == 0 || m == 0) return 1;\n        if (n < m) return 0;\n        return (n - m + 1) * EulerianNum(n - 1, m - 1) + (m + 1) * EulerianNum(n - 1, m);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <630506fe3ade44e7b1c90477784b4fca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <630506fe3ade44e7b1c90477784b4fca>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n == 0) return 1;\n        if (m == 0) return 0;\n        if (n == 1) return m + 1;\n        return (n - 1) * (EulerianNum(n - 1, m) + EulerianNum(n, m - 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <164a740d2b22475b8557200a586d68a5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <164a740d2b22475b8557200a586d68a5>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - 1) * EulerianNum(n - 1, m) + (m - 1) * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (m > n) return 0;\n        if (m == 0) return 1;\n        if (m == 1) return n;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m - 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4fcfe7f57c4c4b868a7da3f68356a49b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4fcfe7f57c4c4b868a7da3f68356a49b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m || m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) {\n            return 0;\n        }\n        if (n == m) {\n            return 1;\n        }\n        return (n - m) * EulerianNum(n - 1, m) + (m + 1) * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // Eulerian number is the number of permutations of n elements\n        // that have exactly m ascents.\n        //\n        // Eulerian numbers satisfy the recurrence relation\n        // a(n, m) = (n - m)a(n - 1, m - 1) + (m + 1)a(n - 1, m)\n        //\n        // with the boundary conditions\n        // a(n, 0) = a(n, n) = 1\n        //\n        // This function computes the Eulerian number using dynamic\n        // programming.\n        //\n        // Time complexity: O(n^2)\n        // Space complexity: O(n^2)\n        long[,] a = new long[n + 1, n + 1];\n        for (int i = 0; i <= n; i++) {\n            a[i, 0] = a[i, i] = 1;\n        }\n        for (int i = 2; i <= n; i++) {\n            for (int j = 1; j < i; j++) {\n                a[i, j] = (i - j) * a[i - 1, j - 1] + (j + 1) * a[i - 1, j];\n            }\n        }\n        return a[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7ba093ebf750428e98606ffa86acce3a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7ba093ebf750428e98606ffa86acce3a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) {\n            return 0;\n        }\n        if (n == m) {\n            return 1;\n        }\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123750,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - 1) * EulerianNum(n - 1, m) + (n - m) * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - 1) * EulerianNum(n - 1, m) + (m + 1) * EulerianNum(n - 1, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e926de1a22d2417ba9f5a74c15eab2c7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e926de1a22d2417ba9f5a74c15eab2c7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == 0 || m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd3515d58728477ab82706dd3338e54d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd3515d58728477ab82706dd3338e54d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == 0 || m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n - 1, m - 1) + (m + 1) * EulerianNum(n - 1, m);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9bf5d729b6524d3db416338463fdb164>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9bf5d729b6524d3db416338463fdb164>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (m == 0 || n == m) return 1;\n        if (m == 1) return n;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "None",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7c7bd51746534a32a62c275321cefaa0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7c7bd51746534a32a62c275321cefaa0>:0 \n",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) {\n            return 0;\n        }\n        if (n == m) {\n            return 1;\n        }\n        if (m == 0) {\n            return 1;\n        }\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123750,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < 0 || m < 0 || n < m) {\n            return 0;\n        }\n        if (n == 0 || m == 0) {\n            return 1;\n        }\n        return (n - m + 1) * EulerianNum(n - 1, m - 1) + (m + 1) * EulerianNum(n - 1, m);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123746,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b942e573a051438d905e1243535cc4be>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b942e573a051438d905e1243535cc4be>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (m == 0) return 1;\n        if (n == 0) return 0;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123746,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <32285711a6f643e2a93f3bb782dac05a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <32285711a6f643e2a93f3bb782dac05a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n == 0 || m == 0) return 1;\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123744,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cc72f28872694a75959a6c4eb1671f64>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cc72f28872694a75959a6c4eb1671f64>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - 1) * EulerianNum(n - 1, m) + (m + 1) * EulerianNum(n - 1, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e926de1a22d2417ba9f5a74c15eab2c7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e926de1a22d2417ba9f5a74c15eab2c7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) {\n            return 0;\n        }\n        if (n == m) {\n            return 1;\n        }\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123750,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // a(n, m) = (n - m + 1) * a(n - 1, m) + (m + 1) * a(n - 1, m - 1)\n        // a(n, 0) = a(n, n) = 1\n        if (n < m) return 0;\n        if (n == m || m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n - 1, m) + (m + 1) * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123746,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a379b94468ee4232985ce88c59224f36>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a379b94468ee4232985ce88c59224f36>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m)\n            return 0;\n        if (m == 0)\n            return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123751,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == 0 || m == 0) return 1;\n        if (n == m) return 1;\n        return (n - m + 1) * EulerianNum(n - 1, m - 1) + (m + 1) * EulerianNum(n - 1, m);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123746,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4094af7f3d49431280e194a3deb1ae6f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4094af7f3d49431280e194a3deb1ae6f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        long[,] dp = new long[n + 1, m + 1];\n        dp[0, 0] = 1;\n        for (int i = 1; i <= n; i++) {\n            for (int j = 0; j <= m; j++) {\n                dp[i, j] = dp[i - 1, j];\n                if (j > 0) {\n                    dp[i, j] += dp[i - 1, j - 1] * j;\n                }\n            }\n        }\n        return dp[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123746,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e8e30100225347a2b882ff0a8c5ad25d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e8e30100225347a2b882ff0a8c5ad25d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // The Eulerian number a(n, m) is the number of permutations of\n        // {1, 2, ..., n} in which exactly m elements are greater than\n        // the previous element.\n        //\n        // The Eulerian number a(n, m) can be computed using the following\n        // recurrence relation:\n        //\n        // a(n, m) = (n - m) * a(n - 1, m) + (m + 1) * a(n - 1, m - 1)\n        //\n        // The base cases are:\n        //\n        // a(n, 0) = 1\n        // a(n, n) = 1\n        //\n        // The Eulerian number a(n, m) can also be computed using the\n        // following formula:\n        //\n        // a(n, m) = (n - m) * a(n - 1, m) + (m + 1) * a(n - 1, m - 1)\n        //\n        // The Eulerian number a(n, m) can be computed using the following\n        // recurrence relation:\n        //\n        // a(n, m) = (n - m) * a(n - 1, m) + (m + 1) * a(n - 1, m - 1)\n        //\n        // The base cases are:\n        //\n        // a(n, 0) = 1\n        // a(n, n) = 1\n        //\n        // The Eulerian number a(n, m) can also be computed using the\n        // following formula:\n        //\n        // a(n, m) = (n - m) * a(n - 1, m) + (m + 1) * a(n - 1, m - 1)\n        //\n        // The Eulerian number a(n, m) can be computed using the following\n        // recurrence relation:\n        //\n        // a(n, m) = (n - m) * a(n - 1, m) + (m + 1) * a(n - 1, m - 1)\n        //\n        // The base cases are:\n        //\n        // a(n, 0) =\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123746,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkc7nsg4p.cs(10,24): error CS0161: 'Problem.EulerianNum(long, long)': not all code paths return a value\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        long[,] a = new long[n + 1, m + 1];\n        for (int i = 0; i <= n; i++) {\n            a[i, 0] = 1;\n        }\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= m; j++) {\n                a[i, j] = (i - j) * a[i - 1, j] + a[i - 1, j - 1];\n            }\n        }\n        return a[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123746,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ce1f765850b4c86808568922f7075d9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ce1f765850b4c86808568922f7075d9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - 1) * EulerianNum(n - 1, m) + (m + 1) * EulerianNum(n - 1, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e926de1a22d2417ba9f5a74c15eab2c7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e926de1a22d2417ba9f5a74c15eab2c7>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // We use the recurrence relation:\n        // a(n, m) = (n - m + 1) * a(n - 1, m) + (m + 1) * a(n - 1, m - 1)\n        // We use a 2D array to store the values of a(n, m) for all n and m.\n        // We use a bottom-up approach to fill the array.\n        // We start with a(0, 0) = 1 and a(n, m) = 0 for all other values.\n        // We then fill the array in increasing order of n and m.\n        // We use the recurrence relation to fill the array.\n        // We use a 2D array to store the values of a(n, m) for all n and m.\n        // We use a bottom-up approach to fill the array.\n        // We start with a(0, 0) = 1 and a(n, m) = 0 for all other values.\n        // We then fill the array in increasing order of n and m.\n        // We use the recurrence relation to fill the array.\n        long[,] a = new long[n + 1, m + 1];\n        a[0, 0] = 1;\n        for (long i = 1; i <= n; i++) {\n            for (long j = 0; j <= m; j++) {\n                a[i, j] = (i - j + 1) * a[i - 1, j] + (j + 1) * a[i - 1, j - 1];\n            }\n        }\n        return a[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123746,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.EulerianNum (System.Int64 n, System.Int64 m) [0x0003f] in <1ff8be9bda4d4ad3a4183598a6ab3eaf>:0 \n  at Problem.Main (System.String[] args) [0x00001] in <1ff8be9bda4d4ad3a4183598a6ab3eaf>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.EulerianNum (System.Int64 n, System.Int64 m) [0x0003f] in <1ff8be9bda4d4ad3a4183598a6ab3eaf>:0 \n  at Problem.Main (System.String[] args) [0x00001] in <1ff8be9bda4d4ad3a4183598a6ab3eaf>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // We can use the recurrence relation:\n        // a(n, m) = (n - m + 1) * a(n - 1, m) + (m + 1) * a(n - 1, m - 1)\n        // to compute the Eulerian number.\n        // The base case is a(n, 0) = 1 for all n.\n        // This function is O(n * m).\n        long[,] a = new long[n + 1, m + 1];\n        for (long i = 0; i <= n; i++) {\n            a[i, 0] = 1;\n        }\n        for (long i = 1; i <= n; i++) {\n            for (long j = 1; j <= m; j++) {\n                a[i, j] = (i - j + 1) * a[i - 1, j] + (j + 1) * a[i - 1, j - 1];\n            }\n        }\n        return a[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123746,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2bd6efc8f438450da1923edf8fe60497>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2bd6efc8f438450da1923edf8fe60497>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        long[,] a = new long[n + 1, m + 1];\n        for (int i = 0; i <= n; i++) {\n            for (int j = 0; j <= m; j++) {\n                if (i == 0) {\n                    a[i, j] = 1;\n                } else if (j == 0) {\n                    a[i, j] = 0;\n                } else {\n                    a[i, j] = (i - j + 1) * a[i - 1, j - 1] + (j + 1) * a[i - 1, j];\n                }\n            }\n        }\n        return a[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123746,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c02c64514bf14bfc9eca9f67c39a991f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c02c64514bf14bfc9eca9f67c39a991f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + (m + 1) * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123750,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        long[,] eulerian = new long[n + 1, m + 1];\n        for (int i = 0; i <= n; i++) {\n            eulerian[i, 0] = 0;\n            eulerian[i, i] = 1;\n        }\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j < i; j++) {\n                eulerian[i, j] = eulerian[i - 1, j - 1] + (i - 1) * eulerian[i - 1, j];\n            }\n        }\n        return eulerian[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123746,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.EulerianNum (System.Int64 n, System.Int64 m) [0x00020] in <12b630e18e0a48e78f24727743f772da>:0 \n  at Problem.Main (System.String[] args) [0x00001] in <12b630e18e0a48e78f24727743f772da>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.EulerianNum (System.Int64 n, System.Int64 m) [0x00020] in <12b630e18e0a48e78f24727743f772da>:0 \n  at Problem.Main (System.String[] args) [0x00001] in <12b630e18e0a48e78f24727743f772da>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) {\n            return 0;\n        }\n        if (n == m) {\n            return 1;\n        }\n        if (m == 0) {\n            return 1;\n        }\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123750,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // Eulerian number is defined as:\n        // a(n, m) = (n - m + 1) * a(n - 1, m) + m * a(n - 1, m - 1)\n        // a(n, 0) = a(n, n) = 1\n        // a(0, 0) = 1\n        // a(0, m) = 0\n        // a(n, m) = 0 if n < m\n        if (n < m) return 0;\n        if (n == 0) return 1;\n        if (m == 0 || m == n) return 1;\n        return (n - m + 1) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123746,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2259d71857c84e2b846c3bf4ce352811>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2259d71857c84e2b846c3bf4ce352811>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        long[,] eulerian = new long[n + 1, m + 1];\n        for (int i = 0; i <= n; i++) {\n            eulerian[i, 0] = 1;\n        }\n        for (int i = 1; i <= n; i++) {\n            for (int j = 1; j <= m; j++) {\n                eulerian[i, j] = eulerian[i - 1, j] + (i - 1) * eulerian[i - 1, j - 1];\n            }\n        }\n        return eulerian[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123747,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e0e4eaf7aedf48f8b8033c470de7b321>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e0e4eaf7aedf48f8b8033c470de7b321>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // a(n, m) = (n + m - 1)! / (m! * (n - 1)!)\n        // a(n, m) = a(n - 1, m) + ma(n - 1, m - 1)\n        // a(n, 0) = a(n, n) = 1\n        long[,] a = new long[n + 1, m + 1];\n        for (int i = 0; i <= n; i++) {\n            for (int j = 0; j <= m; j++) {\n                if (i == 0 || j == 0 || i == j) {\n                    a[i, j] = 1;\n                } else {\n                    a[i, j] = a[i - 1, j] + j * a[i - 1, j - 1];\n                }\n            }\n        }\n        return a[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123747,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b5e4b204544d4101adc8719b578af774>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b5e4b204544d4101adc8719b578af774>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // We use the recurrence relation:\n        // a(n, m) = (m+1)a(n-1, m) + (n-m)a(n-1, m-1)\n        // with a(n, 0) = a(n, n) = 1\n        // We use dynamic programming to compute the values.\n        // We use a 2D array to store the values.\n        long[,] a = new long[n+1, m+1];\n        for (long i = 0; i <= n; i++) {\n            for (long j = 0; j <= m; j++) {\n                if (i == 0 || j == 0 || i == j) {\n                    a[i, j] = 1;\n                } else {\n                    a[i, j] = (j+1)*a[i-1, j] + (i-j)*a[i-1, j-1];\n                }\n            }\n        }\n        return a[n, m];\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123747,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1ac291ce84ba4fd48a2b476c4b3b1205>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1ac291ce84ba4fd48a2b476c4b3b1205>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == 0 || m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123745,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd3515d58728477ab82706dd3338e54d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <dd3515d58728477ab82706dd3338e54d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // TODO: implement\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123747,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3752607c483e4b22a962a516005dcd60>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3752607c483e4b22a962a516005dcd60>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        // TODO: Implement\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123747,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d63c2eec0af94d54a292ce26488fa4ff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <d63c2eec0af94d54a292ce26488fa4ff>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510556,
      "stdout": "None",
      "stderr": "",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 1) return n;\n        if (m == 0) return 1;\n        return (n - m + 1) * EulerianNum(n, m - 1) + (m + 1) * EulerianNum(n, m + 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1666123752,
      "stdout": "None",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ab21df3504c4d51a546166c637cbb36>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0ab21df3504c4d51a546166c637cbb36>:0 \n",
      "exit_code": -1,
      "status": "Timeout"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find the Eulerian number a(n, m).\n    public static long EulerianNum(long n, long m) {\n        if (n < m) return 0;\n        if (n == m) return 1;\n        if (m == 0) return 1;\n        return (n - m) * EulerianNum(n - 1, m) + m * EulerianNum(n - 1, m - 1);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(EulerianNum((3L), (1L)) == (4L));\n    Debug.Assert(EulerianNum((4L), (1L)) == (11L));\n    Debug.Assert(EulerianNum((5L), (3L)) == (26L));\n    }\n\n}\n",
      "timestamp": 1665510551,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <547a34bc30fb446f93ca000998784f2d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    }
  ]
}
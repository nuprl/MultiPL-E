{
  "name": "mbpp_223_is_majority",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a sorted list, its length (n), and an element and returns whether the element is the majority element in the given sorted list. (The majority element is the element that occurs more than n/2 times.)\n    public static bool IsMajority(List<long> arr, long n, long x) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_223_is_majority.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsMajority((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)3L, (long)3L, (long)3L, (long)10L})), (7L), (3L)) == (true));\n    Debug.Assert(IsMajority((new List<long>(new long[]{(long)1L, (long)1L, (long)2L, (long)4L, (long)4L, (long)4L, (long)6L, (long)6L})), (8L), (4L)) == (false));\n    Debug.Assert(IsMajority((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)2L, (long)2L})), (5L), (1L)) == (true));\n    Debug.Assert(IsMajority((new List<long>(new long[]{(long)1L, (long)1L, (long)2L, (long)2L})), (5L), (1L)) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        // your code here\n        return false;",
    "        // your code goes here\n        return arr.Count(e => e == x) > n / 2;",
    "        // Your code goes here.\n        int count = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;",
    "        // Your code here",
    "        // Your code goes here.\n        return false;",
    "        // your code goes here\n        return false;",
    "        // Your code goes here.\n        return false;",
    "        // your code goes here\n        int count = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;",
    "        // your code goes here\n        return false;",
    "        // Your code goes here.\n        return false;",
    "        int count = 0;\n        for (int i = 0; i < arr.Count; i++) {\n            if (arr[i] == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;",
    "        // Your code here\n        long count = 0;\n        foreach (var item in arr) {\n            if (item == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;",
    "        // Your code goes here.\n        return false;",
    "        long count = 0;\n        foreach (long i in arr) {\n            if (i == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;",
    "        // Your code goes here.\n        return false;",
    "        long count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr[i] == x) {\n                count++;\n            }\n        }\n        return count > n / 2;",
    "        int count = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr[i] == x) {\n                count++;\n            }\n        }\n        if (count > n / 2) {\n            return true;\n        }\n        return false;",
    "        // Your code goes here.\n        return false;",
    "        // Your code goes here.\n        return false;",
    "        // Your code goes here.\n        return false;"
  ]
}
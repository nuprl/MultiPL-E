{
  "name": "mbpp_428_shell_sort",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_428_shell_sort.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Your code goes here.\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c7a4c62cfcb14a2cb3534a53d869f2ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c7a4c62cfcb14a2cb3534a53d869f2ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j = i;\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <20c12348a2f04ac9a0dcd20c3b29c097>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <20c12348a2f04ac9a0dcd20c3b29c097>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j = i;\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <20c12348a2f04ac9a0dcd20c3b29c097>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <20c12348a2f04ac9a0dcd20c3b29c097>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Write your code here\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <589e2349a8e34dde88907e1a200fa11e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <589e2349a8e34dde88907e1a200fa11e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int len = my_list.Count;\n        int gap = len / 2;\n        while (gap > 0) {\n            for (int i = 0; i < len; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <28778058ca3a453bbc2e30fa8bd0d536>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <28778058ca3a453bbc2e30fa8bd0d536>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779cb6340b514ef8a55e471265a49366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779cb6340b514ef8a55e471265a49366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3617cf38f044df585ac5d3a36eda481>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3617cf38f044df585ac5d3a36eda481>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6a363aee644c4a47b680a4c4ca637f8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6a363aee644c4a47b680a4c4ca637f8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6a363aee644c4a47b680a4c4ca637f8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6a363aee644c4a47b680a4c4ca637f8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Your code here.\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ea174a271083462ab9f472c26e336160>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ea174a271083462ab9f472c26e336160>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779cb6340b514ef8a55e471265a49366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779cb6340b514ef8a55e471265a49366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6a363aee644c4a47b680a4c4ca637f8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6a363aee644c4a47b680a4c4ca637f8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779cb6340b514ef8a55e471265a49366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779cb6340b514ef8a55e471265a49366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779cb6340b514ef8a55e471265a49366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779cb6340b514ef8a55e471265a49366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Your code goes here\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c74bd4541f6b4bcb916bc30687d3b67f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c74bd4541f6b4bcb916bc30687d3b67f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int h = 1;\n        while (h < n / 3) {\n            h = 3 * h + 1;\n        }\n        while (h >= 1) {\n            for (int i = h; i < n; i++) {\n                for (int j = i; j >= h && my_list[j] < my_list[j - h]; j -= h) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - h];\n                    my_list[j - h] = temp;\n                }\n            }\n            h = h / 3;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cf1a687e60a84d3f822c01c3e7c24cd5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cf1a687e60a84d3f822c01c3e7c24cd5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81f218446094756b39cfd9608ab1d62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81f218446094756b39cfd9608ab1d62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81f218446094756b39cfd9608ab1d62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81f218446094756b39cfd9608ab1d62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779cb6340b514ef8a55e471265a49366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779cb6340b514ef8a55e471265a49366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779cb6340b514ef8a55e471265a49366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779cb6340b514ef8a55e471265a49366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <70c537edbedf408db50e4f9b22111bbe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <70c537edbedf408db50e4f9b22111bbe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cd107df4cdf1424c968141ebec15b284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cd107df4cdf1424c968141ebec15b284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81f218446094756b39cfd9608ab1d62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81f218446094756b39cfd9608ab1d62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81f218446094756b39cfd9608ab1d62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81f218446094756b39cfd9608ab1d62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int h = 1;\n        while (h < n / 3) {\n            h = 3 * h + 1;\n        }\n        while (h >= 1) {\n            for (int i = h; i < n; i++) {\n                for (int j = i; j >= h && my_list[j] < my_list[j - h]; j -= h) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - h];\n                    my_list[j - h] = temp;\n                }\n            }\n            h = h / 3;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cf1a687e60a84d3f822c01c3e7c24cd5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cf1a687e60a84d3f822c01c3e7c24cd5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ShellSort (System.Collections.Generic.List`1[T] my_list) [0x00018] in <b78f63dd09614c0dba6b17c1eab0b050>:0 \n  at Problem.Main (System.String[] args) [0x00018] in <b78f63dd09614c0dba6b17c1eab0b050>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ShellSort (System.Collections.Generic.List`1[T] my_list) [0x00018] in <b78f63dd09614c0dba6b17c1eab0b050>:0 \n  at Problem.Main (System.String[] args) [0x00018] in <b78f63dd09614c0dba6b17c1eab0b050>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779cb6340b514ef8a55e471265a49366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779cb6340b514ef8a55e471265a49366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <edebc09dbf8d4c638d88d322a96a89fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <edebc09dbf8d4c638d88d322a96a89fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j = j - gap;\n                }\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c527841f9524485d9b8fe1937181d826>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c527841f9524485d9b8fe1937181d826>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Your code goes here.\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <50d811d754fc4acbab3d534b158f7ab7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <50d811d754fc4acbab3d534b158f7ab7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <70c537edbedf408db50e4f9b22111bbe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <70c537edbedf408db50e4f9b22111bbe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2973325ead084776b359cfc6ac78f9c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2973325ead084776b359cfc6ac78f9c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // TODO: Implement Shell Sort\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <67a5f6121f144596a53a03b158aee20c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <67a5f6121f144596a53a03b158aee20c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cd107df4cdf1424c968141ebec15b284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cd107df4cdf1424c968141ebec15b284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Your code here\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ac06096e33b485e9896eb260ad56866>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ac06096e33b485e9896eb260ad56866>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3617cf38f044df585ac5d3a36eda481>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3617cf38f044df585ac5d3a36eda481>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cd107df4cdf1424c968141ebec15b284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cd107df4cdf1424c968141ebec15b284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81f218446094756b39cfd9608ab1d62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81f218446094756b39cfd9608ab1d62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int length = my_list.Count;\n        int gap = length / 2;\n        while (gap > 0) {\n            for (int i = 0; i < length; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fcbcc8829cfe4c528e639a2a591b5054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fcbcc8829cfe4c528e639a2a591b5054>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Write your code here\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c4695e5caff04da6a81a6dfbf360a196>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c4695e5caff04da6a81a6dfbf360a196>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cd107df4cdf1424c968141ebec15b284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cd107df4cdf1424c968141ebec15b284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2973325ead084776b359cfc6ac78f9c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <2973325ead084776b359cfc6ac78f9c9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j = j - gap;\n                }\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c527841f9524485d9b8fe1937181d826>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c527841f9524485d9b8fe1937181d826>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <88fcd7df0d3a4464a29babaca87ca549>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <88fcd7df0d3a4464a29babaca87ca549>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Your code here\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ac06096e33b485e9896eb260ad56866>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ac06096e33b485e9896eb260ad56866>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81f218446094756b39cfd9608ab1d62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81f218446094756b39cfd9608ab1d62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Your code here.\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0130abcb1b22450d9bf9c3d298a2a6f7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0130abcb1b22450d9bf9c3d298a2a6f7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Your code here.\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0130abcb1b22450d9bf9c3d298a2a6f7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0130abcb1b22450d9bf9c3d298a2a6f7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3617cf38f044df585ac5d3a36eda481>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3617cf38f044df585ac5d3a36eda481>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Your code here.\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0130abcb1b22450d9bf9c3d298a2a6f7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0130abcb1b22450d9bf9c3d298a2a6f7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int h = 1;\n        while (h < n / 3) {\n            h = 3 * h + 1;\n        }\n        while (h >= 1) {\n            for (int i = h; i < n; i++) {\n                for (int j = i; j >= h && my_list[j] < my_list[j - h]; j -= h) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - h];\n                    my_list[j - h] = temp;\n                }\n            }\n            h = h / 3;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cf1a687e60a84d3f822c01c3e7c24cd5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cf1a687e60a84d3f822c01c3e7c24cd5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81f218446094756b39cfd9608ab1d62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81f218446094756b39cfd9608ab1d62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j = i;\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <20c12348a2f04ac9a0dcd20c3b29c097>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <20c12348a2f04ac9a0dcd20c3b29c097>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ShellSort (System.Collections.Generic.List`1[T] my_list) [0x00018] in <b78f63dd09614c0dba6b17c1eab0b050>:0 \n  at Problem.Main (System.String[] args) [0x00018] in <b78f63dd09614c0dba6b17c1eab0b050>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ShellSort (System.Collections.Generic.List`1[T] my_list) [0x00018] in <b78f63dd09614c0dba6b17c1eab0b050>:0 \n  at Problem.Main (System.String[] args) [0x00018] in <b78f63dd09614c0dba6b17c1eab0b050>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j = i;\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <20c12348a2f04ac9a0dcd20c3b29c097>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <20c12348a2f04ac9a0dcd20c3b29c097>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cd107df4cdf1424c968141ebec15b284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cd107df4cdf1424c968141ebec15b284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n; i++) {\n                int j = i + gap;\n                while (j >= gap && j < n) {\n                    if (my_list[j - gap] > my_list[j]) {\n                        long temp = my_list[j];\n                        my_list[j] = my_list[j - gap];\n                        my_list[j - gap] = temp;\n                    }\n                    j += gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ccdb773003df4f80a390b4c19f82cb85>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ccdb773003df4f80a390b4c19f82cb85>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Your code goes here.\n        int n = my_list.Count;\n        int h = 1;\n        while (h < n / 3) {\n            h = 3 * h + 1;\n        }\n        while (h >= 1) {\n            for (int i = h; i < n; i++) {\n                for (int j = i; j >= h && my_list[j] < my_list[j - h]; j -= h) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - h];\n                    my_list[j - h] = temp;\n                }\n            }\n            h = h / 3;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a905ecc7f6a542de82d4b649e050118c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a905ecc7f6a542de82d4b649e050118c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81f218446094756b39cfd9608ab1d62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81f218446094756b39cfd9608ab1d62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int h = 1;\n        while (h < n / 3) {\n            h = 3 * h + 1;\n        }\n        while (h >= 1) {\n            for (int i = h; i < n; i++) {\n                for (int j = i; j >= h && my_list[j] < my_list[j - h]; j -= h) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - h];\n                    my_list[j - h] = temp;\n                }\n            }\n            h = h / 3;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cf1a687e60a84d3f822c01c3e7c24cd5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cf1a687e60a84d3f822c01c3e7c24cd5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3617cf38f044df585ac5d3a36eda481>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3617cf38f044df585ac5d3a36eda481>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61580ed0cc574c8fb830b2a8a3ca67c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61580ed0cc574c8fb830b2a8a3ca67c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Your code here\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3689270b665747aa8ef7cc333645f043>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3689270b665747aa8ef7cc333645f043>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aa40f48a04a14287b0299ee2cebdc50a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aa40f48a04a14287b0299ee2cebdc50a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int h = 1;\n        while (h < n / 3) {\n            h = 3 * h + 1;\n        }\n        while (h >= 1) {\n            for (int i = h; i < n; i++) {\n                for (int j = i; j >= h && my_list[j] < my_list[j - h]; j -= h) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - h];\n                    my_list[j - h] = temp;\n                }\n            }\n            h = h / 3;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cf1a687e60a84d3f822c01c3e7c24cd5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cf1a687e60a84d3f822c01c3e7c24cd5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Write your code here\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <589e2349a8e34dde88907e1a200fa11e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <589e2349a8e34dde88907e1a200fa11e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81f218446094756b39cfd9608ab1d62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81f218446094756b39cfd9608ab1d62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3617cf38f044df585ac5d3a36eda481>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3617cf38f044df585ac5d3a36eda481>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <88fcd7df0d3a4464a29babaca87ca549>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <88fcd7df0d3a4464a29babaca87ca549>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Your code here\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ac06096e33b485e9896eb260ad56866>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ac06096e33b485e9896eb260ad56866>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81f218446094756b39cfd9608ab1d62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81f218446094756b39cfd9608ab1d62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Your code here.\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1cdaba555221486399a3dbba0111236d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1cdaba555221486399a3dbba0111236d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779cb6340b514ef8a55e471265a49366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779cb6340b514ef8a55e471265a49366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779cb6340b514ef8a55e471265a49366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779cb6340b514ef8a55e471265a49366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61580ed0cc574c8fb830b2a8a3ca67c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61580ed0cc574c8fb830b2a8a3ca67c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61580ed0cc574c8fb830b2a8a3ca67c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61580ed0cc574c8fb830b2a8a3ca67c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Your code here\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ac06096e33b485e9896eb260ad56866>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9ac06096e33b485e9896eb260ad56866>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j = i;\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <20c12348a2f04ac9a0dcd20c3b29c097>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <20c12348a2f04ac9a0dcd20c3b29c097>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3617cf38f044df585ac5d3a36eda481>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3617cf38f044df585ac5d3a36eda481>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int h = 1;\n        while (h < n / 3) {\n            h = 3 * h + 1;\n        }\n        while (h >= 1) {\n            for (int i = h; i < n; i++) {\n                for (int j = i; j >= h && my_list[j] < my_list[j - h]; j -= h) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - h];\n                    my_list[j - h] = temp;\n                }\n            }\n            h = h / 3;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cf1a687e60a84d3f822c01c3e7c24cd5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cf1a687e60a84d3f822c01c3e7c24cd5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6a363aee644c4a47b680a4c4ca637f8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6a363aee644c4a47b680a4c4ca637f8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61580ed0cc574c8fb830b2a8a3ca67c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <61580ed0cc574c8fb830b2a8a3ca67c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Your code goes here.\n        int n = my_list.Count;\n        int h = 1;\n        while (h < n / 3)\n        {\n            h = 3 * h + 1;\n        }\n        while (h >= 1)\n        {\n            for (int i = h; i < n; i++)\n            {\n                for (int j = i; j >= h && my_list[j] < my_list[j - h]; j -= h)\n                {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - h];\n                    my_list[j - h] = temp;\n                }\n            }\n            h = h / 3;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9f5193c017db4da19b19e535ebb71bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <9f5193c017db4da19b19e535ebb71bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cd107df4cdf1424c968141ebec15b284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cd107df4cdf1424c968141ebec15b284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n; i++) {\n                int j = i + gap;\n                while (j >= gap && j < n) {\n                    if (my_list[j - gap] > my_list[j]) {\n                        long temp = my_list[j];\n                        my_list[j] = my_list[j - gap];\n                        my_list[j - gap] = temp;\n                    }\n                    j += gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ccdb773003df4f80a390b4c19f82cb85>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <ccdb773003df4f80a390b4c19f82cb85>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81f218446094756b39cfd9608ab1d62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81f218446094756b39cfd9608ab1d62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81f218446094756b39cfd9608ab1d62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <b81f218446094756b39cfd9608ab1d62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779cb6340b514ef8a55e471265a49366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779cb6340b514ef8a55e471265a49366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6a363aee644c4a47b680a4c4ca637f8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <6a363aee644c4a47b680a4c4ca637f8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Your code goes here.\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c7a4c62cfcb14a2cb3534a53d869f2ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <c7a4c62cfcb14a2cb3534a53d869f2ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int len = my_list.Count;\n        int gap = len / 2;\n        while (gap > 0) {\n            for (int i = gap; i < len; i++) {\n                long temp = my_list[i];\n                int j = i;\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11797e2285c2431d8936bcc0541df717>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <11797e2285c2431d8936bcc0541df717>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aa40f48a04a14287b0299ee2cebdc50a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <aa40f48a04a14287b0299ee2cebdc50a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // your code here\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <73b4e686443146a3bca9d7d9ab2bada9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <73b4e686443146a3bca9d7d9ab2bada9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                long temp = my_list[i];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <fd348183cef548b6ad2b3bd6114dbccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <88fcd7df0d3a4464a29babaca87ca549>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <88fcd7df0d3a4464a29babaca87ca549>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Your code here.\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j = i;\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <39ef2c035147490ebb0dbbb57f74701c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <39ef2c035147490ebb0dbbb57f74701c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j = i;\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <20c12348a2f04ac9a0dcd20c3b29c097>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <20c12348a2f04ac9a0dcd20c3b29c097>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int len = my_list.Count;\n        int gap = len / 2;\n        while (gap > 0) {\n            for (int i = 0; i < len; i++) {\n                int j = i + gap;\n                long temp = my_list[i];\n                while (j - gap >= 0 && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].set_Item (System.Int32 index, T value) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ShellSort (System.Collections.Generic.List`1[T] my_list) [0x00056] in <d12a693790764e8b9ea72c431222f1e0>:0 \n  at Problem.Main (System.String[] args) [0x00018] in <d12a693790764e8b9ea72c431222f1e0>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].set_Item (System.Int32 index, T value) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ShellSort (System.Collections.Generic.List`1[T] my_list) [0x00056] in <d12a693790764e8b9ea72c431222f1e0>:0 \n  at Problem.Main (System.String[] args) [0x00018] in <d12a693790764e8b9ea72c431222f1e0>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <eafb4fb502034a1ab0b807b7b64cc89c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Your code goes here\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1ff3dd1a92184350ab86ce546fa21339>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1ff3dd1a92184350ab86ce546fa21339>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n; i++) {\n                int j = i + gap;\n                long temp = my_list[i];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].set_Item (System.Int32 index, T value) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ShellSort (System.Collections.Generic.List`1[T] my_list) [0x00056] in <087f097c4a3747ddad863711463414e0>:0 \n  at Problem.Main (System.String[] args) [0x00018] in <087f097c4a3747ddad863711463414e0>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].set_Item (System.Int32 index, T value) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ShellSort (System.Collections.Generic.List`1[T] my_list) [0x00056] in <087f097c4a3747ddad863711463414e0>:0 \n  at Problem.Main (System.String[] args) [0x00018] in <087f097c4a3747ddad863711463414e0>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <edebc09dbf8d4c638d88d322a96a89fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <edebc09dbf8d4c638d88d322a96a89fe>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cd107df4cdf1424c968141ebec15b284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <cd107df4cdf1424c968141ebec15b284>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <48fccd9b8ae344339465bba8a6a32bf0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j -= gap;\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <88fcd7df0d3a4464a29babaca87ca549>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <88fcd7df0d3a4464a29babaca87ca549>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3617cf38f044df585ac5d3a36eda481>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3617cf38f044df585ac5d3a36eda481>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ShellSort (System.Collections.Generic.List`1[T] my_list) [0x00018] in <b78f63dd09614c0dba6b17c1eab0b050>:0 \n  at Problem.Main (System.String[] args) [0x00018] in <b78f63dd09614c0dba6b17c1eab0b050>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.\nParameter name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32 index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ShellSort (System.Collections.Generic.List`1[T] my_list) [0x00018] in <b78f63dd09614c0dba6b17c1eab0b050>:0 \n  at Problem.Main (System.String[] args) [0x00018] in <b78f63dd09614c0dba6b17c1eab0b050>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779cb6340b514ef8a55e471265a49366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779cb6340b514ef8a55e471265a49366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <41d68fad91c94cab8c5cec9b962a727e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                int j = i;\n                while (j >= gap && my_list[j - gap] > my_list[j]) {\n                    long temp = my_list[j];\n                    my_list[j] = my_list[j - gap];\n                    my_list[j - gap] = temp;\n                    j -= gap;\n                }\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3617cf38f044df585ac5d3a36eda481>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <a3617cf38f044df585ac5d3a36eda481>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int gap = my_list.Count / 2;\n        while (gap > 0) {\n            for (int i = 0; i < my_list.Count - gap; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j >= gap && my_list[j - gap] > temp) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            if (gap == 2) {\n                gap = 1;\n            } else {\n                gap = (int)(gap / 2.2);\n            }\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e7ba29d9f13446d4960b50b5135913e0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <e7ba29d9f13446d4960b50b5135913e0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = gap; i < n; i++) {\n                long temp = my_list[i];\n                int j;\n                for (j = i; j >= gap && my_list[j - gap] > temp; j -= gap) {\n                    my_list[j] = my_list[j - gap];\n                }\n                my_list[j] = temp;\n            }\n            gap /= 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1665510114,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779cb6340b514ef8a55e471265a49366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <779cb6340b514ef8a55e471265a49366>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Your code goes here.\n        int n = my_list.Count;\n        int gap = n / 2;\n        while (gap > 0) {\n            for (int i = 0; i + gap < n; i++) {\n                int j = i + gap;\n                long temp = my_list[j];\n                while (j - gap >= 0 && temp < my_list[j - gap]) {\n                    my_list[j] = my_list[j - gap];\n                    j = j - gap;\n                }\n                my_list[j] = temp;\n            }\n            gap = gap / 2;\n        }\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122516,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0f45988301c54b86b3f535c294fca216>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0f45988301c54b86b3f535c294fca216>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sort the given list by using shell sort.\n    public static List<long> ShellSort(List<long> my_list) {\n        // Your code here.\n        return my_list;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)12L, (long)23L, (long)4L, (long)5L, (long)3L, (long)2L, (long)12L, (long)81L, (long)56L, (long)95L}))).Equals((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)12L, (long)12L, (long)23L, (long)56L, (long)81L, (long)95L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)24L, (long)22L, (long)39L, (long)34L, (long)87L, (long)73L, (long)68L}))).Equals((new List<long>(new long[]{(long)22L, (long)24L, (long)34L, (long)39L, (long)68L, (long)73L, (long)87L}))));\n    Debug.Assert(ShellSort((new List<long>(new long[]{(long)32L, (long)30L, (long)16L, (long)96L, (long)82L, (long)83L, (long)74L}))).Equals((new List<long>(new long[]{(long)16L, (long)30L, (long)32L, (long)74L, (long)82L, (long)83L, (long)96L}))));\n    }\n\n}\n",
      "timestamp": 1666122515,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0130abcb1b22450d9bf9c3d298a2a6f7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <0130abcb1b22450d9bf9c3d298a2a6f7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    }
  ]
}
{
  "name": "mbpp_751_check_min_heap",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check if the given list represents min heap or not. https://www.geeksforgeeks.org/how-to-check-if-a-given-list-represents-a-binary-heap/\n    public static bool CheckMinHeap(List<long> arr) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_751_check_min_heap.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)3L, (long)4L, (long)5L, (long)10L, (long)15L}))) == (true));\n    Debug.Assert(CheckMinHeap((new List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)5L, (long)3L, (long)15L}))) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;",
    "        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;",
    "        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;",
    "        int n = arr.Count;\n        for (int i = 0; i <= (n - 2) / 2; i++) {\n            if (arr[2 * i + 1] < arr[i]) {\n                return false;\n            }\n            if (2 * i + 2 < n && arr[2 * i + 2] < arr[i]) {\n                return false;\n            }\n        }\n        return true;",
    "        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[2 * i + 1] < arr[i]) return false;\n            if (2 * i + 2 < arr.Count && arr[2 * i + 2] < arr[i]) return false;\n        }\n        return true;",
    "        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;",
    "        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;",
    "        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;",
    "        for (int i = 0; i < arr.Count; i++) {\n            int left = 2 * i + 1;\n            int right = 2 * i + 2;\n            if (left < arr.Count && arr[i] > arr[left]) {\n                return false;\n            }\n            if (right < arr.Count && arr[i] > arr[right]) {\n                return false;\n            }\n        }\n        return true;",
    "        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;",
    "        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) return false;\n        }\n        return true;",
    "        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;",
    "        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;",
    "        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;",
    "        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;",
    "        for (int i = 0; i < arr.Count / 2; i++) {\n            if (arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;",
    "        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;",
    "        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;",
    "        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) return false;\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) return false;\n        }\n        return true;",
    "        for (int i = 0; i < arr.Count; i++) {\n            if (2 * i + 1 < arr.Count && arr[i] > arr[2 * i + 1]) {\n                return false;\n            }\n            if (2 * i + 2 < arr.Count && arr[i] > arr[2 * i + 2]) {\n                return false;\n            }\n        }\n        return true;"
  ]
}
{
  "name": "mbpp_172_count_occurance",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_172_count_occurance.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        int count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s.Substring(i, 3) == \"std\") {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s.Substring(i, 3) == \"std\") {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (s[i] == 's' && i + 2 < s.Length && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s.Substring(i, 3) == \"std\") {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        return s.Split(\"std\").Length - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (s[i] == 's') {\n                if (i + 2 < s.Length) {\n                    if (s[i + 1] == 't' && s[i + 2] == 'd') {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (s[i] == 's' && i + 2 < s.Length && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n                i += 2;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s.Substring(i, 3) == \"std\") {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (s[i] == 's' && i + 2 < s.Length && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n                i += 2;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        return s.Split(\"std\").Length - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        int count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1666123762,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s.Substring(i, 3) == \"std\") {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (s[i] == 's' && i + 2 < s.Length && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (s[i] == 's') {\n                if (i + 2 < s.Length && s[i + 1] == 't' && s[i + 2] == 'd') {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1666123762,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        int count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s.Substring(i, 3) == \"std\") {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1666123762,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7bad22ab68b043658d7ea9184851c35a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7bad22ab68b043658d7ea9184851c35a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s.Substring(i, 3) == \"std\") {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s.Substring(i, 3) == \"std\") {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        return s.Split(\"std\").Length - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (s[i] == 's') {\n                if (i + 2 < s.Length && s[i + 1] == 't' && s[i + 2] == 'd') {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1666123762,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s.Substring(i, 3) == \"std\") {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        return s.Count(c => c == 's' || c == 't' || c == 'd');\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1666123762,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <02149ccb89334924a7e310a42a4f2bab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <02149ccb89334924a7e310a42a4f2bab>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s.Substring(i, 3) == \"std\") {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s.Substring(i, 3) == \"std\") {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        // Write your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1666123762,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3b3828cbc95749999f8dbd433ab9ca2e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3b3828cbc95749999f8dbd433ab9ca2e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        int count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1666123762,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s.Substring(i, 3) == \"std\") {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (s[i] == 's') {\n                if (i + 2 < s.Length && s[i + 1] == 't' && s[i + 2] == 'd') {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1666123762,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for(int i = 0; i < s.Length; i++) {\n            if(s[i] == 's') {\n                if(i + 2 < s.Length && s[i + 1] == 't' && s[i + 2] == 'd') {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1666123762,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s.Substring(i, 3) == \"std\") {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        return s.Split(\"std\").Length - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1666123762,
      "stdout": "",
      "stderr": "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.CountOccurance (System.String s) [0x00014] in <2c17675e68284657a12e07914ab2cfc4>:0 \n  at Problem.Main (System.String[] args) [0x0003d] in <2c17675e68284657a12e07914ab2cfc4>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the array.\n  at Problem.CountOccurance (System.String s) [0x00014] in <2c17675e68284657a12e07914ab2cfc4>:0 \n  at Problem.Main (System.String[] args) [0x0003d] in <2c17675e68284657a12e07914ab2cfc4>:0 \n",
      "exit_code": 1,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s.Substring(i, 3) == \"std\") {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s.Substring(i, 3) == \"std\") {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        int count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1666123762,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        return s.Split(\"std\").Length - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (s[i] == 's' && i + 2 < s.Length && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        return s.Split(\"std\").Length - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (s[i] == 's') {\n                if (i + 2 < s.Length && s[i + 1] == 't' && s[i + 2] == 'd') {\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1666123762,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        return s.Split(\"std\").Length - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (s[i] == 's' && i + 2 < s.Length && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n                i += 2;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1666123762,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7bad22ab68b043658d7ea9184851c35a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7bad22ab68b043658d7ea9184851c35a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s.Substring(i, 3) == \"std\") {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1666123762,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1cdfe8895a7444a38588a44685eea297>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1cdfe8895a7444a38588a44685eea297>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        // Write your code here\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1666123762,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3b3828cbc95749999f8dbd433ab9ca2e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <3b3828cbc95749999f8dbd433ab9ca2e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s.Substring(i, 3) == \"std\") {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s.Substring(i, 3) == \"std\") {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n            if (s[i] == 's' && i + 2 < s.Length && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n                i += 2;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s.Substring(i, 3) == \"std\") {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        return s.Split(\"std\").Length - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1666123762,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7bad22ab68b043658d7ea9184851c35a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7bad22ab68b043658d7ea9184851c35a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1666123762,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1cdfe8895a7444a38588a44685eea297>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1cdfe8895a7444a38588a44685eea297>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        return s.Split(\"std\").Length - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1666123762,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7bad22ab68b043658d7ea9184851c35a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <7bad22ab68b043658d7ea9184851c35a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        // TODO: Implement this function.\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1666123762,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1cdfe8895a7444a38588a44685eea297>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <1cdfe8895a7444a38588a44685eea297>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String ",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s.Substring(i, 3) == \"std\") {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        int count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1666123762,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        return s.Split(\"std\").Length - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s.Substring(i, 3) == \"std\") {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        long count = 0;\n        for (int i = 0; i < s.Length - 2; i++) {\n            if (s[i] == 's' && s[i + 1] == 't' && s[i + 2] == 'd') {\n                count++;\n            }\n        }\n        return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count the number of occurence of the string 'std' in a given string.\n    public static long CountOccurance(string s) {\n        return s.Split(\"std\").Length - 1;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountOccurance((\"letstdlenstdporstd\")) == (3L));\n    Debug.Assert(CountOccurance((\"truststdsolensporsd\")) == (1L));\n    Debug.Assert(CountOccurance((\"makestdsostdworthit\")) == (2L));\n    Debug.Assert(CountOccurance((\"stds\")) == (1L));\n    Debug.Assert(CountOccurance((\"\")) == (0L));\n    }\n\n}\n",
      "timestamp": 1665510380,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    }
  ]
}
{
  "name": "mbpp_123_amicable_numbers_sum",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_123_amicable_numbers_sum.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "results": [
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sum1 = 0;\n            long sum2 = 0;\n            for (long j = 1; j <= i/2; j++) {\n                if (i % j == 0) {\n                    sum1 += j;\n                }\n            }\n            for (long j = 1; j <= sum1/2; j++) {\n                if (sum1 % j == 0) {\n                    sum2 += j;\n                }\n            }\n            if (sum2 == i && sum1 != i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509949,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = DivisorsSum(i);\n            if (a != i && DivisorsSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpabd_7i36.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpabd_7i36.cs(14,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm94uorzh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpm94uorzh.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = DivisorsSum(i);\n            if (a == i)\n                continue;\n            long b = DivisorsSum(a);\n            if (b == i)\n                sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpan4v8pft.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpan4v8pft.cs(16,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            long b = DivisorsSum(a);\n            if (i == b && a != b) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl5oe84f7.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpl5oe84f7.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx75wuf7_.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpx75wuf7_.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (a != b && DivisorsSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprc9do6q2.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmprc9do6q2.cs(15,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorSum(i);\n            if (a != i && DivisorSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp38jogfmg.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmp38jogfmg.cs(14,27): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorSum(a);\n            if (b > a && DivisorSum(b) == a) {\n                sum += a;\n                sum += b;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb_p5pygy.cs(14,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpb_p5pygy.cs(15,26): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        // Create a list of all the divisors of each number from 1 to limit.\n        var divisors = new List<long>();\n        for (long i = 1; i <= limit; i++) {\n            divisors.Add(DivisorsSum(i));\n        }\n        // Find all the amicable numbers.\n        var amicableNumbers = new List<long>();\n        for (long i = 1; i <= limit; i++) {\n            if (divisors[(int)i - 1] <= limit && divisors[(int)i - 1] != i && divisors[(int)divisors[(int)i - 1] - 1] == i) {\n                amicableNumbers.Add(i);\n            }\n        }\n        // Return the sum of all the amicable numbers.\n        return amicableNumbers.Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9g7cj8f4.cs(14,26): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (i != sumOfDivisors && DivisorsSum(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpft57ti8u.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpft57ti8u.cs(14,39): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfDivisors(i);\n            long b = SumOfDivisors(a);\n            if (b == i && a != b) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpz4d6rd8f.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpz4d6rd8f.cs(14,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a > i && SumOfDivisors(a) == i) {\n                sum += i;\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3r219lca.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp3r219lca.cs(14,26): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtmj6q_8.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpxtmj6q_8.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a == i) continue;\n            long b = SumOfProperDivisors(a);\n            if (b == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpojj57qj4.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpojj57qj4.cs(15,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = SumOfDivisors(i);\n            long sum2 = SumOfDivisors(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp36vxel4r.cs(13,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp36vxel4r.cs(14,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            long b = DivisorsSum(a);\n            if (i == b && i != a) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp78jg4gyy.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp78jg4gyy.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_ux4d4k2.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmp_ux4d4k2.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            long b = DivisorsSum(a);\n            if (b == i && a != b) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpj5zfzvn5.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpj5zfzvn5.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a > i && SumOfDivisors(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmped911yyh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmped911yyh.cs(14,26): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long d = DivisorSum(i);\n            if (d != i && DivisorSum(d) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp056ntpgf.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmp056ntpgf.cs(14,27): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorSum(i);\n            long sum2 = DivisorSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp74hcisqa.cs(13,25): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmp74hcisqa.cs(14,25): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long d = DivisorSum(i);\n            if (d != i && DivisorSum(d) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkqaw5ov4.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpkqaw5ov4.cs(14,27): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            if (IsAmicable(i)) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp52ajfwqz.cs(13,17): error CS0103: The name 'IsAmicable' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long d = DivisorSum(i);\n            if (d != i && DivisorSum(d) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp056ntpgf.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmp056ntpgf.cs(14,27): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            if (a != i && DivisorsSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5zxnqzmm.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp5zxnqzmm.cs(14,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtmj6q_8.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpxtmj6q_8.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm94uorzh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpm94uorzh.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (a != b && DivisorsSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprc9do6q2.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmprc9do6q2.cs(15,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a > i && SumOfDivisors(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmped911yyh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmped911yyh.cs(14,26): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sum1 = DivisorSum(i);\n            long sum2 = DivisorSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmps_qbof4m.cs(13,25): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmps_qbof4m.cs(14,25): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (a != b && DivisorsSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprc9do6q2.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmprc9do6q2.cs(15,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long d1 = DivisorsSum(i);\n            long d2 = DivisorsSum(d1);\n            if (d2 == i && d1 != d2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpigmd023l.cs(13,23): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpigmd023l.cs(14,23): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (sumOfDivisors > i && DivisorsSum(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2t5anzmf.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp2t5anzmf.cs(14,38): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        // Create a list of all the divisors of each number from 1 to limit.\n        var divisors = new List<long>();\n        for (long i = 1; i <= limit; i++) {\n            divisors.Add(DivisorsSum(i));\n        }\n        // Find all the amicable numbers.\n        var amicableNumbers = new List<long>();\n        for (long i = 1; i <= limit; i++) {\n            if (divisors[(int)i - 1] <= limit && divisors[(int)i - 1] != i && divisors[(int)divisors[(int)i - 1] - 1] == i) {\n                amicableNumbers.Add(i);\n            }\n        }\n        // Sum all the amicable numbers.\n        return amicableNumbers.Sum();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkt9v9w5c.cs(14,26): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (sumOfDivisors > i && DivisorsSum(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1_4r5vyj.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp1_4r5vyj.cs(14,38): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a > i && SumOfDivisors(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmfsb9w2v.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpmfsb9w2v.cs(14,26): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long d = SumOfDivisors(i);\n            if (d > i && SumOfDivisors(d) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprlfkb73h.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmprlfkb73h.cs(14,26): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm94uorzh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpm94uorzh.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = SumOfDivisors(a);\n            if (a != b && SumOfDivisors(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl7j0t7su.cs(14,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpl7j0t7su.cs(15,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        var primes = new PrimeGenerator();\n        var sum = 0L;\n        var divisors = new long[limit + 1];\n        for (var i = 1; i <= limit; i++) {\n            var divisorSum = 0L;\n            var n = i;\n            foreach (var p in primes.GetPrimeFactors(n)) {\n                var pn = p;\n                var pk = 1;\n                while (n % pn == 0) {\n                    pk++;\n                    pn *= p;\n                }\n                divisorSum *= (pk + 1);\n                divisorSum += 1;\n            }\n            divisors[i] = divisorSum;\n        }\n        for (var i = 1; i <= limit; i++) {\n            var j = divisors[i];\n            if (j <= limit && divisors[j] == i && i != j) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpixoe5ku7.cs(11,26): error CS0246: The type or namespace name 'PrimeGenerator' could not be found (are you missing a using directive or an assembly reference?)\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long d = DivisorsSum(i);\n            if (d != i && DivisorsSum(d) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkta7bz_f.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpkta7bz_f.cs(14,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtmj6q_8.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpxtmj6q_8.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (a != b && DivisorsSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprc9do6q2.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmprc9do6q2.cs(15,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = SumOfDivisors(a);\n            if (a != b && SumOfDivisors(b) == a)\n                sum += a;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpo0e_pagq.cs(14,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpo0e_pagq.cs(15,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            if (a != i && DivisorsSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5zxnqzmm.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp5zxnqzmm.cs(14,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (sumOfDivisors > i && DivisorsSum(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1_4r5vyj.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp1_4r5vyj.cs(14,38): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a > i && SumOfProperDivisors(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpihc800nh.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpihc800nh.cs(14,26): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (a != b && DivisorsSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprc9do6q2.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmprc9do6q2.cs(15,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm94uorzh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpm94uorzh.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtmj6q_8.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpxtmj6q_8.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (sumOfDivisors > i && DivisorsSum(sumOfDivisors) == i) {\n                sum += i + sumOfDivisors;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkiqy30h4.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpkiqy30h4.cs(14,38): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long d = DivisorsSum(i);\n            if (d > i && DivisorsSum(d) == i) {\n                sum += i + d;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpz1ugyfn7.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpz1ugyfn7.cs(14,26): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long d = DivisorSum(i);\n            if (i == DivisorSum(d) && i != d) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptya1w_wg.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmptya1w_wg.cs(14,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtmj6q_8.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpxtmj6q_8.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            if (a > i && DivisorsSum(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpcwwu_mkz.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpcwwu_mkz.cs(14,26): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (a != b && DivisorsSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprc9do6q2.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmprc9do6q2.cs(15,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm94uorzh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpm94uorzh.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorSum(a);\n            if (a == DivisorSum(b) && a != b) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp57du_7su.cs(14,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmp57du_7su.cs(15,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a == i) continue;\n            if (SumOfProperDivisors(a) == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpn8xpud82.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpn8xpud82.cs(15,17): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (int i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a == i) continue;\n            long b = SumOfProperDivisors(a);\n            if (b == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnoyq5tc3.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpnoyq5tc3.cs(15,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long d = DivisorSum(i);\n            if (d > i && DivisorSum(d) == i) {\n                sum += i + d;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdgbv3qfp.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpdgbv3qfp.cs(14,26): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            if (sum1 > i) {\n                long sum2 = DivisorsSum(sum1);\n                if (sum2 == i) {\n                    sum += i + sum1;\n                }\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpy_vaq67l.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpy_vaq67l.cs(15,29): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorSum(i);\n            if (a > i && DivisorSum(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpylk4dtot.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpylk4dtot.cs(14,26): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = DivisorsSum(i);\n            if (a == i) continue;\n            long b = DivisorsSum(a);\n            if (b == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsgr5kt96.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpsgr5kt96.cs(15,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm94uorzh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpm94uorzh.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long b = SumOfDivisors(i);\n            if (b > i && SumOfDivisors(b) == i) {\n                sum += i + b;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx_bkebhc.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpx_bkebhc.cs(14,26): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            long b = SumOfProperDivisors(a);\n            if (b == i && a != b) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmponpnqm1e.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmponpnqm1e.cs(14,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (sumOfDivisors > i && DivisorsSum(sumOfDivisors) == i) {\n                sum += i + sumOfDivisors;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkiqy30h4.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpkiqy30h4.cs(14,38): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = 0;\n            long sum2 = 0;\n            for (long j = 1; j < i; j++) {\n                if (i % j == 0) {\n                    sum1 += j;\n                }\n            }\n            for (long j = 1; j < sum1; j++) {\n                if (sum1 % j == 0) {\n                    sum2 += j;\n                }\n            }\n            if (sum2 == i && sum1 != i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a == i) continue;\n            if (SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpvhhpxa8d.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpvhhpxa8d.cs(15,17): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = DivisorsSum(i);\n            long b = DivisorsSum(a);\n            if (b == i && a != b) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg2ozgna8.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpg2ozgna8.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx75wuf7_.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpx75wuf7_.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (a != b && DivisorsSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprc9do6q2.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmprc9do6q2.cs(15,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorSum(i);\n            if (a == i) continue;\n            if (DivisorSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwqnhvyj2.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpwqnhvyj2.cs(15,17): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (i == DivisorsSum(sumOfDivisors) && i != sumOfDivisors) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkgqk_ero.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpkgqk_ero.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtmj6q_8.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpxtmj6q_8.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (a != b && DivisorsSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprc9do6q2.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmprc9do6q2.cs(15,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (a == b) continue;\n            if (DivisorsSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6kelxg_3.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp6kelxg_3.cs(16,17): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (i != a && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxvqdvc3g.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpxvqdvc3g.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a > i && SumOfDivisors(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmfsb9w2v.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpmfsb9w2v.cs(14,26): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = DivisorsSum(i);\n            if (a > i && DivisorsSum(a) == i) {\n                sum += a + i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpy7hrn0c0.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpy7hrn0c0.cs(14,26): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (i == SumOfProperDivisors(a) && i != a) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpffkevd0e.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpffkevd0e.cs(14,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (int i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a == i) continue;\n            long b = SumOfProperDivisors(a);\n            if (b == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnoyq5tc3.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpnoyq5tc3.cs(15,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtmj6q_8.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpxtmj6q_8.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            long b = SumOfDivisors(a);\n            if (i == b && i != a) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp19qzfj7o.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp19qzfj7o.cs(14,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (sumOfDivisors > i && DivisorsSum(sumOfDivisors) == i) {\n                sum += i + sumOfDivisors;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkiqy30h4.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpkiqy30h4.cs(14,38): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = DivisorSum(i);\n            if (a > i && DivisorSum(a) == i) {\n                sum += a + i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpw90hiav5.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpw90hiav5.cs(14,26): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5yi2gycs.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp5yi2gycs.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        var sum = 0L;\n        for (var i = 1L; i <= limit; i++) {\n            var d = DivisorSum(i);\n            if (d > i && DivisorSum(d) == i) {\n                sum += i + d;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnt4jqnjo.cs(13,21): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpnt4jqnjo.cs(14,26): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtmj6q_8.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpxtmj6q_8.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (a != b && DivisorsSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprc9do6q2.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmprc9do6q2.cs(15,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = SumOfProperDivisors(a);\n            if (a != b && SumOfProperDivisors(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpaudsm8rz.cs(14,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpaudsm8rz.cs(15,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a > i && SumOfProperDivisors(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgwfznet3.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpgwfznet3.cs(14,26): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = SumOfDivisors(i);\n            if (sum1 == i) continue;\n            long sum2 = SumOfDivisors(sum1);\n            if (sum2 == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwuidvhbf.cs(13,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpwuidvhbf.cs(15,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm94uorzh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpm94uorzh.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            if (i == DivisorsSum(a) && i != a) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwldaozws.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpwldaozws.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (int i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpeee_cet5.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpeee_cet5.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (sumOfDivisors > i && DivisorsSum(sumOfDivisors) == i) {\n                sum += i + sumOfDivisors;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpqttmpe9f.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpqttmpe9f.cs(14,38): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = DivisorsSum(i);\n            long b = DivisorsSum(a);\n            if (b == i && a != b) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpg2ozgna8.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpg2ozgna8.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmppwv1m2ng.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmppwv1m2ng.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a > i && SumOfDivisors(a) == i) {\n                sum += a + i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpb68l9can.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpb68l9can.cs(14,26): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            if (sum1 != i && DivisorsSum(sum1) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1g8rv0rl.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp1g8rv0rl.cs(14,30): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm94uorzh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpm94uorzh.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm94uorzh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpm94uorzh.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = Divisors(i).Sum();\n            if (sumOfDivisors != i && Divisors(sumOfDivisors).Sum() == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpfr481cea.cs(13,34): error CS0103: The name 'Divisors' does not exist in the current context\n/tmp/tmpfr481cea.cs(14,39): error CS0103: The name 'Divisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (a != b && DivisorsSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrmp7kib.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpjrmp7kib.cs(15,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 2; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a > i && SumOfDivisors(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmo2enkd6.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpmo2enkd6.cs(14,26): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = SumOfDivisors(i);\n            if (sum1 > i && SumOfDivisors(sum1) == i) {\n                sum += i + sum1;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_e9mcquf.cs(13,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp_e9mcquf.cs(14,29): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (sumOfDivisors > i && DivisorsSum(sumOfDivisors) == i) {\n                sum += i + sumOfDivisors;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkiqy30h4.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpkiqy30h4.cs(14,38): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && a < limit && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpevaaecqa.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpevaaecqa.cs(14,40): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long d = DivisorSum(i);\n            if (d > i && DivisorSum(d) == i) {\n                sum += i + d;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdgbv3qfp.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpdgbv3qfp.cs(14,26): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long d = DivisorSum(i);\n            if (d > i && DivisorSum(d) == i) {\n                sum += i + d;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpob2xvt_d.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpob2xvt_d.cs(14,26): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = 0, sum2 = 0;\n            for (long j = 1; j < i; j++) {\n                if (i % j == 0) {\n                    sum1 += j;\n                }\n            }\n            for (long j = 1; j < sum1; j++) {\n                if (sum1 % j == 0) {\n                    sum2 += j;\n                }\n            }\n            if (sum2 == i && sum1 != i) {\n                sum += sum1;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "None",
      "exit_code": 0,
      "status": "OK"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long divisorSum = DivisorSum(i);\n            if (i == DivisorSum(divisorSum) && i != divisorSum) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmq0uyhov.cs(13,31): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpmq0uyhov.cs(14,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long d = DivisorSum(i);\n            if (d != i && DivisorSum(d) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp056ntpgf.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmp056ntpgf.cs(14,27): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = DivisorSum(i);\n            if (a == i) continue;\n            if (DivisorSum(a) == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwpopxk1y.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpwpopxk1y.cs(15,17): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorSum(i);\n            long b = DivisorSum(a);\n            if (b == i && a != b) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp36ve7vbk.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmp36ve7vbk.cs(14,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = SumOfProperDivisors(a);\n            if (a != b && SumOfProperDivisors(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpaudsm8rz.cs(14,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpaudsm8rz.cs(15,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (sumOfDivisors > i && DivisorsSum(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2t5anzmf.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp2t5anzmf.cs(14,38): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (i != sumOfDivisors && DivisorsSum(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpft57ti8u.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpft57ti8u.cs(14,39): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (i == SumOfProperDivisors(a) && i != a) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpffkevd0e.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpffkevd0e.cs(14,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (b > a && DivisorsSum(b) == a) {\n                sum += a + b;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_8mx3fs3.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp_8mx3fs3.cs(15,26): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (int i = 1; i <= limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm84lah4o.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpm84lah4o.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx75wuf7_.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpx75wuf7_.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a == i) continue;\n            long b = SumOfDivisors(a);\n            if (b == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpq4al861r.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpq4al861r.cs(15,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (a != b && DivisorsSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprc9do6q2.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmprc9do6q2.cs(15,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = SumOfDivisors(i);\n            long sum2 = SumOfDivisors(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp36vxel4r.cs(13,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp36vxel4r.cs(14,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = DivisorsSum(i);\n            if (a == i) continue;\n            if (DivisorsSum(a) == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpnlinbf6r.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpnlinbf6r.cs(15,17): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = Divisors(i).Sum();\n            if (i != sumOfDivisors && Divisors(sumOfDivisors).Sum() == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpoe1komw3.cs(13,34): error CS0103: The name 'Divisors' does not exist in the current context\n/tmp/tmpoe1komw3.cs(14,39): error CS0103: The name 'Divisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (a != b && DivisorsSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprc9do6q2.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmprc9do6q2.cs(15,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = DivisorSum(i);\n            long b = DivisorSum(a);\n            if (b == i && a != b) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpzkurca95.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpzkurca95.cs(14,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorSum(i);\n            if (a == i) continue;\n            if (DivisorSum(a) == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9h20pkoo.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmp9h20pkoo.cs(15,17): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = SumOfDivisors(i);\n            long sum2 = SumOfDivisors(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp36vxel4r.cs(13,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp36vxel4r.cs(14,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorSum(a);\n            if (a != b && DivisorSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp0dhurr9a.cs(14,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmp0dhurr9a.cs(15,27): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = SumOfDivisors(a);\n            if (a != b && SumOfDivisors(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpl7j0t7su.cs(14,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpl7j0t7su.cs(15,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorsSum(i);\n            if (a == b) continue;\n            if (DivisorsSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxi1ix66n.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpxi1ix66n.cs(16,17): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            if (IsAmicable(i)) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp52ajfwqz.cs(13,17): error CS0103: The name 'IsAmicable' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_ux4d4k2.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmp_ux4d4k2.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        // TODO: Implement this function\n        return 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "",
      "stderr": "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4c94123c80fe4849a73abba245abfe31>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[] args) [0x00000] in <4c94123c80fe4849a73abba245abfe31>:0 \n",
      "exit_code": 0,
      "status": "Exception"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long divisorSum = DivisorSum(i);\n            if (divisorSum != i && DivisorSum(divisorSum) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpdd1om1vq.cs(13,31): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpdd1om1vq.cs(14,36): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 2; i < limit; i++) {\n            long a = DivisorsSum(i);\n            if (a != i && DivisorsSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsbuzv8q_.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpsbuzv8q_.cs(14,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpinir517f.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpinir517f.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpm94uorzh.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpm94uorzh.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = DivisorSum(i);\n            if (i != sumOfDivisors && DivisorSum(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3hqxhb0g.cs(13,34): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmp3hqxhb0g.cs(14,39): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long d = DivisorSum(i);\n            if (d != i && DivisorSum(d) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp056ntpgf.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmp056ntpgf.cs(14,27): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpx75wuf7_.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpx75wuf7_.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (sumOfDivisors > i && DivisorsSum(sumOfDivisors) == i) {\n                sum += i + sumOfDivisors;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkiqy30h4.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpkiqy30h4.cs(14,38): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            if (a == i) continue;\n            if (DivisorsSum(a) == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpsfsku2bu.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpsfsku2bu.cs(15,17): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            if (a != i && DivisorsSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5zxnqzmm.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp5zxnqzmm.cs(14,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a > i && SumOfDivisors(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpmfsb9w2v.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpmfsb9w2v.cs(14,26): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a == i) continue;\n            if (SumOfProperDivisors(a) == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6yxyrtky.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmp6yxyrtky.cs(15,17): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a == i) {\n                continue;\n            }\n            long b = SumOfDivisors(a);\n            if (b == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprdjwg4p0.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmprdjwg4p0.cs(17,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorSum(i);\n            if (a != i && DivisorSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp38jogfmg.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmp38jogfmg.cs(14,27): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_ux4d4k2.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmp_ux4d4k2.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = SumOfDivisors(i);\n            if (sumOfDivisors > i && SumOfDivisors(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp1im_89n9.cs(13,34): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp1im_89n9.cs(14,38): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            long b = DivisorsSum(a);\n            if (i == b && i != a) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp78jg4gyy.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp78jg4gyy.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_ux4d4k2.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmp_ux4d4k2.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = Divisors.SumOfProperDivisors(i);\n            if (sumOfDivisors != i && Divisors.SumOfProperDivisors(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp6thp0mnn.cs(13,34): error CS0103: The name 'Divisors' does not exist in the current context\n/tmp/tmp6thp0mnn.cs(14,39): error CS0103: The name 'Divisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (sumOfDivisors > i && DivisorsSum(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp2t5anzmf.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp2t5anzmf.cs(14,38): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long d = DivisorSum(i);\n            if (d != i && DivisorSum(d) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp056ntpgf.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmp056ntpgf.cs(14,27): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a > i && SumOfProperDivisors(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgwfznet3.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpgwfznet3.cs(14,26): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = DivisorsSum(i);\n            if (sumOfDivisors != i && DivisorsSum(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwg0i6237.cs(13,34): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpwg0i6237.cs(14,39): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (a != b && DivisorsSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprc9do6q2.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmprc9do6q2.cs(15,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = AmicableNumbersSumHelper(i);\n            long b = AmicableNumbersSumHelper(a);\n            if (i == b && a != b) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpq07k3gvq.cs(13,22): error CS0103: The name 'AmicableNumbersSumHelper' does not exist in the current context\n/tmp/tmpq07k3gvq.cs(14,22): error CS0103: The name 'AmicableNumbersSumHelper' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (a != b && DivisorsSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmprc9do6q2.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmprc9do6q2.cs(15,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            if (a != i && DivisorsSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5zxnqzmm.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp5zxnqzmm.cs(14,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtmj6q_8.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpxtmj6q_8.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = i;\n            long b = DivisorsSum(a);\n            if (a != b && DivisorsSum(b) == a) {\n                sum += a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpjrmp7kib.cs(14,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpjrmp7kib.cs(15,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a == i)\n                continue;\n            long b = SumOfProperDivisors(a);\n            if (b == i)\n                sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxgtzbczb.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpxgtzbczb.cs(16,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorSum(i);\n            if (a > i && DivisorSum(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpylk4dtot.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpylk4dtot.cs(14,26): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long sumOfDivisors = SumOfDivisors(i);\n            if (sumOfDivisors > i && SumOfDivisors(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpw8tz0ek2.cs(13,34): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmpw8tz0ek2.cs(14,38): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = DivisorsSum(i);\n            long sum2 = DivisorsSum(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpxtmj6q_8.cs(13,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpxtmj6q_8.cs(14,25): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sumOfDivisors = DivisorSum(i);\n            if (sumOfDivisors != i && DivisorSum(sumOfDivisors) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpkag7wl4g.cs(13,34): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmpkag7wl4g.cs(14,39): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorSum(i);\n            if (a != i && DivisorSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp38jogfmg.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmp38jogfmg.cs(14,27): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = SumOfDivisors(i);\n            long sum2 = SumOfDivisors(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp36vxel4r.cs(13,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp36vxel4r.cs(14,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a > i && SumOfProperDivisors(a) == i) {\n                sum += i + a;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpgwfznet3.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmpgwfznet3.cs(14,26): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long j = SumOfProperDivisors(i);\n            if (i != j && SumOfProperDivisors(j) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmptd_a_guh.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmptd_a_guh.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorSum(i);\n            if (a == i) continue;\n            if (DivisorSum(a) == i) sum += i;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp9h20pkoo.cs(13,22): error CS0103: The name 'DivisorSum' does not exist in the current context\n/tmp/tmp9h20pkoo.cs(15,17): error CS0103: The name 'DivisorSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = i;\n            long b = SumOfDivisors(a);\n            if (a == b) continue;\n            if (SumOfDivisors(b) == a) sum += a;\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp3q77nda1.cs(14,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp3q77nda1.cs(16,17): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long sum1 = SumOfDivisors(i);\n            long sum2 = SumOfDivisors(sum1);\n            if (sum2 == i && sum1 != sum2) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1665509948,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp36vxel4r.cs(13,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp36vxel4r.cs(14,25): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long d1 = DivisorsSum(i);\n            if (d1 > i && DivisorsSum(d1) == i) {\n                sum += i + d1;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122647,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmpwb62qwe3.cs(13,23): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmpwb62qwe3.cs(14,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfDivisors(i);\n            if (a != i && SumOfDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122646,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5yi2gycs.cs(13,22): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n/tmp/tmp5yi2gycs.cs(14,27): error CS0103: The name 'SumOfDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i < limit; i++) {\n            long a = DivisorsSum(i);\n            if (a != i && DivisorsSum(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp5zxnqzmm.cs(13,22): error CS0103: The name 'DivisorsSum' does not exist in the current context\n/tmp/tmp5zxnqzmm.cs(14,27): error CS0103: The name 'DivisorsSum' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    },
    {
      "program": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to sum all amicable numbers from 1 to a specified number.\n    public static long AmicableNumbersSum(long limit) {\n        long sum = 0;\n        for (long i = 1; i <= limit; i++) {\n            long a = SumOfProperDivisors(i);\n            if (a != i && SumOfProperDivisors(a) == i) {\n                sum += i;\n            }\n        }\n        return sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AmicableNumbersSum((999L)) == (504L));\n    Debug.Assert(AmicableNumbersSum((9999L)) == (31626L));\n    Debug.Assert(AmicableNumbersSum((99L)) == (0L));\n    }\n\n}\n",
      "timestamp": 1666122645,
      "stdout": "Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)\nCopyright (C) Microsoft Corporation. All rights reserved.\n\n/tmp/tmp_ux4d4k2.cs(13,22): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n/tmp/tmp_ux4d4k2.cs(14,27): error CS0103: The name 'SumOfProperDivisors' does not exist in the current context\n",
      "stderr": "",
      "exit_code": 1,
      "status": "SyntaxError"
    }
  ]
}
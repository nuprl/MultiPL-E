{
  "name": "mbpp_776_count_vowels",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to count those characters which have vowels as their neighbors in the given string.\n    public static long CountVowels(string test_str) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_776_count_vowels.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountVowels((\"bestinstareels\")) == (7L));\n    Debug.Assert(CountVowels((\"partofthejourneyistheend\")) == (12L));\n    Debug.Assert(CountVowels((\"amazonprime\")) == (5L));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                if (i > 0 && i < test_str.Length - 1) {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n                else if (i == 0) {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n                else if (i == test_str.Length - 1) {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (IsVowel(test_str[i])) {\n                if (i == 0) {\n                    if (IsVowel(test_str[i + 1]))\n                        count++;\n                } else if (i == test_str.Length - 1) {\n                    if (IsVowel(test_str[i - 1]))\n                        count++;\n                } else {\n                    if (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))\n                        count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (IsVowel(test_str[i])) {\n                if (i > 0 && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n                if (i < test_str.Length - 1 && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                count++;\n            } else if (i == test_str.Length - 1 && test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                count++;\n            } else if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                    count++;\n                }\n                if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                if (i > 0 && (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u')) {\n                    count++;\n                }\n                if (i < test_str.Length - 1 && (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u')) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i > 0 && i < test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u' || test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i > 0 && i < test_str.Length - 1) {\n                if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i > 0 && i < test_str.Length - 1) {\n                if (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == 0) {\n                if (IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        // Your code goes here\n        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && IsVowel(test_str[i + 1])) {\n                count++;\n            } else if (i == test_str.Length - 1 && IsVowel(test_str[i - 1])) {\n                count++;\n            } else if (IsVowel(test_str[i - 1]) && IsVowel(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && IsVowel(test_str[i + 1])) {\n                count++;\n            } else if (i == test_str.Length - 1 && IsVowel(test_str[i - 1])) {\n                count++;\n            } else if (IsVowel(test_str[i - 1]) && IsVowel(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i + 1]) || IsVowel(test_str[i - 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i + 1]) || IsVowel(test_str[i - 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && isVowel(test_str[i + 1])) {\n                count++;\n            } else if (i == test_str.Length - 1 && isVowel(test_str[i - 1])) {\n                count++;\n            } else if (isVowel(test_str[i - 1]) && isVowel(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        // Write your code here\n        // Return the number of vowels\n        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                if (i != 0 && i != test_str.Length - 1) {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n                else if (i == 0) {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n                else if (i == test_str.Length - 1) {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i > 0 && i < test_str.Length - 1) {\n                if (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            }\n            else if (i == 0) {\n                if (IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            }\n            else {\n                if (IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        var vowels = new HashSet<char> { 'a', 'e', 'i', 'o', 'u' };\n        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (vowels.Contains(test_str[i])) {\n                if (i > 0 && vowels.Contains(test_str[i - 1])) {\n                    count++;\n                }\n                if (i < test_str.Length - 1 && vowels.Contains(test_str[i + 1])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && IsVowel(test_str[i + 1])) {\n                count++;\n            } else if (i == test_str.Length - 1 && IsVowel(test_str[i - 1])) {\n                count++;\n            } else if (IsVowel(test_str[i - 1]) && IsVowel(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i + 1]) || IsVowel(test_str[i - 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i > 0 && test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                count++;\n            }\n            if (i < test_str.Length - 1 && test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && IsVowel(test_str[i + 1])) {\n                count++;\n            } else if (i == test_str.Length - 1 && IsVowel(test_str[i - 1])) {\n                count++;\n            } else if (i != 0 && i != test_str.Length - 1 && IsVowel(test_str[i - 1]) && IsVowel(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] ==",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (IsVowel(test_str[i])) {\n                if (i > 0 && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n                if (i < test_str.Length - 1 && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] ==",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] ==",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                if (i > 0 && (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u')) {\n                    count++;\n                }\n                if (i < test_str.Length - 1 && (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u')) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i + 1]) || IsVowel(test_str[i - 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && \"aeiou\".Contains(test_str[i + 1])) {\n                count++;\n            } else if (i == test_str.Length - 1 && \"aeiou\".Contains(test_str[i - 1])) {\n                count++;\n            } else if (i > 0 && i < test_str.Length - 1 && \"aeiou\".Contains(test_str[i - 1]) && \"aeiou\".Contains(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && IsVowel(test_str[i + 1])) {\n                count++;\n            } else if (i == test_str.Length - 1 && IsVowel(test_str[i - 1])) {\n                count++;\n            } else if (IsVowel(test_str[i - 1]) && IsVowel(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] ==",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                if (i > 0 && (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u')) {\n                    count++;\n                }\n                if (i < test_str.Length - 1 && (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u')) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' ||",
    "        int count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && IsVowel(test_str[i + 1])) {\n                count++;\n            } else if (i == test_str.Length - 1 && IsVowel(test_str[i - 1])) {\n                count++;\n            } else if (IsVowel(test_str[i - 1]) && IsVowel(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                if (i > 0 && (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u')) {\n                    count++;\n                }\n                if (i < test_str.Length - 1 && (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u')) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && isVowel(test_str[i + 1])) {\n                count++;\n            } else if (i == test_str.Length - 1 && isVowel(test_str[i - 1])) {\n                count++;\n            } else if (isVowel(test_str[i - 1]) && isVowel(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && IsVowel(test_str[i + 1])) {\n                count++;\n            } else if (i == test_str.Length - 1 && IsVowel(test_str[i - 1])) {\n                count++;\n            } else if (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i > 0 && i < test_str.Length - 1) {\n                if (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == 0) {\n                if (IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (isVowel(test_str[i]) && isVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (isVowel(test_str[i]) && isVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (isVowel(test_str[i]) && (isVowel(test_str[i - 1]) || isVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i + 1]) || IsVowel(test_str[i - 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i + 1]) || IsVowel(test_str[i - 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                if (i > 0 && (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u')) {\n                    count++;\n                }\n                if (i < test_str.Length - 1 && (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u')) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && IsVowel(test_str[i + 1])) {\n                count++;\n            } else if (i == test_str.Length - 1 && IsVowel(test_str[i - 1])) {\n                count++;\n            } else if (IsVowel(test_str[i - 1]) && IsVowel(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        // Write your code here\n        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u')) {\n                count++;\n            } else if (i == test_str.Length - 1 && (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u')) {\n                count++;\n            } else if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                    count++;\n                }\n                if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i + 1]) && IsVowel(test_str[i])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i - 1]) && IsVowel(test_str[i])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i - 1]) && IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && IsVowel(test_str[i + 1])) {\n                count++;\n            } else if (i == test_str.Length - 1 && IsVowel(test_str[i - 1])) {\n                count++;\n            } else if (i > 0 && i < test_str.Length - 1 && IsVowel(test_str[i - 1]) && IsVowel(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] ==",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] ==",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        // Write your code here\n        // To print results to the standard output you can use Console.WriteLine()\n        // Example: Console.WriteLine(\"Hello world!\");\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && \"aeiou\".Contains(test_str[i + 1])) {\n                count++;\n            } else if (i == test_str.Length - 1 && \"aeiou\".Contains(test_str[i - 1])) {\n                count++;\n            } else if (i > 0 && i < test_str.Length - 1 && \"aeiou\".Contains(test_str[i - 1]) && \"aeiou\".Contains(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] ==",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                if (i > 0 && (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u')) {\n                    count++;\n                }\n                if (i < test_str.Length - 1 && (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u')) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && IsVowel(test_str[i + 1])) {\n                count++;\n            } else if (i == test_str.Length - 1 && IsVowel(test_str[i - 1])) {\n                count++;\n            } else if (IsVowel(test_str[i - 1]) && IsVowel(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] ==",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i + 1]) || IsVowel(test_str[i - 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && IsVowel(test_str[i + 1])) {\n                count++;\n            } else if (i == test_str.Length - 1 && IsVowel(test_str[i - 1])) {\n                count++;\n            } else if (IsVowel(test_str[i - 1]) && IsVowel(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u' || test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && IsVowel(test_str[i + 1])) {\n                count++;\n            } else if (i == test_str.Length - 1 && IsVowel(test_str[i - 1])) {\n                count++;\n            } else if (IsVowel(test_str[i - 1]) && IsVowel(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1]))\n                    count++;\n            }\n            else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1]))\n                    count++;\n            }\n            else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i + 1]) || IsVowel(test_str[i - 1])))\n                    count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i + 1]) || IsVowel(test_str[i - 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] ==",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                if (i > 0 && (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u')) {\n                    count++;\n                }\n                if (i < test_str.Length - 1 && (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u')) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                if (i > 0 && (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u')) {\n                    count++;\n                }\n                if (i < test_str.Length - 1 && (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u')) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                if (i == 0) {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                } else if (i == test_str.Length - 1) {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                } else {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u' || test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i > 0 && i < test_str.Length - 1) {\n                if (test_str[i] != 'a' && test_str[i] != 'e' && test_str[i] != 'i' && test_str[i] != 'o' && test_str[i] != 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                            count++;\n                        }\n                    }\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && IsVowel(test_str[i + 1])) {\n                count++;\n            } else if (i == test_str.Length - 1 && IsVowel(test_str[i - 1])) {\n                count++;\n            } else if (i > 0 && i < test_str.Length - 1 && IsVowel(test_str[i - 1]) && IsVowel(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i + 1]) || IsVowel(test_str[i - 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u' || test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && IsVowel(test_str[i + 1])) {\n                count++;\n            } else if (i == test_str.Length - 1 && IsVowel(test_str[i - 1])) {\n                count++;\n            } else if (IsVowel(test_str[i - 1]) && IsVowel(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] ==",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i + 1]) || IsVowel(test_str[i - 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                if (i > 0 && (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u')) {\n                    count++;\n                }\n                if (i < test_str.Length - 1 && (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u')) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] ==",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] ==",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u' || test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i > 0 && i < test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] ==",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i + 1]) && IsVowel(test_str[i])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i - 1]) && IsVowel(test_str[i])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i - 1]) && IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] ==",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] ==",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i + 1]) || IsVowel(test_str[i - 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && IsVowel(test_str[i + 1])) {\n                count++;\n            } else if (i == test_str.Length - 1 && IsVowel(test_str[i - 1])) {\n                count++;\n            } else if (IsVowel(test_str[i - 1]) && IsVowel(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                    count++;\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                    count++;\n                }\n            }\n            else {\n                if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u' ||\n                    test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i + 1]) || IsVowel(test_str[i - 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i + 1]) || IsVowel(test_str[i - 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] ==",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i + 1]) || IsVowel(test_str[i - 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                if (i > 0 && (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u')) {\n                    count++;\n                }\n                if (i < test_str.Length - 1 && (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u')) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i+1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i-1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i-1]) || IsVowel(test_str[i+1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (IsVowel(test_str[i])) {\n                if (i > 0 && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n                if (i < test_str.Length - 1 && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                if (i > 0) {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n                if (i < test_str.Length - 1) {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i + 1]) || IsVowel(test_str[i - 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && IsVowel(test_str[i + 1])) {\n                count++;\n            } else if (i == test_str.Length - 1 && IsVowel(test_str[i - 1])) {\n                count++;\n            } else if (IsVowel(test_str[i - 1]) && IsVowel(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] ==",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i + 1]) || IsVowel(test_str[test_str.Length - 1])) {\n                    count++;\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[0]) || IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            }\n            else {\n                if (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) || IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) || IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) || IsVowel(test_str[i + 1]) || IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i + 1]) && IsVowel(test_str[i])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i - 1]) && IsVowel(test_str[i])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i - 1]) && IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] ==",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i > 0 && i < test_str.Length - 1) {\n                if (IsVowel(test_str[i - 1]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i + 1]) || IsVowel(test_str[i - 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i > 0 && i < test_str.Length - 1) {\n                if (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            }\n            else if (i == 0 && IsVowel(test_str[i + 1])) {\n                count++;\n            }\n            else if (i == test_str.Length - 1 && IsVowel(test_str[i - 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        // Write your code here\n        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && IsVowel(test_str[i + 1])) {\n                count++;\n            } else if (i == test_str.Length - 1 && IsVowel(test_str[i - 1])) {\n                count++;\n            } else if (i > 0 && i < test_str.Length - 1 && IsVowel(test_str[i - 1]) && IsVowel(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i + 1]) || IsVowel(test_str[i - 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && IsVowel(test_str[i + 1])) {\n                count++;\n            } else if (i == test_str.Length - 1 && IsVowel(test_str[i - 1])) {\n                count++;\n            } else if (IsVowel(test_str[i - 1]) && IsVowel(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                if (i > 0 && (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u')) {\n                    count++;\n                }\n                if (i < test_str.Length - 1 && (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u')) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            } else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' ||",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (IsVowel(test_str[i])) {\n                if (i > 0 && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n                if (i < test_str.Length - 1 && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i + 1]) || IsVowel(test_str[i - 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                if (i > 0 && (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u')) {\n                    count++;\n                }\n                if (i < test_str.Length - 1 && (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u')) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && IsVowel(test_str[i + 1])) {\n                count++;\n            } else if (i == test_str.Length - 1 && IsVowel(test_str[i - 1])) {\n                count++;\n            } else if (IsVowel(test_str[i - 1]) && IsVowel(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i + 1]) || IsVowel(test_str[i - 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        var vowels = new HashSet<char>() { 'a', 'e', 'i', 'o', 'u' };\n        var count = 0;\n        for (int i = 0; i < test_str.Length - 1; i++) {\n            if (vowels.Contains(test_str[i]) && vowels.Contains(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;",
    "        // Your code goes here\n        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_str[i + 1] == 'i' || test_str[i + 1] == 'o' || test_str[i + 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else if (i == test_str.Length - 1) {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                }\n            }\n            else {\n                if (test_str[i] == 'a' || test_str[i] == 'e' || test_str[i] == 'i' || test_str[i] == 'o' || test_str[i] == 'u') {\n                    if (test_str[i - 1] == 'a' || test_str[i - 1] == 'e' || test_str[i - 1] == 'i' || test_str[i - 1] == 'o' || test_str[i - 1] == 'u') {\n                        count++;\n                    }\n                    if (test_str[i + 1] == 'a' || test_str[i + 1] == 'e' || test_",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i + 1]) || IsVowel(test_str[i - 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i + 1])) {\n                    count++;\n                }\n            } else if (i == test_str.Length - 1) {\n                if (IsVowel(test_str[i]) && IsVowel(test_str[i - 1])) {\n                    count++;\n                }\n            } else {\n                if (IsVowel(test_str[i]) && (IsVowel(test_str[i - 1]) || IsVowel(test_str[i + 1]))) {\n                    count++;\n                }\n            }\n        }\n        return count;",
    "        long count = 0;\n        for (int i = 0; i < test_str.Length; i++) {\n            if (i == 0 && IsVowel(test_str[i + 1])) {\n                count++;\n            } else if (i == test_str.Length - 1 && IsVowel(test_str[i - 1])) {\n                count++;\n            } else if (i > 0 && i < test_str.Length - 1 && IsVowel(test_str[i - 1]) && IsVowel(test_str[i + 1])) {\n                count++;\n            }\n        }\n        return count;"
  ]
}
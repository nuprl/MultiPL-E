{
  "name": "mbpp_759_is_decimal",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to check whether a given string is a decimal number with a precision of 2.\n    public static bool IsDecimal(string num) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_759_is_decimal.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsDecimal((\"123.11\")) == (true));\n    Debug.Assert(IsDecimal((\"e666.86\")) == (false));\n    Debug.Assert(IsDecimal((\"3.124587\")) == (false));\n    Debug.Assert(IsDecimal((\"1.11\")) == (true));\n    Debug.Assert(IsDecimal((\"1.1.11\")) == (false));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        int dotCount = 0;\n        for (int i = 0; i < num.Length; i++) {\n            if (num[i] == '.') {\n                dotCount++;\n            }\n            else if (num[i] < '0' || num[i] > '9') {\n                return false;\n            }\n        }\n        if (dotCount > 1) {\n            return false;\n        }\n        if (dotCount == 1) {\n            int dotIndex = num.IndexOf('.');\n            if (dotIndex == 0) {\n                return num.Length - dotIndex - 1 <= 2;\n            }\n            else if (dotIndex == num.Length - 1) {\n                return dotIndex <= 2;\n            }\n            else {\n                return dotIndex <= 2 && num.Length - dotIndex - 1 <= 2;\n            }\n        }\n        else {\n            return num.Length <= 2;\n        }",
    "        if (num.Length == 0) return false;\n        int dot = 0;\n        for (int i = 0; i < num.Length; i++) {\n            if (num[i] == '.') {\n                dot++;\n                if (dot > 1) return false;\n            }\n            else if (num[i] < '0' || num[i] > '9') return false;\n        }\n        if (dot == 0) return true;\n        if (num.Length - dot > 3) return false;\n        return true;",
    "        if (num.Length == 0) return false;\n        if (num[0] == '-') num = num.Substring(1);\n        if (num.Length == 0) return false;\n        int i = 0;\n        while (i < num.Length && num[i] != '.') {\n            if (!char.IsDigit(num[i])) return false;\n            i++;\n        }\n        if (i == num.Length) return true;\n        if (i == 0) return false;\n        if (i == num.Length - 1) return false;\n        if (num.Length - i > 3) return false;\n        i++;\n        while (i < num.Length) {\n            if (!char.IsDigit(num[i])) return false;\n            i++;\n        }\n        return true;",
    "        if (num.Length == 0) return false;\n        int i = 0;\n        if (num[0] == '-') i++;\n        int dot = -1;\n        for (; i < num.Length; i++) {\n            if (num[i] == '.') {\n                if (dot != -1) return false;\n                dot = i;\n            } else if (!char.IsDigit(num[i])) return false;\n        }\n        if (dot == -1) return true;\n        if (dot == num.Length - 1) return false;\n        return num.Length - dot - 1 <= 2;",
    "        if (num.Length == 0) return false;\n        int i = 0;\n        if (num[0] == '-') i++;\n        int dot = -1;\n        for (; i < num.Length; i++) {\n            if (num[i] == '.') {\n                if (dot != -1) return false;\n                dot = i;\n            } else if (!char.IsDigit(num[i])) {\n                return false;\n            }\n        }\n        if (dot == -1) return true;\n        if (dot + 3 < num.Length) return false;\n        return true;",
    "        if (num.Length == 0) return false;\n        bool hasDecimal = false;\n        int decimalIndex = -1;\n        for (int i = 0; i < num.Length; i++) {\n            if (num[i] == '.') {\n                if (hasDecimal) return false;\n                hasDecimal = true;\n                decimalIndex = i;\n            } else if (!char.IsDigit(num[i])) {\n                return false;\n            }\n        }\n        if (hasDecimal) {\n            if (decimalIndex + 3 < num.Length) return false;\n        }\n        return true;",
    "        if (num.Length == 0) return false;\n        int i = 0;\n        if (num[0] == '-') i++;\n        int count = 0;\n        for (; i < num.Length; i++) {\n            if (num[i] == '.') {\n                count++;\n                if (count > 1) return false;\n            } else if (!char.IsDigit(num[i])) {\n                return false;\n            }\n        }\n        if (count == 0) return true;\n        int index = num.IndexOf('.');\n        return num.Length - index - 1 <= 2;",
    "        if (num.Length == 0) return false;\n        if (num.Length == 1) return char.IsDigit(num[0]);\n        if (num[0] == '0') return false;\n        int dot = num.IndexOf('.');\n        if (dot == -1) return false;\n        if (dot == num.Length - 1) return false;\n        if (dot == 0) return false;\n        if (num[dot + 1] == '.') return false;\n        if (num[dot + 2] == '.') return false;\n        if (num[dot + 2] == '0') return false;\n        if (num[dot + 2] == '1') return false;\n        if (num[dot + 2] == '2') return false;\n        if (num[dot + 2] == '3') return false;\n        if (num[dot + 2] == '4') return false;\n        if (num[dot + 2] == '5') return false;\n        if (num[dot + 2] == '6') return false;\n        if (num[dot + 2] == '7') return false;\n        if (num[dot + 2] == '8') return false;\n        if (num[dot + 2] == '9') return false;\n        return true;",
    "        if (num.Length == 0) return false;\n        int i = 0;\n        if (num[0] == '-') i++;\n        int count = 0;\n        for (; i < num.Length; i++) {\n            if (num[i] == '.') {\n                count++;\n                if (count > 1) return false;\n            } else if (num[i] < '0' || num[i] > '9') {\n                return false;\n            }\n        }\n        if (count == 0) return true;\n        int j = num.Length - 1;\n        while (num[j] == '0') j--;\n        return j - i <= 2;",
    "        if (num.Length == 0) {\n            return false;\n        }\n        int i = 0;\n        if (num[0] == '-') {\n            i = 1;\n        }\n        int count = 0;\n        for (; i < num.Length; i++) {\n            if (num[i] == '.') {\n                count++;\n            }\n            if (count > 1) {\n                return false;\n            }\n            if (num[i] < '0' || num[i] > '9') {\n                return false;\n            }\n        }\n        return true;",
    "        if (num.Length == 0) return false;\n        int i = 0;\n        if (num[0] == '-') i++;\n        int count = 0;\n        for (; i < num.Length; i++) {\n            if (num[i] == '.') {\n                count++;\n                if (count > 1) return false;\n            } else if (!char.IsDigit(num[i])) {\n                return false;\n            }\n        }\n        if (count == 0) return false;\n        if (num.Length - num.IndexOf('.') - 1 > 2) return false;\n        return true;",
    "        try {\n            decimal.Parse(num);\n            return true;\n        } catch (Exception) {\n            return false;\n        }",
    "        try {\n            decimal.Parse(num);\n            return true;\n        } catch {\n            return false;\n        }",
    "        if (num.Length == 0)\n            return false;\n        int i = 0;\n        if (num[0] == '-')\n            i++;\n        int count = 0;\n        for (; i < num.Length; i++) {\n            if (num[i] == '.') {\n                count++;\n                if (count > 1)\n                    return false;\n            } else if (!char.IsDigit(num[i]))\n                return false;\n        }\n        if (count == 0)\n            return false;\n        string[] parts = num.Split('.');\n        if (parts[1].Length > 2)\n            return false;\n        return true;",
    "        if (num.Length == 0) return false;\n        int i = 0;\n        if (num[0] == '-') i++;\n        int count = 0;\n        for (; i < num.Length; i++) {\n            if (num[i] == '.') {\n                count++;\n                if (count > 1) return false;\n            } else if (!char.IsDigit(num[i])) {\n                return false;\n            }\n        }\n        if (count == 0) return true;\n        int index = num.IndexOf('.');\n        if (index == num.Length - 1) return false;\n        if (index == num.Length - 2) return true;\n        return false;",
    "        if (num.Length == 0) return false;\n        int i = 0;\n        if (num[0] == '-') i++;\n        int dot = -1;\n        for (; i < num.Length; i++) {\n            if (num[i] == '.') {\n                if (dot != -1) return false;\n                dot = i;\n            } else if (num[i] < '0' || num[i] > '9') {\n                return false;\n            }\n        }\n        if (dot == -1) return true;\n        if (dot == num.Length - 1) return false;\n        if (dot == num.Length - 2) return true;\n        return false;",
    "        var parts = num.Split('.');\n        if (parts.Length != 2) return false;\n        if (parts[0].Length == 0) return false;\n        if (parts[1].Length != 2) return false;\n        foreach (var c in parts[0]) {\n            if (c < '0' || c > '9') return false;\n        }\n        foreach (var c in parts[1]) {\n            if (c < '0' || c > '9') return false;\n        }\n        return true;",
    "        if (num.Length == 0) return false;\n        int i = 0;\n        if (num[0] == '-') i++;\n        int decimalPoint = -1;\n        for (; i < num.Length; i++) {\n            if (num[i] == '.') {\n                if (decimalPoint != -1) return false;\n                decimalPoint = i;\n            } else if (!char.IsDigit(num[i])) {\n                return false;\n            }\n        }\n        if (decimalPoint == -1) return true;\n        return num.Length - decimalPoint <= 3;",
    "        if (num.Length == 0) return false;\n        if (num.Length == 1) {\n            if (num[0] == '0') return true;\n            return false;\n        }\n        if (num[0] == '0') {\n            if (num[1] == '.') {\n                if (num.Length == 3) return true;\n                return false;\n            }\n            return false;\n        }\n        int dot = num.IndexOf('.');\n        if (dot == -1) return false;\n        if (dot == num.Length - 1) return false;\n        if (dot == num.Length - 2) return true;\n        return false;",
    "        if (num.Length == 0) return false;\n        int i = 0;\n        if (num[0] == '-') i++;\n        int count = 0;\n        for (; i < num.Length; i++) {\n            if (num[i] == '.') {\n                count++;\n                continue;\n            }\n            if (num[i] < '0' || num[i] > '9') return false;\n        }\n        return count <= 1;"
  ]
}
{
  "name": "mbpp_229_re_arrange_array",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function that takes in a list and an integer n, and re-arranges the first n elements of the given list so that all negative elements appear before positive ones, and where the relative order among negative and positive elements is preserved.\n    public static List<long> ReArrangeArray(List<long> arr, long n) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_229_re_arrange_array.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ReArrangeArray((new List<long>(new long[]{(long)-1L, (long)2L, (long)-3L, (long)4L, (long)5L, (long)6L, (long)-7L, (long)8L, (long)9L})), (9L)).Equals((new List<long>(new long[]{(long)-1L, (long)-3L, (long)-7L, (long)4L, (long)5L, (long)6L, (long)2L, (long)8L, (long)9L}))));\n    Debug.Assert(ReArrangeArray((new List<long>(new long[]{(long)12L, (long)-14L, (long)-26L, (long)13L, (long)15L})), (5L)).Equals((new List<long>(new long[]{(long)-14L, (long)-26L, (long)12L, (long)13L, (long)15L}))));\n    Debug.Assert(ReArrangeArray((new List<long>(new long[]{(long)10L, (long)24L, (long)36L, (long)-42L, (long)-39L, (long)-78L, (long)85L})), (7L)).Equals((new List<long>(new long[]{(long)-42L, (long)-39L, (long)-78L, (long)10L, (long)24L, (long)36L, (long)85L}))));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        // Write your code here.\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        int i = 0;\n        int j = (int)n - 1;\n        while (i < j) {\n            while (arr[i] < 0 && i < j) {\n                i++;\n            }\n            while (arr[j] >= 0 && i < j) {\n                j--;\n            }\n            if (i < j) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n        return arr;",
    "        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        int i = 0;\n        int j = (int)n - 1;\n        while (i < j) {\n            while (arr[i] < 0) {\n                i++;\n            }\n            while (arr[j] >= 0) {\n                j--;\n            }\n            if (i < j) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n            }\n        }\n        return arr;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        // return arr;\n        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here\n        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        long[] temp = new long[n];\n        int j = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                temp[j] = arr[i];\n                j++;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                temp[j] = arr[i];\n                j++;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            arr[i] = temp[i];\n        }\n        return arr;",
    "        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        for (int i = 0; i < n; i++) {\n            result.Add(negative[i]);\n        }\n        return result;",
    "        // Write your code here\n        var result = new List<long>();\n        var positives = new List<long>();\n        var negatives = new List<long>();\n        for (var i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negatives.Add(arr[i]);\n            } else {\n                positives.Add(arr[i]);\n            }\n        }\n        result.AddRange(negatives);\n        result.AddRange(positives);\n        return result;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (long i = 0; i < n; i++) {\n            if (arr[(int)i] < 0) {\n                negative.Add(arr[(int)i]);\n            } else {\n                positive.Add(arr[(int)i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = 0; i < n; i++) {\n            if (arr[(int)i] < 0) {\n                result.Add(arr[(int)i]);\n            }\n        }\n        for (long i = 0; i < n; i++) {\n            if (arr[(int)i] >= 0) {\n                result.Add(arr[(int)i]);\n            }\n        }\n        return result;",
    "        // Write your code here\n        long[] arr1 = arr.ToArray();\n        long[] arr2 = new long[n];\n        long[] arr3 = new long[arr.Count - n];\n        long[] arr4 = new long[arr.Count];\n        long[] arr5 = new long[arr.Count];\n        long[] arr6 = new long[arr.Count];\n        long[] arr7 = new long[arr.Count];\n        long[] arr8 = new long[arr.Count];\n        long[] arr9 = new long[arr.Count];\n        long[] arr10 = new long[arr.Count];\n        long[] arr11 = new long[arr.Count];\n        long[] arr12 = new long[arr.Count];\n        long[] arr13 = new long[arr.Count];\n        long[] arr14 = new long[arr.Count];\n        long[] arr15 = new long[arr.Count];\n        long[] arr16 = new long[arr.Count];\n        long[] arr17 = new long[arr.Count];\n        long[] arr18 = new long[arr.Count];\n        long[] arr19 = new long[arr.Count];\n        long[] arr20 = new long[arr.Count];\n        long[] arr21 = new long[arr.Count];\n        long[] arr22 = new long[arr.Count];\n        long[] arr23 = new long[arr.Count];\n        long[] arr24 = new long[arr.Count];\n        long[] arr25 = new long[arr.Count];\n        long[] arr26 = new long[arr.Count];\n        long[] arr27 = new long[arr.Count];\n        long[] arr28 = new long[arr.Count];\n        long[] arr29 = new long[arr.Count];\n        long[] arr30 = new long[arr.Count];\n        long[] arr31 = new long[arr.Count];\n        long[] arr32 = new long[arr.Count];\n        long[] arr33 = new long[arr.Count];\n        long[] arr34 = new long[arr.Count];\n        long[] arr35 = new long[arr.Count];\n        long[] arr36 = new long[arr.Count];\n        long",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> pos = new List<long>();\n        List<long> neg = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                neg.Add(arr[i]);\n            } else {\n                pos.Add(arr[i]);\n            }\n        }\n        result.AddRange(neg);\n        result.AddRange(pos);\n        return result;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for(int i = 0; i < n; i++) {\n            if(arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        int i = 0;\n        int j = 0;\n        while (i < n) {\n            if (arr[i] < 0) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n                j++;\n            }\n            i++;\n        }\n        return arr;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        List<long> negatives = new List<long>();\n        List<long> positives = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negatives.Add(arr[i]);\n            } else {\n                positives.Add(arr[i]);\n            }\n        }\n        List<long> result = new List<long>();\n        result.AddRange(negatives);\n        result.AddRange(positives);\n        return result;",
    "        // Write your code here\n        List<long> result = new List<long>();\n        for (long i = 0; i < n; i++) {\n            if (arr[(int)i] < 0) {\n                result.Add(arr[(int)i]);\n            }\n        }\n        for (long i = 0; i < n; i++) {\n            if (arr[(int)i] >= 0) {\n                result.Add(arr[(int)i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        var negative = arr.Take((int)n).Where(x => x < 0).ToList();\n        var positive = arr.Take((int)n).Where(x => x >= 0).ToList();\n        return negative.Concat(positive).ToList();",
    "        // Write your code here\n        return arr;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for(int i = 0; i < n; i++) {\n            if(arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        int i = 0;\n        int j = 0;\n        while (i < n) {\n            if (arr[i] < 0) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n                j++;\n            }\n            i++;\n        }\n        return arr;",
    "        // Write your code here.\n        var negative = new List<long>();\n        var positive = new List<long>();\n        for (var i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        var result = new List<long>();\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        return arr;",
    "        // Write your code here\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here\n        return arr;",
    "        // Write your code here\n        List<long> neg = new List<long>();\n        List<long> pos = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                neg.Add(arr[i]);\n            } else {\n                pos.Add(arr[i]);\n            }\n        }\n        neg.AddRange(pos);\n        return neg;",
    "        // Write your code here.\n        long[] temp = new long[n];\n        for (int i = 0; i < n; i++) {\n            temp[i] = arr[i];\n        }\n        int j = 0;\n        for (int i = 0; i < n; i++) {\n            if (temp[i] < 0) {\n                arr[j] = temp[i];\n                j++;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (temp[i] >= 0) {\n                arr[j] = temp[i];\n                j++;\n            }\n        }\n        return arr;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for(int i = 0; i < n; i++) {\n            if(arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        for(int i = 0; i < n; i++) {\n            result.Add(negative[i]);\n        }\n        return result;",
    "        var neg = arr.Take((int)n).Where(x => x < 0).ToList();\n        var pos = arr.Take((int)n).Where(x => x >= 0).ToList();\n        return neg.Concat(pos).ToList();",
    "        // Write your code here.\n        return arr;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here\n        var result = new List<long>();\n        var positive = new List<long>();\n        var negative = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        int i = 0;\n        int j = 0;\n        while (i < n) {\n            if (arr[i] < 0) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n                j++;\n            }\n            i++;\n        }\n        return arr;",
    "        // Write your code here.\n        List<long> neg = new List<long>();\n        List<long> pos = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                neg.Add(arr[i]);\n            } else {\n                pos.Add(arr[i]);\n            }\n        }\n        neg.AddRange(pos);\n        return neg;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        long[] result = new long[arr.Count];\n        long j = 0;\n        for (long i = 0; i < n; i++) {\n            if (arr[(int)i] < 0) {\n                result[(int)j] = arr[(int)i];\n                j++;\n            }\n        }\n        for (long i = 0; i < n; i++) {\n            if (arr[(int)i] >= 0) {\n                result[(int)j] = arr[(int)i];\n                j++;\n            }\n        }\n        return result.ToList();",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        int i = 0;\n        int j = 0;\n        while (i < n) {\n            if (arr[i] < 0) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n                j++;\n            }\n            i++;\n        }\n        return arr;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                positive.Add(arr[i]);\n            } else {\n                negative.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        for (int i = 0; i < n; i++) {\n            result.Add(negative[i]);\n        }\n        for (int i = (int)n; i < arr.Count; i++) {\n            result.Add(arr[i]);\n        }\n        return result;",
    "        // Write your code here.\n        return arr;",
    "        // Write your code here.\n        int i = 0;\n        int j = 0;\n        while (i < n) {\n            if (arr[i] < 0) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n                j++;\n            }\n            i++;\n        }\n        return arr;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here\n        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        int i = 0;\n        int j = 0;\n        while (j < n) {\n            if (arr[j] < 0) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n                i++;\n            }\n            j++;\n        }\n        return arr;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here\n        return arr;",
    "        List<long> neg = new List<long>();\n        List<long> pos = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                neg.Add(arr[i]);\n            } else {\n                pos.Add(arr[i]);\n            }\n        }\n        neg.AddRange(pos);\n        return neg;",
    "        // Write your code here\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (long i = 0; i < n; i++) {\n            if (arr[(int)i] < 0) {\n                negative.Add(arr[(int)i]);\n            } else {\n                positive.Add(arr[(int)i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        List<long> negatives = new List<long>();\n        List<long> positives = new List<long>();\n        for (long i = 0; i < n; i++) {\n            if (arr[(int)i] < 0) {\n                negatives.Add(arr[(int)i]);\n            } else {\n                positives.Add(arr[(int)i]);\n            }\n        }\n        negatives.AddRange(positives);\n        return negatives;",
    "        List<long> neg = new List<long>();\n        List<long> pos = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                neg.Add(arr[i]);\n            } else {\n                pos.Add(arr[i]);\n            }\n        }\n        neg.AddRange(pos);\n        return neg;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here\n        List<long> neg = new List<long>();\n        List<long> pos = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                neg.Add(arr[i]);\n            } else {\n                pos.Add(arr[i]);\n            }\n        }\n        neg.AddRange(pos);\n        return neg;",
    "        // Write your code here\n        return arr;",
    "        // Write your code here.\n        List<long> neg = new List<long>();\n        List<long> pos = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                neg.Add(arr[i]);\n            } else {\n                pos.Add(arr[i]);\n            }\n        }\n        neg.AddRange(pos);\n        return neg;",
    "        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for (long i = 0; i < n; i++) {\n            if (arr[(int)i] < 0) {\n                negative.Add(arr[(int)i]);\n            } else {\n                positive.Add(arr[(int)i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        return arr;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for (long i = 0; i < n; i++) {\n            if (arr[(int)i] < 0) {\n                negative.Add(arr[(int)i]);\n            } else {\n                positive.Add(arr[(int)i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here\n        long[] arr1 = new long[n];\n        long[] arr2 = new long[arr.Count - n];\n        long[] arr3 = new long[arr.Count];\n        long j = 0;\n        long k = 0;\n        for (long i = 0; i < arr.Count; i++) {\n            if (i < n) {\n                arr1[i] = arr[i];\n            } else {\n                arr2[j] = arr[i];\n                j++;\n            }\n        }\n        for (long i = 0; i < arr1.Length; i++) {\n            if (arr1[i] < 0) {\n                arr3[k] = arr1[i];\n                k++;\n            }\n        }\n        for (long i = 0; i < arr1.Length; i++) {\n            if (arr1[i] >= 0) {\n                arr3[k] = arr1[i];\n                k++;\n            }\n        }\n        for (long i = 0; i < arr2.Length; i++) {\n            arr3[k] = arr2[i];\n            k++;\n        }\n        return arr3.ToList();",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        List<long> neg = new List<long>();\n        List<long> pos = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                neg.Add(arr[i]);\n            } else {\n                pos.Add(arr[i]);\n            }\n        }\n        neg.AddRange(pos);\n        return neg;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        long[] arr1 = arr.ToArray();\n        long[] arr2 = new long[arr1.Length];\n        int j = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr1[i] < 0) {\n                arr2[j] = arr1[i];\n                j++;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr1[i] >= 0) {\n                arr2[j] = arr1[i];\n                j++;\n            }\n        }\n        return arr2.ToList();",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        return arr;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        return arr;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for(int i = 0; i < n; i++) {\n            if(arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here\n        return arr;",
    "        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for (long i = 0; i < n; i++) {\n            if (arr[(int)i] < 0) {\n                negative.Add(arr[(int)i]);\n            } else {\n                positive.Add(arr[(int)i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here\n        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        for (int i = 0; i < n; i++) {\n            result.Add(negative[i]);\n        }\n        for (int i = n; i < arr.Count; i++) {\n            result.Add(arr[i]);\n        }\n        return result;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for(int i = 0; i < n; i++) {\n            if(arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        return new List<long>();",
    "        // Write your code here.\n        return arr;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        List<long> result = new List<long>();\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (long i = 0; i < n; i++) {\n            if (arr[(int)i] < 0) {\n                negative.Add(arr[(int)i]);\n            } else {\n                positive.Add(arr[(int)i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        return arr;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        for(int i = 0; i < n; i++) {\n            if(arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for(int i = 0; i < n; i++) {\n            if(arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        List<long> result = new List<long>();\n        for (long i = 0; i < n; i++) {\n            if (arr[(int)i] < 0) {\n                result.Add(arr[(int)i]);\n            }\n        }\n        for (long i = 0; i < n; i++) {\n            if (arr[(int)i] >= 0) {\n                result.Add(arr[(int)i]);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        List<long> neg = new List<long>();\n        List<long> pos = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                neg.Add(arr[i]);\n            } else {\n                pos.Add(arr[i]);\n            }\n        }\n        neg.AddRange(pos);\n        return neg;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        var negative = new List<long>();\n        var positive = new List<long>();\n        for (var i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        var result = new List<long>();\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        long[] result = new long[arr.Count];\n        int i = 0;\n        int j = arr.Count - 1;\n        foreach (long num in arr) {\n            if (num < 0) {\n                result[i] = num;\n                i++;\n            } else {\n                result[j] = num;\n                j--;\n            }\n        }\n        return result.ToList();",
    "        // Write your code here\n        var result = new List<long>();\n        var negative = new List<long>();\n        var positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        List<long> neg = new List<long>();\n        List<long> pos = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                neg.Add(arr[i]);\n            } else {\n                pos.Add(arr[i]);\n            }\n        }\n        neg.AddRange(pos);\n        return neg;",
    "        // Write your code here.\n        int i = 0;\n        int j = 0;\n        while (i < n) {\n            if (arr[i] < 0) {\n                var temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n                j++;\n            }\n            i++;\n        }\n        return arr;",
    "        // Write your code here.\n        int i = 0;\n        int j = 0;\n        while (i < arr.Count && j < n) {\n            if (arr[i] < 0) {\n                long temp = arr[i];\n                arr.RemoveAt(i);\n                arr.Insert(j, temp);\n                j++;\n            } else {\n                i++;\n            }\n        }\n        return arr;",
    "        // Write your code here.\n        var negative = arr.Take((int)n).Where(x => x < 0).ToList();\n        var positive = arr.Take((int)n).Where(x => x >= 0).ToList();\n        var result = new List<long>();\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        var left = 0;\n        var right = n - 1;\n        while (left < right) {\n            while (arr[left] < 0 && left < right) {\n                left++;\n            }\n            while (arr[right] >= 0 && left < right) {\n                right--;\n            }\n            if (left < right) {\n                var temp = arr[left];\n                arr[left] = arr[right];\n                arr[right] = temp;\n                left++;\n                right--;\n            }\n        }\n        return arr;",
    "        // Write your code here.\n        List<long> neg = new List<long>();\n        List<long> pos = new List<long>();\n        for(int i = 0; i < n; i++) {\n            if(arr[i] < 0) {\n                neg.Add(arr[i]);\n            } else {\n                pos.Add(arr[i]);\n            }\n        }\n        neg.AddRange(pos);\n        return neg;",
    "        // Write your code here.\n        List<long> negatives = new List<long>();\n        List<long> positives = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negatives.Add(arr[i]);\n            } else {\n                positives.Add(arr[i]);\n            }\n        }\n        negatives.AddRange(positives);\n        return negatives;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here\n        long[] a = new long[n];\n        int i = 0;\n        int j = 0;\n        int k = 0;\n        while(i < n) {\n            if(arr[i] < 0) {\n                a[j] = arr[i];\n                j++;\n            } else {\n                a[n-1-k] = arr[i];\n                k++;\n            }\n            i++;\n        }\n        return a.ToList();",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        for (long i = 0; i < n; i++) {\n            if (arr[(int)i] < 0) {\n                result.Add(arr[(int)i]);\n            }\n        }\n        for (long i = 0; i < n; i++) {\n            if (arr[(int)i] >= 0) {\n                result.Add(arr[(int)i]);\n            }\n        }\n        return result;",
    "        // Write your code here\n        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        return arr;",
    "        // Write your code here\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (long i = 0; i < n; i++) {\n            if (arr[(int)i] < 0) {\n                result.Add(arr[(int)i]);\n            }\n        }\n        for (long i = 0; i < n; i++) {\n            if (arr[(int)i] >= 0) {\n                result.Add(arr[(int)i]);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                positive.Add(arr[i]);\n            } else {\n                negative.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here\n        List<long> res = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                res.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                res.Add(arr[i]);\n            }\n        }\n        return res;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here\n        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        return arr;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here\n        return arr;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here.\n        int i = 0;\n        int j = 0;\n        while (j < n) {\n            if (arr[j] < 0) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n                i++;\n            }\n            j++;\n        }\n        return arr;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        return negative;",
    "        // Write your code here\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        var neg = arr.Where(x => x < 0).ToList();\n        var pos = arr.Where(x => x >= 0).ToList();\n        var res = new List<long>();\n        res.AddRange(neg);\n        res.AddRange(pos);\n        return res;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        for (int i = 0; i < n; i++) {\n            result.Add(negative[i]);\n        }\n        for (int i = (int)n; i < arr.Count; i++) {\n            result.Add(arr[i]);\n        }\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        for (int i = 0; i < n; i++) {\n            result.Add(negative[i]);\n        }\n        for (int i = n; i < arr.Count; i++) {\n            result.Add(arr[i]);\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        for (int i = 0; i < n; i++) {\n            result.Add(negative[i]);\n        }\n        for (int i = n; i < arr.Count; i++) {\n            result.Add(arr[i]);\n        }\n        return result;",
    "        // Write your code here.\n        List<long> neg = new List<long>();\n        List<long> pos = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                neg.Add(arr[i]);\n            } else {\n                pos.Add(arr[i]);\n            }\n        }\n        neg.AddRange(pos);\n        return neg;",
    "        int i = 0;\n        int j = 0;\n        while (i < n) {\n            if (arr[i] < 0) {\n                long temp = arr[i];\n                arr[i] = arr[j];\n                arr[j] = temp;\n                j++;\n            }\n            i++;\n        }\n        return arr;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        long[] temp = new long[n];\n        int j = 0;\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                temp[j] = arr[i];\n                j++;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                temp[j] = arr[i];\n                j++;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            arr[i] = temp[i];\n        }\n        return arr;",
    "        List<long> result = new List<long>();\n        List<long> negative = new List<long>();\n        List<long> positive = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        negative.AddRange(positive);\n        for (int i = 0; i < n; i++) {\n            result.Add(negative[i]);\n        }\n        for (int i = n; i < arr.Count; i++) {\n            result.Add(arr[i]);\n        }\n        return result;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        for(int i = 0; i < n; i++) {\n            if(arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for(int i = 0; i < n; i++) {\n            if(arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        List<long> result = new List<long>();\n        List<long> positive = new List<long>();\n        List<long> negative = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                negative.Add(arr[i]);\n            } else {\n                positive.Add(arr[i]);\n            }\n        }\n        result.AddRange(negative);\n        result.AddRange(positive);\n        return result;",
    "        // Write your code here.\n        List<long> neg = new List<long>();\n        List<long> pos = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                neg.Add(arr[i]);\n            } else {\n                pos.Add(arr[i]);\n            }\n        }\n        neg.AddRange(pos);\n        return neg;",
    "        // Write your code here.\n        List<long> neg = new List<long>();\n        List<long> pos = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                neg.Add(arr[i]);\n            } else {\n                pos.Add(arr[i]);\n            }\n        }\n        neg.AddRange(pos);\n        return neg;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;",
    "        // Write your code here.\n        List<long> neg = new List<long>();\n        List<long> pos = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                neg.Add(arr[i]);\n            } else {\n                pos.Add(arr[i]);\n            }\n        }\n        neg.AddRange(pos);\n        return neg;",
    "        // Write your code here.\n        List<long> result = new List<long>();\n        for (int i = 0; i < n; i++) {\n            if (arr[i] < 0) {\n                result.Add(arr[i]);\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            if (arr[i] >= 0) {\n                result.Add(arr[i]);\n            }\n        }\n        return result;"
  ]
}
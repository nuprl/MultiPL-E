{
  "name": "mbpp_746_sector_area",
  "language": "cs",
  "prompt": "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass Problem {\n    // Write a function to find area of a sector. The function takes the radius and angle as inputs. Function should return null if the angle is larger than 360 degrees.\n    public static Nullable<float> SectorArea(long r, long a) {\n",
  "doctests": "transform",
  "original": "/home/arjun/repos/MultiPL-E/datasets/../datasets/mbpp-typed/mbpp_746_sector_area.py",
  "prompt_terminology": "reworded",
  "tests": "    }\n    public static void Main(string[] args) {\n    Debug.Assert(SectorArea((4L), (45L)).Equals(6.283185307179586f));\n    Debug.Assert(SectorArea((9L), (45L)).Equals(31.808625617596654f));\n    Debug.Assert(SectorArea((9L), (361L)).Equals(null));\n    }\n\n}\n",
  "stop_tokens": [
    "\n    }\n"
  ],
  "completions": [
    "        if (a > 360) {\n            return null;\n        }\n        return (float) (Math.PI * r * r * a / 360);",
    "        if (a > 360) {\n            return null;\n        }\n        return (float) (0.5 * r * r * a);",
    "        if (a > 360) {\n            return null;\n        }\n        return (float)((a / 360.0) * Math.PI * r * r);",
    "        if (a > 360) {\n            return null;\n        }\n        return (float)((a / 360.0) * Math.PI * r * r);",
    "        if (a > 360) {\n            return null;\n        }\n        return (float) (Math.PI * Math.Pow(r, 2) * (a / 360));",
    "        if (a > 360) {\n            return null;\n        }\n        return (float)(0.5 * r * r * a);",
    "        if (a > 360) return null;\n        return (float)Math.PI * r * r * a / 360;",
    "        if (a > 360) {\n            return null;\n        }\n        return (float)((a / 360.0) * Math.PI * r * r);",
    "        if (a > 360) {\n            return null;\n        }\n        return (float)((Math.PI * r * r * a) / 360);",
    "        if (a > 360) {\n            return null;\n        }\n        return (float)((a / 360.0) * Math.PI * r * r);",
    "        if (a > 360) {\n            return null;\n        }\n        return (float)((a / 360.0) * Math.PI * r * r);",
    "        if (a > 360) {\n            return null;\n        }\n        return (float)((a / 360.0) * Math.PI * r * r);",
    "        if (a > 360) {\n            return null;\n        }\n        return (float)(Math.PI * r * r * a / 360);",
    "        if (a > 360) {\n            return null;\n        }\n        return (float)(Math.PI * r * r * a / 360);",
    "        if (a > 360) {\n            return null;\n        }\n        return (float)((a / 360.0) * Math.PI * r * r);",
    "        if (a > 360) {\n            return null;\n        }\n        return (float)((a / 360.0) * Math.PI * r * r);",
    "        if (a > 360) {\n            return null;\n        }\n        return (float)((a / 360.0) * Math.PI * r * r);",
    "        if (a > 360) {\n            return null;\n        }\n        return (float)(Math.PI * r * r * a / 360);",
    "        if (a > 360) {\n            return null;\n        }\n        return (float) (0.5 * r * r * a * Math.PI / 180);",
    "        if (a > 360) {\n            return null;\n        }\n        return (float)((Math.PI * r * r * a) / 360);"
  ]
}
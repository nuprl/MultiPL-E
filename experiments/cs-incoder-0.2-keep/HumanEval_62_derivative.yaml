name: HumanEval_62_derivative
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // xs represent coefficients of a polynomial.\n    // xs[0] + xs[1]\
  \ * x + xs[2] * x^2 + ....\n    // Return derivative of this polynomial in the same\
  \ form.\n    // >>> derivative([3, 1, 2, 4, 5])\n    // [1, 4, 12, 20]\n    // >>>\
  \ derivative([1, 2, 3])\n    // [2, 6]\n    public static List<long> Derivative(List<long>\
  \ xs) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Derivative((new\
  \ List<long>(new long[]{(long)3L, (long)1L, (long)2L, (long)4L, (long)5L}))).Equals((new\
  \ List<long>(new long[]{(long)1L, (long)4L, (long)12L, (long)20L}))));\n    Debug.Assert(Derivative((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))).Equals((new List<long>(new\
  \ long[]{(long)2L, (long)6L}))));\n    Debug.Assert(Derivative((new List<long>(new\
  \ long[]{(long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new long[]{(long)2L,\
  \ (long)2L}))));\n    Debug.Assert(Derivative((new List<long>(new long[]{(long)3L,\
  \ (long)2L, (long)1L, (long)0L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
  \ (long)2L, (long)0L, (long)16L}))));\n    Debug.Assert(Derivative((new List<long>(new\
  \ long[]{(long)1L}))).Equals((new List<long>())));\n    }\n\n}\n"
completions: ["        List<long> result = new List<long>();\n        long x = 0;\n\
    \        long y = 0;\n        long d = 0;\n        for (int i = 0; i < xs.Count;\
    \ i++) {\n            x += xs[i];\n            y += xs[i] * x;\n            d\
    \ += xs[i] * xs[i];\n        }\n        result.Add(d);\n        for (int i = 0;\
    \ i < xs.Count; i++) {\n            x -= xs[i];\n            y -= xs[i] * x;\n\
    \            d -= xs[i] * xs[i];\n        }\n        result.Add(d);\n        return\
    \ result;", "        List<long> derivative = new List<long>();\n        derivative.Add(0);\n\
    \        foreach (long x in xs) {\n            derivative.Add(derivative[derivative.Count\
    \ - 1] * x);\n        }\n        return derivative;", "        List<long> result\
    \ = new List<long>();\n        long x = 0;\n        long y = 0;\n        long\
    \ sum = 0;\n        foreach (long i in xs) {\n            sum += i;\n        }\n\
    \        long pow = 1;\n        while (sum > 0) {\n            pow *= x;\n   \
    \         sum += pow / sum;\n            result.Add(pow);\n            x ++;\n\
    \        }\n        return result;", "        List<long> derivative = new List<long>();\n\
    \        derivative.Add(0);\n        derivative.Add((long)1);\n        foreach\
    \ (long x in xs) {\n            derivative.Add(derivative[derivative.Count - 1]\
    \ * x);\n        }\n        return derivative;", "        List<long> result =\
    \ new List<long>();\n        long x = 0;\n        long sum = 0;\n        foreach\
    \ (long n in xs) {\n            sum += n * x;\n            x++;\n        }\n \
    \       result.Add(sum);\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long x = 0;\n        long xsq = 0;\n        long\
    \ xsq2 = 0;\n        long xsq3 = 0;\n        long xsq4 = 0;\n        long xsq5\
    \ = 0;\n        long xsq6 = 0;\n        long xsq7 = 0;\n        long xsq8 = 0;\n\
    \        long xsq9 = 0;\n        long xsq10 = 0;\n        long xsq11 = 0;\n  \
    \      long xsq12 = 0;\n        long xsq13 = 0;\n        long xsq14 = 0;\n   \
    \     long xsq15 = 0;\n        long xsq16 = 0;\n        long xsq17 = 0;\n    \
    \    long xsq18 = 0;\n        long xsq19 = 0;\n        long xsq20 = 0;\n     \
    \   long xsq21 = 0;\n        long xsq22 = 0;\n        long xsq23 = 0;\n      \
    \  long xsq24 = 0;\n        long xsq25 = 0;\n        long xsq26 = 0;\n       \
    \ long xsq27 = 0;\n        long xsq28 = 0;\n        long xsq29 = 0;\n        long\
    \ xsq30 = 0;\n        long xsq31 = 0;\n        long xsq32 = 0;\n        long xsq33\
    \ = 0;\n        long xsq34 = 0;\n        long xsq35 = 0;\n        long xsq36 =\
    \ 0;\n        long xsq37 = 0;\n        long xsq38 = 0;\n        long xsq39 = 0;\n\
    \        long xsq40 = 0;\n        long xsq41 = 0;\n        long xsq42 = 0;\n \
    \       long xsq43 = 0;\n        long xsq44 = 0;\n        long xsq45 = 0;\n  \
    \      long xsq46 = 0;\n        long xsq47 = 0;\n        long xsq48 = 0;\n   \
    \     long xsq49 = 0;\n        long xsq50 = 0;\n        long xsq51 = 0;\n    \
    \    long xsq52 = 0;\n        long xsq53 = 0;\n        long xsq54 = 0;\n     \
    \   long xsq55 = 0;\n        long xsq56 = 0;\n        long xsq57 = 0;\n      \
    \  long xsq58 = 0;\n        long xsq59 = 0;\n        long xsq60 = 0;\n       \
    \ long xsq61 = 0;\n        long xsq62 = 0;\n        long xsq63 = 0;\n        long\
    \ xsq64 = 0;\n        long xsq65 = 0;\n        long xsq66 = 0;\n        long xsq67\
    \ = 0;\n        long xsq68 = 0;\n        long xsq69 = 0;\n        long xsq70 =\
    \ 0;\n        long xsq71 = 0;\n        long xsq72", "        List<long> result\
    \ = new List<long>();\n        long x = 1;\n        long y = 1;\n        long\
    \ z = 1;\n        foreach (long i in xs) {\n            y *= i;\n        }\n \
    \       long a = 1;\n        long b = 1;\n        long c = 1;\n        long d\
    \ = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n      \
    \  long h = 1;\n        long i = 1;\n        long j = 1;\n        long k = 1;\n\
    \        long l = 1;\n        long m = 1;\n        long n = 1;\n        long o\
    \ = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n      \
    \  long s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n\
    \        long w = 1;\n        long x = 1;\n        long y = 1;\n        long z\
    \ = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n      \
    \  long d = 1;\n        long e = 1;\n        long f = 1;\n        long g = 1;\n\
    \        long h = 1;\n        long i = 1;\n        long j = 1;\n        long k\
    \ = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n      \
    \  long o = 1;\n        long p = 1;\n        long q = 1;\n        long r = 1;\n\
    \        long s = 1;\n        long t = 1;\n        long u = 1;\n        long v\
    \ = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n      \
    \  long z = 1;\n        long a = 1;\n        long b = 1;\n        long c = 1;\n\
    \        long d = 1;\n        long e = 1;\n        long f = 1;\n        long g\
    \ = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n      \
    \  long k = 1;\n        long l = 1;\n        long m = 1;\n        long n = 1;\n\
    \        long o = 1;\n        long p = 1;\n        long q = 1;\n        long r\
    \ = 1;\n        long s = 1;\n        long t = 1;\n        long u = 1;\n      \
    \  long v = 1;\n        long w = 1;\n        long x = 1;\n        long y = 1;\n\
    \        long z = 1;\n        long a = 1;\n        long b = 1;\n        long c\
    \ = 1;\n        long d = 1;\n        long e = 1;\n        long f = 1;\n      \
    \  long g = 1;\n        long h = 1;\n        long i = 1;\n        long j = 1;\n\
    \        long k = 1;\n        long l = 1;\n        long m = 1;\n        long n\
    \ = 1;\n        long o = 1;\n        long p = 1;\n        long q", "        List<long>\
    \ result = new List<long>();\n        long x = 0;\n        long y = 0;\n     \
    \   long sum = 0;\n        foreach (long n in xs) {\n            sum += n;\n \
    \       }\n        long pow = 1;\n        while (pow < sum) {\n            pow\
    \ *= x;\n        }\n        for (int i = 0; i < xs.Count; i++) {\n           \
    \ long n = (long)Math.Pow(x, i);\n            result.Add(n);\n            x -=\
    \ n;\n        }\n        return result;", "        List<long> derivative = new\
    \ List<long>();\n        long x = 0;\n        long y = 0;\n        long z = 0;\n\
    \        long d = 0;\n        long e = 0;\n        long f = 0;\n        long g\
    \ = 0;\n        long h = 0;\n        long i = 0;\n        long j = 0;\n      \
    \  long k = 0;\n        long l = 0;\n        long m = 0;\n        long n = 0;\n\
    \        long o = 0;\n        long p = 0;\n        long q = 0;\n        long r\
    \ = 0;\n        long s = 0;\n        long t = 0;\n        long u = 0;\n      \
    \  long v = 0;\n        long w = 0;\n        long x = 0;\n        long y = 0;\n\
    \        long z = 0;\n        long d = 0;\n        long e = 0;\n        long f\
    \ = 0;\n        long g = 0;\n        long h = 0;\n        long i = 0;\n      \
    \  long j = 0;\n        long k = 0;\n        long l = 0;\n        long m = 0;\n\
    \        long n = 0;\n        long o = 0;\n        long p = 0;\n        long q\
    \ = 0;\n        long r = 0;\n        long s = 0;\n        long t = 0;\n      \
    \  long u = 0;\n        long v = 0;\n        long w = 0;\n        long x = 0;\n\
    \        long y = 0;\n        long z = 0;\n        long d = 0;\n        long e\
    \ = 0;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n      \
    \  long i = 0;\n        long j = 0;\n        long k = 0;\n        long l = 0;\n\
    \        long m = 0;\n        long n = 0;\n        long o = 0;\n        long p\
    \ = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n      \
    \  long t = 0;\n        long u = 0;\n        long v = 0;\n        long w = 0;\n\
    \        long x = 0;\n        long y = 0;\n        long z = 0;\n        long d\
    \ = 0;\n        long e = 0;\n        long f = 0;\n        long g = 0;\n      \
    \  long h = 0;\n        long i = 0;\n        long j = 0;\n        long k = 0;\n\
    \        long l = 0;\n        long m = 0;\n        long n = 0;\n        long o\
    \ = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n      \
    \  long s = 0;\n        long t = 0;\n        long u = 0;\n        long v = 0;\n\
    \        long w = 0;\n        long x = 0;\n        long y = 0;\n        long z\
    \ = 0;\n        long d = 0;\n        long e = 0;\n        long f = 0;\n      \
    \  long g = 0;\n        long h = 0;\n        long i = 0;\n        long j = 0;\n\
    \        long k = 0;\n", "        List<long> derivative = new List<long>();\n\
    \        derivative.Add(0);\n        derivative.Add((xs[0] * xs[0]));\n      \
    \  for (int i = 1; i < xs.Count; i++) {\n            derivative.Add((xs[i] * xs[i\
    \ - 1]));\n        }\n        return derivative;", "        List<long> result\
    \ = new List<long>();\n        long x = 1;\n        long sum = 0;\n        foreach\
    \ (long n in xs) {\n            sum += n * x;\n            x *= n;\n         \
    \   result.Add(sum);\n        }\n        return result;", "        List<long>\
    \ derivative = new List<long>();\n        long x = 0;\n        long xpow = 1;\n\
    \        long xpow2 = 0;\n        long xpow3 = 0;\n        long xpow4 = 0;\n \
    \       long xpow5 = 0;\n        long xpow6 = 0;\n        long xpow7 = 0;\n  \
    \      long xpow8 = 0;\n        long xpow9 = 0;\n        long xpow10 = 0;\n  \
    \      long xpow11 = 0;\n        long xpow12 = 0;\n        long xpow13 = 0;\n\
    \        long xpow14 = 0;\n        long xpow15 = 0;\n        long xpow16 = 0;\n\
    \        long xpow17 = 0;\n        long xpow18 = 0;\n        long xpow19 = 0;\n\
    \        long xpow20 = 0;\n        long xpow21 = 0;\n        long xpow22 = 0;\n\
    \        long xpow23 = 0;\n        long xpow24 = 0;\n        long xpow25 = 0;\n\
    \        long xpow26 = 0;\n        long xpow27 = 0;\n        long xpow28 = 0;\n\
    \        long xpow29 = 0;\n        long xpow30 = 0;\n        long xpow31 = 0;\n\
    \        long xpow32 = 0;\n        long xpow33 = 0;\n        long xpow34 = 0;\n\
    \        long xpow35 = 0;\n        long xpow36 = 0;\n        long xpow37 = 0;\n\
    \        long xpow38 = 0;\n        long xpow39 = 0;\n        long xpow40 = 0;\n\
    \        long xpow41 = 0;\n        long xpow42 = 0;\n        long xpow43 = 0;\n\
    \        long xpow44 = 0;\n        long xpow45 = 0;\n        long xpow46 = 0;\n\
    \        long xpow47 = 0;\n        long xpow48 = 0;\n        long xpow49 = 0;\n\
    \        long xpow50 = 0;\n        long xpow51 = 0;\n        long xpow52 = 0;\n\
    \        long xpow53 = 0;\n        long xpow54 = 0;\n        long xpow55 = 0;\n\
    \        long xpow56 = 0;\n        long xpow57 = 0;\n        long xpow58 = 0;\n\
    \        long xpow59 = 0;\n        long xpow60 = 0;\n        long xpow61 = 0;\n\
    \        long xpow62 = 0;\n        long xpow63 = 0;\n        long xpow64 = 0;\n\
    \        long xpow65 = 0;\n        long xpow66 = 0;\n        long xpow67 = 0;\n\
    \        long xpow68 = 0;\n        long xpow69 = 0;\n        long xpow70 = 0;\n\
    \        long xpow71 = 0;\n        long xpow72", "        List<long> derivative\
    \ = new List<long>();\n        long product = 1;\n        foreach (long x in xs)\
    \ {\n            product *= x;\n        }\n        derivative.Add(product);\n\
    \        for (int i = 1; i < xs.Count; i++) {\n            derivative.Add(derivative[i\
    \ - 1] * xs[i]);\n        }\n        return derivative;", "        List<long>\
    \ result = new List<long>();\n        long x = 0;\n        long xsq = 0;\n   \
    \     long xsq2 = 0;\n        long xsq3 = 0;\n        long xsq4 = 0;\n       \
    \ long xsq5 = 0;\n        long xsq6 = 0;\n        long xsq7 = 0;\n        long\
    \ xsq8 = 0;\n        long xsq9 = 0;\n        long xsq10 = 0;\n        long xsq11\
    \ = 0;\n        long xsq12 = 0;\n        long xsq13 = 0;\n        long xsq14 =\
    \ 0;\n        long xsq15 = 0;\n        long xsq16 = 0;\n        long xsq17 = 0;\n\
    \        long xsq18 = 0;\n        long xsq19 = 0;\n        long xsq20 = 0;\n \
    \       long xsq21 = 0;\n        long xsq22 = 0;\n        long xsq23 = 0;\n  \
    \      long xsq24 = 0;\n        long xsq25 = 0;\n        long xsq26 = 0;\n   \
    \     long xsq27 = 0;\n        long xsq28 = 0;\n        long xsq29 = 0;\n    \
    \    long xsq30 = 0;\n        long xsq31 = 0;\n        long xsq32 = 0;\n     \
    \   long xsq33 = 0;\n        long xsq34 = 0;\n        long xsq35 = 0;\n      \
    \  long xsq36 = 0;\n        long xsq37 = 0;\n        long xsq38 = 0;\n       \
    \ long xsq39 = 0;\n        long xsq40 = 0;\n        long xsq41 = 0;\n        long\
    \ xsq42 = 0;\n        long xsq43 = 0;\n        long xsq44 = 0;\n        long xsq45\
    \ = 0;\n        long xsq46 = 0;\n        long xsq47 = 0;\n        long xsq48 =\
    \ 0;\n        long xsq49 = 0;\n        long xsq50 = 0;\n        long xsq51 = 0;\n\
    \        long xsq52 = 0;\n        long xsq53 = 0;\n        long xsq54 = 0;\n \
    \       long xsq55 = 0;\n        long xsq56 = 0;\n        long xsq57 = 0;\n  \
    \      long xsq58 = 0;\n        long xsq59 = 0;\n        long xsq60 = 0;\n   \
    \     long xsq61 = 0;\n        long xsq62 = 0;\n        long xsq63 = 0;\n    \
    \    long xsq64 = 0;\n        long xsq65 = 0;\n        long xsq66 = 0;\n     \
    \   long xsq67 = 0;\n        long xsq68 = 0;\n        long xsq69 = 0;\n      \
    \  long xsq70 = 0;\n        long xsq71 = 0;\n        long xsq72", "        List<long>\
    \ derivative = new List<long>();\n        long x = 0;\n        long y = 0;\n \
    \       long pow = 1;\n        long sum = 0;\n        foreach (long i in xs) {\n\
    \            sum += pow;\n            pow *= i;\n        }\n        derivative.Add(sum);\n\
    \        pow = 1;\n        sum = 0;\n        foreach (long i in xs) {\n      \
    \      sum += pow;\n            pow *= i;\n        }\n        derivative.Add(sum);\n\
    \        return derivative;", "        List<long> result = new List<long>();\n\
    \        long x = 0;\n        long y = 0;\n        long z = 0;\n        long d\
    \ = 0;\n        long n = 0;\n        long n2 = 0;\n        long n3 = 0;\n    \
    \    long n4 = 0;\n        long n5 = 0;\n        long n6 = 0;\n        long n7\
    \ = 0;\n        long n8 = 0;\n        long n9 = 0;\n        long n10 = 0;\n  \
    \      long n11 = 0;\n        long n12 = 0;\n        long n13 = 0;\n        long\
    \ n14 = 0;\n        long n15 = 0;\n        long n16 = 0;\n        long n17 = 0;\n\
    \        long n18 = 0;\n        long n19 = 0;\n        long n20 = 0;\n       \
    \ long n21 = 0;\n        long n22 = 0;\n        long n23 = 0;\n        long n24\
    \ = 0;\n        long n25 = 0;\n        long n26 = 0;\n        long n27 = 0;\n\
    \        long n28 = 0;\n        long n29 = 0;\n        long n30 = 0;\n       \
    \ long n31 = 0;\n        long n32 = 0;\n        long n33 = 0;\n        long n34\
    \ = 0;\n        long n35 = 0;\n        long n36 = 0;\n        long n37 = 0;\n\
    \        long n38 = 0;\n        long n39 = 0;\n        long n40 = 0;\n       \
    \ long n41 = 0;\n        long n42 = 0;\n        long n43 = 0;\n        long n44\
    \ = 0;\n        long n45 = 0;\n        long n46 = 0;\n        long n47 = 0;\n\
    \        long n48 = 0;\n        long n49 = 0;\n        long n50 = 0;\n       \
    \ long n51 = 0;\n        long n52 = 0;\n        long n53 = 0;\n        long n54\
    \ = 0;\n        long n55 = 0;\n        long n56 = 0;\n        long n57 = 0;\n\
    \        long n58 = 0;\n        long n59 = 0;\n        long n60 = 0;\n       \
    \ long n61 = 0;\n        long n62 = 0;\n        long n63 = 0;\n        long n64\
    \ = 0;\n        long n65 = 0;\n        long n66 = 0;\n        long n67 = 0;\n\
    \        long n68 = 0;\n        long n69 = 0;\n        long n70 = 0;\n       \
    \ long n71 = 0;\n        long n72 = 0;\n        long n73 = 0;\n        long n74\
    \ = 0;\n        long n75 = 0;\n        long n76 = 0;\n        long n77 = 0;\n\
    \        long n78 = 0;\n        long n79 = 0;\n        long n80 = 0;\n       \
    \ long n81 = 0;\n        ", "        List<long> result = new List<long>();\n \
    \       long x = 0;\n        long y = 0;\n        long sum = 0;\n        foreach\
    \ (long i in xs) {\n            sum += i;\n        }\n        long pow = 1;\n\
    \        while (sum > 0) {\n            pow *= x;\n            sum += pow;\n \
    \       }\n        while (sum > 0) {\n            pow *= x;\n            sum +=\
    \ pow;\n        }\n        while (sum > 0) {\n            pow *= x;\n        \
    \    sum += pow;\n        }\n        while (sum > 0) {\n            pow *= x;\n\
    \            sum += pow;\n        }\n        while (sum > 0) {\n            pow\
    \ *= x;\n            sum += pow;\n        }\n        while (sum > 0) {\n     \
    \       pow *= x;\n            sum += pow;\n        }\n        while (sum > 0)\
    \ {\n            pow *= x;\n            sum += pow;\n        }\n        while\
    \ (sum > 0) {\n            pow *= x;\n            sum += pow;\n        }\n   \
    \     while (sum > 0) {\n            pow *= x;\n            sum += pow;\n    \
    \    }\n        while (sum > 0) {\n            pow *= x;\n            sum += pow;\n\
    \        }\n        while (sum > 0) {\n            pow *= x;\n            sum\
    \ += pow;\n        }\n        while (sum > 0) {\n            pow *= x;\n     \
    \       sum += pow;\n        }\n        while (sum > 0) {\n            pow *=\
    \ x;\n            sum += pow;\n        }\n        while (sum > 0) {\n        \
    \    pow *= x;\n            sum += pow;\n        }\n        while (sum > 0) {\n\
    \            pow *= x;\n            sum += pow;\n        }\n        while (sum\
    \ > 0) {\n            pow *= x;\n            sum += pow;\n        }\n        while\
    \ (sum > 0) {\n            pow *= x;\n            sum += pow;\n        }\n   \
    \     while (sum > 0) {\n            pow *= x;\n            sum += pow;\n    \
    \    }\n        while (sum > 0) {\n            pow *= x;\n            sum += pow;\n\
    \        }\n        while (sum > 0) {\n            pow *= x;\n            sum\
    \ += pow;\n        }\n        while (sum > 0) {\n            pow *= x;\n     \
    \       sum += pow;\n        }\n        while (sum > 0) {\n            pow *=\
    \ x;\n            sum += pow;\n        }\n        while (sum > 0) {\n        \
    \    pow *= x;\n            sum += pow;\n        }\n        while (sum > 0) {\n\
    \            pow *= x;\n            sum += pow;\n        }\n        while (sum\
    \ > 0) {\n            pow *= x;\n            sum += pow;\n        }\n        while\
    \ (sum > 0) {\n            pow *= x;\n            sum += pow;\n        }\n   \
    \     while (sum > 0) {\n            pow *= x;\n            sum += pow;\n    \
    \    }\n        while (sum > 0) {\n            pow *= x;\n", "        List<long>\
    \ derivative = new List<long>();\n        long sum = 0;\n        long pow = 1;\n\
    \        foreach (long x in xs) {\n            sum += pow * x;\n            pow\
    \ *= x;\n        }\n        derivative.Add(sum);\n        pow = 1;\n        foreach\
    \ (long x in xs) {\n            derivative.Add(pow);\n            pow *= x;\n\
    \        }\n        return derivative;", "        List<long> derivative = new\
    \ List<long>();\n        derivative.Add(0);\n        derivative.Add((long)1);\n\
    \        foreach (long x in xs) {\n            derivative.Add(derivative[derivative.Count\
    \ - 1] * x);\n        }\n        return derivative;", "        List<long> derivative\
    \ = new List<long>();\n        long x = 0;\n        long xpow = 1;\n        long\
    \ xpow2 = 0;\n        long xpow3 = 0;\n        long xpow4 = 0;\n        long xpow5\
    \ = 0;\n        long xpow6 = 0;\n        long xpow7 = 0;\n        long xpow8 =\
    \ 0;\n        long xpow9 = 0;\n        long xpow10 = 0;\n        long xpow11 =\
    \ 0;\n        long xpow12 = 0;\n        long xpow13 = 0;\n        long xpow14\
    \ = 0;\n        long xpow15 = 0;\n        long xpow16 = 0;\n        long xpow17\
    \ = 0;\n        long xpow18 = 0;\n        long xpow19 = 0;\n        long xpow20\
    \ = 0;\n        long xpow21 = 0;\n        long xpow22 = 0;\n        long xpow23\
    \ = 0;\n        long xpow24 = 0;\n        long xpow25 = 0;\n        long xpow26\
    \ = 0;\n        long xpow27 = 0;\n        long xpow28 = 0;\n        long xpow29\
    \ = 0;\n        long xpow30 = 0;\n        long xpow31 = 0;\n        long xpow32\
    \ = 0;\n        long xpow33 = 0;\n        long xpow34 = 0;\n        long xpow35\
    \ = 0;\n        long xpow36 = 0;\n        long xpow37 = 0;\n        long xpow38\
    \ = 0;\n        long xpow39 = 0;\n        long xpow40 = 0;\n        long xpow41\
    \ = 0;\n        long xpow42 = 0;\n        long xpow43 = 0;\n        long xpow44\
    \ = 0;\n        long xpow45 = 0;\n        long xpow46 = 0;\n        long xpow47\
    \ = 0;\n        long xpow48 = 0;\n        long xpow49 = 0;\n        long xpow50\
    \ = 0;\n        long xpow51 = 0;\n        long xpow52 = 0;\n        long xpow53\
    \ = 0;\n        long xpow54 = 0;\n        long xpow55 = 0;\n        long xpow56\
    \ = 0;\n        long xpow57 = 0;\n        long xpow58 = 0;\n        long xpow59\
    \ = 0;\n        long xpow60 = 0;\n        long xpow61 = 0;\n        long xpow62\
    \ = 0;\n        long xpow63 = 0;\n        long xpow64 = 0;\n        long xpow65\
    \ = 0;\n        long xpow66 = 0;\n        long xpow67 = 0;\n        long xpow68\
    \ = 0;\n        long xpow69 = 0;\n        long xpow70 = 0;\n        long xpow71\
    \ = 0;\n        long xpow72", "        List<long> derivative = new List<long>();\n\
    \        long x = 1;\n        long xx = 1;\n        long xxx = 1;\n        long\
    \ xxxx = 1;\n        long xxxxx = 1;\n        long xxxxxx = 1;\n        long xxxxxxx\
    \ = 1;\n        long xxxxxxxxx = 1;\n        long xxxxxxxxxx = 1;\n        long\
    \ xxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxx = 1;\n\
    \        long xxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxx = 1;\n\
    \        long xxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long\
    \ xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long\
    \ xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n    \
    \    long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n\
    \        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n      \
    \  long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long\
    \ xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxx", "        List<long> derivative = new List<long>();\n\
    \        derivative.Add(0);\n        derivative.Add((xs[0] * xs[0]));\n      \
    \  for (int i = 1; i < xs.Count; i++) {\n            derivative.Add((xs[i] * derivative[i\
    \ - 1]));\n        }\n        return derivative;", "        List<long> result\
    \ = new List<long>();\n        long x = 0;\n        long y = 0;\n        long\
    \ d = 0;\n        for (int i = 0; i < xs.Count; i++) {\n            x += xs[i];\n\
    \            y += xs[i] * x;\n            d += xs[i] * xs[i];\n        }\n   \
    \     result.Add(d);\n        for (int i = xs.Count - 1; i >= 0; i--) {\n    \
    \        x -= xs[i];\n            y -= xs[i] * x;\n            d -= xs[i] * xs[i];\n\
    \            result.Add(d);\n        }\n        return result;", "        List<long>\
    \ derivative = new List<long>();\n        derivative.Add(0);\n        derivative.Add((xs[0]\
    \ * xs[0]));\n        for (int i = 1; i < xs.Count; i++) {\n            derivative.Add(xs[i]\
    \ * derivative[i - 1]);\n        }\n        return derivative;", "        List<long>\
    \ derivative = new List<long>();\n        long product = 1;\n        for (int\
    \ i = 0; i < xs.Count - 1; i++) {\n            product *= xs[i];\n        }\n\
    \        derivative.Add(product);\n        for (int i = xs.Count - 1; i > 0; i--)\
    \ {\n            product *= xs[i];\n            derivative.Add(product);\n   \
    \     }\n        return derivative;", "        List<long> derivative = new List<long>();\n\
    \        long x = 0;\n        long sum = 0;\n        foreach (long i in xs) {\n\
    \            sum += i;\n        }\n        derivative.Add(1);\n        for (int\
    \ i = 1; i < xs.Count; i++) {\n            derivative.Add(xs[i] * sum);\n    \
    \    }\n        return derivative;", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < xs.Count - 1; i++) {\n            result.Add(xs[i\
    \ + 1] - xs[i]);\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long x = 1;\n        foreach (long y in xs) {\n\
    \            result.Add(x * y);\n            x += 1;\n        }\n        return\
    \ result;", "        List<long> derivative = new List<long>();\n        long x\
    \ = 0;\n        long y = 0;\n        long z = 0;\n        long xx = 1;\n     \
    \   long yy = 1;\n        long zz = 1;\n        long xy = 1;\n        long yz\
    \ = 1;\n        long zzz = 1;\n        long xyy = 1;\n        long yzz = 1;\n\
    \        long zzzy = 1;\n        long xyz = 1;\n        long yzx = 1;\n      \
    \  long zxy = 1;\n        long zxx = 1;\n        long yx = 1;\n        long zx\
    \ = 0;\n        long y = 0;\n        long z = 0;\n        long x = 0;\n      \
    \  long y = 0;\n        long z = 0;\n        long x = 0;\n        long y = 0;\n\
    \        long z = 0;\n        long x = 0;\n        long y = 0;\n        long z\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long x = 0;\n        long y = 0;\n        long z = 0;\n        long x = 0;\n\
    \        long y = 0;\n        long z = 0;\n        long x = 0;\n        long y\
    \ = 0;\n        long z = 0;\n        long x = 0;\n        long y = 0;\n      \
    \  long z = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n\
    \        long x = 0;\n        long y = 0;\n        long z = 0;\n        long x\
    \ = 0;\n        long y = 0;\n        long z = 0;\n        long x = 0;\n      \
    \  long y = 0;\n        long z = 0;\n        long x = 0;\n        long y = 0;\n\
    \        long z = 0;\n        long x = 0;\n        long y = 0;\n        long z\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long x = 0;\n        long y = 0;\n        long z = 0;\n        long x = 0;\n\
    \        long y = 0;\n        long z = 0;\n        long x = 0;\n        long y\
    \ = 0;\n        long z = 0;\n        long x = 0;\n        long y = 0;\n      \
    \  long z = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n\
    \        long x = 0;\n        long y = 0;\n        long z = 0;\n        long x\
    \ = 0;\n        long y = 0;\n        long z = 0;\n        long x = 0;\n      \
    \  long y = 0;\n        long z = 0;\n        long x = 0;\n        long y = 0;\n\
    \        long z = 0;\n        long x = 0;\n        long y = 0;\n        long z\
    \ = 0;\n        long x = 0;\n        long y = 0;\n", "        List<long> derivative\
    \ = new List<long>();\n        derivative.Add(0);\n        derivative.Add((xs[0]\
    \ * xs[0]));\n        derivative.Add((xs[0] * xs[1]));\n        derivative.Add((xs[0]\
    \ * xs[2]));\n        derivative.Add((xs[0] * xs[3]));\n        derivative.Add((xs[0]\
    \ * xs[4]));\n        derivative.Add((xs[0] * xs[5]));\n        derivative.Add((xs[1]\
    \ * xs[0]));\n        derivative.Add((xs[1] * xs[1]));\n        derivative.Add((xs[1]\
    \ * xs[2]));\n        derivative.Add((xs[1] * xs[3]));\n        derivative.Add((xs[1]\
    \ * xs[4]));\n        derivative.Add((xs[1] * xs[5]));\n        derivative.Add((xs[2]\
    \ * xs[0]));\n        derivative.Add((xs[2] * xs[1]));\n        derivative.Add((xs[2]\
    \ * xs[2]));\n        derivative.Add((xs[2] * xs[3]));\n        derivative.Add((xs[2]\
    \ * xs[4]));\n        derivative.Add((xs[2] * xs[5]));\n        derivative.Add((xs[3]\
    \ * xs[0]));\n        derivative.Add((xs[3] * xs[1]));\n        derivative.Add((xs[3]\
    \ * xs[2]));\n        derivative.Add((xs[3] * xs[3]));\n        derivative.Add((xs[3]\
    \ * xs[4]));\n        derivative.Add((xs[3] * xs[5]));\n        derivative.Add((xs[4]\
    \ * xs[0]));\n        derivative.Add((xs[4] * xs[1]));\n        derivative.Add((xs[4]\
    \ * xs[2]));\n        derivative.Add((xs[4] * xs[3]));\n        derivative.Add((xs[4]\
    \ * xs[4]));\n        derivative.Add((xs[4] * xs[5]));\n        derivative.Add((xs[5]\
    \ * xs[0]));\n        derivative.Add((xs[5] * xs[1]));\n        derivative.Add((xs[5]\
    \ * xs[2]));\n        derivative.Add((xs[5] * xs[3]));\n        derivative.Add((xs[5]\
    \ * xs[4]));\n        derivative.Add((xs[5] * xs[5]));\n        return derivative;",
  "        List<long> derivative = new List<long>();\n        long x = 0;\n      \
    \  long y = 0;\n        long xpow = 0;\n        long ypow = 0;\n        long xpow2\
    \ = 0;\n        long ypow2 = 0;\n        long xpow3 = 0;\n        long ypow3 =\
    \ 0;\n        long xpow4 = 0;\n        long ypow4 = 0;\n        long xpow5 = 0;\n\
    \        long ypow5 = 0;\n        long xpow6 = 0;\n        long ypow6 = 0;\n \
    \       long xpow7 = 0;\n        long ypow7 = 0;\n        long xpow8 = 0;\n  \
    \      long ypow8 = 0;\n        long xpow9 = 0;\n        long ypow9 = 0;\n   \
    \     long xpow10 = 0;\n        long ypow10 = 0;\n        long xpow11 = 0;\n \
    \       long ypow11 = 0;\n        long xpow12 = 0;\n        long ypow12 = 0;\n\
    \        long xpow13 = 0;\n        long ypow13 = 0;\n        long xpow14 = 0;\n\
    \        long ypow14 = 0;\n        long xpow15 = 0;\n        long ypow15 = 0;\n\
    \        long xpow16 = 0;\n        long ypow16 = 0;\n        long xpow17 = 0;\n\
    \        long ypow17 = 0;\n        long xpow18 = 0;\n        long ypow18 = 0;\n\
    \        long xpow19 = 0;\n        long ypow19 = 0;\n        long xpow20 = 0;\n\
    \        long ypow20 = 0;\n        long xpow21 = 0;\n        long ypow21 = 0;\n\
    \        long xpow22 = 0;\n        long ypow22 = 0;\n        long xpow23 = 0;\n\
    \        long ypow23 = 0;\n        long xpow24 = 0;\n        long ypow24 = 0;\n\
    \        long xpow25 = 0;\n        long ypow25 = 0;\n        long xpow26 = 0;\n\
    \        long ypow26 = 0;\n        long xpow27 = 0;\n        long ypow27 = 0;\n\
    \        long xpow28 = 0;\n        long ypow28 = 0;\n        long xpow29 = 0;\n\
    \        long ypow29 = 0;\n        long xpow30 = 0;\n        long ypow30 = 0;\n\
    \        long xpow31 = 0;\n        long ypow31 = 0;\n        long xpow32 = 0;\n\
    \        long ypow32 = 0;\n        long xpow33 = 0;\n        long ypow33 = 0;\n\
    \        long xpow34 = 0;\n        long ypow34 = 0;\n        long xpow35 = 0;\n\
    \        long ypow35 = 0;\n        long xpow36 = 0;\n        long ypow36", " \
    \       List<long> derivative = new List<long>();\n        derivative.Add(0);\n\
    \        derivative.Add(1);\n        foreach (long x in xs) {\n            derivative.Add(x\
    \ * derivative.Last());\n        }\n        return derivative;", "        List<long>\
    \ derivative = new List<long>();\n        long pow = 1;\n        long sum = 0;\n\
    \        foreach (long x in xs) {\n            sum += pow;\n            pow *=\
    \ x;\n        }\n        derivative.Add(sum);\n        pow = 1;\n        sum =\
    \ 0;\n        foreach (long x in xs) {\n            sum += pow;\n            pow\
    \ *= x;\n        }\n        derivative.Add(sum);\n        return derivative;",
  "        List<long> derivative = new List<long>();\n        long product = 1;\n\
    \        foreach (long x in xs) {\n            product *= x;\n        }\n    \
    \    derivative.Add(product);\n        for (int i = 1; i < xs.Count; i++) {\n\
    \            derivative.Add(xs[i] * derivative[i - 1]);\n        }\n        return\
    \ derivative;", "        List<long> result = new List<long>();\n        long x\
    \ = 0;\n        long y = 0;\n        long sum = 0;\n        for (int i = 0; i\
    \ < xs.Count; i++) {\n            sum += xs[i];\n        }\n        for (int i\
    \ = 0; i < xs.Count; i++) {\n            x = xs[i];\n            y = sum;\n  \
    \          result.Add(y);\n            sum -= x;\n        }\n        return result;",
  "        List<long> derivative = new List<long>();\n        derivative.Add(0);\n\
    \        derivative.Add((xs[0] * xs[0]));\n        for(int i = 1; i < xs.Count;\
    \ i++) {\n            derivative.Add(xs[i] * derivative[i - 1]);\n        }\n\
    \        return derivative;", "        List<long> derivative = new List<long>();\n\
    \        derivative.Add(0);\n        for (int i = 1; i < xs.Count; i++) {\n  \
    \          derivative.Add(xs[i] * derivative[i - 1]);\n        }\n        return\
    \ derivative;", "        List<long> result = new List<long>();\n        long x\
    \ = 0;\n        long xsq = 0;\n        long xsq2 = 0;\n        long xsq3 = 0;\n\
    \        long xsq4 = 0;\n        long xsq5 = 0;\n        long xsq6 = 0;\n    \
    \    long xsq7 = 0;\n        long xsq8 = 0;\n        long xsq9 = 0;\n        long\
    \ xsq10 = 0;\n        long xsq11 = 0;\n        long xsq12 = 0;\n        long xsq13\
    \ = 0;\n        long xsq14 = 0;\n        long xsq15 = 0;\n        long xsq16 =\
    \ 0;\n        long xsq17 = 0;\n        long xsq18 = 0;\n        long xsq19 = 0;\n\
    \        long xsq20 = 0;\n        long xsq21 = 0;\n        long xsq22 = 0;\n \
    \       long xsq23 = 0;\n        long xsq24 = 0;\n        long xsq25 = 0;\n  \
    \      long xsq26 = 0;\n        long xsq27 = 0;\n        long xsq28 = 0;\n   \
    \     long xsq29 = 0;\n        long xsq30 = 0;\n        long xsq31 = 0;\n    \
    \    long xsq32 = 0;\n        long xsq33 = 0;\n        long xsq34 = 0;\n     \
    \   long xsq35 = 0;\n        long xsq36 = 0;\n        long xsq37 = 0;\n      \
    \  long xsq38 = 0;\n        long xsq39 = 0;\n        long xsq40 = 0;\n       \
    \ long xsq41 = 0;\n        long xsq42 = 0;\n        long xsq43 = 0;\n        long\
    \ xsq44 = 0;\n        long xsq45 = 0;\n        long xsq46 = 0;\n        long xsq47\
    \ = 0;\n        long xsq48 = 0;\n        long xsq49 = 0;\n        long xsq50 =\
    \ 0;\n        long xsq51 = 0;\n        long xsq52 = 0;\n        long xsq53 = 0;\n\
    \        long xsq54 = 0;\n        long xsq55 = 0;\n        long xsq56 = 0;\n \
    \       long xsq57 = 0;\n        long xsq58 = 0;\n        long xsq59 = 0;\n  \
    \      long xsq60 = 0;\n        long xsq61 = 0;\n        long xsq62 = 0;\n   \
    \     long xsq63 = 0;\n        long xsq64 = 0;\n        long xsq65 = 0;\n    \
    \    long xsq66 = 0;\n        long xsq67 = 0;\n        long xsq68 = 0;\n     \
    \   long xsq69 = 0;\n        long xsq70 = 0;\n        long xsq71 = 0;\n      \
    \  long xsq72", "        List<long> derivative = new List<long>();\n        long\
    \ x = 0;\n        long y = 0;\n        long z = 0;\n        long xx = 1;\n   \
    \     long yy = 1;\n        long zz = 1;\n        long xxx = 1;\n        long\
    \ yyy = 1;\n        long zzz = 1;\n        long xxxx = 1;\n        long yyyy =\
    \ 1;\n        long zzzz = 1;\n        long xxxy = 1;\n        long yyyyy = 1;\n\
    \        long zzzzz = 1;\n        long xxxzz = 1;\n        long yyyzz = 1;\n \
    \       long zzzzzz = 1;\n        long xxxzzz = 1;\n        long yyyzzz = 1;\n\
    \        long zzzzzzz = 1;\n        long xxxzzzz = 1;\n        long yyyzzzz =\
    \ 1;\n        long zzzzzzzz = 1;\n        long xxxzzzzz = 1;\n        long yyyzzzzz\
    \ = 1;\n        long zzzzzzzzz = 1;\n        long xxxzzzzzz = 1;\n        long\
    \ yyyzzzzzz = 1;\n        long zzzzzzzzzz = 1;\n        long xxxzzzzzzz = 1;\n\
    \        long yyyzzzzzzz = 1;\n        long zzzzzzzzzzz = 1;\n        long xxxzzzzzzzz\
    \ = 1;\n        long yyyzzzzzzzz = 1;\n        long zzzzzzzzzzzz = 1;\n      \
    \  long xxxzzzzzzzzz = 1;\n        long yyyzzzzzzzzz = 1;\n        long zzzzzzzzzzzzz\
    \ = 1;\n        long xxxzzzzzzzzzz = 1;\n        long yyyzzzzzzzzzz = 1;\n   \
    \     long zzzzzzzzzzzzzz = 1;\n        long xxxzzzzzzzzzzz = 1;\n        long\
    \ yyyzzzzzzzzzzz = 1;\n        long zzzzzzzzzzzzzzz = 1;\n        long xxxzzzzzzzzzzzz\
    \ = 1;\n        long yyyzzzzzzzzzzzz = 1;\n        long zzzzzzzzzzzzzzzz = 1;\n\
    \        long xxxzzzzzzzzzzzzz = 1;\n        long yyyzzzzzzzzzzzzz = 1;\n    \
    \    long zzzzzzzzzzzzzzzzz = 1;\n        long xxxzzzzzzzzzzzzzz = 1;\n      \
    \  long yyyzzzzzzzzzzzzzz = 1;\n        long zzzzzzzzzzzzzzzzzz = 1;\n       \
    \ long xxxzzzzzzzzzzzzzzz = 1;\n        long yyyzzzzzzzzzzzzzzzzz = 1;\n     \
    \   long zzzzzzzzzzzzzzzzzzzzz = 1;\n", "        List<long> result = new List<long>();\n\
    \        long x = 1;\n        long xx = 1;\n        long xxx = 1;\n        long\
    \ xxxx = 1;\n        long xxxxx = 1;\n        long xxxxxx = 1;\n        long xxxxxxx\
    \ = 1;\n        long xxxxxxxx = 1;\n        long xxxxxxxxx = 1;\n        long\
    \ xxxxxxxxxx = 1;\n        long xxxxxxxxxxx = 1;\n        long xxxxxxxxxxxx =\
    \ 1;\n        long xxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxx = 1;\n    \
    \    long xxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxx = 1;\n        long\
    \ xxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long\
    \ xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long\
    \ xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n     \
    \   long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long ", " \
    \       List<long> result = new List<long>();\n        long x = 1;\n        foreach\
    \ (long n in xs) {\n            x /= n;\n            result.Add(x);\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long x = 1;\n        long xx = 1;\n        long xxx = 1;\n        long xxxx\
    \ = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n\
    \        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n    \
    \    long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long\
    \ xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx\
    \ = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n\
    \        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n    \
    \    long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long\
    \ xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx\
    \ = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n\
    \        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n    \
    \    long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long\
    \ xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx\
    \ = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n\
    \        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n    \
    \    long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long\
    \ xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx\
    \ = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n\
    \        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n    \
    \    long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long\
    \ xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx\
    \ = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n\
    \        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n    \
    \    long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long\
    \ xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx\
    \ = 1;\n        long xxxx = 1;\n        long xxxx = 1;", "        List<long> derivative\
    \ = new List<long>();\n        derivative.Add(0);\n        derivative.Add((xs[0]\
    \ * xs[0]));\n        for(int i = 1; i < xs.Count; i++) {\n            derivative.Add((xs[i]\
    \ * xs[i - 1]));\n        }\n        return derivative;", "        List<long>\
    \ derivative = new List<long>();\n        derivative.Add(0);\n        for (int\
    \ i = 1; i < xs.Count; i++) {\n            derivative.Add(xs[i] * derivative[i\
    \ - 1]);\n        }\n        return derivative;", "        List<long> result =\
    \ new List<long>();\n        long x = 0;\n        long y = 0;\n        long sum\
    \ = 0;\n        foreach (long i in xs) {\n            sum += i;\n        }\n \
    \       x = sum;\n        for (int i = 1; i < xs.Count; i++) {\n            y\
    \ = xs[i] * x;\n            result.Add(y);\n            x = y;\n        }\n  \
    \      return result;", "        List<long> result = new List<long>();\n     \
    \   long sum = 0;\n        foreach (long x in xs) {\n            sum += x;\n \
    \       }\n        result.Add(1);\n        for (int i = 1; i < xs.Count; i++)\
    \ {\n            result.Add(xs[i] * sum);\n        }\n        return result;",
  "        List<long> derivative = new List<long>();\n        derivative.Add(0);\n\
    \        foreach (long x in xs) {\n            derivative.Add(x * derivative[derivative.Count\
    \ - 1]);\n        }\n        return derivative;", "        List<long> derivative\
    \ = new List<long>();\n        derivative.Add(0);\n        derivative.Add(1);\n\
    \        for(int i = 2; i <= xs.Count; i++) {\n            derivative.Add(xs[i]\
    \ * derivative[i - 1]);\n        }\n        return derivative;", "        List<long>\
    \ derivative = new List<long>();\n        derivative.Add(0);\n        derivative.Add((xs[0]\
    \ * xs[0]));\n        derivative.Add((xs[0] * xs[1]));\n        derivative.Add((xs[0]\
    \ * xs[2]));\n        derivative.Add((xs[0] * xs[3]));\n        derivative.Add((xs[0]\
    \ * xs[4]));\n        derivative.Add((xs[0] * xs[5]));\n        derivative.Add((xs[1]\
    \ * xs[0]));\n        derivative.Add((xs[1] * xs[1]));\n        derivative.Add((xs[1]\
    \ * xs[2]));\n        derivative.Add((xs[1] * xs[3]));\n        derivative.Add((xs[1]\
    \ * xs[4]));\n        derivative.Add((xs[1] * xs[5]));\n        derivative.Add((xs[2]\
    \ * xs[0]));\n        derivative.Add((xs[2] * xs[1]));\n        derivative.Add((xs[2]\
    \ * xs[2]));\n        derivative.Add((xs[2] * xs[3]));\n        derivative.Add((xs[2]\
    \ * xs[4]));\n        derivative.Add((xs[2] * xs[5]));\n        derivative.Add((xs[3]\
    \ * xs[0]));\n        derivative.Add((xs[3] * xs[1]));\n        derivative.Add((xs[3]\
    \ * xs[2]));\n        derivative.Add((xs[3] * xs[3]));\n        derivative.Add((xs[3]\
    \ * xs[4]));\n        derivative.Add((xs[3] * xs[5]));\n        derivative.Add((xs[4]\
    \ * xs[0]));\n        derivative.Add((xs[4] * xs[1]));\n        derivative.Add((xs[4]\
    \ * xs[2]));\n        derivative.Add((xs[4] * xs[3]));\n        derivative.Add((xs[4]\
    \ * xs[4]));\n        derivative.Add((xs[4] * xs[5]));\n        derivative.Add((xs[5]\
    \ * xs[0]));\n        derivative.Add((xs[5] * xs[1]));\n        derivative.Add((xs[5]\
    \ * xs[2]));\n        derivative.Add((xs[5] * xs[3]));\n        derivative.Add((xs[5]\
    \ * xs[4]));\n        derivative.Add((xs[5] * xs[5]));\n        return derivative;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < xs.Count;\
    \ i++) {\n            result.Add(xs[i] * xs[i]);\n        }\n        return result;",
  "        List<long> derivative = new List<long>();\n        long power = 1;\n  \
    \      long sum = 0;\n        foreach (long x in xs) {\n            sum += power\
    \ * x;\n            power = power * x;\n        }\n        derivative.Add(sum);\n\
    \        power = 1;\n        sum = 0;\n        foreach (long x in xs) {\n    \
    \        sum += power;\n            power = power * x;\n        }\n        derivative.Add(sum);\n\
    \        return derivative;", "        List<long> derivative = new List<long>();\n\
    \        derivative.Add(0);\n        derivative.Add((xs[0] * xs[0]));\n      \
    \  for (int i = 1; i < xs.Count; i++) {\n            derivative.Add((xs[i] * derivative[i\
    \ - 1]));\n        }\n        return derivative;", "        List<long> derivative\
    \ = new List<long>();\n        long x = 1;\n        long sum = 0;\n        foreach\
    \ (long n in xs) {\n            sum += n * x;\n            derivative.Add(sum);\n\
    \            x *= n;\n        }\n        return derivative;", "        List<long>\
    \ result = new List<long>();\n        long x = 0;\n        long y = 0;\n     \
    \   long z = 0;\n        for (int i = 0; i < xs.Count; i++) {\n            x =\
    \ xs[i];\n            y = x * y;\n            z = x * z;\n            result.Add(z);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long x = 0;\n        long y = 0;\n        long xSquare = 0;\n       \
    \ long ySquare = 0;\n        long xSquareRoot = 0;\n        long ySquareRoot =\
    \ 0;\n        long xRoot = 0;\n        long yRoot = 0;\n        long xRootSquare\
    \ = 0;\n        long yRootSquare = 0;\n        long xRootSquareRoot = 0;\n   \
    \     long yRootSquareRoot = 0;\n        long xRootRoot = 0;\n        long yRootRoot\
    \ = 0;\n        long xRootRootSquare = 0;\n        long yRootRootSquare = 0;\n\
    \        long xRootRootSquareRoot = 0;\n        long yRootRootSquareRoot = 0;\n\
    \        long xRootRootRoot = 0;\n        long yRootRootRoot = 0;\n        long\
    \ xRootRootSquare = 0;\n        long yRootRootSquare = 0;\n        long xRootRootSquareRoot\
    \ = 0;\n        long yRootRootSquareRoot = 0;\n        long xRootRootRoot = 0;\n\
    \        long yRootRootRoot = 0;\n        long xRootRootSquare = 0;\n        long\
    \ yRootRootSquare = 0;\n        long xRootRootSquareRoot = 0;\n        long yRootRootSquareRoot\
    \ = 0;\n        long xRootRootRoot = 0;\n        long yRootRootRoot = 0;\n   \
    \     long xRootRootSquare = 0;\n        long yRootRootSquare = 0;\n        long\
    \ xRootRootSquareRoot = 0;\n        long yRootRootSquareRoot = 0;\n        long\
    \ xRootRootRoot = 0;\n        long yRootRootRoot = 0;\n        long xRootRootSquare\
    \ = 0;\n        long yRootRootSquare = 0;\n        long xRootRootSquareRoot =\
    \ 0;\n        long yRootRootSquareRoot = 0;\n        long xRootRootRoot = 0;\n\
    \        long yRootRootRoot = 0;\n        long xRootRootSquare = 0;\n        long\
    \ yRootRootSquare = 0;\n        long xRootRootSquareRoot = 0;\n        long yRootRootSquareRoot\
    \ = 0;\n        long xRootRootRoot = 0;\n        long yRootRootRoot = 0;\n   \
    \     long xRootRootSquare = 0;\n        long yRootRootSquare = 0;\n        long\
    \ xRootRootSquareRoot = 0;\n        long yRootRootSquareRoot = 0;\n        long\
    \ xRootRootRoot = 0;\n        long yRootRootRoot = 0;\n        long xRootRootSquare\
    \ = 0;\n        long yRootRootSquare = 0;\n        long xRootRootSquareRoot =\
    \ 0;\n        long yRootRootSquareRoot = 0;\n        long xRootRootRoot = 0;\n\
    \        long yRootRootRoot = 0;\n        long xRootRootSquare = 0;\n        long ",
  "        List<long> derivative = new List<long>();\n        long x = 1;\n      \
    \  long x0 = xs[0];\n        long x1 = xs[1];\n        long x2 = xs[2];\n    \
    \    long x3 = xs[3];\n        long x4 = xs[4];\n        long x5 = xs[5];\n  \
    \      long x6 = xs[6];\n        long x7 = xs[7];\n        long x8 = xs[8];\n\
    \        long x9 = xs[9];\n        long x10 = xs[10];\n        long x11 = xs[11];\n\
    \        long x12 = xs[12];\n        long x13 = xs[13];\n        long x14 = xs[14];\n\
    \        long x15 = xs[15];\n        long x16 = xs[16];\n        long x17 = xs[17];\n\
    \        long x18 = xs[18];\n        long x19 = xs[19];\n        long x20 = xs[20];\n\
    \        long x21 = xs[21];\n        long x22 = xs[22];\n        long x23 = xs[23];\n\
    \        long x24 = xs[24];\n        long x25 = xs[25];\n        long x26 = xs[26];\n\
    \        long x27 = xs[27];\n        long x28 = xs[28];\n        long x29 = xs[29];\n\
    \        long x30 = xs[30];\n        long x31 = xs[31];\n        long x32 = xs[32];\n\
    \        long x33 = xs[33];\n        long x34 = xs[34];\n        long x35 = xs[35];\n\
    \        long x36 = xs[36];\n        long x37 = xs[37];\n        long x38 = xs[38];\n\
    \        long x39 = xs[39];\n        long x40 = xs[40];\n        long x41 = xs[41];\n\
    \        long x42 = xs[42];\n        long x43 = xs[43];\n        long x44 = xs[44];\n\
    \        long x45 = xs[45];\n        long x46 = xs[46];\n        long x47 = xs[47];\n\
    \        long x48 = xs[48];\n        long x49 = xs[49];\n        long x50 = xs[50];\n\
    \        long x51 = xs[51];\n        long x52 = xs[52];\n        long x53 = xs[53];\n\
    \        long x54 = xs[54];\n        long x55 = xs[", "        List<long> result\
    \ = new List<long>();\n        long x = 0;\n        long y = 0;\n        long\
    \ z = 0;\n        for (int i = 0; i < xs.Count; i++) {\n            x = xs[i];\n\
    \            y = x * y;\n            z = x * z;\n            result.Add(z);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long x = 0;\n        long y = 0;\n        long z = 0;\n        long n\
    \ = 0;\n        long den = 0;\n        long den2 = 0;\n        long den3 = 0;\n\
    \        long den4 = 0;\n        long den5 = 0;\n        long den6 = 0;\n    \
    \    long den7 = 0;\n        long den8 = 0;\n        long den9 = 0;\n        long\
    \ den10 = 0;\n        long den11 = 0;\n        long den12 = 0;\n        long den13\
    \ = 0;\n        long den14 = 0;\n        long den15 = 0;\n        long den16 =\
    \ 0;\n        long den17 = 0;\n        long den18 = 0;\n        long den19 = 0;\n\
    \        long den20 = 0;\n        long den21 = 0;\n        long den22 = 0;\n \
    \       long den23 = 0;\n        long den24 = 0;\n        long den25 = 0;\n  \
    \      long den26 = 0;\n        long den27 = 0;\n        long den28 = 0;\n   \
    \     long den29 = 0;\n        long den30 = 0;\n        long den31 = 0;\n    \
    \    long den32 = 0;\n        long den33 = 0;\n        long den34 = 0;\n     \
    \   long den35 = 0;\n        long den36 = 0;\n        long den37 = 0;\n      \
    \  long den38 = 0;\n        long den39 = 0;\n        long den40 = 0;\n       \
    \ long den41 = 0;\n        long den42 = 0;\n        long den43 = 0;\n        long\
    \ den44 = 0;\n        long den45 = 0;\n        long den46 = 0;\n        long den47\
    \ = 0;\n        long den48 = 0;\n        long den49 = 0;\n        long den50 =\
    \ 0;\n        long den51 = 0;\n        long den52 = 0;\n        long den53 = 0;\n\
    \        long den54 = 0;\n        long den55 = 0;\n        long den56 = 0;\n \
    \       long den57 = 0;\n        long den58 = 0;\n        long den59 = 0;\n  \
    \      long den60 = 0;\n        long den61 = 0;\n        long den62 = 0;\n   \
    \     long den63 = 0;\n        long den64 = 0;\n        long den65 = 0;\n    \
    \    long den66 = 0;\n        long den67 = 0;\n        long den68 = 0;\n     \
    \   long den69 = 0;\n        long den70 = 0;\n        long den71 = 0;\n      \
    \  long den72 = 0;\n        long den73 = 0;\n        long den74 = 0;\n       \
    \ long den75 = 0;\n        long den76 = 0;\n        long den77 = 0;\n        long\
    \ den78 = 0;\n        long den79 = 0;\n        long den80 = 0;\n        long den81\
    \ = 0;\n        ", "        List<long> derivative = new List<long>();\n      \
    \  long x = 0;\n        long y = 0;\n        long d = 0;\n        long xd = 0;\n\
    \        long yd = 0;\n        long xd = 0;\n        long yd = 0;\n        long\
    \ xd = 0;\n        long yd = 0;\n        long xd = 0;\n        long yd = 0;\n\
    \        long xd = 0;\n        long yd = 0;\n        long xd = 0;\n        long\
    \ yd = 0;\n        long xd = 0;\n        long yd = 0;\n        long xd = 0;\n\
    \        long yd = 0;\n        long xd = 0;\n        long yd = 0;\n        long\
    \ xd = 0;\n        long yd = 0;\n        long xd = 0;\n        long yd = 0;\n\
    \        long xd = 0;\n        long yd = 0;\n        long xd = 0;\n        long\
    \ yd = 0;\n        long xd = 0;\n        long yd = 0;\n        long xd = 0;\n\
    \        long yd = 0;\n        long xd = 0;\n        long yd = 0;\n        long\
    \ xd = 0;\n        long yd = 0;\n        long xd = 0;\n        long yd = 0;\n\
    \        long xd = 0;\n        long yd = 0;\n        long xd = 0;\n        long\
    \ yd = 0;\n        long xd = 0;\n        long yd = 0;\n        long xd = 0;\n\
    \        long yd = 0;\n        long xd = 0;\n        long yd = 0;\n        long\
    \ xd = 0;\n        long yd = 0;\n        long xd = 0;\n        long yd = 0;\n\
    \        long xd = 0;\n        long yd = 0;\n        long xd = 0;\n        long\
    \ yd = 0;\n        long xd = 0;\n        long yd = 0;\n        long xd = 0;\n\
    \        long yd = 0;\n        long xd = 0;\n        long yd = 0;\n        long\
    \ xd = 0;\n        long yd = 0;\n        long xd = 0;\n        long yd = 0;\n\
    \        long xd = 0;\n        long yd = 0;\n        long xd = 0;\n        long\
    \ yd = 0;\n        long xd = 0;\n        long yd = 0;\n        long xd = 0;\n\
    \        long yd = 0;\n        long xd = 0;\n        long yd = 0;\n        long\
    \ xd = 0;\n        long yd = 0;\n        long xd = 0;\n        long yd = 0;\n\
    \        long xd = 0;\n        long yd = 0;\n        long xd = 0;\n        ",
  "        List<long> derivative = new List<long>();\n        long sum = 0;\n    \
    \    foreach (long x in xs) {\n            sum += x;\n        }\n        derivative.Add(1);\n\
    \        foreach (long x in xs) {\n            derivative.Add(sum * x);\n    \
    \    }\n        return derivative;", "        List<long> result = new List<long>();\n\
    \        long x = 1;\n        long y = 1;\n        long z = 1;\n        long n\
    \ = xs.Count;\n        for (int i = 0; i < n; i++) {\n            long xi = xs[i];\n\
    \            long yi = y;\n            long zi = z;\n            y = xi * y;\n\
    \            z = xi * z;\n            result.Add(yi - zi);\n        }\n      \
    \  return result;", "        List<long> derivative = new List<long>();\n     \
    \   long x = 0;\n        long y = 0;\n        long d = 0;\n        for (int i\
    \ = 0; i < xs.Count; i++) {\n            x = xs[i];\n            y = xs[i + 1];\n\
    \            d = y * x;\n            derivative.Add(d);\n        }\n        return\
    \ derivative;", "        List<long> result = new List<long>();\n        long x\
    \ = 0;\n        long y = 0;\n        long z = 0;\n        long xx = 1;\n     \
    \   long yy = 1;\n        long zz = 1;\n        long xy = 1;\n        long yz\
    \ = 1;\n        long zzz = 1;\n        long xyy = 1;\n        long yzz = 1;\n\
    \        long zzzy = 1;\n        long xyz = 1;\n        long yzx = 1;\n      \
    \  long zxy = 1;\n        long zxx = 1;\n        long yx = 1;\n        long zx\
    \ = 1;\n        long xx = 1;\n        long yy = 1;\n        long zz = 1;\n   \
    \     long xy = 1;\n        long yz = 1;\n        long zzz = 1;\n        long\
    \ xyy = 1;\n        long yzz = 1;\n        long zzzy = 1;\n        long xyz =\
    \ 1;\n        long yzx = 1;\n        long zxy = 1;\n        long zxx = 1;\n  \
    \      long yx = 1;\n        long zx = 1;\n        long xx = 1;\n        long\
    \ yy = 1;\n        long zz = 1;\n        long xy = 1;\n        long yz = 1;\n\
    \        long zzz = 1;\n        long xyy = 1;\n        long yzz = 1;\n       \
    \ long zzzy = 1;\n        long xyz = 1;\n        long yzx = 1;\n        long zxy\
    \ = 1;\n        long zxx = 1;\n        long yx = 1;\n        long zx = 1;\n  \
    \      long xx = 1;\n        long yy = 1;\n        long zz = 1;\n        long\
    \ xy = 1;\n        long yz = 1;\n        long zzz = 1;\n        long xyy = 1;\n\
    \        long yzz = 1;\n        long zzzy = 1;\n        long xyz = 1;\n      \
    \  long yzx = 1;\n        long zxy = 1;\n        long zxx = 1;\n        long yx\
    \ = 1;\n        long zx = 1;\n        long xx = 1;\n        long yy = 1;\n   \
    \     long zz = 1;\n        long xy = 1;\n        long yz = 1;\n        long zzz\
    \ = 1;\n        long xyy = 1;\n        long yzz = 1;\n        long zzzy = 1;\n\
    \        long xyz = 1;\n        long yzx = 1;\n        long zxy = 1;\n       \
    \ long zxx = 1;\n        long yx = 1;\n        long zx = 1;\n        long xx =\
    \ 1;\n        long yy = 1;\n        long zz = 1;\n        long xy = 1;\n     \
    \   long yz", "        List<long> derivative = new List<long>();\n        long\
    \ x = 0;\n        long sum = 0;\n        foreach (long n in xs) {\n          \
    \  sum += n * x;\n            derivative.Add(sum);\n            x += n;\n    \
    \    }\n        return derivative;", "        List<long> derivative = new List<long>();\n\
    \        long x = 0;\n        long y = 0;\n        long z = 0;\n        long xSquare\
    \ = 0;\n        long xSquareRoot = 0;\n        long xSquareRoot2 = 0;\n      \
    \  long xSquareRoot3 = 0;\n        long xSquareRoot4 = 0;\n        long xSquareRoot5\
    \ = 0;\n        long xSquareRoot6 = 0;\n        long xSquareRoot7 = 0;\n     \
    \   long xSquareRoot8 = 0;\n        long xSquareRoot9 = 0;\n        long xSquareRoot10\
    \ = 0;\n        long xSquareRoot11 = 0;\n        long xSquareRoot12 = 0;\n   \
    \     long xSquareRoot13 = 0;\n        long xSquareRoot14 = 0;\n        long xSquareRoot15\
    \ = 0;\n        long xSquareRoot16 = 0;\n        long xSquareRoot17 = 0;\n   \
    \     long xSquareRoot18 = 0;\n        long xSquareRoot19 = 0;\n        long xSquareRoot20\
    \ = 0;\n        long xSquareRoot21 = 0;\n        long xSquareRoot22 = 0;\n   \
    \     long xSquareRoot23 = 0;\n        long xSquareRoot24 = 0;\n        long xSquareRoot25\
    \ = 0;\n        long xSquareRoot26 = 0;\n        long xSquareRoot27 = 0;\n   \
    \     long xSquareRoot28 = 0;\n        long xSquareRoot29 = 0;\n        long xSquareRoot30\
    \ = 0;\n        long xSquareRoot31 = 0;\n        long xSquareRoot32 = 0;\n   \
    \     long xSquareRoot33 = 0;\n        long xSquareRoot34 = 0;\n        long xSquareRoot35\
    \ = 0;\n        long xSquareRoot36 = 0;\n        long xSquareRoot37 = 0;\n   \
    \     long xSquareRoot38 = 0;\n        long xSquareRoot39 = 0;\n        long xSquareRoot40\
    \ = 0;\n        long xSquareRoot41 = 0;\n        long xSquareRoot42 = 0;\n   \
    \     long xSquareRoot43 = 0;\n        long xSquareRoot44 = 0;\n        long xSquareRoot45\
    \ = 0;\n        long xSquareRoot46 = 0;\n        long xSquareRoot47 = 0;\n   \
    \     long xSquareRoot48 = 0;\n        long xSquareRoot49 = 0;\n        long xSquareRoot50\
    \ = 0;\n        long xSquareRoot51 = 0;\n        long xSquareRoot52 = 0;\n   \
    \     long xSquareRoot53 = 0;\n        long xSquareRoot54 = 0;\n        long xSquareRoot55\
    \ = 0;\n        long xSquareRoot56 = 0;\n        long xSquareRoot57 = 0;\n   \
    \     long xSquareRoot58 = 0;\n        long xSquareRoot59 = 0;\n        long xSquareRoot60\
    \ = 0;\n        long xSquareRoot61", "        List<long> result = new List<long>();\n\
    \        long x = 0;\n        long y = 0;\n        long z = 0;\n        long sum\
    \ = 0;\n        foreach (long i in xs) {\n            sum += i;\n        }\n \
    \       long pow = 1;\n        while (sum > 0) {\n            pow *= x;\n    \
    \        sum += pow / z;\n            x ++;\n            y ++;\n            z\
    \ ++;\n        }\n        result.Add(1);\n        for (int i = 2; i <= x; i++)\
    \ {\n            result.Add(i * y);\n        }\n        return result;", "   \
    \     List<long> result = new List<long>();\n        long x = 0;\n        long\
    \ y = 0;\n        long z = 0;\n        long sum = 0;\n        foreach (long i\
    \ in xs) {\n            sum += i;\n        }\n        long pow = 1;\n        while\
    \ (sum > 0) {\n            pow *= x;\n            sum += pow;\n        }\n   \
    \     pow = 1;\n        while (sum > 0) {\n            pow *= y;\n           \
    \ sum += pow;\n        }\n        pow = 1;\n        while (sum > 0) {\n      \
    \      pow *= z;\n            sum += pow;\n        }\n        pow = 1;\n     \
    \   while (sum > 0) {\n            pow *= x;\n            sum += pow;\n      \
    \  }\n        pow = 1;\n        while (sum > 0) {\n            pow *= y;\n   \
    \         sum += pow;\n        }\n        pow = 1;\n        while (sum > 0) {\n\
    \            pow *= z;\n            sum += pow;\n        }\n        pow = 1;\n\
    \        while (sum > 0) {\n            pow *= x;\n            sum += pow;\n \
    \       }\n        pow = 1;\n        while (sum > 0) {\n            pow *= y;\n\
    \            sum += pow;\n        }\n        pow = 1;\n        while (sum > 0)\
    \ {\n            pow *= z;\n            sum += pow;\n        }\n        pow =\
    \ 1;\n        while (sum > 0) {\n            pow *= x;\n            sum += pow;\n\
    \        }\n        pow = 1;\n        while (sum > 0) {\n            pow *= y;\n\
    \            sum += pow;\n        }\n        pow = 1;\n        while (sum > 0)\
    \ {\n            pow *= z;\n            sum += pow;\n        }\n        pow =\
    \ 1;\n        while (sum > 0) {\n            pow *= x;\n            sum += pow;\n\
    \        }\n        pow = 1;\n        while (sum > 0) {\n            pow *= y;\n\
    \            sum += pow;\n        }\n        pow = 1;\n        while (sum > 0)\
    \ {\n            pow *= z;\n            sum += pow;\n        }\n        pow =\
    \ 1;\n        while (sum > 0) {\n            pow *= x;\n            sum += pow;\n\
    \        }\n        pow = 1;\n        while (sum > 0) {\n            pow *= y;\n\
    \            sum += pow;\n        }\n        pow = 1;\n        while (sum > 0)\
    \ {\n            pow *= z;\n            sum += pow;\n        }\n        pow =\
    \ 1;\n        while (sum > 0) {\n            pow *= x;\n            sum += pow;\n\
    \        }\n        pow = 1;\n        while (sum > 0) {\n            pow *= y;\n\
    \            sum += pow;\n        }\n        pow = 1;\n        while (sum > 0)\
    \ {\n            pow *= z;\n            sum += pow;\n        }\n        pow =\
    \ 1;\n        while (sum > 0) {\n            pow *= x;\n            sum += pow;\n\
    \        }\n        pow = 1;\n        while (sum", "        List<long> derivative\
    \ = new List<long>();\n        derivative.Add(0);\n        derivative.Add((xs[0]\
    \ * xs[0]));\n        for(int i = 1; i < xs.Count; i++) {\n            derivative.Add((xs[i]\
    \ * xs[i - 1]));\n        }\n        return derivative;", "        List<long>\
    \ derivative = new List<long>();\n        long x = 1;\n        foreach (long xi\
    \ in xs) {\n            derivative .Add(xi * x);\n            x ++;\n        }\n\
    \        return derivative;", "        List<long> derivative = new List<long>();\n\
    \        long x = 0;\n        long y = 0;\n        long xx = 1;\n        long\
    \ yy = 1;\n        long xy = 1;\n        long xxx = 1;\n        long yyy = 1;\n\
    \        long xyy = 1;\n        long xxxy = 0;\n        long yyx = 0;\n      \
    \  long xyx = 0;\n        long xxyy = 0;\n        long yyxx = 0;\n        long\
    \ xyyx = 0;\n        long xyxx = 0;\n        long xxyyx = 0;\n        long yyxxx\
    \ = 0;\n        long xyxyx = 0;\n        long xxyyxx = 0;\n        long yyxxy\
    \ = 0;\n        long xyxxy = 0;\n        long xxyyxy = 0;\n        long yyxxxy\
    \ = 0;\n        long xyxyxx = 0;\n        long xxyyxxy = 0;\n        long yyxxyx\
    \ = 0;\n        long xyxxyy = 0;\n        long xxyyxy = 0;\n        long yyxxxy\
    \ = 0;\n        long xyxyxx = 0;\n        long xxyyxxy = 0;\n        long yyxxyx\
    \ = 0;\n        long xyxxyy = 0;\n        long xxyyxxy = 0;\n        long yyxxyx\
    \ = 0;\n        long xyxxyy = 0;\n        long xxyyxxy = 0;\n        long yyxxyx\
    \ = 0;\n        long xyxxyy = 0;\n        long xxyyxxy = 0;\n        long yyxxyx\
    \ = 0;\n        long xyxxyy = 0;\n        long xxyyxxy = 0;\n        long yyxxyx\
    \ = 0;\n        long xyxxyy = 0;\n        long xxyyxxy = 0;\n        long yyxxyx\
    \ = 0;\n        long xyxxyy = 0;\n        long xxyyxxy = 0;\n        long yyxxyx\
    \ = 0;\n        long xyxxyy = 0;\n        long xxyyxxy = 0;\n        long yyxxyx\
    \ = 0;\n        long xyxxyy = 0;\n        long xxyyxxy = 0;\n        long yyxxyx\
    \ = 0;\n        long xyxxyy = 0;\n        long xxyyxxy = 0;\n        long yyxxyx\
    \ = 0;\n        long xyxxyy = 0;\n        long xxyyxxy = 0;\n        long yyxxyx\
    \ = 0;\n        long xyxxyy = 0;\n        long xxyyxxy = 0;\n        long yyxxyx\
    \ = 0;\n        long xyxxyy = 0;\n        long xxyyxxy = 0;\n        long yyxxyx\
    \ = 0;\n        long xyxxyy = 0;\n        long xxyyxxy = 0;", "        List<long>\
    \ result = new List<long>();\n        long product = 1;\n        foreach (long\
    \ x in xs) {\n            product *= x;\n        }\n        result.Add(product);\n\
    \        for (int i = 1; i < xs.Count; i++) {\n            result.Add(xs[i] *\
    \ result[i - 1]);\n        }\n        return result;", "        List<long> derivative\
    \ = new List<long>();\n        long x = 0;\n        long sum = 0;\n        foreach\
    \ (long n in xs) {\n            sum += n;\n            derivative.Add(sum);\n\
    \        }\n        derivative.Add(0);\n        derivative.Reverse();\n      \
    \  return derivative;", "        List<long> result = new List<long>();\n     \
    \   long x = 0;\n        long y = 0;\n        long xsq = 0;\n        long xsq2\
    \ = 0;\n        long xsq3 = 0;\n        long xsq4 = 0;\n        long xsq5 = 0;\n\
    \        long xsq6 = 0;\n        long xsq7 = 0;\n        long xsq8 = 0;\n    \
    \    long xsq9 = 0;\n        long xsq10 = 0;\n        long xsq11 = 0;\n      \
    \  long xsq12 = 0;\n        long xsq13 = 0;\n        long xsq14 = 0;\n       \
    \ long xsq15 = 0;\n        long xsq16 = 0;\n        long xsq17 = 0;\n        long\
    \ xsq18 = 0;\n        long xsq19 = 0;\n        long xsq20 = 0;\n        long xsq21\
    \ = 0;\n        long xsq22 = 0;\n        long xsq23 = 0;\n        long xsq24 =\
    \ 0;\n        long xsq25 = 0;\n        long xsq26 = 0;\n        long xsq27 = 0;\n\
    \        long xsq28 = 0;\n        long xsq29 = 0;\n        long xsq30 = 0;\n \
    \       long xsq31 = 0;\n        long xsq32 = 0;\n        long xsq33 = 0;\n  \
    \      long xsq34 = 0;\n        long xsq35 = 0;\n        long xsq36 = 0;\n   \
    \     long xsq37 = 0;\n        long xsq38 = 0;\n        long xsq39 = 0;\n    \
    \    long xsq40 = 0;\n        long xsq41 = 0;\n        long xsq42 = 0;\n     \
    \   long xsq43 = 0;\n        long xsq44 = 0;\n        long xsq45 = 0;\n      \
    \  long xsq46 = 0;\n        long xsq47 = 0;\n        long xsq48 = 0;\n       \
    \ long xsq49 = 0;\n        long xsq50 = 0;\n        long xsq51 = 0;\n        long\
    \ xsq52 = 0;\n        long xsq53 = 0;\n        long xsq54 = 0;\n        long xsq55\
    \ = 0;\n        long xsq56 = 0;\n        long xsq57 = 0;\n        long xsq58 =\
    \ 0;\n        long xsq59 = 0;\n        long xsq60 = 0;\n        long xsq61 = 0;\n\
    \        long xsq62 = 0;\n        long xsq63 = 0;\n        long xsq64 = 0;\n \
    \       long xsq65 = 0;\n        long xsq66 = 0;\n        long xsq67 = 0;\n  \
    \      long xsq68 = 0;\n        long xsq69 = 0;\n        long xsq70 = 0;\n   \
    \     long xsq71 = 0;\n", "        List<long> derivative = new List<long>();\n\
    \        derivative.Add(1);\n        for (int i = 1; i < xs.Count; i++) {\n  \
    \          derivative.Add(xs[i] * derivative[i - 1]);\n        }\n        return\
    \ derivative;", "        List<long> result = new List<long>();\n        long x\
    \ = 0;\n        long y = 0;\n        long d = 0;\n        for (int i = 0; i <\
    \ xs.Count; i++) {\n            x += xs[i];\n            y += xs[i] * x;\n   \
    \         d += xs[i] * xs[i];\n        }\n        result.Add(d);\n        for\
    \ (int i = xs.Count - 1; i >= 0; i--) {\n            x -= xs[i];\n           \
    \ y -= xs[i] * x;\n            d -= xs[i] * xs[i];\n            result.Add(d);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long x = 1;\n        long y = 1;\n        long xx = 1;\n        long\
    \ yy = 1;\n        long xxx = 1;\n        long yyy = 1;\n        long xxxx = 1;\n\
    \        long yyyy = 1;\n        long xxxxx = 1;\n        long yyyyy = 1;\n  \
    \      long xxxxxx = 1;\n        long yyyyyy = 1;\n        long xxxxxy = 1;\n\
    \        long yyyyyy = 1;\n        long xxxxxy = 0;\n        long yyyyyy = 0;\n\
    \        long xxxxxx = 0;\n        long yyyyyy = 0;\n        long xxxxxx = 0;\n\
    \        long yyyyyy = 0;\n        long xxxxxx = 0;\n        long yyyyyy = 0;\n\
    \        long xxxxxx = 0;\n        long yyyyyy = 0;\n        long xxxxxx = 0;\n\
    \        long yyyyyy = 0;\n        long xxxxxx = 0;\n        long yyyyyy = 0;\n\
    \        long xxxxxx = 0;\n        long yyyyyy = 0;\n        long xxxxxx = 0;\n\
    \        long yyyyyy = 0;\n        long xxxxxx = 0;\n        long yyyyyy = 0;\n\
    \        long xxxxxx = 0;\n        long yyyyyy = 0;\n        long xxxxxx = 0;\n\
    \        long yyyyyy = 0;\n        long xxxxxx = 0;\n        long yyyyyy = 0;\n\
    \        long xxxxxx = 0;\n        long yyyyyy = 0;\n        long xxxxxx = 0;\n\
    \        long yyyyyy = 0;\n        long xxxxxx = 0;\n        long yyyyyy = 0;\n\
    \        long xxxxxx = 0;\n        long yyyyyy = 0;\n        long xxxxxx = 0;\n\
    \        long yyyyyy = 0;\n        long xxxxxx = 0;\n        long yyyyyy = 0;\n\
    \        long xxxxxx = 0;\n        long yyyyyy = 0;\n        long xxxxxx = 0;\n\
    \        long yyyyyy = 0;\n        long xxxxxx = 0;\n        long yyyyyy = 0;\n\
    \        long xxxxxx = 0;\n        long yyyyyy = 0;\n        long xxxxxx = 0;\n\
    \        long yyyyyy = 0;\n        long xxxxxx = 0;\n        long yyyyyy = 0;\n\
    \        long xxxxxx = 0;\n        long yyyyyy = 0;\n        long xxxxxx = 0;\n\
    \        long yyyyyy = 0;\n        long xxxxxx = 0;\n        long yyyyyy = 0;\n\
    \        long xxxxxx = 0;\n        long yyyyyy = 0;\n        long xxxxxx = 0;\n\
    \        long yyyyyy = 0;\n        long xxxxxx = 0;\n        long yyyyyy = 0;\n\
    \        long xxxxxx = 0;\n        long yyyyyy = 0;\n        long xxxxxx = 0;\n\
    \        long yyyyyy = 0;\n        long xxxxxx = 0;\n        long yyyyyy = 0;\n\
    \        long xxxxxx = 0;\n        long ", "        List<long> result = new List<long>();\n\
    \        long x = 0;\n        long xsq = 0;\n        long xsq2 = 0;\n        long\
    \ xsq3 = 0;\n        long xsq4 = 0;\n        long xsq5 = 0;\n        long xsq6\
    \ = 0;\n        long xsq7 = 0;\n        long xsq8 = 0;\n        long xsq9 = 0;\n\
    \        long xsq10 = 0;\n        long xsq11 = 0;\n        long xsq12 = 0;\n \
    \       long xsq13 = 0;\n        long xsq14 = 0;\n        long xsq15 = 0;\n  \
    \      long xsq16 = 0;\n        long xsq17 = 0;\n        long xsq18 = 0;\n   \
    \     long xsq19 = 0;\n        long xsq20 = 0;\n        long xsq21 = 0;\n    \
    \    long xsq22 = 0;\n        long xsq23 = 0;\n        long xsq24 = 0;\n     \
    \   long xsq25 = 0;\n        long xsq26 = 0;\n        long xsq27 = 0;\n      \
    \  long xsq28 = 0;\n        long xsq29 = 0;\n        long xsq30 = 0;\n       \
    \ long xsq31 = 0;\n        long xsq32 = 0;\n        long xsq33 = 0;\n        long\
    \ xsq34 = 0;\n        long xsq35 = 0;\n        long xsq36 = 0;\n        long xsq37\
    \ = 0;\n        long xsq38 = 0;\n        long xsq39 = 0;\n        long xsq40 =\
    \ 0;\n        long xsq41 = 0;\n        long xsq42 = 0;\n        long xsq43 = 0;\n\
    \        long xsq44 = 0;\n        long xsq45 = 0;\n        long xsq46 = 0;\n \
    \       long xsq47 = 0;\n        long xsq48 = 0;\n        long xsq49 = 0;\n  \
    \      long xsq50 = 0;\n        long xsq51 = 0;\n        long xsq52 = 0;\n   \
    \     long xsq53 = 0;\n        long xsq54 = 0;\n        long xsq55 = 0;\n    \
    \    long xsq56 = 0;\n        long xsq57 = 0;\n        long xsq58 = 0;\n     \
    \   long xsq59 = 0;\n        long xsq60 = 0;\n        long xsq61 = 0;\n      \
    \  long xsq62 = 0;\n        long xsq63 = 0;\n        long xsq64 = 0;\n       \
    \ long xsq65 = 0;\n        long xsq66 = 0;\n        long xsq67 = 0;\n        long\
    \ xsq68 = 0;\n        long xsq69 = 0;\n        long xsq70 = 0;\n        long xsq71\
    \ = 0;\n        long xsq72", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < xs.Count; i++) {\n            result.Add(xs[i] *\
    \ i);\n        }\n        return result;", "        List<long> derivative = new\
    \ List<long>();\n        long x = 1;\n        long y = 1;\n        foreach (long\
    \ xx in xs) {\n            derivative .Add(x * y);\n            x *= xx;\n   \
    \         y *= xx;\n        }\n        return derivative;", "        List<long>\
    \ result = new List<long>();\n        long x = 0;\n        long y = 0;\n     \
    \   long z = 0;\n        long sum = 0;\n        long product = 1;\n        foreach\
    \ (long i in xs) {\n            sum += i;\n        }\n        foreach (long i\
    \ in xs) {\n            product *= i;\n        }\n        long power = 1;\n  \
    \      while (power < sum) {\n            power = power * 2;\n        }\n    \
    \    long power = power;\n        while (power > 1) {\n            power = power\
    \ / 2;\n        }\n        long power2 = power;\n        while (power2 < power)\
    \ {\n            power2 = power2 * 2;\n        }\n        long power2 = power2;\n\
    \        while (power2 > 1) {\n            power2 = power2 / 2;\n        }\n \
    \       long power3 = power2;\n        while (power3 < power2) {\n           \
    \ power3 = power3 * 2;\n        }\n        long power3 = power3;\n        while\
    \ (power3 > 1) {\n            power3 = power3 / 2;\n        }\n        long power4\
    \ = power3;\n        while (power4 > 1) {\n            power4 = power4 / 2;\n\
    \        }\n        long power5 = power4;\n        while (power5 > 1) {\n    \
    \        power5 = power5 / 2;\n        }\n        long power6 = power5;\n    \
    \    while (power6 > 1) {\n            power6 = power6 / 2;\n        }\n     \
    \   long power7 = power6;\n        while (power7 > 1) {\n            power7 =\
    \ power7 / 2;\n        }\n        long power8 = power7;\n        while (power8\
    \ > 1) {\n            power8 = power8 / 2;\n        }\n        long power9 = power8;\n\
    \        while (power9 > 1) {\n            power9 = power9 / 2;\n        }\n \
    \       long power10 = power9;\n        while (power10 > 1) {\n            power10\
    \ = power10 / 2;\n        }\n        long power11 = power10;\n        while (power11\
    \ > 1) {\n            power11 = power11 / 2;\n        }\n        long power12\
    \ = power11;\n        while (power12 > 1) {\n            power12 = power12 / 2;\n\
    \        }\n        long power13 = power12;\n        while (power13 > 1) {\n \
    \           power13 = power13 / 2;\n        }\n        long power14 = power13;\n\
    \        while (power14 > 1) {\n            power14 = power14 / 2;\n        }\n\
    \        long power15 = power14;\n        while (power15 > 1) {\n            power15\
    \ = power15 / 2;\n        }\n        long power16 = power15;\n        while (power16\
    \ > 1) {\n            power16 = power16 / 2;\n        }\n        long power17\
    \ = power16;\n        while (power17 > ", "        List<long> derivative = new\
    \ List<long>();\n        long x = 1;\n        long x0 = xs[0];\n        long x1\
    \ = xs[1];\n        long x2 = xs[2];\n        long x3 = xs[3];\n        long x4\
    \ = xs[4];\n        long x5 = xs[5];\n        long x6 = xs[6];\n        long x7\
    \ = xs[7];\n        long x8 = xs[8];\n        long x9 = xs[9];\n        long x10\
    \ = xs[10];\n        long x11 = xs[11];\n        long x12 = xs[12];\n        long\
    \ x13 = xs[13];\n        long x14 = xs[14];\n        long x15 = xs[15];\n    \
    \    long x16 = xs[16];\n        long x17 = xs[17];\n        long x18 = xs[18];\n\
    \        long x19 = xs[19];\n        long x20 = xs[20];\n        long x21 = xs[21];\n\
    \        long x22 = xs[22];\n        long x23 = xs[23];\n        long x24 = xs[24];\n\
    \        long x25 = xs[25];\n        long x26 = xs[26];\n        long x27 = xs[27];\n\
    \        long x28 = xs[28];\n        long x29 = xs[29];\n        long x30 = xs[30];\n\
    \        long x31 = xs[31];\n        long x32 = xs[32];\n        long x33 = xs[33];\n\
    \        long x34 = xs[34];\n        long x35 = xs[35];\n        long x36 = xs[36];\n\
    \        long x37 = xs[37];\n        long x38 = xs[38];\n        long x39 = xs[39];\n\
    \        long x40 = xs[40];\n        long x41 = xs[41];\n        long x42 = xs[42];\n\
    \        long x43 = xs[43];\n        long x44 = xs[44];\n        long x45 = xs[45];\n\
    \        long x46 = xs[46];\n        long x47 = xs[47];\n        long x48 = xs[48];\n\
    \        long x49 = xs[49];\n        long x50 = xs[50];\n        long x51 = xs[51];\n\
    \        long x52 = xs[52];\n        long x53 = xs[53];\n        long x54 = xs[54];\n\
    \        long x55 = xs[", "        List<long> derivative = new List<long>();\n\
    \        derivative.Add(0);\n        derivative.Add(1);\n        for (int i =\
    \ 2; i <= xs.Count; i++) {\n            derivative.Add(xs[i - 1] * derivative[i\
    \ - 1]);\n        }\n        return derivative;", "        List<long> derivative\
    \ = new List<long>();\n        long x = 1;\n        long sum = 0;\n        foreach\
    \ (long n in xs) {\n            sum += n * x;\n            x *= n;\n        }\n\
    \        derivative.Add(sum);\n        return derivative;", "        List<long>\
    \ result = new List<long>();\n        long x = 1;\n        long y = 1;\n     \
    \   foreach (long xi in xs) {\n            y *= x;\n            x += xi;\n   \
    \         result.Add(y);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long x = 0;\n        long y = 0;\n     \
    \   long xx = 1;\n        long yy = 1;\n        long xxx = 1;\n        long yyy\
    \ = 1;\n        long xxxy = 0;\n        long yyyy = 1;\n        long xxyy = 0;\n\
    \        long yyyx = 0;\n        long yyyxx = 1;\n        long yyyxxy = 1;\n \
    \       long yyyxxyy = 0;\n        long yyyxxyyy = 1;\n        long yyyxxyyy =\
    \ 0;\n        long yyyxxyyxx = 0;\n        long yyyxxyyxy = 0;\n        long yyyxxyyxxy\
    \ = 1;\n        long yyyxxyyxxyy = 0;\n        long yyyxxyyxxyyy = 1;\n      \
    \  long yyyxxyyxxyyy = 0;\n        long yyyxxyyxxyyxx = 0;\n        long yyyxxyyxxyyxy\
    \ = 1;\n        long yyyxxyyxxyyxxy = 1;\n        long yyyxxyyxxyyxxyy = 0;\n\
    \        long yyyxxyyxxyyxxyyy = 1;\n        long yyyxxyyxxyyxxyyy = 0;\n    \
    \    long yyyxxyyxxyyxxyyxx = 0;\n        long yyyxxyyxxyyxxyyxy = 1;\n      \
    \  long yyyxxyyxxyyxxyyxxy = 1;\n        long yyyxxyyxxyyxxyyxxyy = 0;\n     \
    \   long yyyxxyyxxyyxxyyxxyyy = 1;\n        long yyyxxyyxxyyxxyyxxyyy = 0;\n \
    \       long yyyxxyyxxyyxxyyxxyyxx = 0;\n        long yyyxxyyxxyyxxyyxxyyxy =\
    \ 1;\n        long yyyxxyyxxyyxxyyxxyyxxy = 1;\n        long yyyxxyyxxyyxxyyxxyyxxyy\
    \ = 0;\n        long yyyxxyyxxyyxxyyxxyyxxyyy = 1;\n        long yyyxxyyxxyyxxyyxxyyxxyyy\
    \ = 0;\n        long yyyxxyyxxyyxxyyxxyyxxyyxx = 0;\n        long yyyxxyyxxyyxxyyxxyyxxyyxy\
    \ = 1;\n        long yyyxxyyxxyyxxyyxxyyxxyyxxy = 1;\n        long yyyxxyyxxyyxxyyxxyyxxyyxxyy\
    \ = 0;\n        long yyyxxyyxxyyxxyyxxyyxxyyxxyyy = 1;\n        long yyyxxyyxxyyxxyyxxyyxxyyxxyyy\
    \ = 0;\n        long yyyxxyyxxyyxxyyxxyyxxyyxxyyxx = 0;\n        ", "        List<long>\
    \ derivative = new List<long>();\n        long power = 1;\n        long sum =\
    \ 0;\n        foreach (long x in xs) {\n            sum += power * x;\n      \
    \      power = power * x;\n        }\n        derivative.Add(sum);\n        return\
    \ derivative;", "        List<long> result = new List<long>();\n        long x\
    \ = 1;\n        long sum = 0;\n        foreach (long xi in xs) {\n           \
    \ sum += xi * x;\n            x *= xi;\n        }\n        result.Add(sum);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long x = 1;\n        long y = 1;\n        long z = 1;\n        long xx =\
    \ 1;\n        long yy = 1;\n        long zz = 1;\n        long xy = 1;\n     \
    \   long yz = 1;\n        long zzz = 1;\n        long xyy = 1;\n        long yzz\
    \ = 1;\n        long zzzy = 1;\n        long xyzz = 1;\n        long yzzz = 1;\n\
    \        long zzzyx = 1;\n        long yzzzyx = 1;\n        long zzzyxy = 1;\n\
    \        long yzzzyxy = 1;\n        long zzzyxxy = 1;\n        long yzzzyxxy =\
    \ 1;\n        long zzzyxxyyx = 1;\n        long yzzzyxxyyx = 1;\n        long\
    \ zzzyxxyyxy = 1;\n        long yzzzyxxyyxy = 1;\n        long zzzyxxyyxxy = 1;\n\
    \        long yzzzyxxyyxxy = 1;\n        long zzzyxxyyxxyyx = 1;\n        long\
    \ yzzzyxxyyxxyyx = 1;\n        long zzzyxxyyxxyyxy = 1;\n        long yzzzyxxyyxxyyxy\
    \ = 1;\n        long zzzyxxyyxxyyxxy = 1;\n        long yzzzyxxyyxxyyxxy = 1;\n\
    \        long zzzyxxyyxxyyxxyyx = 1;\n        long yzzzyxxyyxxyyxxyyx = 1;\n \
    \       long zzzyxxyyxxyyxxyyxy = 1;\n        long yzzzyxxyyxxyyxxyyxy = 1;\n\
    \        long zzzyxxyyxxyyxxyyxxy = 1;\n        long yzzzyxxyyxxyyxxyyxxy = 1;\n\
    \        long zzzyxxyyxxyyxxyyxxyyx = 1;\n        long yzzzyxxyyxxyyxxyyxxy =\
    \ 1;\n        long zzzyxxyyxxyyxxyyxxyyxy = 1;\n        long yzzzyxxyyxxyyxxyyxxyyy\
    \ = 1;\n        long zzzyxxyyxxyyxxyyxxyyxxy = 1;\n        long yzzzyxxyyxxyyxxyyxxyyxxy\
    \ = 1;\n        long zzzyxxyyxxyyxxyyxxyyxxyyx = 1;\n        long yzzzyxxyyxxyyxxyyxxyyxxyyx\
    \ = 1;\n        long zzzyxxyyxxyyxxyyxxyyxxyyxxy = 1;\n        long yzz", "  \
    \      List<long> derivative = new List<long>();\n        long power = 1;\n  \
    \      long sum = 0;\n        foreach (long x in xs) {\n            sum += power\
    \ * x;\n            power *= x;\n        }\n        derivative.Add(sum);\n   \
    \     power = 1;\n        sum = 0;\n        foreach (long x in xs) {\n       \
    \     sum += power;\n            power *= x;\n        }\n        derivative.Add(sum);\n\
    \        return derivative;", "        List<long> derivative = new List<long>();\n\
    \        long x = 0;\n        long xpow = 1;\n        long y = 0;\n        long\
    \ ypow = 1;\n        long xprev = 0;\n        long yprev = 0;\n        long xnext\
    \ = 0;\n        long ynext = 0;\n        long xdiff = 0;\n        long ydiff =\
    \ 0;\n        long xdiffpow = 1;\n        long ydiffpow = 1;\n        long xdiffprev\
    \ = 0;\n        long ydiffprev = 0;\n        long xdiffnext = 0;\n        long\
    \ ydiffnext = 0;\n        long xdiffdiff = 0;\n        long ydiffdiff = 0;\n \
    \       long xdiffdiffpow = 1;\n        long ydiffdiffpow = 1;\n        long xdiffdiffprev\
    \ = 0;\n        long ydiffdiffprev = 0;\n        long xdiffdiffnext = 0;\n   \
    \     long ydiffdiffnext = 0;\n        long xdiffdiffdiff = 0;\n        long ydiffdiffdiff\
    \ = 0;\n        long xdiffdiffdiffpow = 1;\n        long ydiffdiffdiffpow = 1;\n\
    \        long xdiffdiffdiffprev = 0;\n        long ydiffdiffdiffprev = 0;\n  \
    \      long xdiffdiffdiffnext = 0;\n        long ydiffdiffdiffnext = 0;\n    \
    \    long xdiffdiffdiffdiff = 0;\n        long ydiffdiffdiffdiff = 0;\n      \
    \  long xdiffdiffdiffdiffpow = 1;\n        long ydiffdiffdiffdiffpow = 1;\n  \
    \      long xdiffdiffdiffdiffprev = 0;\n        long ydiffdiffdiffdiffprev = 0;\n\
    \        long xdiffdiffdiffdiffnext = 0;\n        long ydiffdiffdiffdiffnext =\
    \ 0;\n        long xdiffdiffdiffdiffdiff = 0;\n        long ydiffdiffdiffdiffdiff\
    \ = 0;\n        long xdiffdiffdiffdiffdiffpow = 1;\n        long ydiffdiffdiffdiffdiffpow\
    \ = 1;\n        long xdiffdiffdiffdiffprev = 0;\n        long ydiffdiffdiffdiffprev\
    \ = 0;\n        long xdiffdiffdiffdiffnext = 0;\n        long ydiffdiffdiffdiffnext\
    \ = 0;\n        long xdiffdiffdiffdiffdiff = 0;\n        long ydiffdiffdiffdiffdiff\
    \ = 0;\n        long xdiffdiffdiffdiffdiffpow = 1;\n        long ydiffdiffdiffdiffdiffpow\
    \ = 1;\n        long xdiffdiffdiffdiffprev = 0;\n        long ydiffdiffdiffdiffprev\
    \ = 0;\n        long xdiffdiffdiffdiffnext = 0;\n        long ydiffdiffdiffdiffnext\
    \ = 0;\n        long xdiffdiffdiffdiffdiff = 0;\n        long ydiffdiffdiffdiffdiff\
    \ = 0;\n        long xdiffdiffdiffdiffdiff", "        List<long> result = new\
    \ List<long>();\n        long x = 0;\n        long y = 0;\n        long xx = 1;\n\
    \        long xxx = 1;\n        long xxxx = 0;\n        long xxxxx = 1;\n    \
    \    long xxxxxx = 0;\n        long xxxxxxx = 0;\n        long xxxxxxxx = 0;\n\
    \        long xxxxxxxxx = 1;\n        long xxxxxxxxxx = 0;\n        long xxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxx = 1;\n    \
    \    long xxxxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxxxx = 0;\n        long\
    \ xxxxxxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long\
    \ xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 0;\n        long\
    \ xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 0;\n      \
    \  long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxx", "        List<long> derivative = new\
    \ List<long>();\n        long x = 0;\n        long y = 0;\n        long sum =\
    \ 0;\n        for (int i = 0; i < xs.Count; i++) {\n            x += xs[i];\n\
    \            y += xs[i] * x;\n            sum += xs[i] * xs[i];\n        }\n \
    \       derivative.Add(sum);\n        for (int i = 1; i < xs.Count; i++) {\n \
    \           derivative.Add(xs[i] * sum);\n        }\n        return derivative;",
  "        List<long> derivative = new List<long>();\n        derivative.Add(0);\n\
    \        for (int i = 1; i < xs.Count; i++) {\n            derivative.Add(xs[i]\
    \ * derivative[i - 1]);\n        }\n        return derivative;", "        List<long>\
    \ result = new List<long>();\n        long x = 0;\n        long y = 0;\n     \
    \   long z = 0;\n        long sum = 0;\n        long product = 1;\n        foreach\
    \ (long i in xs) {\n            sum += i;\n        }\n        foreach (long i\
    \ in xs) {\n            product *= i;\n        }\n        long d = 1;\n      \
    \  for (int i = 0; i < xs.Count; i++) {\n            long a = xs[i];\n       \
    \     long b = xs[i + 1];\n            long c = xs[i + 2];\n            long d\
    \ = xs[i + 3];\n            long e = xs[i + 4];\n            long f = xs[i + 5];\n\
    \            long g = xs[i + 6];\n            long h = xs[i + 7];\n          \
    \  long i = xs[i + 8];\n            long j = xs[i + 9];\n            long k =\
    \ xs[i + 10];\n            long l = xs[i + 11];\n            long m = xs[i + 12];\n\
    \            long n = xs[i + 13];\n            long o = xs[i + 14];\n        \
    \    long p = xs[i + 15];\n            long q = xs[i + 16];\n            long\
    \ r = xs[i + 17];\n            long s = xs[i + 18];\n            long t = xs[i\
    \ + 19];\n            long u = xs[i + 20];\n            long v = xs[i + 21];\n\
    \            long w = xs[i + 22];\n            long x = xs[i + 23];\n        \
    \    long y = xs[i + 24];\n            long z = xs[i + 25];\n            long\
    \ a = xs[i + 26];\n            long b = xs[i + 27];\n            long c = xs[i\
    \ + 28];\n            long d = xs[i + 29];\n            long e = xs[i + 30];\n\
    \            long f = xs[i + 31];\n            long g = xs[i + 32];\n        \
    \    long h = xs[i + 33];\n            long i = xs[i + 34];\n            long\
    \ j = xs[i + 35];\n            long k = xs[i + 36];\n            long l = xs[i\
    \ + 37];\n            long m = xs[i + 38];\n            long n = xs[i + 39];\n\
    \            long o = xs[i + 40];\n            long p = xs[i + 41];\n        \
    \    long q = xs[i + 42];\n            long r = xs[i + 43];\n            long\
    \ s = xs[i + 44];\n            long t = xs[i + 45];\n            long u = xs[i\
    \ + 46];\n            long v = xs[i + 47];\n            long w = xs[i + 48];",
  "        List<long> result = new List<long>();\n        long x = 0;\n        long\
    \ y = 0;\n        long z = 0;\n        long d = 0;\n        long e = 0;\n    \
    \    long f = 0;\n        long g = 0;\n        long h = 0;\n        long i = 0;\n\
    \        long j = 0;\n        long k = 0;\n        long l = 0;\n        long m\
    \ = 0;\n        long n = 0;\n        long o = 0;\n        long p = 0;\n      \
    \  long q = 0;\n        long r = 0;\n        long s = 0;\n        long t = 0;\n\
    \        long u = 0;\n        long v = 0;\n        long w = 0;\n        long x\
    \ = 0;\n        long y = 0;\n        long z = 0;\n        long d = 0;\n      \
    \  long e = 0;\n        long f = 0;\n        long g = 0;\n        long h = 0;\n\
    \        long i = 0;\n        long j = 0;\n        long k = 0;\n        long l\
    \ = 0;\n        long m = 0;\n        long n = 0;\n        long o = 0;\n      \
    \  long p = 0;\n        long q = 0;\n        long r = 0;\n        long s = 0;\n\
    \        long t = 0;\n        long u = 0;\n        long v = 0;\n        long w\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long d = 0;\n        long e = 0;\n        long f = 0;\n        long g = 0;\n\
    \        long h = 0;\n        long i = 0;\n        long j = 0;\n        long k\
    \ = 0;\n        long l = 0;\n        long m = 0;\n        long n = 0;\n      \
    \  long o = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n\
    \        long s = 0;\n        long t = 0;\n        long u = 0;\n        long v\
    \ = 0;\n        long w = 0;\n        long x = 0;\n        long y = 0;\n      \
    \  long z = 0;\n        long d = 0;\n        long e = 0;\n        long f = 0;\n\
    \        long g = 0;\n        long h = 0;\n        long i = 0;\n        long j\
    \ = 0;\n        long k = 0;\n        long l = 0;\n        long m = 0;\n      \
    \  long n = 0;\n        long o = 0;\n        long p = 0;\n        long q = 0;\n\
    \        long r = 0;\n        long s = 0;\n        long t = 0;\n        long u\
    \ = 0;\n        long v = 0;\n        long w = 0;\n        long x = 0;\n      \
    \  long y = 0;\n        long z = 0;\n        long d = 0;\n        long e = 0;\n\
    \        long f = 0;\n        long g = 0;\n        long h = 0;\n        long i\
    \ = 0;\n        long j = 0;\n        long k = 0;\n", "        List<long> result\
    \ = new List<long>();\n        long x = 1;\n        long x0 = xs[0];\n       \
    \ long x1 = xs[1];\n        long x2 = xs[2];\n        long x3 = xs[3];\n     \
    \   long x4 = xs[4];\n        long x5 = xs[5];\n        long x6 = xs[6];\n   \
    \     long x7 = xs[7];\n        long x8 = xs[8];\n        long x9 = xs[9];\n \
    \       long x10 = xs[10];\n        long x11 = xs[11];\n        long x12 = xs[12];\n\
    \        long x13 = xs[13];\n        long x14 = xs[14];\n        long x15 = xs[15];\n\
    \        long x16 = xs[16];\n        long x17 = xs[17];\n        long x18 = xs[18];\n\
    \        long x19 = xs[19];\n        long x20 = xs[20];\n        long x21 = xs[21];\n\
    \        long x22 = xs[22];\n        long x23 = xs[23];\n        long x24 = xs[24];\n\
    \        long x25 = xs[25];\n        long x26 = xs[26];\n        long x27 = xs[27];\n\
    \        long x28 = xs[28];\n        long x29 = xs[29];\n        long x30 = xs[30];\n\
    \        long x31 = xs[31];\n        long x32 = xs[32];\n        long x33 = xs[33];\n\
    \        long x34 = xs[34];\n        long x35 = xs[35];\n        long x36 = xs[36];\n\
    \        long x37 = xs[37];\n        long x38 = xs[38];\n        long x39 = xs[39];\n\
    \        long x40 = xs[40];\n        long x41 = xs[41];\n        long x42 = xs[42];\n\
    \        long x43 = xs[43];\n        long x44 = xs[44];\n        long x45 = xs[45];\n\
    \        long x46 = xs[46];\n        long x47 = xs[47];\n        long x48 = xs[48];\n\
    \        long x49 = xs[49];\n        long x50 = xs[50];\n        long x51 = xs[51];\n\
    \        long x52 = xs[52];\n        long x53 = xs[53];\n        long x54 = xs[54];\n\
    \        long x55 = xs[", "        List<long> result = new List<long>();\n   \
    \     for (int i = 0; i < xs.Count; i++) {\n            result.Add(xs[i] * i);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long x = 0;\n        long xsq = 0;\n        long xsq2 = 0;\n        long\
    \ xsq3 = 0;\n        long xsq4 = 0;\n        long xsq5 = 0;\n        long xsq6\
    \ = 0;\n        long xsq7 = 0;\n        long xsq8 = 0;\n        long xsq9 = 0;\n\
    \        long xsq10 = 0;\n        long xsq11 = 0;\n        long xsq12 = 0;\n \
    \       long xsq13 = 0;\n        long xsq14 = 0;\n        long xsq15 = 0;\n  \
    \      long xsq16 = 0;\n        long xsq17 = 0;\n        long xsq18 = 0;\n   \
    \     long xsq19 = 0;\n        long xsq20 = 0;\n        long xsq21 = 0;\n    \
    \    long xsq22 = 0;\n        long xsq23 = 0;\n        long xsq24 = 0;\n     \
    \   long xsq25 = 0;\n        long xsq26 = 0;\n        long xsq27 = 0;\n      \
    \  long xsq28 = 0;\n        long xsq29 = 0;\n        long xsq30 = 0;\n       \
    \ long xsq31 = 0;\n        long xsq32 = 0;\n        long xsq33 = 0;\n        long\
    \ xsq34 = 0;\n        long xsq35 = 0;\n        long xsq36 = 0;\n        long xsq37\
    \ = 0;\n        long xsq38 = 0;\n        long xsq39 = 0;\n        long xsq40 =\
    \ 0;\n        long xsq41 = 0;\n        long xsq42 = 0;\n        long xsq43 = 0;\n\
    \        long xsq44 = 0;\n        long xsq45 = 0;\n        long xsq46 = 0;\n \
    \       long xsq47 = 0;\n        long xsq48 = 0;\n        long xsq49 = 0;\n  \
    \      long xsq50 = 0;\n        long xsq51 = 0;\n        long xsq52 = 0;\n   \
    \     long xsq53 = 0;\n        long xsq54 = 0;\n        long xsq55 = 0;\n    \
    \    long xsq56 = 0;\n        long xsq57 = 0;\n        long xsq58 = 0;\n     \
    \   long xsq59 = 0;\n        long xsq60 = 0;\n        long xsq61 = 0;\n      \
    \  long xsq62 = 0;\n        long xsq63 = 0;\n        long xsq64 = 0;\n       \
    \ long xsq65 = 0;\n        long xsq66 = 0;\n        long xsq67 = 0;\n        long\
    \ xsq68 = 0;\n        long xsq69 = 0;\n        long xsq70 = 0;\n        long xsq71\
    \ = 0;\n        long xsq72", "        List<long> derivative = new List<long>();\n\
    \        long x = 1;\n        foreach (long n in xs) {\n            derivative\
    \ .Add(x * n);\n            x ++;\n        }\n        return derivative;", " \
    \       List<long> derivative = new List<long>();\n        long x = 0;\n     \
    \   long y = 0;\n        long d = 0;\n        for (int i = 0; i < xs.Count; i++)\
    \ {\n            x = xs[i];\n            y = xs[i + 1];\n            d = x * y;\n\
    \            derivative.Add(d);\n        }\n        return derivative;", "   \
    \     List<long> derivative = new List<long>();\n        derivative.Add(0);\n\
    \        derivative.Add(1);\n        foreach (long x in xs) {\n            derivative.Add(derivative[derivative.Count\
    \ - 1] * x);\n        }\n        return derivative;", "        List<long> derivative\
    \ = new List<long>();\n        long x = 1;\n        long xx = 1;\n        long\
    \ xxx = 1;\n        long xxxx = 1;\n        long xxxxx = 1;\n        long xxxxxx\
    \ = 1;\n        long xxxxxxx = 1;\n        long xxxxxxxx = 1;\n        long xxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxx = 1;\n        long xxxxxxxxxxx = 1;\n        long\
    \ xxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxx = 1;\n\
    \        long xxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxx = 1;\n \
    \       long xxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxx = 1;\n\
    \        long xxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long\
    \ xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long\
    \ xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n      \
    \  long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long ", "        List<long> derivative = new List<long>();\n \
    \       long x = 0;\n        long xd = 0;\n        long xd2 = 1;\n        long\
    \ xd3 = 1;\n        long xd4 = 2;\n        long xd5 = 3;\n        long xd6 = 4;\n\
    \        long xd7 = 5;\n        long xd8 = 6;\n        long xd9 = 7;\n       \
    \ long xd10 = 8;\n        long xd11 = 9;\n        long xd12 = 10;\n        long\
    \ xd13 = 11;\n        long xd14 = 12;\n        long xd15 = 13;\n        long xd16\
    \ = 14;\n        long xd17 = 15;\n        long xd18 = 16;\n        long xd19 =\
    \ 17;\n        long xd20 = 18;\n        long xd21 = 19;\n        long xd22 = 20;\n\
    \        long xd23 = 21;\n        long xd24 = 22;\n        long xd25 = 23;\n \
    \       long xd26 = 24;\n        long xd27 = 25;\n        long xd28 = 26;\n  \
    \      long xd29 = 27;\n        long xd30 = 28;\n        long xd31 = 29;\n   \
    \     long xd32 = 30;\n        long xd33 = 31;\n        long xd34 = 32;\n    \
    \    long xd35 = 33;\n        long xd36 = 34;\n        long xd37 = 35;\n     \
    \   long xd38 = 36;\n        long xd39 = 37;\n        long xd40 = 38;\n      \
    \  long xd41 = 39;\n        long xd42 = 40;\n        long xd43 = 41;\n       \
    \ long xd44 = 42;\n        long xd45 = 43;\n        long xd46 = 44;\n        long\
    \ xd47 = 45;\n        long xd48 = 46;\n        long xd49 = 47;\n        long xd50\
    \ = 48;\n        long xd51 = 49;\n        long xd52 = 50;\n        long xd53 =\
    \ 51;\n        long xd54 = 52;\n        long xd55 = 53;\n        long xd56 = 54;\n\
    \        long xd57 = 55;\n        long xd58 = 56;\n        long xd59 = 57;\n \
    \       long xd60 = 58;\n        long xd61 = 59;\n        long xd62 = 60;\n  \
    \      long xd63 = 61;\n        long xd64 = 62;", "        List<long> result =\
    \ new List<long>();\n        long x = 0;\n        long sum = 0;\n        foreach\
    \ (long n in xs) {\n            sum += n * x;\n            x++;\n        }\n \
    \       result.Add(sum);\n        for (int i = 1; i < xs.Count; i++) {\n     \
    \       result.Add(xs[i] * result[i - 1]);\n        }\n        return result;",
  "        List<long> derivative = new List<long>();\n        long x = 1;\n      \
    \  long y = 1;\n        long pow = 1;\n        foreach (long i in xs) {\n    \
    \        derivative .Add(i * x);\n            pow *= i;\n            x += y;\n\
    \            y += pow;\n        }\n        return derivative;", "        List<long>\
    \ derivative = new List<long>();\n        long x = 1;\n        long xx = 1;\n\
    \        long xxx = 1;\n        long xxxx = 1;\n        long xxxxx = 1;\n    \
    \    long xxxxxx = 1;\n        long xxxxxxx = 1;\n        long xxxxxxxx = 1;\n\
    \        long xxxxxxxxx = 1;\n        long xxxxxxxxxx = 1;\n        long xxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxx = 1;\n    \
    \    long xxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxx = 1;\n        long\
    \ xxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long\
    \ xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long\
    \ xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n      \
    \  long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx", "        List<long>\
    \ derivative = new List<long>();\n        long x = 1;\n        long y = 1;\n \
    \       foreach (long xi in xs) {\n            derivative .Add(x * y);\n     \
    \       x = xi * x;\n            y = xi * y;\n        }\n        return derivative;",
  "        List<long> derivative = new List<long>();\n        derivative.Add(0);\n\
    \        foreach (long x in xs) {\n            derivative.Add(derivative[derivative.Count\
    \ - 1] * x);\n        }\n        return derivative;", "        List<long> result\
    \ = new List<long>();\n        long x = 0;\n        long sum = 0;\n        foreach\
    \ (long n in xs) {\n            sum += n;\n        }\n        result.Add(sum);\n\
    \        for (int i = 1; i < xs.Count; i++) {\n            long n = xs[i];\n \
    \           sum += n * x;\n            result.Add(sum);\n            x += n;\n\
    \        }\n        return result;", "        List<long> derivative = new List<long>();\n\
    \        derivative.Add(0);\n        derivative.Add(1);\n        foreach (long\
    \ x in xs) {\n            derivative.Add(derivative[derivative.Count - 1] * x);\n\
    \        }\n        return derivative;", "        List<long> result = new List<long>();\n\
    \        long x = 0;\n        long y = 0;\n        long d = 0;\n        long xd\
    \ = 0;\n        long yd = 0;\n        long xd1 = 0;\n        long yd1 = 0;\n \
    \       long xd2 = 0;\n        long yd2 = 0;\n        long xd3 = 0;\n        long\
    \ yd3 = 0;\n        long xd4 = 0;\n        long yd4 = 0;\n        long xd5 = 0;\n\
    \        long yd5 = 0;\n        long xd6 = 0;\n        long yd6 = 0;\n       \
    \ long xd7 = 0;\n        long yd7 = 0;\n        long xd8 = 0;\n        long yd8\
    \ = 0;\n        long xd9 = 0;\n        long yd9 = 0;\n        long xd10 = 0;\n\
    \        long yd10 = 0;\n        long xd11 = 0;\n        long yd11 = 0;\n    \
    \    long xd12 = 0;\n        long yd12 = 0;\n        long xd13 = 0;\n        long\
    \ yd13 = 0;\n        long xd14 = 0;\n        long yd14 = 0;\n        long xd15\
    \ = 0;\n        long yd15 = 0;\n        long xd16 = 0;\n        long yd16 = 0;\n\
    \        long xd17 = 0;\n        long yd17 = 0;\n        long xd18 = 0;\n    \
    \    long yd18 = 0;\n        long xd19 = 0;\n        long yd19 = 0;\n        long\
    \ xd20 = 0;\n        long yd20 = 0;\n        long xd21 = 0;\n        long yd21\
    \ = 0;\n        long xd22 = 0;\n        long yd22 = 0;\n        long xd23 = 0;\n\
    \        long yd23 = 0;\n        long xd24 = 0;\n        long yd24 = 0;\n    \
    \    long xd25 = 0;\n        long yd25 = 0;\n        long xd26 = 0;\n        long\
    \ yd26 = 0;\n        long xd27 = 0;\n        long yd27 = 0;\n        long xd28\
    \ = 0;\n        long yd28 = 0;\n        long xd29 = 0;\n        long yd29 = 0;\n\
    \        long xd30 = 0;\n        long yd30 = 0;\n        long xd31 = 0;\n    \
    \    long yd31 = 0;\n        long xd32 = 0;\n        long yd32 = 0;\n        long\
    \ xd33 = 0;\n        long yd33 = 0;\n        long xd34 = 0;\n        long yd34\
    \ = 0;\n        long xd35 = 0;\n        long yd35 = 0;\n        long xd36", " \
    \       List<long> derivative = new List<long>();\n        derivative.Add(1);\n\
    \        derivative.Add((long)xs[0]);\n        for (int i = 1; i < xs.Count; i++)\
    \ {\n            derivative.Add((long)xs[i] * derivative[i - 1]);\n        }\n\
    \        return derivative;", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < xs.Count; i++) {\n            result.Add(xs[i] *\
    \ i);\n        }\n        return result;", "        List<long> derivative = new\
    \ List<long>();\n        long x = 0;\n        long y = 0;\n        long z = 0;\n\
    \        long xx = 1;\n        long yy = 1;\n        long zz = 1;\n        long\
    \ xy = 1;\n        long yz = 1;\n        long zzz = 1;\n        long xyy = 1;\n\
    \        long yzz = 1;\n        long zzzy = 1;\n        long xyz = 1;\n      \
    \  long yzx = 1;\n        long zxy = 1;\n        long zxx = 1;\n        long xzz\
    \ = 1;\n        long yzx = 1;\n        long zxy = 1;\n        long xzzy = 1;\n\
    \        long yzzx = 1;\n        long zxxy = 0;\n        long yzxx = 1;\n    \
    \    long zxyy = 0;\n        long xzzy = 0;\n        long yzzx = 0;\n        long\
    \ zxxy = 0;\n        long yzxx = 0;\n        long zxyy = 0;\n        long xzzy\
    \ = 0;\n        long yzzx = 0;\n        long zxxy = 0;\n        long yzxx = 0;\n\
    \        long zxyy = 0;\n        long xzzy = 0;\n        long yzzx = 0;\n    \
    \    long zxxy = 0;\n        long yzxx = 0;\n        long zxyy = 0;\n        long\
    \ xzzy = 0;\n        long yzzx = 0;\n        long zxxy = 0;\n        long yzxx\
    \ = 0;\n        long zxyy = 0;\n        long xzzy = 0;\n        long yzzx = 0;\n\
    \        long zxxy = 0;\n        long yzxx = 0;\n        long zxyy = 0;\n    \
    \    long xzzy = 0;\n        long yzzx = 0;\n        long zxxy = 0;\n        long\
    \ yzxx = 0;\n        long zxyy = 0;\n        long xzzy = 0;\n        long yzzx\
    \ = 0;\n        long zxxy = 0;\n        long yzxx = 0;\n        long zxyy = 0;\n\
    \        long xzzy = 0;\n        long yzzx = 0;\n        long zxxy = 0;\n    \
    \    long yzxx = 0;\n        long zxyy = 0;\n        long xzzy = 0;\n        long\
    \ yzzx = 0;\n        long zxxy = 0;\n        long yzxx = 0;\n        long zxyy\
    \ = 0;\n        long xzzy = 0;\n        long yzzx = 0;\n        long zxxy = 0;\n\
    \        long yzxx = 0;\n        long zxyy = 0;\n        ", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < xs.Count; i++) {\n \
    \           result.Add(xs[i] * i);\n        }\n        return result;", "    \
    \    List<long> result = new List<long>();\n        long x = 1;\n        foreach\
    \ (long n in xs) {\n            long y = x * n;\n            result.Add(y);\n\
    \            x = y;\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long x = 0;\n        long y = 0;\n        long\
    \ z = 0;\n        long xx = 1;\n        long yy = 1;\n        long zz = 1;\n \
    \       long xy = 1;\n        long yz = 1;\n        long zzz = 1;\n        long\
    \ xyy = 1;\n        long yzz = 1;\n        long zzzy = 1;\n        long xyzz =\
    \ 1;\n        long yzzz = 1;\n        long zzzyy = 1;\n        long xyzzz = 1;\n\
    \        long yzzzy = 0;\n        long zzzyz = 0;\n        long xyzzzy = 0;\n\
    \        long yzzzyz = 0;\n        long zzzyzy = 0;\n        long xyzzzyz = 0;\n\
    \        long yzzzyzy = 0;\n        long zzzyzyz = 0;\n        long xyzzzyzy =\
    \ 0;\n        long yzzzyzyz = 0;\n        long zzzyzyzy = 0;\n        long xyzzzyzyz\
    \ = 0;\n        long yzzzyzyzy = 0;\n        long zzzyzyzyz = 0;\n        long\
    \ xyzzzyzyzy = 0;\n        long yzzzyzyzyz = 0;\n        long zzzyzyzyzy = 0;\n\
    \        long xyzzzyzyzyz = 0;\n        long yzzzyzyzyzy = 0;\n        long zzzyzyzyzyz\
    \ = 0;\n        long xyzzzyzyzyzy = 0;\n        long yzzzyzyzyzyz = 0;\n     \
    \   long zzzyzyzyzyzy = 0;\n        long xyzzzyzyzyzyz = 0;\n        long yzzzyzyzyzyzy\
    \ = 0;\n        long zzzyzyzyzyzyz = 0;\n        long xyzzzyzyzyzyzy = 0;\n  \
    \      long yzzzyzyzyzyzyz = 0;\n        long zzzyzyzyzyzyzyz = 0;\n        long\
    \ xyzzzyzyzyzyzyz = 0;\n        long yzzzyzyzyzyzyzy = 0;\n        long zzzyzyzyzyzyzyz\
    \ = 0;\n        long xyzzzyzyzyzyzyzy = 0;\n        long yzzzyzyzyzyzyzyz = 0;\n\
    \        long zzzyzyzyzyzyzyzy = 0;\n        long xyzzzyzyzyzyzyz = 0;\n     \
    \   long yzzzyzyzyzyzyzyz = 0;\n        long zzzyzyzyzyzyzyzyz = 0;\n        long\
    \ xyzzzyzyzyzyzyzyz = 0;\n        long yzzzyzyzyzyzyzyzy = 0;\n", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < xs.Count; i++) {\n \
    \           result.Add(xs[i] * xs[i]);\n        }\n        return result;", " \
    \       List<long> result = new List<long>();\n        for (int i = 0; i < xs.Count;\
    \ i++) {\n            result.Add(xs[i] * xs[i]);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long product = 1;\n    \
    \    foreach (long x in xs) {\n            product *= x;\n        }\n        result.Add(product);\n\
    \        for (int i = 1; i < xs.Count; i++) {\n            result.Add(xs[i] *\
    \ product);\n        }\n        return result;", "        List<long> result =\
    \ new List<long>();\n        long x = 0;\n        long y = 0;\n        long sum\
    \ = 0;\n        foreach (long i in xs) {\n            sum += i;\n        }\n \
    \       foreach (long i in xs) {\n            y = sum;\n            sum += i;\n\
    \            result.Add(y);\n        }\n        return result;", "        List<long>\
    \ derivative = new List<long>();\n        long x = 0;\n        long y = 0;\n \
    \       long z = 0;\n        long z2 = 0;\n        long z3 = 0;\n        long\
    \ z4 = 0;\n        long z5 = 0;\n        long z6 = 0;\n        long z7 = 0;\n\
    \        long z8 = 0;\n        long z9 = 0;\n        long z10 = 0;\n        long\
    \ z11 = 0;\n        long z12 = 0;\n        long z13 = 0;\n        long z14 = 0;\n\
    \        long z15 = 0;\n        long z16 = 0;\n        long z17 = 0;\n       \
    \ long z18 = 0;\n        long z19 = 0;\n        long z20 = 0;\n        long z21\
    \ = 0;\n        long z22 = 0;\n        long z23 = 0;\n        long z24 = 0;\n\
    \        long z25 = 0;\n        long z26 = 0;\n        long z27 = 0;\n       \
    \ long z28 = 0;\n        long z29 = 0;\n        long z30 = 0;\n        long z31\
    \ = 0;\n        long z32 = 0;\n        long z33 = 0;\n        long z34 = 0;\n\
    \        long z35 = 0;\n        long z36 = 0;\n        long z37 = 0;\n       \
    \ long z38 = 0;\n        long z39 = 0;\n        long z40 = 0;\n        long z41\
    \ = 0;\n        long z42 = 0;\n        long z43 = 0;\n        long z44 = 0;\n\
    \        long z45 = 0;\n        long z46 = 0;\n        long z47 = 0;\n       \
    \ long z48 = 0;\n        long z49 = 0;\n        long z50 = 0;\n        long z51\
    \ = 0;\n        long z52 = 0;\n        long z53 = 0;\n        long z54 = 0;\n\
    \        long z55 = 0;\n        long z56 = 0;\n        long z57 = 0;\n       \
    \ long z58 = 0;\n        long z59 = 0;\n        long z60 = 0;\n        long z61\
    \ = 0;\n        long z62 = 0;\n        long z63 = 0;\n        long z64 = 0;\n\
    \        long z65 = 0;\n        long z66 = 0;\n        long z67 = 0;\n       \
    \ long z68 = 0;\n        long z69 = 0;\n        long z70 = 0;\n        long z71\
    \ = 0;\n        long z72 = 0;\n        long z73 = 0;\n        long z74 = 0;\n\
    \        long z75 = 0;\n        long z76 = 0;\n        long z77 = 0;\n       \
    \ long z78 = 0;\n        long z79 = 0;\n        long z80 = 0;\n        long z81\
    \ = 0;\n        long z82 = 0;\n        long z83 = 0;", "        List<long> result\
    \ = new List<long>();\n        long x = 0;\n        long y = 0;\n        long\
    \ z = 0;\n        long xx = 1;\n        long yy = 1;\n        long zz = 1;\n \
    \       long xxx = 1;\n        long yyy = 1;\n        long zzz = 1;\n        long\
    \ xxxx = 1;\n        long yyyy = 1;\n        long zzzz = 1;\n        long xxxxx\
    \ = 1;\n        long yyyyy = 1;\n        long zzzzz = 1;\n        long xxxxxx\
    \ = 1;\n        long yyyyyy = 1;\n        long zzzzzz = 1;\n        long xxxxxxx\
    \ = 1;\n        long yyyyyyy = 1;\n        long zzzzzzz = 1;\n        long xxxxxxxx\
    \ = 1;\n        long yyyyyyyyy = 1;\n        long zzzzzzzz = 1;\n        long\
    \ xxxxxxxxx = 1;\n        long yyyyyyyyyy = 1;\n        long zzzzzzzzz = 1;\n\
    \        long xxxxxxxxxx = 1;\n        long yyyyyyyyyyy = 1;\n        long zzzzzzzzzz\
    \ = 1;\n        long xxxxxxxxxxx = 1;\n        long yyyyyyyyyyyy = 1;\n      \
    \  long zzzzzzzzzzz = 1;\n        long xxxxxxxxxxxx = 1;\n        long yyyyyyyyyyyyy\
    \ = 1;\n        long zzzzzzzzzzzz = 1;\n        long xxxxxxxxxxxxx = 1;\n    \
    \    long yyyyyyyyyyyyyy = 1;\n        long zzzzzzzzzzzzz = 1;\n        long xxxxxxxxxxxxxx\
    \ = 1;\n        long yyyyyyyyyyyyyyy = 1;\n        long zzzzzzzzzzzzzz = 1;\n\
    \        long xxxxxxxxxxxxxxx = 1;\n        long yyyyyyyyyyyyyyyy = 1;\n     \
    \   long zzzzzzzzzzzzzzz = 1;\n        long xxxxxxxxxxxxxxxx = 1;\n        long\
    \ yyyyyyyyyyyyyyyyy = 1;\n        long zzzzzzzzzzzzzzzz = 1;\n        long xxxxxxxxxxxxxxxxx\
    \ = 1;\n        long yyyyyyyyyyyyyyyyyy = 1;\n        long zzzzzzzzzzzzzzzzz =\
    \ 1;\n        long xxxxxxxxxxxxxxxxxx = 1;\n        long yyyyyyyyyyyyyyyyyyy =\
    \ 1;\n        long zzzzzzzzzzzzzzzzzz = 1;\n        long xxxxxxxxxxxxxxxxxxxx\
    \ = 1;\n        long yyyyyyyyyyyyyyyyyyy = 1;\n        long zzzzzzzzzzzzzzzzzzz\
    \ = 1;\n        long xxxxxxxxxxxxxxxxxxxxx = 1;\n        long yyyyyyyyyyyyyyyyyyyyyy\
    \ = 1;\n        long zzzzzzzzzzzzzzzzzzzz", "        List<long> derivative = new\
    \ List<long>();\n        long x = 1;\n        long x0 = xs[0];\n        long x1\
    \ = xs[1];\n        long x2 = xs[2];\n        long x3 = xs[3];\n        long x4\
    \ = xs[4];\n        long x5 = xs[5];\n        long x6 = xs[6];\n        long x7\
    \ = xs[7];\n        long x8 = xs[8];\n        long x9 = xs[9];\n        long x10\
    \ = xs[10];\n        long x11 = xs[11];\n        long x12 = xs[12];\n        long\
    \ x13 = xs[13];\n        long x14 = xs[14];\n        long x15 = xs[15];\n    \
    \    long x16 = xs[16];\n        long x17 = xs[17];\n        long x18 = xs[18];\n\
    \        long x19 = xs[19];\n        long x20 = xs[20];\n        long x21 = xs[21];\n\
    \        long x22 = xs[22];\n        long x23 = xs[23];\n        long x24 = xs[24];\n\
    \        long x25 = xs[25];\n        long x26 = xs[26];\n        long x27 = xs[27];\n\
    \        long x28 = xs[28];\n        long x29 = xs[29];\n        long x30 = xs[30];\n\
    \        long x31 = xs[31];\n        long x32 = xs[32];\n        long x33 = xs[33];\n\
    \        long x34 = xs[34];\n        long x35 = xs[35];\n        long x36 = xs[36];\n\
    \        long x37 = xs[37];\n        long x38 = xs[38];\n        long x39 = xs[39];\n\
    \        long x40 = xs[40];\n        long x41 = xs[41];\n        long x42 = xs[42];\n\
    \        long x43 = xs[43];\n        long x44 = xs[44];\n        long x45 = xs[45];\n\
    \        long x46 = xs[46];\n        long x47 = xs[47];\n        long x48 = xs[48];\n\
    \        long x49 = xs[49];\n        long x50 = xs[50];\n        long x51 = xs[51];\n\
    \        long x52 = xs[52];\n        long x53 = xs[53];\n        long x54 = xs[54];\n\
    \        long x55 = xs[", "        List<long> result = new List<long>();\n   \
    \     long x = 0;\n        long y = 0;\n        long z = 0;\n        long sum\
    \ = 0;\n        for (int i = 0; i < xs.Count; i++) {\n            sum += xs[i];\n\
    \        }\n        for (int i = 0; i < xs.Count; i++) {\n            x = sum;\n\
    \            y = xs[i];\n            z = y;\n            sum = sum - x * y;\n\
    \            result.Add(z);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long x = 0;\n        long y = 0;\n     \
    \   long z = 0;\n        long xx = 1;\n        long yy = 1;\n        long zz =\
    \ 1;\n        long xy = 1;\n        long yz = 1;\n        long zzz = 1;\n    \
    \    long xyy = 1;\n        long yzz = 1;\n        long zzzy = 1;\n        long\
    \ xyz = 1;\n        long yzx = 1;\n        long zxy = 1;\n        long zxx = 1;\n\
    \        long yx = 1;\n        long zx = 0;\n        long y = 0;\n        long\
    \ z = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n    \
    \    long x = 0;\n        long y = 0;\n        long z = 0;\n        long x = 0;\n\
    \        long y = 0;\n        long z = 0;\n        long x = 0;\n        long y\
    \ = 0;\n        long z = 0;\n        long x = 0;\n        long y = 0;\n      \
    \  long z = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n\
    \        long x = 0;\n        long y = 0;\n        long z = 0;\n        long x\
    \ = 0;\n        long y = 0;\n        long z = 0;\n        long x = 0;\n      \
    \  long y = 0;\n        long z = 0;\n        long x = 0;\n        long y = 0;\n\
    \        long z = 0;\n        long x = 0;\n        long y = 0;\n        long z\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long x = 0;\n        long y = 0;\n        long z = 0;\n        long x = 0;\n\
    \        long y = 0;\n        long z = 0;\n        long x = 0;\n        long y\
    \ = 0;\n        long z = 0;\n        long x = 0;\n        long y = 0;\n      \
    \  long z = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n\
    \        long x = 0;\n        long y = 0;\n        long z = 0;\n        long x\
    \ = 0;\n        long y = 0;\n        long z = 0;\n        long x = 0;\n      \
    \  long y = 0;\n        long z = 0;\n        long x = 0;\n        long y = 0;\n\
    \        long z = 0;\n        long x = 0;\n        long y = 0;\n        long z\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long x = 0;\n        long y = 0;\n        long z = 0;\n        long x = 0;\n\
    \        long y = 0;\n        long z = 0;\n        long x = 0;\n        long y\
    \ = 0;\n", "        List<long> result = new List<long>();\n        for (int i\
    \ = 0; i < xs.Count; i++) {\n            result.Add(xs[i] * i);\n        }\n \
    \       return result;", "        List<long> result = new List<long>();\n    \
    \    long x = 1;\n        long x0 = xs[0];\n        long x1 = xs[1];\n       \
    \ long x2 = xs[2];\n        long x3 = xs[3];\n        long x4 = xs[4];\n     \
    \   long x5 = xs[5];\n        long x6 = xs[6];\n        long x7 = xs[7];\n   \
    \     long x8 = xs[8];\n        long x9 = xs[9];\n        long x10 = xs[10];\n\
    \        long x11 = xs[11];\n        long x12 = xs[12];\n        long x13 = xs[13];\n\
    \        long x14 = xs[14];\n        long x15 = xs[15];\n        long x16 = xs[16];\n\
    \        long x17 = xs[17];\n        long x18 = xs[18];\n        long x19 = xs[19];\n\
    \        long x20 = xs[20];\n        long x21 = xs[21];\n        long x22 = xs[22];\n\
    \        long x23 = xs[23];\n        long x24 = xs[24];\n        long x25 = xs[25];\n\
    \        long x26 = xs[26];\n        long x27 = xs[27];\n        long x28 = xs[28];\n\
    \        long x29 = xs[29];\n        long x30 = xs[30];\n        long x31 = xs[31];\n\
    \        long x32 = xs[32];\n        long x33 = xs[33];\n        long x34 = xs[34];\n\
    \        long x35 = xs[35];\n        long x36 = xs[36];\n        long x37 = xs[37];\n\
    \        long x38 = xs[38];\n        long x39 = xs[39];\n        long x40 = xs[40];\n\
    \        long x41 = xs[41];\n        long x42 = xs[42];\n        long x43 = xs[43];\n\
    \        long x44 = xs[44];\n        long x45 = xs[45];\n        long x46 = xs[46];\n\
    \        long x47 = xs[47];\n        long x48 = xs[48];\n        long x49 = xs[49];\n\
    \        long x50 = xs[50];\n        long x51 = xs[51];\n        long x52 = xs[52];\n\
    \        long x53 = xs[53];\n        long x54 = xs[54];\n        long x55 = xs[",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < xs.Count;\
    \ i++) {\n            result.Add(xs[i] * i);\n        }\n        return result;",
  "        List<long> derivative = new List<long>();\n        derivative.Add(1);\n\
    \        foreach (long x in xs) {\n            derivative.Add(derivative[derivative.Count\
    \ - 1] * x);\n        }\n        return derivative;", "        List<long> derivative\
    \ = new List<long>();\n        derivative.Add(0);\n        for (int i = 1; i <\
    \ xs.Count; i++) {\n            derivative.Add(xs[i] * derivative[i - 1]);\n \
    \       }\n        return derivative;", "        List<long> derivative = new List<long>();\n\
    \        long x = 1;\n        foreach (long xi in xs) {\n            derivative\
    \ .Add(xi * x);\n            x ++;\n        }\n        return derivative;", " \
    \       List<long> derivative = new List<long>();\n        long sum = 0;\n   \
    \     foreach (long x in xs) {\n            sum += x;\n        }\n        derivative.Add(1);\n\
    \        foreach (long x in xs) {\n            derivative.Add(sum * x);\n    \
    \    }\n        return derivative;", "        List<long> derivative = new List<long>();\n\
    \        derivative.Add(0);\n        for (int i = 1; i < xs.Count; i++) {\n  \
    \          derivative.Add(xs[i] * derivative[i - 1]);\n        }\n        return\
    \ derivative;", "        List<long> result = new List<long>();\n        long x\
    \ = 0;\n        long y = 0;\n        long xd = 0;\n        long yd = 0;\n    \
    \    long xd1 = 0;\n        long yd1 = 0;\n        long xd2 = 0;\n        long\
    \ yd2 = 0;\n        long xd3 = 0;\n        long yd3 = 0;\n        long xd4 = 0;\n\
    \        long yd4 = 0;\n        long xd5 = 0;\n        long yd5 = 0;\n       \
    \ long xd6 = 0;\n        long yd6 = 0;\n        long xd7 = 0;\n        long yd7\
    \ = 0;\n        long xd8 = 0;\n        long yd8 = 0;\n        long xd9 = 0;\n\
    \        long yd9 = 0;\n        long xd10 = 0;\n        long yd10 = 0;\n     \
    \   long xd11 = 0;\n        long yd11 = 0;\n        long xd12 = 0;\n        long\
    \ yd12 = 0;\n        long xd13 = 0;\n        long yd13 = 0;\n        long xd14\
    \ = 0;\n        long yd14 = 0;\n        long xd15 = 0;\n        long yd15 = 0;\n\
    \        long xd16 = 0;\n        long yd16 = 0;\n        long xd17 = 0;\n    \
    \    long yd17 = 0;\n        long xd18 = 0;\n        long yd18 = 0;\n        long\
    \ xd19 = 0;\n        long yd19 = 0;\n        long xd20 = 0;\n        long yd20\
    \ = 0;\n        long xd21 = 0;\n        long yd21 = 0;\n        long xd22 = 0;\n\
    \        long yd22 = 0;\n        long xd23 = 0;\n        long yd23 = 0;\n    \
    \    long xd24 = 0;\n        long yd24 = 0;\n        long xd25 = 0;\n        long\
    \ yd25 = 0;\n        long xd26 = 0;\n        long yd26 = 0;\n        long xd27\
    \ = 0;\n        long yd27 = 0;\n        long xd28 = 0;\n        long yd28 = 0;\n\
    \        long xd29 = 0;\n        long yd29 = 0;\n        long xd30 = 0;\n    \
    \    long yd30 = 0;\n        long xd31 = 0;\n        long yd31 = 0;\n        long\
    \ xd32 = 0;\n        long yd32 = 0;\n        long xd33 = 0;\n        long yd33\
    \ = 0;\n        long xd34 = 0;\n        long yd34 = 0;\n        long xd35 = 0;\n\
    \        long yd35 = 0;\n        long xd36 = 0;\n        long y", "        List<long>\
    \ derivative = new List<long>();\n        derivative.Add(0);\n        for (int\
    \ i = 1; i < xs.Count; i++) {\n            derivative.Add(xs[i] * derivative[i\
    \ - 1]);\n        }\n        return derivative;", "        List<long> derivative\
    \ = new List<long>();\n        long x = 0;\n        long y = 0;\n        long\
    \ z = 0;\n        long sum = 0;\n        foreach (long i in xs) {\n          \
    \  sum += i;\n        }\n        derivative.Add(1);\n        for (int i = 1; i\
    \ < xs.Count; i++) {\n            derivative.Add(xs[i] * sum);\n        }\n  \
    \      return derivative;", "        List<long> result = new List<long>();\n \
    \       long x = 1;\n        long y = 1;\n        foreach (long i in xs) {\n \
    \           long temp = y;\n            y = x * i + y;\n            x = temp;\n\
    \            result.Add(y);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long x = 0;\n        long y = 0;\n     \
    \   long z = 0;\n        long xx = 1;\n        long yy = 1;\n        long zz =\
    \ 1;\n        long xx = 1;\n        long yy = 1;\n        long zz = 1;\n     \
    \   long xx = 1;\n        long yy = 1;\n        long zz = 1;\n        long xx\
    \ = 1;\n        long yy = 1;\n        long zz = 1;\n        long xx = 1;\n   \
    \     long yy = 1;\n        long zz = 1;\n        long xx = 1;\n        long yy\
    \ = 1;\n        long zz = 1;\n        long xx = 1;\n        long yy = 1;\n   \
    \     long zz = 1;\n        long xx = 1;\n        long yy = 1;\n        long zz\
    \ = 1;\n        long xx = 1;\n        long yy = 1;\n        long zz = 1;\n   \
    \     long xx = 1;\n        long yy = 1;\n        long zz = 1;\n        long xx\
    \ = 1;\n        long yy = 1;\n        long zz = 1;\n        long xx = 1;\n   \
    \     long yy = 1;\n        long zz = 1;\n        long xx = 1;\n        long yy\
    \ = 1;\n        long zz = 1;\n        long xx = 1;\n        long yy = 1;\n   \
    \     long zz = 1;\n        long xx = 1;\n        long yy = 1;\n        long zz\
    \ = 1;\n        long xx = 1;\n        long yy = 1;\n        long zz = 1;\n   \
    \     long xx = 1;\n        long yy = 1;\n        long zz = 1;\n        long xx\
    \ = 1;\n        long yy = 1;\n        long zz = 1;\n        long xx = 1;\n   \
    \     long yy = 1;\n        long zz = 1;\n        long xx = 1;\n        long yy\
    \ = 1;\n        long zz = 1;\n        long xx = 1;\n        long yy = 1;\n   \
    \     long zz = 1;\n        long xx = 1;\n        long yy = 1;\n        long zz\
    \ = 1;\n        long xx = 1;\n        long yy = 1;\n        long zz = 1;\n   \
    \     long xx = 1;\n        long yy = 1;\n        long zz = 1;\n        long xx\
    \ = 1;\n        long yy = 1;\n        long zz = 1;\n        long xx = 1;\n   \
    \     long yy = 1;\n        long zz = 1;\n        long xx = 1;\n        long yy\
    \ = 1;\n        long zz = 1;\n        long xx = 1;\n        long yy = 1;\n   \
    \     long zz = 1;\n        long xx = 1;\n        long yy = 1;", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < xs.Count; i++) {\n \
    \           result.Add(xs[i] * i);\n        }\n        return result;", "    \
    \    List<long> result = new List<long>();\n        long x = 0;\n        long\
    \ xsq = 0;\n        long xsq2 = 0;\n        long xsq3 = 0;\n        long xsq4\
    \ = 0;\n        long xsq5 = 0;\n        long xsq6 = 0;\n        long xsq7 = 0;\n\
    \        long xsq8 = 0;\n        long xsq9 = 0;\n        long xsq10 = 0;\n   \
    \     long xsq11 = 0;\n        long xsq12 = 0;\n        long xsq13 = 0;\n    \
    \    long xsq14 = 0;\n        long xsq15 = 0;\n        long xsq16 = 0;\n     \
    \   long xsq17 = 0;\n        long xsq18 = 0;\n        long xsq19 = 0;\n      \
    \  long xsq20 = 0;\n        long xsq21 = 0;\n        long xsq22 = 0;\n       \
    \ long xsq23 = 0;\n        long xsq24 = 0;\n        long xsq25 = 0;\n        long\
    \ xsq26 = 0;\n        long xsq27 = 0;\n        long xsq28 = 0;\n        long xsq29\
    \ = 0;\n        long xsq30 = 0;\n        long xsq31 = 0;\n        long xsq32 =\
    \ 0;\n        long xsq33 = 0;\n        long xsq34 = 0;\n        long xsq35 = 0;\n\
    \        long xsq36 = 0;\n        long xsq37 = 0;\n        long xsq38 = 0;\n \
    \       long xsq39 = 0;\n        long xsq40 = 0;\n        long xsq41 = 0;\n  \
    \      long xsq42 = 0;\n        long xsq43 = 0;\n        long xsq44 = 0;\n   \
    \     long xsq45 = 0;\n        long xsq46 = 0;\n        long xsq47 = 0;\n    \
    \    long xsq48 = 0;\n        long xsq49 = 0;\n        long xsq50 = 0;\n     \
    \   long xsq51 = 0;\n        long xsq52 = 0;\n        long xsq53 = 0;\n      \
    \  long xsq54 = 0;\n        long xsq55 = 0;\n        long xsq56 = 0;\n       \
    \ long xsq57 = 0;\n        long xsq58 = 0;\n        long xsq59 = 0;\n        long\
    \ xsq60 = 0;\n        long xsq61 = 0;\n        long xsq62 = 0;\n        long xsq63\
    \ = 0;\n        long xsq64 = 0;\n        long xsq65 = 0;\n        long xsq66 =\
    \ 0;\n        long xsq67 = 0;\n        long xsq68 = 0;\n        long xsq69 = 0;\n\
    \        long xsq70 = 0;\n        long xsq71 = 0;\n        long xsq72", "    \
    \    List<long> result = new List<long>();\n        long x = 0;\n        long\
    \ sum = 0;\n        foreach (long n in xs) {\n            sum += n * x;\n    \
    \        x += n;\n        }\n        result.Add(sum);\n        return result;",
  "        List<long> derivative = new List<long>();\n        long pow = 1;\n    \
    \    long sum = 0;\n        foreach (long x in xs) {\n            sum += pow;\n\
    \            pow *= x;\n        }\n        derivative.Add(sum);\n        pow =\
    \ 1;\n        sum = 0;\n        foreach (long x in xs) {\n            sum += pow;\n\
    \            pow *= x;\n        }\n        derivative.Add(sum);\n        return\
    \ derivative;", "        List<long> result = new List<long>();\n        long x\
    \ = 1;\n        long sum = 0;\n        foreach (long n in xs) {\n            sum\
    \ += n * x;\n            x *= n;\n        }\n        result.Add(sum);\n      \
    \  return result;", "        List<long> derivative = new List<long>();\n     \
    \   derivative.Add(0);\n        derivative.Add((long)1);\n        foreach (long\
    \ x in xs) {\n            derivative.Add((long)x * derivative[derivative.Count\
    \ - 1]);\n        }\n        return derivative;", "        List<long> derivative\
    \ = new List<long>();\n        long power = 1;\n        long product = 1;\n  \
    \      foreach (long x in xs) {\n            product *= x;\n        }\n      \
    \  derivative.Add(product);\n        foreach (long x in xs) {\n            power\
    \ *= x;\n            derivative.Add(power);\n        }\n        return derivative;",
  "        List<long> derivative = new List<long>();\n        derivative.Add(0);\n\
    \        derivative.Add((long)1);\n        foreach (long x in xs) {\n        \
    \    derivative.Add(derivative[derivative.Count - 1] * x);\n        }\n      \
    \  return derivative;", "        List<long> derivative = new List<long>();\n \
    \       derivative.Add(0);\n        for (int i = 1; i < xs.Count; i++) {\n   \
    \         derivative.Add(xs[i] * derivative[i - 1]);\n        }\n        return\
    \ derivative;", "        List<long> derivative = new List<long>();\n        derivative.Add(0);\n\
    \        foreach (long x in xs) {\n            derivative.Add(x * derivative.Last());\n\
    \        }\n        return derivative;", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < xs.Count; i++) {\n            result.Add(xs[i] *\
    \ i);\n        }\n        return result;", "        List<long> derivative = new\
    \ List<long>();\n        long x = 0;\n        long y = 0;\n        long z = 0;\n\
    \        long xx = 1;\n        long yy = 1;\n        long zz = 1;\n        long\
    \ xy = 1;\n        long yz = 1;\n        long zzz = 1;\n        long xyy = 1;\n\
    \        long yzz = 1;\n        long zzzy = 1;\n        long xyzz = 1;\n     \
    \   long yzzz = 1;\n        long zzzyx = 1;\n        long yzzzyx = 1;\n      \
    \  long zzzyxy = 1;\n        long yzzzyxy = 1;\n        long zzzyxxy = 1;\n  \
    \      long yzzzyxxy = 1;\n        long zzzyxxyyx = 1;\n        long yzzzyxxyyx\
    \ = 1;\n        long zzzyxxyyxy = 1;\n        long yzzzyxxyyxy = 1;\n        long\
    \ zzzyxxyyxxy = 1;\n        long yzzzyxxyyxxy = 1;\n        long zzzyxxyyxxyyx\
    \ = 1;\n        long yzzzyxxyyxxyyx = 1;\n        long zzzyxxyyxxyyxy = 1;\n \
    \       long yzzzyxxyyxxyyxy = 1;\n        long zzzyxxyyxxyyxxy = 1;\n       \
    \ long yzzzyxxyyxxyyxxy = 1;\n        long zzzyxxyyxxyyxxyyx = 1;\n        long\
    \ yzzzyxxyyxxyyxxyyx = 1;\n        long zzzyxxyyxxyyxxyyxy = 1;\n        long\
    \ yzzzyxxyyxxyyxxyyxy = 1;\n        long zzzyxxyyxxyyxxyyxxy = 1;\n        long\
    \ yzzzyxxyyxxyyxxyyxxy = 1;\n        long zzzyxxyyxxyyxxyyxxyyx = 1;\n       \
    \ long yzzzyxxyyxxyyxxyyxxy = 1;\n        long zzzyxxyyxxyyxxyyxxyyxy = 1;\n \
    \       long yzzzyxxyyxxyyxxyyxxyyy = 1;\n        long zzzyxxyyxxyyxxyyxxyyxxy\
    \ = 1;\n        long yzzzyxxyyxxyyxxyyxxyyxxy = 1;\n        long zzzyxxyyxxyyxxyyxxyyxxyyx\
    \ = 1;\n        long yzzzyxxyyxxyyxxyyxxyyxxyyx = 1;\n        long zzzyxxyyxxyyxxyyxxyyxxyyxy\
    \ = 1;\n        long yzz", "        List<long> derivative = new List<long>();\n\
    \        derivative.Add(0);\n        foreach (long x in xs) {\n            derivative.Add(x\
    \ * derivative.Last());\n        }\n        return derivative;", "        List<long>\
    \ result = new List<long>();\n        long x = 0;\n        long xpow = 1;\n  \
    \      long xpow2 = 1;\n        long xpow3 = 1;\n        long xpow4 = 1;\n   \
    \     long xpow5 = 1;\n        long xpow6 = 1;\n        long xpow7 = 1;\n    \
    \    long xpow8 = 1;\n        long xpow9 = 1;\n        long xpow10 = 1;\n    \
    \    long xpow11 = 1;\n        long xpow12 = 1;\n        long xpow13 = 1;\n  \
    \      long xpow14 = 1;\n        long xpow15 = 1;\n        long xpow16 = 1;\n\
    \        long xpow17 = 1;\n        long xpow18 = 1;\n        long xpow19 = 1;\n\
    \        long xpow20 = 1;\n        long xpow21 = 1;\n        long xpow22 = 1;\n\
    \        long xpow23 = 1;\n        long xpow24 = 1;\n        long xpow25 = 1;\n\
    \        long xpow26 = 1;\n        long xpow27 = 1;\n        long xpow28 = 1;\n\
    \        long xpow29 = 1;\n        long xpow30 = 1;\n        long xpow31 = 1;\n\
    \        long xpow32 = 1;\n        long xpow33 = 1;\n        long xpow34 = 1;\n\
    \        long xpow35 = 1;\n        long xpow36 = 1;\n        long xpow37 = 1;\n\
    \        long xpow38 = 1;\n        long xpow39 = 1;\n        long xpow40 = 1;\n\
    \        long xpow41 = 1;\n        long xpow42 = 1;\n        long xpow43 = 1;\n\
    \        long xpow44 = 1;\n        long xpow45 = 1;\n        long xpow46 = 1;\n\
    \        long xpow47 = 1;\n        long xpow48 = 1;\n        long xpow49 = 1;\n\
    \        long xpow50 = 1;\n        long xpow51 = 1;\n        long xpow52 = 1;\n\
    \        long xpow53 = 1;\n        long xpow54 = 1;\n        long xpow55 = 1;\n\
    \        long xpow56 = 1;\n        long xpow57 = 1;\n        long xpow58 = 1;\n\
    \        long xpow59 = 1;\n        long xpow60 = 1;\n        long xpow61 = 1;\n\
    \        long xpow62 = 1;\n        long xpow63 = 1;\n        long xpow64 = 1;\n\
    \        long xpow65 = 1;\n        long xpow66 = 1;\n        long xpow67 = 1;\n\
    \        long xpow68 = 1;\n        long xpow69 = 1;\n        long xpow70 = 1;\n\
    \        long xpow", "        List<long> derivative = new List<long>();\n    \
    \    long product = 1;\n        foreach (long x in xs) {\n            product\
    \ *= x;\n        }\n        derivative.Add(product);\n        for (int i = 1;\
    \ i < xs.Count; i++) {\n            derivative.Add(xs[i] * derivative[i - 1]);\n\
    \        }\n        return derivative;", "        List<long> derivative = new\
    \ List<long>();\n        long x = 0;\n        long y = 0;\n        long d = 0;\n\
    \        long xd = 0;\n        long yd = 0;\n        long xd = 0;\n        long\
    \ yd = 0;\n        long xd = 0;\n        long yd = 0;\n        long xd = 0;\n\
    \        long yd = 0;\n        long xd = 0;\n        long yd = 0;\n        long\
    \ xd = 0;\n        long yd = 0;\n        long xd = 0;\n        long yd = 0;\n\
    \        long xd = 0;\n        long yd = 0;\n        long xd = 0;\n        long\
    \ yd = 0;\n        long xd = 0;\n        long yd = 0;\n        long xd = 0;\n\
    \        long yd = 0;\n        long xd = 0;\n        long yd = 0;\n        long\
    \ xd = 0;\n        long yd = 0;\n        long xd = 0;\n        long yd = 0;\n\
    \        long xd = 0;\n        long yd = 0;\n        long xd = 0;\n        long\
    \ yd = 0;\n        long xd = 0;\n        long yd = 0;\n        long xd = 0;\n\
    \        long yd = 0;\n        long xd = 0;\n        long yd = 0;\n        long\
    \ xd = 0;\n        long yd = 0;\n        long xd = 0;\n        long yd = 0;\n\
    \        long xd = 0;\n        long yd = 0;\n        long xd = 0;\n        long\
    \ yd = 0;\n        long xd = 0;\n        long yd = 0;\n        long xd = 0;\n\
    \        long yd = 0;\n        long xd = 0;\n        long yd = 0;\n        long\
    \ xd = 0;\n        long yd = 0;\n        long xd = 0;\n        long yd = 0;\n\
    \        long xd = 0;\n        long yd = 0;\n        long xd = 0;\n        long\
    \ yd = 0;\n        long xd = 0;\n        long yd = 0;\n        long xd = 0;\n\
    \        long yd = 0;\n        long xd = 0;\n        long yd = 0;\n        long\
    \ xd = 0;\n        long yd = 0;\n        long xd = 0;\n        long yd = 0;\n\
    \        long xd = 0;\n        long yd = 0;\n        long xd = 0;\n        long\
    \ yd = 0;\n        long xd = 0;\n        long yd = 0;\n        long xd = 0;\n\
    \        long yd = 0;\n        long xd = 0;\n        long yd = 0;\n        long\
    \ xd = 0;\n        ", "        List<long> result = new List<long>();\n       \
    \ long x = 0;\n        long y = 0;\n        long z = 0;\n        long xx = 1;\n\
    \        long yy = 1;\n        long zz = 1;\n        long xy = 1;\n        long\
    \ yz = 1;\n        long zzz = 1;\n        long xyy = 1;\n        long yzz = 1;\n\
    \        long zzzy = 1;\n        long xyz = 1;\n        long yzx = 1;\n      \
    \  long zxy = 1;\n        long zxx = 1;\n        long yxx = 1;\n        long xxy\
    \ = 1;\n        long xxx = 1;\n        long yxy = 1;\n        long yxx = 1;\n\
    \        long xxx = 1;\n        long yxx = 0;\n        long yxy = 1;\n       \
    \ long yxx = 1;\n        long xxx = 1;\n        long yxx = 0;\n        long yxy\
    \ = 1;\n        long yxx = 1;\n        long xxx = 1;\n        long yxx = 0;\n\
    \        long yxy = 1;\n        long yxx = 1;\n        long xxx = 1;\n       \
    \ long yxx = 0;\n        long yxy = 1;\n        long yxx = 1;\n        long xxx\
    \ = 1;\n        long yxx = 0;\n        long yxy = 1;\n        long yxx = 1;\n\
    \        long xxx = 1;\n        long yxx = 0;\n        long yxy = 1;\n       \
    \ long yxx = 1;\n        long xxx = 1;\n        long yxx = 0;\n        long yxy\
    \ = 1;\n        long yxx = 1;\n        long xxx = 1;\n        long yxx = 0;\n\
    \        long yxy = 1;\n        long yxx = 1;\n        long xxx = 1;\n       \
    \ long yxx = 0;\n        long yxy = 1;\n        long yxx = 1;\n        long xxx\
    \ = 1;\n        long yxx = 0;\n        long yxy = 1;\n        long yxx = 1;\n\
    \        long xxx = 1;\n        long yxx = 0;\n        long yxy = 1;\n       \
    \ long yxx = 1;\n        long xxx = 1;\n        long yxx = 0;\n        long yxy\
    \ = 1;\n        long yxx = 1;\n        long xxx = 1;\n        long yxx = 0;\n\
    \        long yxy = 1;\n        long yxx = 1;\n        long xxx = 1;\n       \
    \ long yxx = 0;\n        long yxy = 1;\n        long yxx = 1;\n        long xxx\
    \ = 1;\n        long yxx", "        List<long> result = new List<long>();\n  \
    \      long x = 1;\n        foreach (long n in xs) {\n            x /= n;\n  \
    \          result.Add(x);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long x = 0;\n        long y = 0;\n     \
    \   long sum = 0;\n        foreach (long i in xs) {\n            sum += i;\n \
    \       }\n        long pow = 1;\n        while (pow < sum) {\n            pow\
    \ *= x;\n        }\n        for (int i = 0; i < xs.Count; i++) {\n           \
    \ long power = 1;\n            while (power < sum) {\n                power *=\
    \ x;\n            }\n            long term = xs[i];\n            while (term >\
    \ 0) {\n                result.Add(term);\n                term *= x;\n      \
    \      }\n            x /= power;\n        }\n        return result;", "     \
    \   List<long> derivative = new List<long>();\n        long x = 0;\n        long\
    \ y = 0;\n        long z = 0;\n        long xSquare = 0;\n        long ySquare\
    \ = 0;\n        long zSquare = 0;\n        long xSquareRoot = 0;\n        long\
    \ ySquareRoot = 0;\n        long zSquareRoot = 0;\n        long xSquareRoot2 =\
    \ 0;\n        long ySquareRoot2 = 0;\n        long zSquareRoot2 = 0; \n      \
    \  long xSquareRoot3 = 0; \n        long ySquareRoot3 = 0; \n        long zSquareRoot3\
    \ = 0; \n        long xSquareRoot4 = 0; \n        long ySquareRoot4 = 0; \n  \
    \      long zSquareRoot4 = 0; \n        long xSquareRoot5 = 0; \n        long\
    \ ySquareRoot5 = 0; \n        long zSquareRoot5 = 0; \n        long xSquareRoot6\
    \ = 0; \n        long ySquareRoot6 = 0; \n        long zSquareRoot6 = 0; \n  \
    \      long xSquareRoot7 = 0; \n        long ySquareRoot7 = 0; \n        long\
    \ zSquareRoot7 = 0; \n        long xSquareRoot8 = 0; \n        long ySquareRoot8\
    \ = 0; \n        long zSquareRoot8 = 0; \n        long xSquareRoot9 = 0; \n  \
    \      long ySquareRoot9 = 0; \n        long zSquareRoot9 = 0; \n        long\
    \ xSquareRoot10 = 0; \n        long ySquareRoot10 = 0; \n        long zSquareRoot10\
    \ = 0; \n        long xSquareRoot11 = 0; \n        long ySquareRoot11 = 0; \n\
    \        long zSquareRoot11 = 0; \n        long xSquareRoot12 = 0; \n        long\
    \ ySquareRoot12 = 0; \n        long zSquareRoot12 = 0; \n        long xSquareRoot13\
    \ = 0; \n        long ySquareRoot13 = 0; \n        long zSquareRoot13 = 0; \n\
    \        long xSquareRoot14 = 0; \n        long ySquareRoot14 = 0; \n        long\
    \ zSquareRoot14 = 0; \n        long xSquareRoot15 = 0; \n        long ySquareRoot15\
    \ = 0; \n        long zSquareRoot15 = 0; \n        long xSquareRoot16 = 0; \n\
    \        long ySquareRoot16 = 0; \n        long zSquareRoot16 = 0; \n        long\
    \ xSquareRoot17 = 0; \n        long ySquareRoot17 = 0; \n        long zSquareRoot17\
    \ = 0; \n        long xSquareRoot18 = 0; \n        long ySquareRoot18 = 0; \n\
    \        long zSquareRoot18 = 0; \n        long xSquareRoot19 = 0; \n        long\
    \ ySquareRoot19 = 0; \n        long zSquareRoot19 = 0; \n        long xSquareRoot20\
    \ = 0; \n        long ySquareRoot20 = 0; \n", "        List<long> derivative =\
    \ new List<long>();\n        derivative.Add(1);\n        derivative.Add((long)xs[0]);\n\
    \        for (int i = 1; i < xs.Count; i++) {\n            derivative.Add((long)xs[i]\
    \ * derivative[i - 1]);\n        }\n        return derivative;", "        List<long>\
    \ derivative = new List<long>();\n        derivative.Add(1);\n        for (int\
    \ i = 1; i < xs.Count; i++) {\n            derivative.Add(xs[i] * derivative[i\
    \ - 1]);\n        }\n        return derivative;", "        List<long> derivative\
    \ = new List<long>();\n        derivative.Add(1);\n        for (int i = 1; i <\
    \ xs.Count; i++) {\n            derivative.Add(xs[i] * derivative[i - 1]);\n \
    \       }\n        return derivative;", "        List<long> derivative = new List<long>();\n\
    \        derivative.Add(0);\n        for (int i = 1; i < xs.Count; i++) {\n  \
    \          derivative.Add(xs[i] * derivative[i - 1]);\n        }\n        return\
    \ derivative;", "        List<long> derivative = new List<long>();\n        derivative.Add(0);\n\
    \        for (int i = 1; i < xs.Count; i++) {\n            derivative.Add(xs[i]\
    \ * derivative[i - 1]);\n        }\n        return derivative;", "        List<long>\
    \ result = new List<long>();\n        long product = 1;\n        for (int i =\
    \ 0; i < xs.Count; i++) {\n            product *= xs[i];\n        }\n        result.Add(product);\n\
    \        for (int i = xs.Count - 1; i >= 0; i--) {\n            product /= xs[i];\n\
    \            result.Add(product);\n        }\n        return result;", "     \
    \   List<long> derivative = new List<long>();\n        long x = 0;\n        long\
    \ y = 0;\n        long z = 0;\n        long xx = 1;\n        long yy = 1;\n  \
    \      long zz = 1;\n        long xy = 1;\n        long yz = 1;\n        long\
    \ zzz = 1;\n        long xyy = 1;\n        long yzz = 1;\n        long zzzy =\
    \ 1;\n        long xyz = 1;\n        long yzx = 1;\n        long zxy = 1;\n  \
    \      long zxx = 1;\n        long yx = 1;\n        long zx = 0;\n        long\
    \ y = 0;\n        long z = 0;\n        long x = 0;\n        long y = 0;\n    \
    \    long z = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n\
    \        long x = 0;\n        long y = 0;\n        long z = 0;\n        long x\
    \ = 0;\n        long y = 0;\n        long z = 0;\n        long x = 0;\n      \
    \  long y = 0;\n        long z = 0;\n        long x = 0;\n        long y = 0;\n\
    \        long z = 0;\n        long x = 0;\n        long y = 0;\n        long z\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long x = 0;\n        long y = 0;\n        long z = 0;\n        long x = 0;\n\
    \        long y = 0;\n        long z = 0;\n        long x = 0;\n        long y\
    \ = 0;\n        long z = 0;\n        long x = 0;\n        long y = 0;\n      \
    \  long z = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n\
    \        long x = 0;\n        long y = 0;\n        long z = 0;\n        long x\
    \ = 0;\n        long y = 0;\n        long z = 0;\n        long x = 0;\n      \
    \  long y = 0;\n        long z = 0;\n        long x = 0;\n        long y = 0;\n\
    \        long z = 0;\n        long x = 0;\n        long y = 0;\n        long z\
    \ = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n      \
    \  long x = 0;\n        long y = 0;\n        long z = 0;\n        long x = 0;\n\
    \        long y = 0;\n        long z = 0;\n        long x = 0;\n        long y\
    \ = 0;\n        long z = 0;\n        long x = 0;\n        long y = 0;\n      \
    \  long z = 0;\n        long x = 0;\n        long y = 0;\n        long z = 0;\n\
    \        long x = 0;\n        long y = 0;\n        long z = 0;\n        long x\
    \ = 0;\n        long y = 0;\n", "        List<long> derivative = new List<long>();\n\
    \        long pow = 1;\n        long sum = 0;\n        foreach (long x in xs)\
    \ {\n            sum += pow * x;\n            pow *= x;\n        }\n        derivative.Add(sum);\n\
    \        return derivative;", "        List<long> result = new List<long>();\n\
    \        long x = 0;\n        long y = 0;\n        long sum = 0;\n        foreach\
    \ (long i in xs) {\n            sum += i;\n        }\n        x = sum;\n     \
    \   for (int i = 1; i < xs.Count; i++) {\n            y = xs[i] - x;\n       \
    \     result.Add(y);\n            x = y;\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long x = 0;\n        long\
    \ y = 0;\n        long sum = 0;\n        long pow = 1;\n        foreach (long\
    \ i in xs) {\n            sum += pow;\n            pow *= i;\n        }\n    \
    \    x = sum;\n        pow = 1;\n        foreach (long i in xs) {\n          \
    \  y += pow;\n            pow *= i;\n        }\n        result.Add(1);\n     \
    \   result.Add(0);\n        result.Add(0);\n        result.Add(1);\n        result.Add(0);\n\
    \        result.Add(0);\n        result.Add(1);\n        result.Add(0);\n    \
    \    result.Add(0);\n        result.Add(1);\n        result.Add(0);\n        result.Add(0);\n\
    \        result.Add(1);\n        result.Add(0);\n        result.Add(0);\n    \
    \    result.Add(1);\n        result.Add(0);\n        result.Add(0);\n        result.Add(1);\n\
    \        result.Add(0);\n        result.Add(0);\n        result.Add(1);\n    \
    \    result.Add(0);\n        result.Add(0);\n        result.Add(1);\n        result.Add(0);\n\
    \        result.Add(0);\n        result.Add(1);\n        result.Add(0);\n    \
    \    result.Add(0);\n        result.Add(1);\n        result.Add(0);\n        result.Add(0);\n\
    \        result.Add(1);\n        result.Add(0);\n        result.Add(0);\n    \
    \    result.Add(1);\n        result.Add(0);\n        result.Add(0);\n        result.Add(1);\n\
    \        result.Add(0);\n        result.Add(0);\n        result.Add(1);\n    \
    \    result.Add(0);\n        result.Add(0);\n        result.Add(1);\n        result.Add(0);\n\
    \        result.Add(0);\n        result.Add(1);\n        result.Add(0);\n    \
    \    result.Add(0);\n        result.Add(1);\n        result.Add(0);\n        result.Add(0);\n\
    \        result.Add(1);\n        result.Add(0);\n        result.Add(0);\n    \
    \    result.Add(1);\n        result.Add(0);\n        result.Add(0);\n        result.Add(1);\n\
    \        result.Add(0);\n        result.Add(0);\n        result.Add(1);\n    \
    \    result.Add(0);\n        result.Add(0);\n        result.Add(1);\n        result.Add(0);\n\
    \        result.Add(0);\n        result.Add(1);\n        result.Add(0);\n    \
    \    result.Add(0);\n        result.Add(1);\n        result.Add(0);\n        result.Add(0);\n\
    \        result.Add(1);\n        result.Add(0);\n        result.Add(0);\n    \
    \    result.Add(1);\n        result.Add(0);\n        result.Add(0);\n        result.Add(1);\n\
    \        result.Add(0);\n        result.Add(0);\n        result.Add(1);\n    \
    \    result.Add(0);\n        result.Add(0);\n        result.Add(1);\n        result.Add(0);\n\
    \        result.Add(0);\n        result.Add(1);\n        result.Add(0);\n    \
    \    result.Add(0);\n        result.Add(1);\n        result.Add(0);\n        result.Add(0);\n\
    \        result.Add(1);\n        result.Add(0);\n        result.Add(0);\n    \
    \    result.Add(1);\n        result.Add(0);\n        result.Add(0);\n        result.Add(1);\n\
    \        result.Add(0);\n        result.Add(0);\n        result.Add(1);\n    \
    \    result.Add(0);\n        result.Add(0);\n        result.Add(1);\n", "    \
    \    List<long> derivative = new List<long>();\n        long x = 0;\n        long\
    \ y = 0;\n        long z = 0;\n        long sum = 0;\n        long xpow = 0;\n\
    \        long ypow = 0;\n        long zpow = 0;\n        long xpow2 = 0;\n   \
    \     long ypow2 = 0;\n        long zpow2 = 0;\n        long xpow3 = 0;\n    \
    \    long ypow3 = 0;\n        long zpow3 = 0;\n        long xpow4 = 0;\n     \
    \   long ypow4 = 0;\n        long zpow4 = 0;\n        long xpow5 = 0;\n      \
    \  long ypow5 = 0;\n        long zpow5 = 0;\n        long xpow6 = 0;\n       \
    \ long ypow6 = 0;\n        long zpow6 = 0;\n        long xpow7 = 0;\n        long\
    \ ypow7 = 0;\n        long zpow7 = 0;\n        long xpow8 = 0;\n        long ypow8\
    \ = 0;\n        long zpow8 = 0;\n        long xpow9 = 0;\n        long ypow9 =\
    \ 0;\n        long zpow9 = 0;\n        long xpow10 = 0;\n        long ypow10 =\
    \ 0;\n        long zpow10 = 0;\n        long xpow11 = 0;\n        long ypow11\
    \ = 0;\n        long zpow11 = 0;\n        long xpow12 = 0;\n        long ypow12\
    \ = 0;\n        long zpow12 = 0;\n        long xpow13 = 0;\n        long ypow13\
    \ = 0;\n        long zpow13 = 0;\n        long xpow14 = 0;\n        long ypow14\
    \ = 0;\n        long zpow14 = 0;\n        long xpow15 = 0;\n        long ypow15\
    \ = 0;\n        long zpow15 = 0;\n        long xpow16 = 0;\n        long ypow16\
    \ = 0;\n        long zpow16 = 0;\n        long xpow17 = 0;\n        long ypow17\
    \ = 0;\n        long zpow17 = 0;\n        long xpow18 = 0;\n        long ypow18\
    \ = 0;\n        long zpow18 = 0;\n        long xpow19 = 0;\n        long ypow19\
    \ = 0;\n        long zpow19 = 0;\n        long xpow20 = 0;\n        long ypow20\
    \ = 0;\n        long zpow20 = 0;\n        long xpow21 = 0;\n        long ypow21\
    \ = 0;\n        long zpow21 = 0;\n        long xpow22 = 0;\n        long ypow22\
    \ = 0;\n        long zpow22 = 0;\n        long xpow23 = 0;\n        long ypow23\
    \ = 0;\n        long zpow23 = 0;\n        long xpow24 = 0;\n        long ypow24\
    \ = 0;\n", "        List<long> result = new List<long>();\n        long x = 0;\n\
    \        long y = 0;\n        long d = 0;\n        for (int i = 0; i < xs.Count;\
    \ i++) {\n            x += xs[i];\n            y += xs[i] * x;\n            d\
    \ += xs[i] * xs[i];\n        }\n        result.Add(d);\n        for (int i = 0;\
    \ i < xs.Count - 1; i++) {\n            long a = xs[i];\n            long b =\
    \ xs[i + 1];\n            long c = xs[i + 2];\n            long d = xs[i + 3];\n\
    \            long e = xs[i + 4];\n            long f = xs[i + 5];\n          \
    \  long g = xs[i + 6];\n            long h = xs[i + 7];\n            long i =\
    \ xs[i + 8];\n            long j = xs[i + 9];\n            long k = xs[i + 10];\n\
    \            long l = xs[i + 11];\n            long m = xs[i + 12];\n        \
    \    long n = xs[i + 13];\n            long o = xs[i + 14];\n            long\
    \ p = xs[i + 15];\n            long q = xs[i + 16];\n            long r = xs[i\
    \ + 17];\n            long s = xs[i + 18];\n            long t = xs[i + 19];\n\
    \            long u = xs[i + 20];\n            long v = xs[i + 21];\n        \
    \    long w = xs[i + 22];\n            long x = xs[i + 23];\n            long\
    \ y = xs[i + 24];\n            long z = xs[i + 25];\n            long a = xs[i\
    \ + 26];\n            long b = xs[i + 27];\n            long c = xs[i + 28];\n\
    \            long d = xs[i + 29];\n            long e = xs[i + 30];\n        \
    \    long f = xs[i + 31];\n            long g = xs[i + 32];\n            long\
    \ h = xs[i + 33];\n            long i = xs[i + 34];\n            long j = xs[i\
    \ + 35];\n            long k = xs[i + 36];\n            long l = xs[i + 37];\n\
    \            long m = xs[i + 38];\n            long n = xs[i + 39];\n        \
    \    long o = xs[i + 40];\n            long p = xs[i + 41];\n            long\
    \ q = xs[i + 42];\n            long r = xs[i + 43];\n            long s = xs[i\
    \ + 44];\n            long t = xs[i + 45];\n            long u = xs[i + 46];\n\
    \            long v = xs[i + 47];\n            long w = xs[i + 48];\n        \
    \    long x = xs[i", "        List<long> result = new List<long>();\n        long\
    \ product = 1;\n        foreach (long x in xs) {\n            product *= x;\n\
    \        }\n        result.Add(product);\n        for (int i = 1; i < xs.Count;\
    \ i++) {\n            product *= xs[i];\n            result.Add(product);\n  \
    \      }\n        return result;", "        List<long> derivative = new List<long>();\n\
    \        long x = 0;\n        long y = 0;\n        long xpow = 0;\n        long\
    \ ypow = 0;\n        long xpow2 = 0;\n        long ypow2 = 0;\n        long xpow3\
    \ = 0;\n        long ypow3 = 0;\n        long xpow4 = 0;\n        long ypow4 =\
    \ 0;\n        long xpow5 = 0;\n        long ypow5 = 0;\n        long xpow6 = 0;\n\
    \        long ypow6 = 0;\n        long xpow7 = 0;\n        long ypow7 = 0;\n \
    \       long xpow8 = 0;\n        long ypow8 = 0;\n        long xpow9 = 0;\n  \
    \      long ypow9 = 0;\n        long xpow10 = 0;\n        long ypow10 = 0;\n \
    \       long xpow11 = 0;\n        long ypow11 = 0;\n        long xpow12 = 0;\n\
    \        long ypow12 = 0;\n        long xpow13 = 0;\n        long ypow13 = 0;\n\
    \        long xpow14 = 0;\n        long ypow14 = 0;\n        long xpow15 = 0;\n\
    \        long ypow15 = 0;\n        long xpow16 = 0;\n        long ypow16 = 0;\n\
    \        long xpow17 = 0;\n        long ypow17 = 0;\n        long xpow18 = 0;\n\
    \        long ypow18 = 0;\n        long xpow19 = 0;\n        long ypow19 = 0;\n\
    \        long xpow20 = 0;\n        long ypow20 = 0;\n        long xpow21 = 0;\n\
    \        long ypow21 = 0;\n        long xpow22 = 0;\n        long ypow22 = 0;\n\
    \        long xpow23 = 0;\n        long ypow23 = 0;\n        long xpow24 = 0;\n\
    \        long ypow24 = 0;\n        long xpow25 = 0;\n        long ypow25 = 0;\n\
    \        long xpow26 = 0;\n        long ypow26 = 0;\n        long xpow27 = 0;\n\
    \        long ypow27 = 0;\n        long xpow28 = 0;\n        long ypow28 = 0;\n\
    \        long xpow29 = 0;\n        long ypow29 = 0;\n        long xpow30 = 0;\n\
    \        long ypow30 = 0;\n        long xpow31 = 0;\n        long ypow31 = 0;\n\
    \        long xpow32 = 0;\n        long ypow32 = 0;\n        long xpow33 = 0;\n\
    \        long ypow33 = 0;\n        long xpow34 = 0;\n        long ypow34 = 0;\n\
    \        long xpow35 = 0;\n        long ypow35 = 0;\n        long xpow36 = 0;\n\
    \        long ypow36", "        List<long> derivative = new List<long>();\n  \
    \      long x = 1;\n        foreach (long xi in xs) {\n            derivative\
    \ .Add(xi * x);\n            x ++;\n        }\n        return derivative;", " \
    \       List<long> result = new List<long>();\n        for (int i = 0; i < xs.Count;\
    \ i++) {\n            result.Add(xs[i] * i);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long sum = 0;\n        foreach\
    \ (long x in xs) {\n            sum += x;\n        }\n        result.Add(sum);\n\
    \        for (int i = 1; i < xs.Count; i++) {\n            result.Add(sum * xs[i]);\n\
    \        }\n        return result;", "        List<long> derivative = new List<long>();\n\
    \        derivative.Add(0);\n        derivative.Add(1);\n        foreach (long\
    \ x in xs) {\n            derivative.Add(derivative[derivative.Count - 1] * x);\n\
    \        }\n        return derivative;", "        List<long> derivative = new\
    \ List<long>();\n        long product = 1;\n        for (int i = 0; i < xs.Count;\
    \ i++) {\n            product *= xs[i];\n        }\n        for (int i = 0; i\
    \ < xs.Count; i++) {\n            derivative.Add(product / xs[i]);\n        }\n\
    \        return derivative;", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < xs.Count; i++) {\n            result.Add(xs[i] *\
    \ i);\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long x = 0;\n        long y = 0;\n        long xx = 1;\n        long\
    \ yy = 1;\n        long xxx = 1;\n        long yyy = 1;\n        long xxxxx =\
    \ 1;\n        long yyyyy = 1;\n        long zzzz = 1;\n        long zzzzz = 1;\n\
    \        long zzzzzz = 1;\n        long zzzzzzz = 1;\n        long zzzzzzzz =\
    \ 1;\n        long zzzzzzzzz = 1;\n        long zzzzzzzzzz = 1;\n        long\
    \ zzzzzzzzzzz = 1;\n        long zzzzzzzzzzzz = 1;\n        long zzzzzzzzzzzzz\
    \ = 1;\n        long zzzzzzzzzzzzzz = 1;\n        long zzzzzzzzzzzzzzz = 1;\n\
    \        long zzzzzzzzzzzzzzzz = 1;\n        long zzzzzzzzzzzzzzzzz = 1;\n   \
    \     long zzzzzzzzzzzzzzzzzz = 1;\n        long zzzzzzzzzzzzzzzzzzz = 1;\n  \
    \      long zzzzzzzzzzzzzzzzzzzz = 1;\n        long zzzzzzzzzzzzzzzzzzzzz = 1;\n\
    \        long zzzzzzzzzzzzzzzzzzzzzz = 1;\n        long zzzzzzzzzzzzzzzzzzzzzzz\
    \ = 1;\n        long zzzzzzzzzzzzzzzzzzzzzzzz = 1;\n        long zzzzzzzzzzzzzzzzzzzzzzzzz\
    \ = 1;\n        long zzzzzzzzzzzzzzzzzzzzzzzzzz = 1;\n        long zzzzzzzzzzzzzzzzzzzzzzzzzzz\
    \ = 1;\n        long zzzzzzzzzzzzzzzzzzzzzzzzzzzz = 1;\n        long zzzzzzzzzzzzzzzzzzzzzzzzzzzzz\
    \ = 1;\n        long zzzzzzzzzzzzzzzzzzzzzzzzzzzzzz = 1;\n        long zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\
    \ = 1;\n        long zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz = 1;\n        long zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\
    \ = 1;\n        long zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz = 1;\n        long zzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzzz\
    \ = 1;\n        long zzzzzzzz", "        List<long> derivative = new List<long>();\n\
    \        long x = 1;\n        foreach (long xi in xs) {\n            derivative\
    \ += xi * x;\n            x *= xi;\n        }\n        return derivative;", " \
    \       List<long> derivative = new List<long>();\n        long power = 1;\n \
    \       long sum = 0;\n        foreach (long x in xs) {\n            sum += power\
    \ * x;\n            derivative.Add(sum);\n            power *= x;\n        }\n\
    \        return derivative;", "        List<long> derivative = new List<long>();\n\
    \        long pow = 1;\n        foreach (long x in xs) {\n            derivative.Add(pow\
    \ * x);\n            pow *= x;\n        }\n        return derivative;", "    \
    \    List<long> derivative = new List<long>();\n        long x = 0;\n        long\
    \ xpow = 1;\n        long xpow2 = 1;\n        long xpow3 = 1;\n        long xpow4\
    \ = 0;\n        long xpow5 = 0;\n        long xpow6 = 0;\n        long xpow7 =\
    \ 0;\n        long xpow8 = 0;\n        long xpow9 = 0;\n        long xpow10 =\
    \ 0;\n        long xpow11 = 0;\n        long xpow12 = 0;\n        long xpow13\
    \ = 0;\n        long xpow14 = 0;\n        long xpow15 = 0;\n        long xpow16\
    \ = 0;\n        long xpow17 = 0;\n        long xpow18 = 0;\n        long xpow19\
    \ = 0;\n        long xpow20 = 0;\n        long xpow21 = 0;\n        long xpow22\
    \ = 0;\n        long xpow23 = 0;\n        long xpow24 = 0;\n        long xpow25\
    \ = 0;\n        long xpow26 = 0;\n        long xpow27 = 0;\n        long xpow28\
    \ = 0;\n        long xpow29 = 0;\n        long xpow30 = 0;\n        long xpow31\
    \ = 0;\n        long xpow32 = 0;\n        long xpow33 = 0;\n        long xpow34\
    \ = 0;\n        long xpow35 = 0;\n        long xpow36 = 0;\n        long xpow37\
    \ = 0;\n        long xpow38 = 0;\n        long xpow39 = 0;\n        long xpow40\
    \ = 0;\n        long xpow41 = 0;\n        long xpow42 = 0;\n        long xpow43\
    \ = 0;\n        long xpow44 = 0;\n        long xpow45 = 0;\n        long xpow46\
    \ = 0;\n        long xpow47 = 0;\n        long xpow48 = 0;\n        long xpow49\
    \ = 0;\n        long xpow50 = 0;\n        long xpow51 = 0;\n        long xpow52\
    \ = 0;\n        long xpow53 = 0;\n        long xpow54 = 0;\n        long xpow55\
    \ = 0;\n        long xpow56 = 0;\n        long xpow57 = 0;\n        long xpow58\
    \ = 0;\n        long xpow59 = 0;\n        long xpow60 = 0;\n        long xpow61\
    \ = 0;\n        long xpow62 = 0;\n        long xpow63 = 0;\n        long xpow64\
    \ = 0;\n        long xpow65 = 0;\n        long xpow66 = 0;\n        long xpow67\
    \ = 0;\n        long xpow68 = 0;\n        long xpow69 = 0;\n        long xpow70\
    \ = 0;\n        long xpow71 = 0;\n        long xpow", "        List<long> derivative\
    \ = new List<long>();\n        long x = 1;\n        long x0 = 1;\n        long\
    \ x1 = 2;\n        long x2 = 3;\n        long x3 = 4;\n        long x4 = 5;\n\
    \        long x5 = 0;\n        long x6 = 0;\n        long x7 = 1;\n        long\
    \ x8 = 2;\n        long x9 = 3;\n        long x10 = 4;\n        long x11 = 5;\n\
    \        long x12 = 6;\n        long x13 = 7;\n        long x14 = 8;\n       \
    \ long x15 = 9;\n        long x16 = 10;\n        long x17 = 11;\n        long\
    \ x18 = 12;\n        long x19 = 13;\n        long x20 = 14;\n        long x21\
    \ = 15;\n        long x22 = 16;\n        long x23 = 17;\n        long x24 = 18;\n\
    \        long x25 = 19;\n        long x26 = 20;\n        long x27 = 21;\n    \
    \    long x28 = 22;\n        long x29 = 23;\n        long x30 = 24;\n        long\
    \ x31 = 25;\n        long x32 = 26;\n        long x33 = 27;\n        long x34\
    \ = 28;\n        long x35 = 29;\n        long x36 = 30;\n        long x37 = 31;\n\
    \        long x38 = 32;\n        long x39 = 33;\n        long x40 = 34;\n    \
    \    long x41 = 35;\n        long x42 = 36;\n        long x43 = 37;\n        long\
    \ x44 = 38;\n        long x45 = 39;\n        long x46 = 40;\n        long x47\
    \ = 41;\n        long x48 = 42;\n        long x49 = 43;\n        long x50 = 44;\n\
    \        long x51 = 45;\n        long x52 = 46;\n        long x53 = 47;\n    \
    \    long x54 = 48;\n        long x55 = 49;\n        long x56 = 50;\n        long\
    \ x57 = 51;\n        long x58 = 52;\n        long x59 = 53;\n        long x60\
    \ = 54;\n        long x61 = 55;\n        long x62 = 56;\n        long x63 = 57;\n\
    \        long x64 = 58;\n        long x65 = 59;\n        long x66 = 60;\n    \
    \    long x67 = 61;\n        long x68 = 62;\n        long x69 = 63;\n        long\
    \ x70 = 64;\n        long x", "        List<long> derivative = new List<long>();\n\
    \        long x = 0;\n        long y = 0;\n        long z = 0;\n        long xx\
    \ = 1;\n        long yy = 1;\n        long zz = 1;\n        long xy = 1;\n   \
    \     long yz = 1;\n        long zzz = 1;\n        long xyy = 1;\n        long\
    \ yzz = 1;\n        long zzzy = 1;\n        long xyz = 1;\n        long yzx =\
    \ 1;\n        long zxy = 1;\n        long zyx = 1;\n        long zxx = 1;\n  \
    \      long yxx = 1;\n        long xzz = 1;\n        long yzzz = 1;\n        long\
    \ zxyy = 1;\n        long zyzz = 1;\n        long zxzz = 1;\n        long yzxy\
    \ = 1;\n        long zyyx = 1;\n        long zyzx = 1;\n        long zxxy = 1;\n\
    \        long yxxx = 1;\n        long xyyz = 1;\n        long yzxx = 1;\n    \
    \    long zxxz = 1;\n        long yzyy = 1;\n        long zyyy = 1;\n        long\
    \ zyyz = 1;\n        long yzyx = 1;\n        long zxyy = 1;\n        long zyzx\
    \ = 1;\n        long zxzy = 1;\n        long yzxx = 1;\n        long yzyz = 1;\n\
    \        long zxzz = 1;\n        long yzzy = 1;\n        long zxyyy = 1;\n   \
    \     long zyzyx = 1;\n        long zxyyz = 1;\n        long yxxz = 1;\n     \
    \   long yzxyy = 1;\n        long yzyz = 1;\n        long yzxzy = 1;\n       \
    \ long yzxzz = 1;\n        long yzxxy = 1;\n        long yzxxz = 1;\n        long\
    \ yzyyx = 1;\n        long yzyyy = 1;\n        long yzyyz = 1;\n        long yzyzx\
    \ = 1;\n        long yzyzy = 1;\n        long yzyzz = 1;\n        long yzxzz =\
    \ 1;\n        long yzxxy = 1;\n        long yzxxz = 1;\n        long yzyyx = 1;\n\
    \        long yzyyy = 1;\n        long yzyyz = 1;\n        long yzyzx = 1;\n \
    \       long yzyzy = 1;\n        long yzyzz = 1;\n        long yzxzz = 1;\n  \
    \      long yzxxy = 1;\n        long yzxxz = 1;\n        long yzyyx = ", "   \
    \     List<long> result = new List<long>();\n        long x = 0;\n        long\
    \ y = 0;\n        long sum = 0;\n        foreach (long i in xs) {\n          \
    \  sum += i;\n        }\n        long d = 1;\n        for (int i = 0; i < xs.Count;\
    \ i++) {\n            d *= xs[i];\n        }\n        for (int i = 0; i < xs.Count;\
    \ i++) {\n            x /= d;\n            y /= d;\n            result.Add(x *\
    \ y);\n        }\n        return result;", "        List<long> derivative = new\
    \ List<long>();\n        derivative.Add(0);\n        derivative.Add((xs[0] * xs[0]));\n\
    \        for(int i = 1; i < xs.Count; i++) {\n            derivative.Add(xs[i]\
    \ * derivative[i - 1]);\n        }\n        return derivative;", "        List<long>\
    \ result = new List<long>();\n        long x = 1;\n        foreach (long xi in\
    \ xs) {\n            result.Add(x * xi);\n            x /= xi;\n        }\n  \
    \      return result;", "        List<long> result = new List<long>();\n     \
    \   long sum = 0;\n        foreach (long x in xs) {\n            sum += x;\n \
    \       }\n        result.Add(1);\n        result.Add(sum);\n        for (int\
    \ i = 2; i < xs.Count; i++) {\n            long product = 1;\n            for\
    \ (int j = 0; j < i; j++) {\n                product *= xs[j];\n            }\n\
    \            result.Add(product);\n        }\n        return result;", "     \
    \   List<long> result = new List<long>();\n        long x = 0;\n        long y\
    \ = 0;\n        long sum = 0;\n        foreach (long i in xs) {\n            sum\
    \ += i;\n        }\n        long pow = 1;\n        while (sum > 0) {\n       \
    \     pow *= x;\n            sum += pow / sum;\n            x ++;\n        }\n\
    \        while (sum > 0) {\n            pow *= x;\n            sum += pow / sum;\n\
    \            x --;\n        }\n        long pow2 = 1;\n        while (sum > 0)\
    \ {\n            pow2 *= x;\n            sum += pow2 / sum;\n            x ++;\n\
    \        }\n        while (sum > 0) {\n            pow2 *= x;\n            sum\
    \ += pow2 / sum;\n            x --;\n        }\n        long pow3 = 1;\n     \
    \   while (sum > 0) {\n            pow3 *= x;\n            sum += pow3 / sum;\n\
    \            x ++;\n        }\n        while (sum > 0) {\n            pow3 *=\
    \ x;\n            sum += pow3 / sum;\n            x --;\n        }\n        long\
    \ pow4 = 1;\n        while (sum > 0) {\n            pow4 *= x;\n            sum\
    \ += pow4 / sum;\n            x ++;\n        }\n        while (sum > 0) {\n  \
    \          pow4 *= x;\n            sum += pow4 / sum;\n            x --;\n   \
    \     }\n        while (sum > 0) {\n            pow4 *= x;\n            sum +=\
    \ pow4 / sum;\n            x --;\n        }\n        while (sum > 0) {\n     \
    \       pow4 *= x;\n            sum += pow4 / sum;\n            x --;\n      \
    \  }\n        while (sum > 0) {\n            pow4 *= x;\n            sum += pow4\
    \ / sum;\n            x --;\n        }\n        while (sum > 0) {\n          \
    \  pow4 *= x;\n            sum += pow4 / sum;\n            x --;\n        }\n\
    \        while (sum > 0) {\n            pow4 *= x;\n            sum += pow4 /\
    \ sum;\n            x --;\n        }\n        while (sum > 0) {\n            pow4\
    \ *= x;\n            sum += pow4 / sum;\n            x --;\n        }\n      \
    \  while (sum > 0) {\n            pow4 *= x;\n            sum += pow4 / sum;\n\
    \            x --;\n        }\n        while (sum > 0) {\n            pow4 *=\
    \ x;\n            sum += pow4 / sum;\n            x --;\n        }\n        while\
    \ (sum > 0) {\n            pow4 *= x;\n            sum += pow4 / sum;\n      \
    \      x --;\n        }\n        while (sum > 0) {\n            pow4 *= x;\n \
    \           sum += pow4 / sum;\n            x --;\n        }\n        while (sum\
    \ > 0) {\n            ", "        List<long> result = new List<long>();\n    \
    \    long x = 1;\n        long xx = 1;\n        long xxx = 1;\n        long xxxx\
    \ = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n\
    \        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n    \
    \    long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long\
    \ xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx\
    \ = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n\
    \        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n    \
    \    long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long\
    \ xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx\
    \ = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n\
    \        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n    \
    \    long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long\
    \ xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx\
    \ = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n\
    \        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n    \
    \    long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long\
    \ xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx\
    \ = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n\
    \        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n    \
    \    long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long\
    \ xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx\
    \ = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n\
    \        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n    \
    \    long xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long\
    \ xxxx = 1;\n        long xxxx = 1;\n        long xxxx = 1;\n        long xxxx\
    \ = 1;\n        long xxxx = 1;\n        long xxxx = 1;", "        List<long> result\
    \ = new List<long>();\n        long x = 0;\n        long y = 0;\n        long\
    \ z = 0;\n        long xx = 1;\n        long yy = 1;\n        long zz = 1;\n \
    \       long xy = 1;\n        long yz = 1;\n        long zzz = 1;\n        long\
    \ xyy = 1;\n        long yzz = 1;\n        long zzzy = 1;\n        long xyz =\
    \ 1;\n        long yzx = 1;\n        long zxy = 1;\n        long zxx = 1;\n  \
    \      long yxx = 1;\n        long xzz = 1;\n        long yzzz = 1;\n        long\
    \ zxyy = 1;\n        long zyyy = 1;\n        long zyzz = 1;\n        long yzxy\
    \ = 1;\n        long zyxx = 1;\n        long yxzz = 1;\n        long yxxx = 1;\n\
    \        long yzzz = 1;\n        long zyyy = 1;\n        long zyzy = 0;\n    \
    \    long yzyx = 1;\n        long yxzx = 1;\n        long yzxy = 1;\n        long\
    \ yzxx = 1;\n        long yxxx = 1;\n        long yzzz = 1;\n        long zyyy\
    \ = 1;\n        long zyzy = 0;\n        long yzyx = 1;\n        long yxzx = 1;\n\
    \        long yzxy = 1;\n        long yzxx = 1;\n        long yxxx = 1;\n    \
    \    long yzzz = 1;\n        long zyyy = 1;\n        long zyzy = 0;\n        long\
    \ yzyx = 1;\n        long yxzx = 1;\n        long yzxy = 1;\n        long yzxx\
    \ = 1;\n        long yxxx = 1;\n        long yzzz = 1;\n        long zyyy = 1;\n\
    \        long zyzy = 0;\n        long yzyx = 1;\n        long yxzx = 1;\n    \
    \    long yzxy = 1;\n        long yzxx = 1;\n        long yxxx = 1;\n        long\
    \ yzzz = 1;\n        long zyyy = 1;\n        long zyzy = 0;\n        long yzyx\
    \ = 1;\n        long yxzx = 1;\n        long yzxy = 1;\n        long yzxx = 1;\n\
    \        long yxxx = 1;\n        long yzzz = 1;\n        long zyyy = 1;\n    \
    \    long zyzy = 0;\n        long yzyx = 1;\n        long yxzx = 1;\n        long\
    \ yzxy = 1;\n        long yzxx = 1;\n        long y", "        List<long> result\
    \ = new List<long>();\n        long x = 0;\n        long y = 0;\n        long\
    \ xx = 1;\n        long xxx = 1;\n        long xxxx = 0;\n        long xxxxxx\
    \ = 0;\n        long xxxxxxx = 0;\n        long xxxxxxxx = 0;\n        long xxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxx = 0;\n        long xxxxxxxxxxx = 0;\n        long\
    \ xxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxxxxx = 0;\n\
    \        long xxxxxxxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxxxxxxx = 0;\n \
    \       long xxxxxxxxxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxxxxxxxxx = 0;\n\
    \        long xxxxxxxxxxxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 0;\n        long\
    \ xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 0;\n        long\
    \ xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 0;\n      \
    \  long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\
    \ = 0;\n        long xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx = 0;\n   \
    \     long xxxxxxxxxxxxxxxxxxxxxx", "        List<long> result = new List<long>();\n\
    \        long x = 0;\n        long y = 0;\n        long z = 0;\n        long xx\
    \ = 1;\n        long yy = 1;\n        long zz = 1;\n        long xy = 1;\n   \
    \     long yz = 1;\n        long zzz = 1;\n        long xyy = 1;\n        long\
    \ yzz = 1;\n        long zzzy = 1;\n        long xyz = 1;\n        long yzx =\
    \ 1;\n        long zxy = 1;\n        long zyx = 1;\n        long zxx = 1;\n  \
    \      long yx = 1;\n        long zx = 1;\n        long yz = 1;\n        long\
    \ zy = 1;\n        long zx = 1;\n        long yx = 1;\n        long zx = 1;\n\
    \        long yz = 1;\n        long zy = 1;\n        long zx = 1;\n        long\
    \ yx = 1;\n        long zx = 1;\n        long yz = 1;\n        long zy = 1;\n\
    \        long zx = 1;\n        long yx = 1;\n        long zx = 1;\n        long\
    \ yz = 1;\n        long zy = 1;\n        long zx = 1;\n        long yx = 1;\n\
    \        long zx = 1;\n        long yz = 1;\n        long zy = 1;\n        long\
    \ zx = 1;\n        long yx = 1;\n        long zx = 1;\n        long yz = 1;\n\
    \        long zy = 1;\n        long zx = 1;\n        long yx = 1;\n        long\
    \ zx = 1;\n        long yz = 1;\n        long zy = 1;\n        long zx = 1;\n\
    \        long yx = 1;\n        long zx = 1;\n        long yz = 1;\n        long\
    \ zy = 1;\n        long zx = 1;\n        long yx = 1;\n        long zx = 1;\n\
    \        long yz = 1;\n        long zy = 1;\n        long zx = 1;\n        long\
    \ yx = 1;\n        long zx = 1;\n        long yz = 1;\n        long zy = 1;\n\
    \        long zx = 1;\n        long yx = 1;\n        long zx = 1;\n        long\
    \ yz = 1;\n        long zy = 1;\n        long zx = 1;\n        long yx = 1;\n\
    \        long zx = 1;\n        long yz = 1;\n        long zy = 1;\n        long\
    \ zx = 1;\n        long yx = 1;\n        long zx = 1;\n        long yz = 1;\n\
    \        long zy = 1;\n        long zx = 1;\n        long yx = 1;\n        long\
    \ zx = 1;", "        List<long> derivative = new List<long>();\n        derivative.Add(0);\n\
    \        for (int i = 1; i < xs.Count; i++) {\n            derivative.Add(xs[i]\
    \ * derivative[i - 1]);\n        }\n        return derivative;", "        List<long>\
    \ derivative = new List<long>();\n        derivative.Add(0);\n        for (int\
    \ i = 1; i < xs.Count; i++) {\n            derivative.Add(xs[i] * derivative[i\
    \ - 1]);\n        }\n        return derivative;", "        List<long> result =\
    \ new List<long>();\n        long x = 0;\n        long y = 0;\n        long z\
    \ = 0;\n        long xx = 1;\n        long yy = 1;\n        long zz = 1;\n   \
    \     long xy = 1;\n        long yz = 1;\n        long zzz = 1;\n        long\
    \ xyy = 1;\n        long yzz = 1;\n        long zzzy = 1;\n        long xyz =\
    \ 1;\n        long yzx = 1;\n        long zxy = 1;\n        long zxx = 1;\n  \
    \      long yx = 1;\n        long zx = 1;\n        long xy = 1;\n        long\
    \ yz = 1;\n        long zy = 1;\n        long zx = 1;\n        long xx = 1;\n\
    \        long yy = 1;\n        long zz = 1;\n        long xy = 1;\n        long\
    \ yz = 1;\n        long zzz = 1;\n        long xyy = 1;\n        long yzz = 1;\n\
    \        long zzzy = 1;\n        long xyz = 1;\n        long yzx = 1;\n      \
    \  long zxy = 1;\n        long zxx = 1;\n        long yx = 1;\n        long zx\
    \ = 1;\n        long xy = 1;\n        long yz = 1;\n        long zy = 1;\n   \
    \     long zx = 1;\n        long xx = 1;\n        long yy = 1;\n        long zz\
    \ = 1;\n        long xy = 1;\n        long yz = 1;\n        long zzz = 1;\n  \
    \      long xyy = 1;\n        long yzz = 1;\n        long zzzy = 1;\n        long\
    \ xyz = 1;\n        long yzx = 1;\n        long zxy = 1;\n        long zxx = 1;\n\
    \        long yx = 1;\n        long zx = 1;\n        long xy = 1;\n        long\
    \ yz = 1;\n        long zy = 1;\n        long zx = 1;\n        long xx = 1;\n\
    \        long yy = 1;\n        long zz = 1;\n        long xy = 1;\n        long\
    \ yz = 1;\n        long zzz = 1;\n        long xyy = 1;\n        long yzz = 1;\n\
    \        long zzzy = 1;\n        long xyz = 1;\n        long yzx = 1;\n      \
    \  long zxy = 1;\n        long zxx = 1;\n        long yx = 1;\n        long zx\
    \ = 1;\n        long xy = 1;\n        long yz = 1;\n        long zy = 1;\n   \
    \     long zx = 1;\n        long xx = 1;\n        long yy = 1;\n        long zz\
    \ = 1;\n        long xy = 1;\n", "        List<long> result = new List<long>();\n\
    \        long x = 0;\n        long y = 0;\n        long sum = 0;\n        long\
    \ product = 1;\n        for (int i = 0; i < xs.Count; i++) {\n            sum\
    \ += xs[i] * product;\n            product *= x;\n        }\n        result.Add(sum);\n\
    \        for (int i = 0; i < xs.Count; i++) {\n            sum += xs[i] * product;\n\
    \            product *= x;\n        }\n        result.Add(sum);\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long x = 0;\n\
    \        long y = 0;\n        long xsq = 0;\n        long xsq2 = 0;\n        long\
    \ xsq3 = 0;\n        long xsq4 = 0;\n        long xsq5 = 0;\n        long xsq6\
    \ = 0;\n        long xsq7 = 0;\n        long xsq8 = 0;\n        long xsq9 = 0;\n\
    \        long xsq10 = 0;\n        long xsq11 = 0;\n        long xsq12 = 0;\n \
    \       long xsq13 = 0;\n        long xsq14 = 0;\n        long xsq15 = 0;\n  \
    \      long xsq16 = 0;\n        long xsq17 = 0;\n        long xsq18 = 0;\n   \
    \     long xsq19 = 0;\n        long xsq20 = 0;\n        long xsq21 = 0;\n    \
    \    long xsq22 = 0;\n        long xsq23 = 0;\n        long xsq24 = 0;\n     \
    \   long xsq25 = 0;\n        long xsq26 = 0;\n        long xsq27 = 0;\n      \
    \  long xsq28 = 0;\n        long xsq29 = 0;\n        long xsq30 = 0;\n       \
    \ long xsq31 = 0;\n        long xsq32 = 0;\n        long xsq33 = 0;\n        long\
    \ xsq34 = 0;\n        long xsq35 = 0;\n        long xsq36 = 0;\n        long xsq37\
    \ = 0;\n        long xsq38 = 0;\n        long xsq39 = 0;\n        long xsq40 =\
    \ 0;\n        long xsq41 = 0;\n        long xsq42 = 0;\n        long xsq43 = 0;\n\
    \        long xsq44 = 0;\n        long xsq45 = 0;\n        long xsq46 = 0;\n \
    \       long xsq47 = 0;\n        long xsq48 = 0;\n        long xsq49 = 0;\n  \
    \      long xsq50 = 0;\n        long xsq51 = 0;\n        long xsq52 = 0;\n   \
    \     long xsq53 = 0;\n        long xsq54 = 0;\n        long xsq55 = 0;\n    \
    \    long xsq56 = 0;\n        long xsq57 = 0;\n        long xsq58 = 0;\n     \
    \   long xsq59 = 0;\n        long xsq60 = 0;\n        long xsq61 = 0;\n      \
    \  long xsq62 = 0;\n        long xsq63 = 0;\n        long xsq64 = 0;\n       \
    \ long xsq65 = 0;\n        long xsq66 = 0;\n        long xsq67 = 0;\n        long\
    \ xsq68 = 0;\n        long xsq69 = 0;\n        long xsq70 = 0;\n        long xsq71\
    \ = 0;\n"]
stop_tokens:
- "\n    }\n"

name: HumanEval_121_solution
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given a non-empty list of integers, return the sum of all of\
  \ the odd elements that are in even positions.\n    // Examples\n    // solution([5,\
  \ 8, 7, 1]) ==> 12\n    // solution([3, 3, 3, 3, 3]) ==> 9\n    // solution([30,\
  \ 13, 24, 321]) ==>0\n    public static long Solution(List<long> lst) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Solution((new\
  \ List<long>(new long[]{(long)5L, (long)8L, (long)7L, (long)1L}))) == (12L));\n\
  \    Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)3L, (long)3L,\
  \ (long)3L, (long)3L}))) == (9L));\n    Debug.Assert(Solution((new List<long>(new\
  \ long[]{(long)30L, (long)13L, (long)24L, (long)321L}))) == (0L));\n    Debug.Assert(Solution((new\
  \ List<long>(new long[]{(long)5L, (long)9L}))) == (5L));\n    Debug.Assert(Solution((new\
  \ List<long>(new long[]{(long)2L, (long)4L, (long)8L}))) == (0L));\n    Debug.Assert(Solution((new\
  \ List<long>(new long[]{(long)30L, (long)13L, (long)23L, (long)32L}))) == (23L));\n\
  \    Debug.Assert(Solution((new List<long>(new long[]{(long)3L, (long)13L, (long)2L,\
  \ (long)9L}))) == (3L));\n    }\n\n}\n"
completions: ["        long sum = 0;\n        foreach (long i in lst) {\n        \
    \    if (i % 2 == 0) {\n                sum += i;\n            }\n        }\n\
    \        return sum;", "        long sum = 0;\n        foreach (var item in lst)\
    \ {\n            if (item % 2 == 0) {\n                sum += item;\n        \
    \    }\n        }\n        return sum;", "        long sum = 0;\n        foreach\
    \ (var item in lst) {\n            if (item % 2 == 0) {\n                sum +=\
    \ item;\n            }\n        }\n        return sum;", "        long sum = 0;\n\
    \        long evenSum = 0;\n        foreach (var item in lst) {\n            if\
    \ (item % 2 == 0) {\n                evenSum += item;\n            }\n       \
    \     else {\n                sum += item;\n            }\n        }\n       \
    \ return evenSum + sum;", "        long sum = 0;\n        foreach (var item in\
    \ lst) {\n            if (item % 2 == 0) {\n                sum += item;\n   \
    \         }\n        }\n        return sum;", "        long sum = 0;\n       \
    \ foreach (var item in lst) {\n            if (item % 2 == 0) {\n            \
    \    sum += item;\n            }\n        }\n        return sum;", "        long\
    \ sum = 0;\n        foreach (long i in lst) {\n            if (i % 2 == 0) {\n\
    \                sum += i;\n            }\n        }\n        return sum;", " \
    \       long sum = 0;\n        foreach (long i in lst) {\n            if (i %\
    \ 2 == 0) {\n                sum += i;\n            }\n        }\n        return\
    \ sum;", "        long sum = 0;\n        foreach (var item in lst) {\n       \
    \     if (item % 2 == 0) {\n                sum += item;\n            }\n    \
    \    }\n        return sum;", "        long sum = 0;\n        foreach (var item\
    \ in lst) {\n            if (item % 2 == 0) {\n                sum += item;\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    foreach (var item in lst) {\n            if (item % 2 == 0) {\n         \
    \       sum += item;\n            }\n        }\n        return sum;", "      \
    \  long sum = 0;\n        foreach (var item in lst) {\n            if (item %\
    \ 2 == 0) {\n                sum += item;\n            }\n        }\n        return\
    \ sum;", "        long sum = 0;\n        foreach (var item in lst) {\n       \
    \     if (item % 2 == 0) {\n                sum += item;\n            }\n    \
    \    }\n        return sum;", "        long sum = 0;\n        foreach (var item\
    \ in lst) {\n            if (item % 2 == 0) {\n                sum += item;\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    foreach (var item in lst) {\n            if (item % 2 == 0) {\n         \
    \       sum += item;\n            }\n        }\n        return sum;", "      \
    \  long sum = 0;\n        foreach (var item in lst) {\n            if (item %\
    \ 2 == 0) {\n                sum += item;\n            }\n        }\n        return\
    \ sum;", "        long sum = 0;\n        foreach (var item in lst) {\n       \
    \     if (item % 2 == 0) {\n                sum += item;\n            }\n    \
    \    }\n        return sum;", "        long sum = 0;\n        foreach (var item\
    \ in lst) {\n            if (item % 2 == 0) {\n                sum += item;\n\
    \            }\n        }\n        return sum;", "        long sum = 0;\n    \
    \    foreach (var item in lst) {\n            if (item % 2 == 0) {\n         \
    \       sum += item;\n            }\n        }\n        return sum;", "      \
    \  long sum = 0;\n        foreach (long i in lst) {\n            if (i % 2 ==\
    \ 0) {\n                sum += i;\n            }\n        }\n        return sum;"]
stop_tokens:
- "\n    }\n"

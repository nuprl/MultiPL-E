language: cs
name: HumanEval_53_add
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = 0;\n        while (x != 0) {\n            sum += x\
    \ % 10;\n            x /= 10;\n        }\n        while (y != 0) {\n         \
    \   sum += y % 10;\n            y /= 10;\n        }\n        return sum;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),\
    \ (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),\
    \ (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),\
    \ (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"{0} + {1} = {2}\"\
    , x, y, sum);\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '0 + 1 = 1

    1 + 0 = 1

    2 + 3 = 5

    5 + 7 = 12

    7 + 5 = 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        long carry = 0;\n        while (sum\
    \ != 0) {\n            long temp = sum % 10;\n            sum = sum / 10;\n  \
    \          carry = temp + carry;\n        }\n        return carry == 0 ? sum :\
    \ sum + carry;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),\
    \ (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),\
    \ (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),\
    \ (5L)) == (12L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <341560e38e8d43d9b1f4dae3eb644c27>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <341560e38e8d43d9b1f4dae3eb644c27>:0 \n"
  stdout: ''
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"Sum of {0} and\
    \ {1} is {2}\", x, y, sum);\n        return sum;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: 'Sum of 0 and 1 is 1

    Sum of 1 and 0 is 1

    Sum of 2 and 3 is 5

    Sum of 5 and 7 is 12

    Sum of 7 and 5 is 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long result = x + y;\n        Debug.WriteLine(\"Add: x = {0},\
    \ y = {1}, result = {2}\", x, y, result);\n        return result;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) ==\
    \ (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),\
    \ (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),\
    \ (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: 'Add: x = 0, y = 1, result = 1

    Add: x = 1, y = 0, result = 1

    Add: x = 2, y = 3, result = 5

    Add: x = 5, y = 7, result = 12

    Add: x = 7, y = 5, result = 12

    '
  stdout: ''
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = 0;\n        while (x > 0) {\n            sum += x %\
    \ 10;\n            x /= 10;\n        }\n        while (y > 0) {\n            sum\
    \ += y % 10;\n            y /= 10;\n        }\n        return sum;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L))\
    \ == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),\
    \ (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),\
    \ (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Debug.WriteLine(\"Sum is \" + sum);\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) ==\
    \ (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: 'Sum is 1

    Sum is 1

    Sum is 5

    Sum is 12

    Sum is 12

    '
  stdout: ''
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"The sum is {0}\"\
    , sum);\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: 'The sum is 1

    The sum is 1

    The sum is 5

    The sum is 12

    The sum is 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"Sum of {0} and\
    \ {1} is {2}\", x, y, sum);\n        return sum;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: 'Sum of 0 and 1 is 1

    Sum of 1 and 0 is 1

    Sum of 2 and 3 is 5

    Sum of 5 and 7 is 12

    Sum of 7 and 5 is 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"Sum of {0} and\
    \ {1} is {2}\", x, y, sum);\n        return sum;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: 'Sum of 0 and 1 is 1

    Sum of 1 and 0 is 1

    Sum of 2 and 3 is 5

    Sum of 5 and 7 is 12

    Sum of 7 and 5 is 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"Sum of {0} and\
    \ {1} is {2}\", x, y, sum);\n        return sum;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: 'Sum of 0 and 1 is 1

    Sum of 1 and 0 is 1

    Sum of 2 and 3 is 5

    Sum of 5 and 7 is 12

    Sum of 7 and 5 is 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long result = x + y;\n        Console.WriteLine(\"{0} + {1} =\
    \ {2}\", x, y, result);\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '0 + 1 = 1

    1 + 0 = 1

    2 + 3 = 5

    5 + 7 = 12

    7 + 5 = 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = 0;\n        while (x > 0) {\n            sum += x %\
    \ 10;\n            x /= 10;\n        }\n        while (y > 0) {\n            sum\
    \ += y % 10;\n            y /= 10;\n        }\n        return sum;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L))\
    \ == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),\
    \ (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),\
    \ (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"{0}\", sum);\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) ==\
    \ (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '1

    1

    5

    12

    12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"Sum of {0} and\
    \ {1} is {2}\", x, y, sum);\n        return sum;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: 'Sum of 0 and 1 is 1

    Sum of 1 and 0 is 1

    Sum of 2 and 3 is 5

    Sum of 5 and 7 is 12

    Sum of 7 and 5 is 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"The sum is {0}\"\
    , sum);\n        return sum;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: 'The sum is 1

    The sum is 1

    The sum is 5

    The sum is 12

    The sum is 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Debug.WriteLine(\"Sum: \" + sum);\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) ==\
    \ (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: 'Sum: 1

    Sum: 1

    Sum: 5

    Sum: 12

    Sum: 12

    '
  stdout: ''
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long result = x + y;\n        Console.WriteLine(\"{0} + {1} =\
    \ {2}\", x, y, result);\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '0 + 1 = 1

    1 + 0 = 1

    2 + 3 = 5

    5 + 7 = 12

    7 + 5 = 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long result = x + y;\n        Console.WriteLine(\"{0} + {1} =\
    \ {2}\", x, y, result);\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '0 + 1 = 1

    1 + 0 = 1

    2 + 3 = 5

    5 + 7 = 12

    7 + 5 = 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long result = x + y;\n        Console.WriteLine(\"The sum of {0}\
    \ and {1} is {2}\", x, y, result);\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n\
    \    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L))\
    \ == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),\
    \ (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: 'The sum of 0 and 1 is 1

    The sum of 1 and 0 is 1

    The sum of 2 and 3 is 5

    The sum of 5 and 7 is 12

    The sum of 7 and 5 is 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = 0;\n        while (x > 0) {\n            sum += x %\
    \ 10;\n            x /= 10;\n        }\n        while (y > 0) {\n            sum\
    \ += y % 10;\n            y /= 10;\n        }\n        return sum;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L))\
    \ == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),\
    \ (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),\
    \ (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Debug.Assert(sum % 2 == 0);\n     \
    \   return sum / 2;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) ==\
    \ (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Add (System.Int64 x,\
    \ System.Int64 y) [0x00000] in <31c90722de28496d85565675426d3890>:0 \n  at Problem.Main\
    \ (System.String[] args) [0x00000] in <31c90722de28496d85565675426d3890>:0 \n\
    Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,\
    \ System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31c90722de28496d85565675426d3890>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4"
  stdout: ''
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long result = x + y;\n        Console.WriteLine(result);\n   \
    \     return result;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) ==\
    \ (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '1

    1

    5

    12

    12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = 0;\n        while (x > 0) {\n            sum += x %\
    \ 10;\n            x /= 10;\n        }\n        while (y > 0) {\n            sum\
    \ += y % 10;\n            y /= 10;\n        }\n        return sum;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L))\
    \ == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),\
    \ (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),\
    \ (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long result = x + y;\n        Console.WriteLine(\"{0} + {1} =\
    \ {2}\", x, y, result);\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '0 + 1 = 1

    1 + 0 = 1

    2 + 3 = 5

    5 + 7 = 12

    7 + 5 = 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = 0;\n        while (x > 0) {\n            sum += x %\
    \ 10;\n            x /= 10;\n        }\n        while (y > 0) {\n            sum\
    \ += y % 10;\n            y /= 10;\n        }\n        return sum;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L))\
    \ == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),\
    \ (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),\
    \ (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"Sum of {0} and\
    \ {1} is {2}\", x, y, sum);\n        return sum;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: 'Sum of 0 and 1 is 1

    Sum of 1 and 0 is 1

    Sum of 2 and 3 is 5

    Sum of 5 and 7 is 12

    Sum of 7 and 5 is 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"Sum of {0} and\
    \ {1} is {2}\", x, y, sum);\n        return sum;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: 'Sum of 0 and 1 is 1

    Sum of 1 and 0 is 1

    Sum of 2 and 3 is 5

    Sum of 5 and 7 is 12

    Sum of 7 and 5 is 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long result = x + y;\n        Console.WriteLine(\"The sum is {0}\"\
    , result);\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: 'The sum is 1

    The sum is 1

    The sum is 5

    The sum is 12

    The sum is 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"Sum of {0} and\
    \ {1} is {2}\", x, y, sum);\n        return sum;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: 'Sum of 0 and 1 is 1

    Sum of 1 and 0 is 1

    Sum of 2 and 3 is 5

    Sum of 5 and 7 is 12

    Sum of 7 and 5 is 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"Sum of {0} and\
    \ {1} is {2}\", x, y, sum);\n        return sum;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: 'Sum of 0 and 1 is 1

    Sum of 1 and 0 is 1

    Sum of 2 and 3 is 5

    Sum of 5 and 7 is 12

    Sum of 7 and 5 is 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = 0;\n        while (x > 0) {\n            sum += x %\
    \ 10;\n            x /= 10;\n        }\n        while (y > 0) {\n            sum\
    \ += y % 10;\n            y /= 10;\n        }\n        return sum;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L))\
    \ == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),\
    \ (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),\
    \ (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"Sum of {0} and\
    \ {1} is {2}\", x, y, sum);\n        return sum;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: 'Sum of 0 and 1 is 1

    Sum of 1 and 0 is 1

    Sum of 2 and 3 is 5

    Sum of 5 and 7 is 12

    Sum of 7 and 5 is 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long result = x + y;\n        Console.WriteLine(\"{0} + {1} =\
    \ {2}\", x, y, result);\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '0 + 1 = 1

    1 + 0 = 1

    2 + 3 = 5

    5 + 7 = 12

    7 + 5 = 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"sum = {0}\", sum);\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) ==\
    \ (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: 'sum = 1

    sum = 1

    sum = 5

    sum = 12

    sum = 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long result = x + y;\n        Console.WriteLine(\"{0} + {1} =\
    \ {2}\", x, y, result);\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '0 + 1 = 1

    1 + 0 = 1

    2 + 3 = 5

    5 + 7 = 12

    7 + 5 = 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"Sum of {0} and\
    \ {1} is {2}\", x, y, sum);\n        return sum;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: 'Sum of 0 and 1 is 1

    Sum of 1 and 0 is 1

    Sum of 2 and 3 is 5

    Sum of 5 and 7 is 12

    Sum of 7 and 5 is 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long result = x + y;\n        Console.WriteLine(\"{0} + {1} =\
    \ {2}\", x, y, result);\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '0 + 1 = 1

    1 + 0 = 1

    2 + 3 = 5

    5 + 7 = 12

    7 + 5 = 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"{0} + {1} = {2}\"\
    , x, y, sum);\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '0 + 1 = 1

    1 + 0 = 1

    2 + 3 = 5

    5 + 7 = 12

    7 + 5 = 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = 0;\n        long xy = x * y;\n        long xy2 = xy\
    \ * xy;\n        long xy4 = xy2 * xy2;\n        long xy8 = xy4 * xy2;\n      \
    \  long xy16 = xy8 * xy2;\n        long xy32 = xy16 * xy2;\n        long xy64\
    \ = xy32 * xy2;\n        long xy128 = xy64 * xy2;\n        long xy256 = xy128\
    \ * xy2;\n        long xy512 = xy256 * xy2;\n        long xy1024 = xy512 * xy2;\n\
    \        long xy2048 = xy1024 * xy2;\n        long xy4096 = xy2048 * xy2;\n  \
    \      long xy8192 = 0;\n        long xy16384 = 0;\n        long xy32768 = 0;\n\
    \        long xy65536 = 0;\n        long xy131072 = 0;\n        long xy262144\
    \ = 0;\n        long xy524288 = 0;\n        long xy1048576 = 0;\n        long\
    \ xy2097152 = 0;\n        long xy4194304 = 0;\n        long xy8388608 = 0;\n \
    \       long xy16777216 = 0;\n        long xy33554432 = 0;\n        long xy67108864\
    \ = 0;\n        long xy134217728 = 0;\n        long xy268435456 = 0;\n       \
    \ long xy536870912 = 0;\n        long xy1073741824 = 0;\n        long xy2147483648\
    \ = 0;\n        long xy4294967296 = 0;\n        long xy8589934592 = 0;\n     \
    \   long xy17179869184 = 0;\n        long xy34359738368 = 0;\n        long xy68719476736\
    \ = 0;\n        long xy137438953472 = 0;\n        long xy274877906944 = 0;\n \
    \       long xy549755813888 = 0;\n        long xy1099511627776 = 0;\n        long\
    \ xy2199023255552 = 0;\n        long xy4398046511104 = -1;\n        long xy8796093022208\
    \ = 0;\n        long xy17592186044416 = 0;\n        long xy35184372088832 = 0;\n\
    \        long xy70368744177664 = 0;\n        long xy140737488355328 = 0;\n   \
    \     long xy281474976710656 = 0;\n        long xy562949953421312 = 0;\n     \
    \   long xy1125899906842624 = 0;\n        long xy2251799813685248 = 0;\n\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),\
    \ (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),\
    \ (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),\
    \ (5L)) == (12L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_8jaxciz.cs(15,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp_8jaxciz.cs(29,14): warning CS0219: The variable ''xy8192'' is assigned
    but its value is never used

    /tmp/tmp_8jaxciz.cs(30,14): warning CS0219: The variable ''xy16384'' is assigned
    but its value is never used

    /tmp/tmp_8jaxciz.cs(31,14): warning CS0219: The variable ''xy32768'' is assigned
    but its value is never used

    /tmp/tmp_8jaxciz.cs(32,14): warning CS0219: The variable ''xy65536'' is assigned
    but its value is never used

    /tmp/tmp_8jaxciz.cs(33,14): warning CS0219: The variable ''xy131072'' is assigned
    but its value is never used

    /tmp/tmp_8jaxciz.cs(34,14): warning CS0219: The variable ''xy262144'' is assigned
    but its value is never used

    /tmp/tmp_8jaxciz.cs(35,14): warning CS0219: The variable ''xy524288'' is assigned
    but its value is never used

    /tmp/tmp_8jaxciz.cs(36,14): warning CS0219: The variable ''xy1048576'' is assigned
    but its value is never used

    /tmp/tmp_8jaxciz.cs(37,14): warning CS0219: The variable ''xy2097152'' is assigned
    but its value is never used

    /tmp/tmp_8jaxciz.cs(38,14): warning CS0219: The variable ''xy4194304'' is assigned
    but its value is never used

    /tmp/tmp_8jaxciz.cs(39,14): warning CS0219: The variable ''xy8388608'' is assigned
    but its value is never used

    /tmp/tmp_8jaxciz.cs(40,14): warning CS0219: The variable ''xy16777216'' is assigned
    but its value is never used

    /tmp/tmp_8jaxciz.cs(41,14): warning CS0219: The variable ''xy33554432'' is assigned
    but its value is never used

    /tmp/tmp_8jaxciz.cs(42,14): warning CS0219: The variable ''xy67108864'' is assigned
    but its value is never used

    /tmp/tmp_8jaxciz.cs(43,14): warning CS0219: The variable ''xy134217728'' is assigned
    but its value is never used

    /tmp/tmp_8jaxciz.cs(44,14): warning CS0219: The variable ''xy268435456'' is assigned
    but its value is never used

    /tmp/tmp_8jaxciz.cs(45,14): warning CS0219: The variable ''xy536870912'' is assig'
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long result = x + y;\n        Console.WriteLine(\"{0} + {1} =\
    \ {2}\", x, y, result);\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '0 + 1 = 1

    1 + 0 = 1

    2 + 3 = 5

    5 + 7 = 12

    7 + 5 = 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"{0}\", sum);\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) ==\
    \ (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '1

    1

    5

    12

    12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long result = x + y;\n        Console.WriteLine(\"{0} + {1} =\
    \ {2}\", x, y, result);\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '0 + 1 = 1

    1 + 0 = 1

    2 + 3 = 5

    5 + 7 = 12

    7 + 5 = 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long result = x + y;\n        Console.WriteLine(\"{0} + {1} =\
    \ {2}\", x, y, result);\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '0 + 1 = 1

    1 + 0 = 1

    2 + 3 = 5

    5 + 7 = 12

    7 + 5 = 12

    '
  timestamp: 1659794101
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = 0;\n        long xx = x;\n        long yy = y;\n  \
    \      long xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n\
    \        long xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n\
    \        long xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n\
    \        long xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n\
    \        long xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n\
    \        long xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n\
    \        long xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n\
    \        long xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n\
    \        long xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n\
    \        long xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n\
    \        long xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n\
    \        long xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n\
    \        long xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n\
    \        long xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n\
    \        long xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n\
    \        long xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n\
    \        long xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n\
    \        long xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n\
    \        long xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n\
    \        long xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n\
    \        long xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n\
    \        long xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n\
    \        long xy = x * y;\n        long xx = x * x;\n        long yy = y * y;\n\
    \        long xy = x * y;\n        long xx = x * \n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxk36lw4v.cs(88,22): error CS1525: Invalid expression term ''}''

    /tmp/tmpxk36lw4v.cs(88,22): error CS1002: ; expected

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"sum is {0}\", sum);\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) ==\
    \ (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: 'sum is 1

    sum is 1

    sum is 5

    sum is 12

    sum is 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = 0;\n        long carry = 1;\n        while (y != 0)\
    \ {\n            long temp = x + (y & 1) + (carry & 1);\n            carry = temp\
    \ / 10;\n            sum += temp % 10;\n            x /= 10;\n            y /=\
    \ 10;\n        }\n        return sum + carry;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0b00fb1d0c064d4f94686c1788e97ec3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0b00fb1d0c064d4f94686c1788e97ec3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"Sum of {0} and\
    \ {1} is {2}\", x, y, sum);\n        return sum;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: 'Sum of 0 and 1 is 1

    Sum of 1 and 0 is 1

    Sum of 2 and 3 is 5

    Sum of 5 and 7 is 12

    Sum of 7 and 5 is 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"Sum of {0} and\
    \ {1} is {2}\", x, y, sum);\n        return sum;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: 'Sum of 0 and 1 is 1

    Sum of 1 and 0 is 1

    Sum of 2 and 3 is 5

    Sum of 5 and 7 is 12

    Sum of 7 and 5 is 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        long product = x * y;\n        long\
    \ quotient = x / y;\n        long remainder = x % y;\n        long quotient2 =\
    \ x / y;\n        long remainder2 = x % y;\n        long quotient3 = x / y;\n\
    \        long remainder3 = x % y;\n        long quotient4 = x / y;\n        long\
    \ remainder4 = x % y;\n        long quotient5 = x / y;\n        long remainder5\
    \ = x % y;\n        long quotient6 = x / y;\n        long remainder6 = x % y;\n\
    \        long quotient7 = x / y;\n        long remainder7 = x % y;\n        long\
    \ quotient8 = x / y;\n        long remainder8 = x % y;\n        long quotient9\
    \ = x / y;\n        long remainder9 = x % y;\n        long quotient10 = x / y;\n\
    \        long remainder10 = x % y;\n        long quotient11 = x / y;\n       \
    \ long remainder11 = x % y;\n        long quotient12 = x / y;\n        long remainder12\
    \ = x % y;\n        long quotient13 = x / y;\n        long remainder13 = x % y;\n\
    \        long quotient14 = x / y;\n        long remainder14 = x % y;\n       \
    \ long quotient15 = x / y;\n        long remainder15 = x % y;\n        long quotient16\
    \ = x / y;\n        long remainder16 = x % y;\n        long quotient17 = x / y;\n\
    \        long remainder17 = x % y;\n        long quotient18 = x / y;\n       \
    \ long remainder18 = x % y;\n        long quotient19 = x / y;\n        long remainder19\
    \ = x % y;\n        long quotient20 = x / y;\n        long remainder20 = x % y;\n\
    \        long quotient21 = x / y;\n        long remainder21 = x % y;\n       \
    \ long quotient22 = x / y;\n        long remainder22 = x % y;\n        long quotient23\
    \ = x / y;\n        long remainder23 = x % y;\n        long quotient24 = x / y;\n\
    \        long remainder24 = x % y;\n        long quotient25 = x / y;\n       \
    \ long remainder25 = x % y;\n        long quotient26 = x / y;\n        long remainder26\
    \ = x % y;\n        long quotient27 = x / y;\n        long remainder27 = x % y;\n\
    \        long quotient28 = x / y;\n        long \n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvktnatuq.cs(72,13): error CS1001: Identifier expected

    /tmp/tmpvktnatuq.cs(72,13): error CS1002: ; expected

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = 0;\n        while (x > 0) {\n            sum += x %\
    \ 10;\n            x /= 10;\n        }\n        while (y > 0) {\n            sum\
    \ += y % 10;\n            y /= 10;\n        }\n        return sum;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(Add((0L), (1L))\
    \ == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),\
    \ (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),\
    \ (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"Sum of {0} and\
    \ {1} is {2}\", x, y, sum);\n        return sum;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: 'Sum of 0 and 1 is 1

    Sum of 1 and 0 is 1

    Sum of 2 and 3 is 5

    Sum of 5 and 7 is 12

    Sum of 7 and 5 is 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long result = x + y;\n        Console.WriteLine(\"{0} + {1} =\
    \ {2}\", x, y, result);\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '0 + 1 = 1

    1 + 0 = 1

    2 + 3 = 5

    5 + 7 = 12

    7 + 5 = 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = 0;\n        while (x != 0) {\n            sum += x\
    \ % 10;\n            x /= 10;\n        }\n        while (y != 0) {\n         \
    \   sum += y % 10;\n            y /= 10;\n        }\n        return sum;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),\
    \ (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),\
    \ (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),\
    \ (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"{0}\", sum);\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) ==\
    \ (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '1

    1

    5

    12

    12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Debug.Assert(sum >= 0);\n        return\
    \ sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Add((0L),\
    \ (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) == (1L));\n    Debug.Assert(Add((2L),\
    \ (3L)) == (5L));\n    Debug.Assert(Add((5L), (7L)) == (12L));\n    Debug.Assert(Add((7L),\
    \ (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"Sum of {0} and\
    \ {1} is {2}\", x, y, sum);\n        return sum;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: 'Sum of 0 and 1 is 1

    Sum of 1 and 0 is 1

    Sum of 2 and 3 is 5

    Sum of 5 and 7 is 12

    Sum of 7 and 5 is 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long result = x + y;\n        Console.WriteLine(\"{0} + {1} =\
    \ {2}\", x, y, result);\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '0 + 1 = 1

    1 + 0 = 1

    2 + 3 = 5

    5 + 7 = 12

    7 + 5 = 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long result = x + y;\n        Console.WriteLine(result);\n   \
    \     return result;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) ==\
    \ (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '1

    1

    5

    12

    12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"Sum of {0} and\
    \ {1} is {2}\", x, y, sum);\n        return sum;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: 'Sum of 0 and 1 is 1

    Sum of 1 and 0 is 1

    Sum of 2 and 3 is 5

    Sum of 5 and 7 is 12

    Sum of 7 and 5 is 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Debug.WriteLine(\"sum=\" + sum);\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) ==\
    \ (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: 'sum=1

    sum=1

    sum=5

    sum=12

    sum=12

    '
  stdout: ''
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long result = x + y;\n        Console.WriteLine(\"{0}\", result);\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '1

    1

    5

    12

    12

    '
  timestamp: 1659794102
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"{0} + {1} = {2}\"\
    , x, y, sum);\n        return sum;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '0 + 1 = 1

    1 + 0 = 1

    2 + 3 = 5

    5 + 7 = 12

    7 + 5 = 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"Sum of {0} and\
    \ {1} is {2}\", x, y, sum);\n        return sum;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: 'Sum of 0 and 1 is 1

    Sum of 1 and 0 is 1

    Sum of 2 and 3 is 5

    Sum of 5 and 7 is 12

    Sum of 7 and 5 is 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long result = x + y;\n        Console.WriteLine(\"{0} + {1} =\
    \ {2}\", x, y, result);\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '0 + 1 = 1

    1 + 0 = 1

    2 + 3 = 5

    5 + 7 = 12

    7 + 5 = 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long result = x + y;\n        Console.WriteLine(\"{0} + {1} =\
    \ {2}\", x, y, result);\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '0 + 1 = 1

    1 + 0 = 1

    2 + 3 = 5

    5 + 7 = 12

    7 + 5 = 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long result = x + y;\n        Console.WriteLine(\"{0} + {1} =\
    \ {2}\", x, y, result);\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L),\
    \ (0L)) == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: '0 + 1 = 1

    1 + 0 = 1

    2 + 3 = 5

    5 + 7 = 12

    7 + 5 = 12

    '
  timestamp: 1659794101
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        return x + y;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L))\
    \ == (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794033
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Add two numbers x and y\n    // >>> add(2, 3)\n    //\
    \ 5\n    // >>> add(5, 7)\n    // 12\n    public static long Add(long x, long\
    \ y) {\n        long sum = x + y;\n        Console.WriteLine(\"sum = {0}\", sum);\n\
    \        return sum;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Add((0L), (1L)) == (1L));\n    Debug.Assert(Add((1L), (0L)) ==\
    \ (1L));\n    Debug.Assert(Add((2L), (3L)) == (5L));\n    Debug.Assert(Add((5L),\
    \ (7L)) == (12L));\n    Debug.Assert(Add((7L), (5L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: 'sum = 1

    sum = 1

    sum = 5

    sum = 12

    sum = 12

    '
  timestamp: 1659794101

name: HumanEval_158_find_max
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Write a function that accepts a list of strings.\n    // The\
  \ list contains different words. Return the word with maximum number\n    // of\
  \ unique characters. If multiple strings have maximum number of unique\n    // characters,\
  \ return the one which comes first in lexicographical order.\n    // find_max([\"\
  name\", \"of\", \"string\"]) == \"string\"\n    // find_max([\"name\", \"enam\"\
  , \"game\"]) == \"enam\"\n    // find_max([\"aaaaaaa\", \"bb\" ,\"cc\"]) == \"\"\
  aaaaaaa\"\n    public static string FindMax(List<string> words) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
  \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
  }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
  name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
  \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
  }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
  abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new List<string>(new\
  \ string[]{(string)\"play\", (string)\"this\", (string)\"game\", (string)\"of\"\
  , (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
  \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\",\
  \ (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
  \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
  nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
  \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
  this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"\
  }))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
  play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
completions: ["        string maxWord = \"\";\n        int maxCount = 0;\n       \
    \ foreach (string word in words) {\n            int count = 0;\n            foreach\
    \ (char c in word) {\n                count++;\n            }\n            if\
    \ (count > maxCount) {\n                maxCount = count;\n                maxWord\
    \ = word;\n            }\n        }\n        return maxWord;", "        string\
    \ maxWord = \"\";\n        int maxCount = 0;\n        foreach (string word in\
    \ words) {\n            int count = word.Distinct().Count();\n            if (count\
    \ > maxCount) {\n                maxCount = count;\n                maxWord =\
    \ word;\n            }\n        }\n        return maxWord;", "        string maxWord\
    \ = \"\";\n        int maxCount = 0;\n        foreach (string word in words) {\n\
    \            int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string maxWord = \"\"\
    ;\n        int maxCount = 0;\n        foreach (string word in words) {\n     \
    \       int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        int max = 0;\n     \
    \   string maxWord = \"\";\n        foreach (string word in words) {\n       \
    \     int uniqueChars = word.Distinct().Count();\n            if (uniqueChars\
    \ > max) {\n                max = uniqueChars;\n                maxWord = word;\n\
    \            }\n        }\n        return maxWord;", "        int max = 0;\n \
    \       string maxWord = \"\";\n        foreach (string word in words) {\n   \
    \         int count = 0;\n            foreach (char c in word) {\n           \
    \     count++;\n            }\n            if (count > max) {\n              \
    \  max = count;\n                maxWord = word;\n            }\n        }\n \
    \       return maxWord;", "        string maxWord = \"\";\n        int maxCount\
    \ = 0;\n        foreach (string word in words) {\n            int count = word.Distinct().Count();\n\
    \            if (count > maxCount) {\n                maxCount = count;\n    \
    \            maxWord = word;\n            }\n        }\n        return maxWord;",
  "        string maxWord = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.Distinct().Count();\n       \
    \     if (count > maxCount) {\n                maxCount = count;\n           \
    \     maxWord = word;\n            }\n        }\n        return maxWord;", " \
    \       string maxWord = \"\";\n        string maxCount = \"\";\n        foreach\
    \ (string word in words) {\n            int count = word.ToCharArray().Distinct().Count();\n\
    \            if (count > maxCount.Length) {\n                maxCount = count;\n\
    \                maxWord = word;\n            }\n        }\n        return maxWord;",
  "        string max = \"\";\n        foreach (string word in words) {\n        \
    \    int maxCount = 0;\n            foreach (char c in word) {\n             \
    \   maxCount = maxCount + 1;\n            }\n            if (maxCount > max.Length)\
    \ {\n                max = word;\n            }\n        }\n        return max;",
  "        string max = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.Distinct().Count();\n       \
    \     if (count > maxCount) {\n                max = word;\n                maxCount\
    \ = count;\n            }\n        }\n        return max;", "        string maxWord\
    \ = \"\";\n        int maxCount = 0;\n        foreach (string word in words) {\n\
    \            int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string max = \"\";\n\
    \        int maxCount = 0;\n        foreach (string word in words) {\n       \
    \     int count = word.Length;\n            if (count > maxCount) {\n        \
    \        max = word;\n                maxCount = count;\n            }\n     \
    \   }\n        return max;", "        string result = \"\";\n        HashSet<string>\
    \ uniqueChars = new HashSet<string>();\n        foreach (string word in words)\
    \ {\n            foreach (char c in word) {\n                if (!uniqueChars.Contains(c))\
    \ {\n                    uniqueChars.Add(c);\n                }\n            }\n\
    \        }\n        if (uniqueChars.Count > words.Count) {\n            result\
    \ = \"\";\n        }\n        else {\n            result = words.OrderByDescending(x\
    \ => x.Length).First();\n        }\n        return result;", "        string max\
    \ = \"\";\n        foreach (string word in words) {\n            int uniqueChars\
    \ = word.Distinct().Count();\n            if (uniqueChars > max.Length) {\n  \
    \              max = word;\n            }\n        }\n        return max;", " \
    \       string maxWord = \"\";\n        string maxCount = \"\";\n        foreach\
    \ (string word in words) {\n            int count = word.Length;\n           \
    \ if (maxCount.Length > count) {\n                maxCount = maxCount.Substring(0,\
    \ count);\n            }\n            if (maxCount.Length < count) {\n       \
    \         maxCount = maxCount + word.Substring(0, count);\n            }\n   \
    \         if (maxCount.Length == count) {\n                maxWord = word;\n \
    \           }\n        }\n        return maxWord;", "        string maxWord =\
    \ \"\";\n        int maxCount = 0;\n        foreach (string word in words) {\n\
    \            int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string maxWord = \"\"\
    ;\n        int maxCount = 0;\n        foreach (string word in words) {\n     \
    \       int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string max = \"\";\n\
    \        string max2 = \"\";\n        foreach (string word in words) {\n     \
    \       int count = 0;\n            foreach (char c in word) {\n             \
    \   if (char.IsLetter(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max2.Length) {\n                max =\
    \ word;\n                max2 = max;\n            } else if (count < max2.Length)\
    \ {\n                max2 = word;\n            }\n        }\n        if (max2.Length\
    \ > max.Length) {\n            return max2;\n        } else {\n            return\
    \ max;\n        }", "        string max = \"\";\n        int maxCount = 0;\n \
    \       foreach (string word in words) {\n            int count = word.ToCharArray().Distinct().Count();\n\
    \            if (count > maxCount) {\n                max = word;\n          \
    \      maxCount = count;\n            }\n        }\n        return max;", "  \
    \      string maxWord = \"\";\n        string maxCount = \"\";\n        foreach\
    \ (string word in words) {\n            int count = word.ToCharArray().Distinct().Count();\n\
    \            if (count > maxCount.Length) {\n                maxCount = count;\n\
    \                maxWord = word;\n            }\n        }\n        return maxWord;",
  "        string maxWord = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.Distinct().Count();\n       \
    \     if (count > maxCount) {\n                maxCount = count;\n           \
    \     maxWord = word;\n            }\n        }\n        return maxWord;", " \
    \       string maxWord = string.Empty;\n        string maxChars = string.Empty;\n\
    \        foreach (string word in words) {\n            int maxCharCount = 0;\n\
    \            foreach (char c in word) {\n                if (maxCharCount < word.Count(x\
    \ => x == c)) {\n                    maxCharCount = word.Count(x => x == c);\n\
    \                    maxChars = c;\n                }\n            }\n       \
    \     if (maxCharCount > maxWord.Count(x => x == maxChars)) {\n              \
    \  maxWord = word;\n            }\n        }\n        return maxWord;", "    \
    \    string maxWord = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.Length;\n            if (count\
    \ > maxCount) {\n                maxCount = count;\n                maxWord =\
    \ word;\n            }\n        }\n        return maxWord;", "        string maxWord\
    \ = \"\";\n        Dictionary<string, int> wordCounts = new Dictionary<string,\
    \ int>();\n        foreach (string word in words) {\n            int count = 0;\n\
    \            if (wordCounts.ContainsKey(word)) {\n                count = wordCounts[word];\n\
    \            }\n            wordCounts[word] = count + 1;\n            if (wordCounts.Values.Max()\
    \ == count) {\n                maxWord = word;\n            }\n        }\n   \
    \     return maxWord;", "        string maxWord = string.Empty;\n        int maxCount\
    \ = 0;\n        foreach (string word in words) {\n            int count = word.ToCharArray().Distinct().Count();\n\
    \            if (count > maxCount) {\n                maxCount = count;\n    \
    \            maxWord = word;\n            }\n        }\n        return maxWord;",
  "        string result = \"\";\n        Dictionary<string, int> charCounts = new\
    \ Dictionary<string, int>();\n        foreach (string word in words) {\n     \
    \       charCounts.Add(word, 0);\n        }\n        foreach (string word in words)\
    \ {\n            foreach (char c in word) {\n                charCounts[word]++;\n\
    \            }\n        }\n        foreach (KeyValuePair<string, int> kvp in charCounts)\
    \ {\n            if (kvp.Value == words.Count) {\n                result = kvp.Key;\n\
    \                break;\n            }\n        }\n        return result;", " \
    \       string max = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.Distinct().Count();\n       \
    \     if (count > maxCount) {\n                max = word;\n                maxCount\
    \ = count;\n            }\n        }\n        return max;", "        string maxWord\
    \ = \"\";\n        int maxCount = 0;\n        foreach (string word in words) {\n\
    \            int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string max = \"\";\n\
    \        int maxCount = 0;\n        foreach (string word in words) {\n       \
    \     int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                max = word;\n                maxCount = count;\n        \
    \    }\n        }\n        return max;", "        string maxWord = \"\";\n   \
    \     int maxCount = 0;\n        foreach (string word in words) {\n          \
    \  int count = word.Distinct().Count();\n            if (count > maxCount) {\n\
    \                maxCount = count;\n                maxWord = word;\n        \
    \    }\n        }\n        return maxWord;", "        string maxWord = \"\";\n\
    \        int maxCount = 0;\n        foreach (string word in words) {\n       \
    \     int count = 0;\n            foreach (char c in word) {\n               \
    \ if (char.IsLetter(c)) {\n                    count++;\n                }\n \
    \           }\n            if (count > maxCount) {\n                maxCount =\
    \ count;\n                maxWord = word;\n            }\n        }\n        return\
    \ maxWord;", "        string result = \"\";\n        Dictionary<string, int> count\
    \ = new Dictionary<string, int>();\n        foreach (string word in words) {\n\
    \            int count = 0;\n            foreach (char c in word) {\n        \
    \        if (count.ContainsKey(c)) {\n                    count[c]++;\n      \
    \          } else {\n                    count[c] = 1;\n                }\n  \
    \          }\n            if (count.Values.Max() == 1) {\n                result\
    \ = word;\n                break;\n            }\n        }\n        return result;",
  "        // Write your code here\n        var result = new Dictionary<string, int>();\n\
    \        foreach (var word in words)\n        {\n            var charCount = word.ToCharArray().Distinct().Count();\n\
    \            if (result.ContainsKey(charCount))\n            {\n             \
    \   result[charCount]++;\n            }\n            else\n            {\n   \
    \             result.Add(charCount, 1);\n            }\n        }\n        string\
    \ maxKey = string.Empty;\n        int maxValue = 0;\n        foreach (var item\
    \ in result)\n        {\n            if (item.Value > maxValue)\n            {\n\
    \                maxValue = item.Value;\n                maxKey = item.Key;\n\
    \            }\n        }\n        return maxKey;", "        string max = \"\"\
    ;\n        foreach (string word in words) {\n            int uniqueChars = word.Distinct().Count();\n\
    \            if (uniqueChars > max.Length) {\n                max = word;\n  \
    \          }\n        }\n        return max;", "        string max = \"\";\n \
    \       int maxCount = 0;\n        foreach (string word in words) {\n        \
    \    int count = 0;\n            foreach (char c in word) {\n                if\
    \ (char.IsLetter(c)) {\n                    count++;\n                }\n    \
    \        }\n            if (count > maxCount) {\n                max = word;\n\
    \                maxCount = count;\n            }\n        }\n        return max;",
  "        string maxWord = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.Length;\n            if (count\
    \ > maxCount) {\n                maxCount = count;\n                maxWord =\
    \ word;\n            }\n        }\n        return maxWord;", "        // Your\
    \ code goes here\n        string max = \"\";\n        int maxCount = 0;\n    \
    \    foreach (string word in words)\n        {\n            int count = 0;\n \
    \           foreach (char c in word)\n            {\n                if (char.IsLetter(c))\n\
    \                {\n                    count++;\n                }\n        \
    \    }\n            if (count > maxCount)\n            {\n                max\
    \ = word;\n                maxCount = count;\n            }\n        }\n     \
    \   return max;", "        string maxWord = \"\";\n        string maxCount = \"\
    \";\n        foreach (string word in words) {\n            int count = word.Distinct().Count();\n\
    \            if (count > maxCount.Length) {\n                maxCount = count;\n\
    \                maxWord = word;\n            }\n        }\n        return maxWord;",
  "        string max = \"\";\n        string max2 = \"\";\n        foreach (string\
    \ word in words) {\n            int count = 0;\n            foreach (char c in\
    \ word) {\n                count++;\n            }\n            if (count > max)\
    \ {\n                max = count;\n                max2 = word;\n            }\n\
    \        }\n        if (max == max2) {\n            return max2;\n        }\n\
    \        return max;", "        string max = \"\";\n        string max2 = \"\"\
    ;\n        foreach (string word in words) {\n            int count = 0;\n    \
    \        foreach (char c in word) {\n                if (char.IsLetter(c)) {\n\
    \                    count++;\n                }\n            }\n            if\
    \ (count > max2.Length) {\n                max = word;\n                max2 =\
    \ max;\n            } else if (count < max2.Length) {\n                max2 =\
    \ word;\n            }\n        }\n        return max2;", "        int maxCount\
    \ = 0;\n        string maxWord = \"\";\n        foreach (string word in words)\
    \ {\n            int count = word.Distinct().Count();\n            if (count >\
    \ maxCount) {\n                maxCount = count;\n                maxWord = word;\n\
    \            }\n        }\n        return maxWord;", "        string maxWord =\
    \ \"\";\n        int maxCount = 0;\n        foreach (string word in words) {\n\
    \            int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        // Write your code here\n\
    \        string maxWord = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.Distinct().Count();\n       \
    \     if (count > maxCount) {\n                maxCount = count;\n           \
    \     maxWord = word;\n            }\n        }\n        return maxWord;", " \
    \       string result = \"\";\n        Dictionary<string, int> charCounts = new\
    \ Dictionary<string, int>();\n        foreach (string word in words) {\n     \
    \       charCounts.Add(word, 0);\n        }\n        foreach (string word in words)\
    \ {\n            foreach (char c in word) {\n                if (!charCounts.ContainsKey(c))\
    \ {\n                    charCounts[c] = 1;\n                } else {\n      \
    \              charCounts[c]++;\n                }\n            }\n        }\n\
    \        foreach (KeyValuePair<string, int> kvp in charCounts) {\n           \
    \ if (kvp.Value > result.Length) {\n                result = kvp.Key;\n      \
    \      }\n        }\n        return result;", "        string max = \"\";\n  \
    \      int maxCount = 0;\n        foreach (string word in words) {\n         \
    \   int count = word.Distinct().Count();\n            if (count > maxCount) {\n\
    \                max = word;\n                maxCount = count;\n            }\n\
    \        }\n        return max;", "        string max = \"\";\n        int maxCount\
    \ = 0;\n        foreach (string word in words) {\n            int count = word.Distinct().Count();\n\
    \            if (count > maxCount) {\n                max = word;\n          \
    \      maxCount = count;\n            }\n        }\n        return max;", "  \
    \      string maxWord = \"\";\n        string maxChar = \"\";\n        int maxCount\
    \ = 0;\n        foreach (string word in words) {\n            int count = 0;\n\
    \            foreach (char c in word) {\n                if (char.IsLetter(c))\
    \ {\n                    count++;\n                }\n            }\n        \
    \    if (count > maxCount) {\n                maxCount = count;\n            \
    \    maxWord = word;\n                maxChar = maxWord.ToCharArray().OrderByDescending(c\
    \ => c).First();\n            }\n        }\n        return maxWord;", "      \
    \  string maxWord = string.Empty;\n        int maxCount = 0;\n        foreach\
    \ (string word in words) {\n            int count = word.Distinct().Count();\n\
    \            if (count > maxCount) {\n                maxCount = count;\n    \
    \            maxWord = word;\n            }\n        }\n        return maxWord;",
  "        string max = \"\";\n        string max2 = \"\";\n        foreach (string\
    \ word in words) {\n            int count = 0;\n            foreach (char c in\
    \ word) {\n                count++;\n            }\n            if (count > max.Length)\
    \ {\n                max = word;\n            }\n            else if (count >\
    \ max2.Length) {\n                max2 = word;\n            }\n        }\n   \
    \     if (max.Length > max2.Length) {\n            return max;\n        }\n  \
    \      return max2;", "        string max = \"\";\n        foreach (string word\
    \ in words) {\n            int uniqueChars = word.Distinct().Count();\n      \
    \      if (uniqueChars > max.Length) {\n                max = word;\n        \
    \    }\n        }\n        return max;", "        string max = \"\";\n       \
    \ int maxCount = 0;\n        foreach (string word in words) {\n            int\
    \ count = word.Distinct().Count();\n            if (count > maxCount) {\n    \
    \            max = word;\n                maxCount = count;\n            }\n \
    \       }\n        return max;", "        string result = \"\";\n        foreach\
    \ (string word in words) {\n            int uniqueChars = word.Distinct().Count();\n\
    \            if (uniqueChars > result.Length) {\n                result = word;\n\
    \            }\n        }\n        return result;", "        int max = 0;\n  \
    \      string maxWord = \"\";\n        foreach (string word in words) {\n    \
    \        int count = 0;\n            foreach (char c in word) {\n            \
    \    count++;\n            }\n            if (count > max) {\n               \
    \ max = count;\n                maxWord = word;\n            }\n        }\n  \
    \      return maxWord;", "        string max = \"\";\n        string max2 = \"\
    \";\n        foreach (string word in words) {\n            int count = 0;\n  \
    \          foreach (char c in word) {\n                count++;\n            }\n\
    \            if (count > max) {\n                max = count;\n              \
    \  max2 = word;\n            }\n        }\n        if (max2 == \"\") return \"\
    \";\n        return max2;", "        string max = \"\";\n        int maxCount\
    \ = 0;\n        foreach (string word in words) {\n            int count = word.Distinct().Count();\n\
    \            if (count > maxCount) {\n                max = word;\n          \
    \      maxCount = count;\n            }\n        }\n        return max;", "  \
    \      string maxWord = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.Length;\n            if (maxCount\
    \ < count) {\n                maxCount = count;\n                maxWord = word;\n\
    \            }\n        }\n        return maxWord;", "        string max = \"\"\
    ;\n        string max2 = \"\";\n        foreach (string word in words) {\n   \
    \         int count = 0;\n            foreach (char c in word) {\n           \
    \     count++;\n            }\n            if (count > max.Length) {\n       \
    \         max = word;\n            }\n        }\n        foreach (string word\
    \ in words) {\n            int count = 0;\n            foreach (char c in word)\
    \ {\n                count++;\n            }\n            if (count > max2.Length)\
    \ {\n                max2 = word;\n            }\n        }\n        if (max.Length\
    \ > max2.Length) {\n            return max;\n        } else {\n            return\
    \ max2;\n        }", "        string max = \"\";\n        foreach (string word\
    \ in words) {\n            int count = 0;\n            foreach (char c in word)\
    \ {\n                count++;\n            }\n            if (count > max.Length)\
    \ {\n                max = word;\n            }\n        }\n        return max;",
  "        string maxWord = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.Distinct().Count();\n       \
    \     if (count > maxCount) {\n                maxCount = count;\n           \
    \     maxWord = word;\n            }\n        }\n        return maxWord;", " \
    \       string max = \"\";\n        string max2 = \"\";\n        foreach (string\
    \ word in words) {\n            int count = 0;\n            foreach (char c in\
    \ word) {\n                count++;\n            }\n            if (count > max)\
    \ {\n                max = count;\n                max2 = word;\n            }\n\
    \        }\n        if (max2.Length > max.Length) {\n            return max2;\n\
    \        }\n        return max;", "        string max = \"\";\n        string\
    \ max2 = \"\";\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                count++;\n   \
    \         }\n            if (count > max) {\n                max = count;\n  \
    \              max2 = word;\n            }\n        }\n        if (max2 == \"\"\
    ) {\n            return \"\";\n        }\n        if (max == max2.Length) {\n\
    \            return max2;\n        }\n        return max2;", "        string max\
    \ = \"\";\n        int maxCount = 0;\n        foreach (string word in words) {\n\
    \            int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                max = word;\n                maxCount = count;\n        \
    \    }\n        }\n        return max;", "        string max = \"\";\n       \
    \ string max2 = \"\";\n        foreach (string word in words) {\n            int\
    \ count = 0;\n            foreach (char c in word) {\n                count++;\n\
    \            }\n            if (count > max) {\n                max = count;\n\
    \                max2 = word;\n            }\n        }\n        return max2;",
  "        string max = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.ToCharArray().Distinct().Count();\n\
    \            if (count > maxCount) {\n                max = word;\n          \
    \      maxCount = count;\n            }\n        }\n        return max;", "  \
    \      string maxWord = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.Distinct().Count();\n       \
    \     if (count > maxCount) {\n                maxCount = count;\n           \
    \     maxWord = word;\n            }\n        }\n        return maxWord;", " \
    \       // Write your code here\n        string result = \"\";\n        Dictionary<string,\
    \ int> charCount = new Dictionary<string, int>();\n        foreach (string word\
    \ in words) {\n            foreach (char c in word) {\n                if (!charCount.ContainsKey(c))\
    \ {\n                    charCount.Add(c, 0);\n                }\n           \
    \     charCount[c]++;\n            }\n        }\n        foreach (KeyValuePair<string,\
    \ int> kvp in charCount) {\n            if (kvp.Value > result.Length) {\n   \
    \             result = kvp.Key;\n            }\n        }\n        return result;",
  "        string maxWord = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.Distinct().Count();\n       \
    \     if (count > maxCount) {\n                maxCount = count;\n           \
    \     maxWord = word;\n            }\n        }\n        return maxWord;", " \
    \       string max = \"\";\n        foreach (string word in words) {\n       \
    \     int uniqueChars = word.Distinct().Count();\n            if (uniqueChars\
    \ > max.Length) {\n                max = word;\n            }\n        }\n   \
    \     return max;", "        string max = \"\";\n        int maxCount = 0;\n \
    \       foreach (string word in words) {\n            int count = 0;\n       \
    \     foreach (char c in word) {\n                count++;\n            }\n  \
    \          if (count > maxCount) {\n                max = word;\n            \
    \    maxCount = count;\n            }\n        }\n        return max;", "    \
    \    string maxWord = \"\";\n        string maxChar = \"\";\n        int maxCount\
    \ = 0;\n        foreach (string word in words) {\n            int count = 0;\n\
    \            foreach (char c in word) {\n                if (char.IsLetter(c))\
    \ {\n                    count++;\n                }\n            }\n        \
    \    if (count > maxCount) {\n                maxCount = count;\n            \
    \    maxWord = word;\n                maxChar = maxWord.ToCharArray().OrderByDescending(c\
    \ => c).First();\n            }\n        }\n        return maxWord;", "      \
    \  string max = \"\";\n        foreach (string word in words) {\n            int\
    \ uniqueChars = word.Distinct().Count();\n            if (uniqueChars > max.Length)\
    \ {\n                max = word;\n            }\n        }\n        return max;",
  "        string max = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = 0;\n            foreach (char c in\
    \ word) {\n                if (char.IsLetter(c)) {\n                    count++;\n\
    \                }\n            }\n            if (count > maxCount) {\n     \
    \           max = word;\n                maxCount = count;\n            }\n  \
    \      }\n        return max;", "        string result = \"\";\n        Dictionary<string,\
    \ int> charCounts = new Dictionary<string, int>();\n        foreach (string word\
    \ in words) {\n            charCounts.Add(word, 0);\n            foreach (char\
    \ c in word) {\n                charCounts[word]++;\n            }\n        }\n\
    \        foreach (KeyValuePair<string, int> kvp in charCounts) {\n           \
    \ if (kvp.Value > result.Length) {\n                result = kvp.Key;\n      \
    \      }\n        }\n        return result;", "        string maxWord = \"\";\n\
    \        int maxCount = 0;\n        foreach (string word in words) {\n       \
    \     int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string maxWord = \"\"\
    ;\n        int maxCount = 0;\n        foreach (string word in words) {\n     \
    \       int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string maxWord = \"\"\
    ;\n        int maxCount = 0;\n        foreach (string word in words) {\n     \
    \       int count = 0;\n            foreach (char c in word) {\n             \
    \   count++;\n            }\n            if (count > maxCount) {\n           \
    \     maxCount = count;\n                maxWord = word;\n            }\n    \
    \    }\n        return maxWord;", "        string max = \"\";\n        string\
    \ max2 = \"\";\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                count++;\n   \
    \         }\n            if (count > max.Length) {\n                max = word;\n\
    \            }\n            if (count > max2.Length) {\n                max2 =\
    \ word;\n            }\n        }\n        if (max2.Length > max.Length) {\n \
    \           return max2;\n        }\n        return max;", "        string max\
    \ = \"\";\n        string max2 = \"\";\n        foreach (string word in words)\
    \ {\n            int count = 0;\n            foreach (char c in word) {\n    \
    \            count++;\n            }\n            if (count > max) {\n       \
    \         max = count;\n                max2 = word;\n            }\n        }\n\
    \        if (max == max2) {\n            return \"\";\n        }\n        return\
    \ max2;", "        string maxWord = \"\";\n        string maxChar = \"\";\n  \
    \      int maxCount = 0;\n        foreach (string word in words) {\n         \
    \   int count = 0;\n            foreach (char c in word) {\n                if\
    \ (char.IsLetter(c)) {\n                    count++;\n                }\n    \
    \        }\n            if (count > maxCount) {\n                maxCount = count;\n\
    \                maxWord = word;\n                maxChar = maxWord.ToCharArray().OrderBy(c\
    \ => c).First();\n            }\n        }\n        return maxWord;", "      \
    \  string max = \"\";\n        foreach (string word in words) {\n            int\
    \ uniqueChars = word.Distinct().Count();\n            if (uniqueChars > max.Length)\
    \ {\n                max = word;\n            }\n        }\n        return max;",
  "        string maxWord = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.Distinct().Count();\n       \
    \     if (count > maxCount) {\n                maxCount = count;\n           \
    \     maxWord = word;\n            }\n        }\n        return maxWord;", " \
    \       string maxWord = string.Empty;\n        int maxCount = 0;\n        foreach\
    \ (string word in words) {\n            int count = word.Distinct().Count();\n\
    \            if (count > maxCount) {\n                maxCount = count;\n    \
    \            maxWord = word;\n            }\n        }\n        return maxWord;",
  "        string maxWord = \"\";\n        string maxChar = \"\";\n        int maxCount\
    \ = 0;\n        foreach (string word in words) {\n            int count = 0;\n\
    \            foreach (char c in word) {\n                count++;\n          \
    \  }\n            if (count > maxCount) {\n                maxCount = count;\n\
    \                maxWord = word;\n                maxChar = maxWord.ToCharArray();\n\
    \            }\n        }\n        if (maxCount == 0) {\n            return \"\
    \";\n        }\n        char[] charArray = maxChar.ToCharArray();\n        Array.Sort(charArray);\n\
    \        string result = \"\";\n        for (int i = 0; i < charArray.Length;\
    \ i++) {\n            result += charArray[i];\n        }\n        return result;",
  "        string max = \"\";\n        foreach (string word in words) {\n        \
    \    int count = 0;\n            foreach (char c in word) {\n                count++;\n\
    \            }\n            if (count > max.Length) {\n                max = word;\n\
    \            }\n        }\n        return max;", "        string max = \"\";\n\
    \        int maxCount = 0;\n        foreach (string word in words) {\n       \
    \     int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                max = word;\n                maxCount = count;\n        \
    \    }\n        }\n        return max;", "        string result = \"\";\n    \
    \    foreach (string word in words) {\n            int uniqueChars = word.ToCharArray().Distinct().Count();\n\
    \            if (uniqueChars > result.Length) {\n                result = word;\n\
    \            }\n        }\n        return result;", "        // Write your code\
    \ here\n        var maxCount = 0;\n        var maxWord = \"\";\n        foreach\
    \ (var word in words)\n        {\n            var count = word.Distinct().Count();\n\
    \            if (count > maxCount)\n            {\n                maxCount =\
    \ count;\n                maxWord = word;\n            }\n        }\n        return\
    \ maxWord;", "        string maxWord = \"\";\n        int maxCount = 0;\n    \
    \    foreach (string word in words) {\n            int count = word.Distinct().Count();\n\
    \            if (count > maxCount) {\n                maxCount = count;\n    \
    \            maxWord = word;\n            }\n        }\n        return maxWord;",
  "        string maxWord = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.Distinct().Count();\n       \
    \     if (count > maxCount) {\n                maxCount = count;\n           \
    \     maxWord = word;\n            }\n        }\n        return maxWord;", " \
    \       string maxWord = \"\";\n        string maxCount = \"\";\n        foreach\
    \ (string word in words) {\n            int count = 0;\n            foreach (char\
    \ c in word) {\n                count++;\n            }\n            if (count\
    \ > int.Parse(maxCount)) {\n                maxWord = word;\n                maxCount\
    \ = count.ToString();\n            }\n        }\n        return maxWord;", " \
    \       string max = \"\";\n        string max2 = \"\";\n        foreach (string\
    \ word in words) {\n            int count = 0;\n            foreach (char c in\
    \ word) {\n                if (count < words.Count(w => w.Contains(c))) {\n  \
    \                  count++;\n                }\n            }\n            if\
    \ (count > words.Count(w => w.Contains(max))) {\n                max = word;\n\
    \            }\n        }\n        foreach (string word in words) {\n        \
    \    int count = 0;\n            foreach (char c in word) {\n                if\
    \ (count < words.Count(w => w.Contains(c))) {\n                    count++;\n\
    \                }\n            }\n            if (count > words.Count(w => w.Contains(max2)))\
    \ {\n                max2 = word;\n            }\n        }\n        if (max ==\
    \ \"\" && max2 == \"\") {\n            return \"\";\n        }\n        if (max\
    \ == \"\") {\n            return max2;\n        }\n        if (max2 == \"\") {\n\
    \            return max;\n        }\n        if (max.Length > max2.Length) {\n\
    \            return max;\n        }\n        return max2;", "        string maxWord\
    \ = \"\";\n        int maxCount = 0;\n        foreach (string word in words) {\n\
    \            int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        int maxCount = 0;\n\
    \        string maxWord = \"\";\n        foreach (string word in words) {\n  \
    \          int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string maxWord = \"\"\
    ;\n        int maxCount = 0;\n        foreach (string word in words) {\n     \
    \       int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string max = \"\";\n\
    \        string max2 = \"\";\n        foreach (string word in words) {\n     \
    \       int count = 0;\n            foreach (char c in word) {\n             \
    \   count++;\n            }\n            if (count > max) {\n                max\
    \ = count;\n                max2 = word;\n            }\n        }\n        if\
    \ (max2 == \"\") {\n            return \"\";\n        }\n        return max2;",
  "        string maxWord = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.Distinct().Count();\n       \
    \     if (count > maxCount) {\n                maxCount = count;\n           \
    \     maxWord = word;\n            }\n        }\n        return maxWord;", " \
    \       string max = \"\";\n        string max2 = \"\";\n        foreach (string\
    \ word in words) {\n            int count = 0;\n            foreach (char c in\
    \ word) {\n                if (char.IsLetter(c)) {\n                    count++;\n\
    \                }\n            }\n            if (count > max.Length) {\n   \
    \             max = word;\n            }\n            if (count > max2.Length)\
    \ {\n                max2 = word;\n            }\n        }\n        if (max2.Length\
    \ > max.Length) {\n            return max2;\n        }\n        return max;",
  "        string max = \"\";\n        string max2 = \"\";\n        foreach (string\
    \ word in words) {\n            int count = 0;\n            foreach (char c in\
    \ word) {\n                count++;\n            }\n            if (count > max2.Length)\
    \ {\n                max = word;\n                max2 = max;\n            } else\
    \ if (count < max2.Length) {\n                max2 = word;\n            }\n  \
    \      }\n        return max2;", "        string max = \"\";\n        foreach\
    \ (string word in words) {\n            int count = 0;\n            foreach (char\
    \ c in word) {\n                count++;\n            }\n            if (count\
    \ > max.Length) {\n                max = word;\n            }\n        }\n   \
    \     return max;", "        string maxWord = \"\";\n        string maxChar =\
    \ \"\";\n        string currentWord = \"\";\n        string currentChar = \"\"\
    ;\n        int maxCount = 0;\n        foreach (string word in words) {\n     \
    \       currentWord = word;\n            currentChar = currentWord.ToCharArray().Distinct().ToArray().ToString();\n\
    \            maxCount = currentChar.Length;\n            foreach (char c in currentChar)\
    \ {\n                if (maxCount > maxWord.ToCharArray().Distinct().ToArray().Length)\
    \ {\n                    maxWord = currentWord;\n                    maxChar =\
    \ c;\n                    maxCount = currentChar.Length;\n                }\n\
    \            }\n        }\n        return maxWord;", "        string maxWord =\
    \ \"\";\n        int maxCount = 0;\n        foreach (string word in words) {\n\
    \            int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string max = \"\";\n\
    \        int maxCount = 0;\n        foreach (string word in words) {\n       \
    \     int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                max = word;\n                maxCount = count;\n        \
    \    }\n        }\n        return max;", "        string maxWord = string.Empty;\n\
    \        int maxCount = 0;\n        foreach (string word in words) {\n       \
    \     int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string max = \"\";\n\
    \        int maxCount = 0;\n        foreach (string word in words) {\n       \
    \     int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                max = word;\n                maxCount = count;\n        \
    \    }\n        }\n        return max;", "        string maxWord = \"\";\n   \
    \     int maxCount = 0;\n        foreach (string word in words) {\n          \
    \  int count = word.Distinct().Count();\n            if (count > maxCount) {\n\
    \                maxCount = count;\n                maxWord = word;\n        \
    \    }\n        }\n        return maxWord;", "        string maxWord = \"\";\n\
    \        int maxCount = 0;\n        foreach (string word in words) {\n       \
    \     int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        List<string> uniqueWords\
    \ = new List<string>();\n        foreach (string word in words) {\n          \
    \  int uniqueChars = word.ToCharArray().Distinct().Count();\n            if (uniqueChars\
    \ > uniqueWords.Count) {\n                uniqueWords.Add(word);\n           \
    \ }\n        }\n        if (uniqueWords.Count == 0) {\n            return \"\"\
    ;\n        }\n        return uniqueWords.OrderBy(w => w.ToCharArray().Distinct().Count()).First();",
  "        string maxWord = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.Distinct().Count();\n       \
    \     if (count > maxCount) {\n                maxCount = count;\n           \
    \     maxWord = word;\n            }\n        }\n        return maxWord;", " \
    \       string max = \"\";\n        foreach (string word in words) {\n       \
    \     int count = 0;\n            foreach (char c in word) {\n               \
    \ count++;\n            }\n            if (count > max.Length) {\n           \
    \     max = word;\n            }\n        }\n        return max;", "        string\
    \ max = \"\";\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                count++;\n   \
    \         }\n            if (count > max.Length) {\n                max = word;\n\
    \            }\n        }\n        return max;", "        string maxWord = \"\"\
    ;\n        int maxCount = 0;\n        foreach (string word in words) {\n     \
    \       int count = word.ToCharArray().Distinct().Count();\n            if (count\
    \ > maxCount) {\n                maxCount = count;\n                maxWord =\
    \ word;\n            }\n        }\n        return maxWord;", "        // Write\
    \ your code here\n        string max = \"\";\n        int maxCount = 0;\n    \
    \    foreach (string word in words)\n        {\n            int count = 0;\n \
    \           foreach (char c in word)\n            {\n                if (word.IndexOf(c)\
    \ > -1)\n                {\n                    count++;\n                }\n\
    \            }\n            if (count > maxCount)\n            {\n           \
    \     max = word;\n                maxCount = count;\n            }\n        }\n\
    \        if (maxCount == 0)\n        {\n            return \"\";\n        }\n\
    \        else\n        {\n            return max;\n        }", "        string\
    \ maxWord = \"\";\n        int maxCount = 0;\n        foreach (string word in\
    \ words) {\n            int count = word.Distinct().Count();\n            if (count\
    \ > maxCount) {\n                maxCount = count;\n                maxWord =\
    \ word;\n            }\n        }\n        return maxWord;", "        string maxWord\
    \ = \"\";\n        int maxCount = 0;\n        foreach (string word in words) {\n\
    \            int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string maxWord = \"\"\
    ;\n        int maxCount = 0;\n        foreach (string word in words) {\n     \
    \       int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string maxWord = \"\"\
    ;\n        int maxCount = 0;\n        foreach (string word in words) {\n     \
    \       int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string max = \"\";\n\
    \        int maxCount = 0;\n        foreach (string word in words) {\n       \
    \     int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                max = word;\n                maxCount = count;\n        \
    \    }\n        }\n        return max;", "        string maxWord = \"\";\n   \
    \     int maxCount = 0;\n        foreach (string word in words) {\n          \
    \  int count = word.Distinct().Count();\n            if (count > maxCount) {\n\
    \                maxCount = count;\n                maxWord = word;\n        \
    \    }\n        }\n        return maxWord;", "        string maxWord = \"\";\n\
    \        int maxCount = 0;\n        foreach (string word in words) {\n       \
    \     int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string max = \"\";\n\
    \        int maxCount = 0;\n        foreach (string word in words) {\n       \
    \     int count = 0;\n            foreach (char c in word) {\n               \
    \ count++;\n            }\n            if (count > maxCount) {\n             \
    \   max = word;\n                maxCount = count;\n            }\n        }\n\
    \        return max;", "        string maxWord = \"\";\n        int maxCount =\
    \ 0;\n        foreach (string word in words) {\n            int count = word.ToCharArray().Distinct().Count();\n\
    \            if (count > maxCount) {\n                maxCount = count;\n    \
    \            maxWord = word;\n            }\n        }\n        return maxWord;",
  "        string maxWord = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.Distinct().Count();\n       \
    \     if (count > maxCount) {\n                maxCount = count;\n           \
    \     maxWord = word;\n            }\n        }\n        return maxWord;", " \
    \       string maxWord = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.Distinct().Count();\n       \
    \     if (count > maxCount) {\n                maxCount = count;\n           \
    \     maxWord = word;\n            }\n        }\n        return maxWord;", " \
    \       string maxWord = string.Empty;\n        string maxChar = string.Empty;\n\
    \        foreach (string word in words) {\n            int uniqueChars = word.Distinct().Count();\n\
    \            if (uniqueChars > maxChar.Length) {\n                maxChar = uniqueChars.ToString();\n\
    \                maxWord = word;\n            }\n        }\n        return maxWord;",
  "        string result = \"\";\n        foreach (string word in words) {\n     \
    \       int uniqueChars = word.Distinct().Count();\n            if (uniqueChars\
    \ > result.Length) {\n                result = word;\n            }\n        }\n\
    \        return result;", "        string maxWord = \"\";\n        int maxCount\
    \ = 0;\n        foreach (string word in words) {\n            int count = word.Distinct().Count();\n\
    \            if (count > maxCount) {\n                maxCount = count;\n    \
    \            maxWord = word;\n            }\n        }\n        return maxWord;",
  "        string max = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.Distinct().Count();\n       \
    \     if (count > maxCount) {\n                max = word;\n                maxCount\
    \ = count;\n            }\n        }\n        return max;", "        string max\
    \ = \"\";\n        foreach (string word in words) {\n            int uniqueChars\
    \ = word.ToCharArray().Distinct().Count();\n            if (uniqueChars > max.ToCharArray().Distinct().Count())\
    \ {\n                max = word;\n            }\n        }\n        return max;",
  "        string maxWord = \"\";\n        string maxChar = \"\";\n        int maxCount\
    \ = 0;\n        foreach (string word in words) {\n            int count = 0;\n\
    \            foreach (char c in word) {\n                if (char.IsLetter(c))\
    \ {\n                    count++;\n                }\n            }\n        \
    \    if (count > maxCount) {\n                maxCount = count;\n            \
    \    maxWord = word;\n                maxChar = maxWord.ToCharArray().OrderByDescending(c\
    \ => c).First();\n            }\n        }\n        return maxWord;", "      \
    \  string max = \"\";\n        string max2 = \"\";\n        foreach (string word\
    \ in words) {\n            int count = 0;\n            foreach (char c in word)\
    \ {\n                if (char.IsLetter(c)) {\n                    count++;\n \
    \               }\n            }\n            if (count > max2.Length) {\n   \
    \             max = word;\n                max2 = max;\n            } else if\
    \ (count < max2.Length) {\n                max2 = word;\n            }\n     \
    \   }\n        return max2;", "        string maxWord = \"\";\n        int maxCount\
    \ = 0;\n        foreach (string word in words) {\n            int count = word.Distinct().Count();\n\
    \            if (count > maxCount) {\n                maxCount = count;\n    \
    \            maxWord = word;\n            }\n        }\n        return maxWord;",
  "        string max = \"\";\n        string max2 = \"\";\n        foreach (string\
    \ word in words) {\n            int count = 0;\n            foreach (char c in\
    \ word) {\n                count++;\n            }\n            if (count > max.Length)\
    \ {\n                max = word;\n            }\n            if (count > max2.Length)\
    \ {\n                max2 = word;\n            }\n        }\n        return max2;",
  "        // Your code goes here\n        string max = \"\";\n        string max2\
    \ = \"\";\n        foreach (string word in words) {\n            int count = 0;\n\
    \            foreach (char c in word) {\n                count++;\n          \
    \  }\n            if (count > max.Length) {\n                max = word;\n   \
    \         }\n        }\n        foreach (string word in words) {\n           \
    \ int count = 0;\n            foreach (char c in word) {\n                count++;\n\
    \            }\n            if (count > max2.Length) {\n                max2 =\
    \ word;\n            }\n        }\n        if (max.Length > max2.Length) {\n \
    \           return max;\n        }\n        return max2;", "        string maxWord\
    \ = string.Empty;\n        string maxChar = string.Empty;\n        int maxCount\
    \ = 0;\n        foreach (string word in words) {\n            int count = 0;\n\
    \            foreach (char c in word) {\n                if (char.IsLetter(c))\
    \ {\n                    count++;\n                }\n            }\n        \
    \    if (count > maxCount) {\n                maxCount = count;\n            \
    \    maxWord = word;\n                maxChar = string.Empty;\n            }\n\
    \        }\n        if (maxCount == 0) {\n            return string.Empty;\n \
    \       }\n        foreach (string word in words) {\n            int count = 0;\n\
    \            foreach (char c in word) {\n                if (char.IsLetter(c))\
    \ {\n                    count++;\n                }\n            }\n        \
    \    if (count > maxCount) {\n                maxCount = count;\n            \
    \    maxWord = word;\n                maxChar = string.Empty;\n            }\n\
    \        }\n        return maxWord;", "        string maxWord = string.Empty;\n\
    \        int maxCount = 0;\n        foreach (string word in words) {\n       \
    \     int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string max = \"\";\n\
    \        int maxCount = 0;\n        foreach (string word in words) {\n       \
    \     int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                max = word;\n                maxCount = count;\n        \
    \    }\n        }\n        return max;", "        string maxWord = \"\";\n   \
    \     string maxCount = \"\";\n        foreach (string word in words) {\n    \
    \        int count = word.ToCharArray().Distinct().Count();\n            if (count\
    \ > maxCount.Length) {\n                maxCount = count;\n                maxWord\
    \ = word;\n            }\n        }\n        return maxWord;", "        string\
    \ max = \"\";\n        int maxCount = 0;\n        foreach (string word in words)\
    \ {\n            int count = word.Distinct().Count();\n            if (count >\
    \ maxCount) {\n                max = word;\n                maxCount = count;\n\
    \            }\n        }\n        return max;", "        string maxWord = \"\"\
    ;\n        int maxCount = 0;\n        foreach (string word in words) {\n     \
    \       int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string result = \"\"\
    ;\n        string max = \"\";\n        foreach (string word in words) {\n    \
    \        int count = 0;\n            foreach (char c in word) {\n            \
    \    if (char.IsLetter(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max.Length) {\n                max = word;\n\
    \            }\n        }\n        if (max.Length > result.Length) {\n       \
    \     result = max;\n        }\n        return result;", "        string maxWord\
    \ = \"\";\n        int maxCount = 0;\n        foreach (string word in words) {\n\
    \            int count = word.Length;\n            if (maxCount < count) {\n \
    \               maxCount = count;\n                maxWord = word;\n         \
    \   }\n        }\n        return maxWord;", "        string maxWord = \"\";\n\
    \        int maxCount = 0;\n        foreach (string word in words) {\n       \
    \     int count = 0;\n            foreach (char c in word) {\n               \
    \ count++;\n            }\n            if (count > maxCount) {\n             \
    \   maxCount = count;\n                maxWord = word;\n            }\n      \
    \  }\n        return maxWord;", "        string max = \"\";\n        foreach (string\
    \ word in words) {\n            int count = 0;\n            foreach (char c in\
    \ word) {\n                count++;\n            }\n            if (count > max.Length)\
    \ {\n                max = word;\n            }\n        }\n        return max;",
  "        string maxWord = string.Empty;\n        int maxCount = 0;\n        foreach\
    \ (string word in words) {\n            int count = word.Length;\n           \
    \ if (count > maxCount) {\n                maxCount = count;\n               \
    \ maxWord = word;\n            }\n        }\n        return maxWord;", "     \
    \   string maxWord = string.Empty;\n        int maxCount = 0;\n        foreach\
    \ (string word in words) {\n            int count = word.Length;\n           \
    \ if (count > maxCount) {\n                maxCount = count;\n               \
    \ maxWord = word;\n            }\n        }\n        return maxWord;", "     \
    \   string result = \"\";\n        Dictionary<string, int> charCounts = new Dictionary<string,\
    \ int>();\n        foreach (string word in words) {\n            charCounts.Add(word,\
    \ 0);\n        }\n        foreach (string word in words) {\n            foreach\
    \ (char c in word) {\n                charCounts[word] += 1;\n            }\n\
    \        }\n        foreach (KeyValuePair<string, int> kvp in charCounts) {\n\
    \            if (kvp.Value == words.Count) {\n                result = kvp.Key;\n\
    \            }\n        }\n        return result;", "        string maxWord =\
    \ string.Empty;\n        int maxCount = 0;\n        foreach (string word in words)\
    \ {\n            int count = word.Distinct().Count();\n            if (count >\
    \ maxCount) {\n                maxCount = count;\n                maxWord = word;\n\
    \            }\n        }\n        return maxWord;", "        string maxWord =\
    \ \"\";\n        int maxCount = 0;\n        foreach (string word in words) {\n\
    \            int count = 0;\n            foreach (char c in word) {\n        \
    \        if (char.IsLetter(c)) {\n                    count++;\n             \
    \   }\n            }\n            if (count > maxCount) {\n                maxCount\
    \ = count;\n                maxWord = word;\n            }\n        }\n      \
    \  return maxWord;", "        string result = \"\";\n        foreach (string word\
    \ in words) {\n            int max = 0;\n            foreach (char c in word)\
    \ {\n                max = Math.Max(max, words.Count(w => w.Contains(c)));\n \
    \           }\n            if (max > result.Length) {\n                result\
    \ = word;\n            }\n        }\n        return result;", "        string\
    \ maxWord = \"\";\n        int maxCount = 0;\n        foreach (string word in\
    \ words) {\n            int count = word.Distinct().Count();\n            if (count\
    \ > maxCount) {\n                maxCount = count;\n                maxWord =\
    \ word;\n            }\n        }\n        return maxWord;", "        string maxWord\
    \ = string.Empty;\n        int maxCount = 0;\n        foreach (string word in\
    \ words) {\n            int count = word.Distinct().Count();\n            if (count\
    \ > maxCount) {\n                maxCount = count;\n                maxWord =\
    \ word;\n            }\n        }\n        return maxWord;", "        string maxWord\
    \ = \"\";\n        int maxCount = 0;\n        foreach (string word in words) {\n\
    \            int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string maxWord = \"\"\
    ;\n        int maxCount = 0;\n        foreach (string word in words) {\n     \
    \       int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string maxWord = string.Empty;\n\
    \        int maxCount = 0;\n        foreach (string word in words) {\n       \
    \     int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string maxWord = \"\"\
    ;\n        int maxCount = 0;\n        foreach (string word in words) {\n     \
    \       int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string maxWord = string.Empty;\n\
    \        int maxCount = 0;\n        foreach (string word in words) {\n       \
    \     int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string maxWord = \"\"\
    ;\n        string maxCount = \"\";\n        foreach (string word in words) {\n\
    \            int count = word.Length;\n            if (maxCount.Length > count)\
    \ {\n                maxWord = word;\n                maxCount = count;\n    \
    \        }\n        }\n        return maxWord;", "        string maxWord = \"\"\
    ;\n        int maxCount = 0;\n        foreach (string word in words) {\n     \
    \       int count = 0;\n            foreach (char c in word) {\n             \
    \   count++;\n            }\n            if (count > maxCount) {\n           \
    \     maxCount = count;\n                maxWord = word;\n            }\n    \
    \    }\n        return maxWord;", "        string max = \"\";\n        int maxCount\
    \ = 0;\n        foreach (string word in words) {\n            int count = 0;\n\
    \            foreach (char c in word) {\n                if (char.IsLetter(c))\
    \ {\n                    count++;\n                }\n            }\n        \
    \    if (count > maxCount) {\n                max = word;\n                maxCount\
    \ = count;\n            }\n        }\n        return max;", "        string result\
    \ = \"\";\n        HashSet<string> unique = new HashSet<string>();\n        foreach\
    \ (string word in words) {\n            foreach (char c in word) {\n         \
    \       if (!unique.Contains(c)) {\n                    unique.Add(c);\n     \
    \           }\n            }\n        }\n        if (unique.Count > words.Count)\
    \ {\n            result = \"\";\n        } else {\n            result = words.OrderBy(x\
    \ => x.Length).First();\n        }\n        return result;", "        string result\
    \ = \"\";\n        List<string> max = new List<string>();\n        foreach (string\
    \ word in words) {\n            int count = 0;\n            foreach (char c in\
    \ word) {\n                if (char.IsLetter(c)) {\n                    count++;\n\
    \                }\n            }\n            if (count > max.Count) {\n    \
    \            max.Add(word);\n            }\n        }\n        if (max.Count >\
    \ 0) {\n            foreach (string word in max) {\n                foreach (char\
    \ c in word) {\n                    if (char.IsLetter(c)) {\n                \
    \        result += c;\n                    }\n                }\n            }\n\
    \        }\n        return result;", "        string maxWord = \"\";\n       \
    \ int maxCount = 0;\n        foreach (string word in words) {\n            int\
    \ count = word.Distinct().Count();\n            if (count > maxCount) {\n    \
    \            maxCount = count;\n                maxWord = word;\n            }\n\
    \        }\n        return maxWord;", "        int max = 0;\n        string maxWord\
    \ = \"\";\n        foreach (string word in words) {\n            int uniqueChars\
    \ = word.Distinct().Count();\n            if (uniqueChars > max) {\n         \
    \       max = uniqueChars;\n                maxWord = word;\n            }\n \
    \       }\n        return maxWord;", "        string max = \"\";\n        string\
    \ maxChar = \"\";\n        foreach (string word in words) {\n            int maxCharCount\
    \ = 0;\n            foreach (char c in word) {\n                if (maxCharCount\
    \ < char.Count(c)) {\n                    maxCharCount = char.Count(c);\n    \
    \                maxChar = c;\n                }\n            }\n            if\
    \ (maxCharCount > char.Count(max)) {\n                max = maxChar;\n       \
    \     }\n        }\n        return max;", "        string max = \"\";\n      \
    \  string max2 = \"\";\n        foreach (string word in words) {\n           \
    \ int count = 0;\n            foreach (char c in word) {\n                count++;\n\
    \            }\n            if (count > max.Length) {\n                max = word;\n\
    \            }\n            if (count > max2.Length) {\n                max2 =\
    \ word;\n            }\n        }\n        if (max.Length > max2.Length) {\n \
    \           return max;\n        }\n        return max2;", "        string result\
    \ = \"\";\n        foreach (string word in words) {\n            int uniqueChars\
    \ = word.Distinct().Count();\n            if (uniqueChars > result.Length) {\n\
    \                result = word;\n            }\n        }\n        return result;",
  "        string max = \"\";\n        foreach (string word in words) {\n        \
    \    int maxChars = word.Length;\n            int maxCharsCount = 0;\n       \
    \     foreach (char c in word) {\n                if (maxCharsCount < maxChars)\
    \ {\n                    maxCharsCount = maxChars;\n                    max =\
    \ word;\n                }\n            }\n        }\n        return max;", " \
    \       // Write your code here\n        string maxWord = \"\";\n        int maxCount\
    \ = 0;\n        foreach (string word in words) {\n            int count = word.Distinct().Count();\n\
    \            if (count > maxCount) {\n                maxCount = count;\n    \
    \            maxWord = word;\n            }\n        }\n        return maxWord;",
  "        string max = \"\";\n        foreach (string word in words) {\n        \
    \    int count = 0;\n            foreach (char c in word) {\n                count++;\n\
    \            }\n            if (count > max.Length) {\n                max = word;\n\
    \            }\n        }\n        return max;", "        // Write your code here\n\
    \        string result = \"\";\n        Dictionary<string, int> charCount = new\
    \ Dictionary<string, int>();\n        foreach (string word in words) {\n     \
    \       foreach (char c in word) {\n                if (!charCount.ContainsKey(c))\
    \ {\n                    charCount.Add(c, 1);\n                }\n           \
    \     else {\n                    charCount[c]++;\n                }\n       \
    \     }\n        }\n        foreach (KeyValuePair<string, int> kvp in charCount)\
    \ {\n            if (kvp.Value == words.Count) {\n                result = kvp.Key;\n\
    \                break;\n            }\n        }\n        return result;", " \
    \       string maxWord = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.Distinct().Count();\n       \
    \     if (count > maxCount) {\n                maxCount = count;\n           \
    \     maxWord = word;\n            }\n        }\n        return maxWord;", " \
    \       string max = \"\";\n        string maxChar = \"\";\n        foreach (string\
    \ word in words) {\n            int maxCount = 0;\n            foreach (char c\
    \ in word) {\n                if (maxCount == 0) {\n                    maxCount\
    \ = 1;\n                    maxChar = c;\n                }\n                else\
    \ if (maxCount > 1) {\n                    maxCount++;\n                }\n  \
    \              else {\n                    maxCount = 0;\n                }\n\
    \            }\n            if (maxCount > 1) {\n                max = word;\n\
    \            }\n        }\n        return max;", "        string maxWord = string.Empty;\n\
    \        int maxCount = 0;\n        foreach (string word in words) {\n       \
    \     int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string maxWord = \"\"\
    ;\n        string maxWordCount = 0;\n        foreach (string word in words) {\n\
    \            int wordCount = word.Length;\n            if (wordCount > maxWordCount)\
    \ {\n                maxWord = word;\n                maxWordCount = wordCount;\n\
    \            }\n        }\n        return maxWord;", "        string max = \"\"\
    ;\n        string max2 = \"\";\n        foreach (string word in words) {\n   \
    \         int count = 0;\n            foreach (char c in word) {\n           \
    \     count++;\n            }\n            if (count > max2.Length) {\n      \
    \          max = word;\n                max2 = word;\n            }\n        }\n\
    \        if (max2.Length > max.Length) {\n            return max2;\n        }\n\
    \        return max;", "        string result = \"\";\n        Dictionary<string,\
    \ int> count = new Dictionary<string, int>();\n        foreach (string word in\
    \ words) {\n            int count = 0;\n            foreach (char c in word) {\n\
    \                if (!count.ContainsKey(c)) {\n                    count[c] =\
    \ 1;\n                } else {\n                    count[c]++;\n            \
    \    }\n            }\n            if (count.Values.Max() == 1) {\n          \
    \      result = word;\n                break;\n            }\n            foreach\
    \ (char c in word) {\n                if (count.ContainsKey(c)) {\n          \
    \          count[c]--;\n                    if (count[c] == 0) {\n           \
    \             count.Remove(c);\n                    }\n                }\n   \
    \         }\n        }\n        if (count.Count == 0) {\n            result =\
    \ \"\";\n        }\n        return result;", "        string maxWord = \"\";\n\
    \        string maxCount = \"\";\n        foreach (string word in words) {\n \
    \           int count = word.ToCharArray().Distinct().Count();\n            if\
    \ (count > maxCount.Length) {\n                maxCount = count;\n           \
    \     maxWord = word;\n            }\n        }\n        return maxWord;", " \
    \       string result = \"\";\n        HashSet<string> uniqueChars = new HashSet<string>();\n\
    \        foreach (string word in words) {\n            foreach (char c in word)\
    \ {\n                if (!uniqueChars.Contains(c)) {\n                    uniqueChars.Add(c);\n\
    \                }\n            }\n        }\n        foreach (string word in\
    \ words) {\n            foreach (char c in word) {\n                if (uniqueChars.Contains(c))\
    \ {\n                    uniqueChars.Remove(c);\n                }\n         \
    \   }\n        }\n        if (uniqueChars.Count == 0) {\n            return \"\
    \";\n        }\n        foreach (string word in words) {\n            foreach\
    \ (char c in word) {\n                if (uniqueChars.Contains(c)) {\n       \
    \             uniqueChars.Remove(c);\n                }\n            }\n     \
    \   }\n        foreach (string word in words) {\n            foreach (char c in\
    \ word) {\n                if (!uniqueChars.Contains(c)) {\n                 \
    \   uniqueChars.Add(c);\n                }\n            }\n        }\n       \
    \ foreach (string word in words) {\n            foreach (char c in word) {\n \
    \               if (uniqueChars.Contains(c)) {\n                    uniqueChars.Remove(c);\n\
    \                }\n            }\n        }\n        foreach (string word in\
    \ words) {\n            foreach (char c in word) {\n                if (!uniqueChars.Contains(c))\
    \ {\n                    uniqueChars.Add(c);\n                }\n            }\n\
    \        }\n        foreach (string word in words) {\n            foreach (char\
    \ c in word) {\n                if (uniqueChars.Contains(c)) {\n             \
    \       uniqueChars.Remove(c);\n                }\n            }\n        }\n\
    \        foreach (string word in words) {\n            foreach (char c in word)\
    \ {\n                if (!uniqueChars.Contains(c)) {\n                    uniqueChars.Add(c);\n\
    \                }\n            }\n        }\n        foreach (string word in\
    \ words) {\n            foreach (char c in word) {\n                if (uniqueChars.Contains(c))\
    \ {\n                    uniqueChars.Remove(c);\n                }\n         \
    \   }\n        }\n        foreach (string word in words) {\n            foreach\
    \ (char c in word) {\n                if (!uniqueChars.Contains(c)) {\n      \
    \              uniqueChars.Add(c);\n                }\n            }\n       \
    \ }\n        foreach (string word in words) {\n            foreach (char c in\
    \ word) {\n                if (uniqueChars.Contains(c)) {\n                  \
    \  uniqueChars.Remove(c);\n                }\n            }\n        }\n     \
    \   foreach (string word in words) {\n            foreach (char c in word) {\n\
    \                if (!uniqueChars.Contains(c)) {\n                    uniqueChars.Add(c);\n\
    \                }\n            }\n        }\n        foreach (string word in\
    \ words) {\n            foreach (char c in word) {\n                if (uniqueChars.Contains(c))\
    \ {\n                    uniqueChars.Remove(c);\n                }\n         \
    \   }\n        }\n        foreach (string word in words) {\n            foreach\
    \ (char c in ", "        string max = \"\";\n        int maxCount = 0;\n     \
    \   foreach (string word in words) {\n            int count = word.Distinct().Count();\n\
    \            if (count > maxCount) {\n                max = word;\n          \
    \      maxCount = count;\n            }\n        }\n        return max;", "  \
    \      string maxWord = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.Distinct().Count();\n       \
    \     if (count > maxCount) {\n                maxCount = count;\n           \
    \     maxWord = word;\n            }\n        }\n        return maxWord;", " \
    \       int max = 0;\n        string maxWord = \"\";\n        foreach (string\
    \ word in words) {\n            int count = 0;\n            foreach (char c in\
    \ word) {\n                count++;\n            }\n            if (count > max)\
    \ {\n                max = count;\n                maxWord = word;\n         \
    \   }\n        }\n        return maxWord;", "        string maxWord = \"\";\n\
    \        int maxCount = 0;\n        foreach (string word in words) {\n       \
    \     int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string max = \"\";\n\
    \        int maxCount = 0;\n        foreach (string word in words) {\n       \
    \     int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                max = word;\n                maxCount = count;\n        \
    \    }\n        }\n        return max;", "        string maxWord = \"\";\n   \
    \     int maxCount = 0;\n        foreach (string word in words) {\n          \
    \  int count = 0;\n            foreach (char c in word) {\n                count++;\n\
    \            }\n            if (count > maxCount) {\n                maxCount\
    \ = count;\n                maxWord = word;\n            }\n        }\n      \
    \  return maxWord;", "        string maxWord = \"\";\n        int maxCount = 0;\n\
    \        foreach (string word in words) {\n            int count = word.Distinct().Count();\n\
    \            if (count > maxCount) {\n                maxCount = count;\n    \
    \            maxWord = word;\n            }\n        }\n        return maxWord;",
  "        string maxWord = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.Distinct().Count();\n       \
    \     if (count > maxCount) {\n                maxCount = count;\n           \
    \     maxWord = word;\n            }\n        }\n        return maxWord;", " \
    \       string maxWord = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.Distinct().Count();\n       \
    \     if (count > maxCount) {\n                maxCount = count;\n           \
    \     maxWord = word;\n            }\n        }\n        return maxWord;", " \
    \       string maxWord = string.Empty;\n        int maxCount = 0;\n        foreach\
    \ (string word in words) {\n            int count = word.Distinct().Count();\n\
    \            if (count > maxCount) {\n                maxCount = count;\n    \
    \            maxWord = word;\n            }\n        }\n        return maxWord;",
  "        string max = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.Distinct().Count();\n       \
    \     if (count > maxCount) {\n                max = word;\n                maxCount\
    \ = count;\n            }\n        }\n        return max;", "        string result\
    \ = \"\";\n        Dictionary<string, int> count = new Dictionary<string, int>();\n\
    \        foreach (string word in words) {\n            foreach (char c in word)\
    \ {\n                if (!count.ContainsKey(c)) {\n                    count[c]\
    \ = 1;\n                } else {\n                    count[c]++;\n          \
    \      }\n            }\n        }\n        foreach (KeyValuePair<string, int>\
    \ kvp in count) {\n            if (kvp.Value == words.Count) {\n             \
    \   result = kvp.Key;\n            }\n        }\n        return result;", "  \
    \      string max = \"\";\n        foreach (string word in words) {\n        \
    \    int uniqueChars = word.Distinct().Count();\n            if (uniqueChars >\
    \ max.Length) {\n                max = word;\n            }\n        }\n     \
    \   return max;", "        string maxWord = string.Empty;\n        int maxCount\
    \ = 0;\n        foreach (string word in words) {\n            int count = word.ToCharArray().Distinct().Count();\n\
    \            if (count > maxCount) {\n                maxCount = count;\n    \
    \            maxWord = word;\n            }\n        }\n        return maxWord;",
  "        string max = \"\";\n        int maxCount = 0;\n        foreach (string\
    \ word in words) {\n            int count = word.Distinct().Count();\n       \
    \     if (count > maxCount) {\n                max = word;\n                maxCount\
    \ = count;\n            }\n        }\n        return max;", "        string maxWord\
    \ = \"\";\n        int maxCount = 0;\n        foreach (string word in words) {\n\
    \            int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                maxCount = count;\n                maxWord = word;\n    \
    \        }\n        }\n        return maxWord;", "        string result = \"\"\
    ;\n        Dictionary<string, int> charCount = new Dictionary<string, int>();\n\
    \        foreach (string word in words) {\n            charCount.Clear();\n  \
    \          foreach (char c in word) {\n                if (!charCount.ContainsKey(c))\
    \ {\n                    charCount.Add(c, 1);\n                } else {\n    \
    \                charCount[c]++;\n                }\n            }\n         \
    \   int maxCount = 0;\n            foreach (KeyValuePair<string, int> kvp in charCount)\
    \ {\n                if (kvp.Value > maxCount) {\n                    maxCount\
    \ = kvp.Value;\n                    result = kvp.Key;\n                }\n   \
    \         }\n        }\n        return result;", "        string max = \"\";\n\
    \        int maxCount = 0;\n        foreach (string word in words) {\n       \
    \     int count = word.Distinct().Count();\n            if (count > maxCount)\
    \ {\n                max = word;\n                maxCount = count;\n        \
    \    }\n        }\n        return max;", "        string max = \"\";\n       \
    \ string max2 = \"\";\n        foreach (string word in words) {\n            int\
    \ count = 0;\n            foreach (char c in word) {\n                count++;\n\
    \            }\n            if (count > max2.Length) {\n                max =\
    \ word;\n                max2 = word;\n            } else if (count < max2.Length)\
    \ {\n                max2 = word;\n            }\n        }\n        return max;",
  "        string max = \"\";\n        string max2 = \"\";\n        foreach (string\
    \ word in words) {\n            int count = 0;\n            foreach (char c in\
    \ word) {\n                if (char.IsLetter(c)) {\n                    count++;\n\
    \                }\n            }\n            if (count > max2.Length) {\n  \
    \              max = word;\n                max2 = max;\n            } else if\
    \ (count < max2.Length) {\n                max2 = word;\n            }\n     \
    \   }\n        if (max2.Length > max.Length) {\n            return max2;\n   \
    \     } else {\n            return max;\n        }", "        string maxWord =\
    \ string.Empty;\n        int maxCount = 0;\n        foreach (string word in words)\
    \ {\n            int count = word.Distinct().Count();\n            if (count >\
    \ maxCount) {\n                maxCount = count;\n                maxWord = word;\n\
    \            }\n        }\n        return maxWord;"]
stop_tokens:
- "\n    }\n"

name: HumanEval_127_intersection
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // You are given two intervals,\n    // where each interval is\
  \ a pair of integers. For example, interval = (start, end) = (1, 2).\n    // The\
  \ given intervals are closed which means that the interval (start, end)\n    //\
  \ includes both start and end.\n    // For each given interval, it is assumed that\
  \ its start is less or equal its end.\n    // Your task is to determine whether\
  \ the length of intersection of these two \n    // intervals is a prime number.\n\
  \    // Example, the intersection of the intervals (1, 3), (2, 4) is (2, 3)\n  \
  \  // which its length is 1, which not a prime number.\n    // If the length of\
  \ the intersection is a prime number, return \"YES\",\n    // otherwise, return\
  \ \"NO\".\n    // If the two intervals don't intersect, return \"NO\".\n    // [input/output]\
  \ samples:\n    // intersection((1, 2), (2, 3)) ==> \"NO\"\n    // intersection((-1,\
  \ 1), (0, 4)) ==> \"NO\"\n    // intersection((-3, -1), (-5, 5)) ==> \"YES\"\n \
  \   public static string Intersection(Tuple<long, long> interval1, Tuple<long, long>\
  \ interval2) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Intersection((Tuple.Create(1L,\
  \ 2L)), (Tuple.Create(2L, 3L))).Equals((\"NO\")));\n    Debug.Assert(Intersection((Tuple.Create(-1L,\
  \ 1L)), (Tuple.Create(0L, 4L))).Equals((\"NO\")));\n    Debug.Assert(Intersection((Tuple.Create(-3L,\
  \ -1L)), (Tuple.Create(-5L, 5L))).Equals((\"YES\")));\n    Debug.Assert(Intersection((Tuple.Create(-2L,\
  \ 2L)), (Tuple.Create(-4L, 0L))).Equals((\"YES\")));\n    Debug.Assert(Intersection((Tuple.Create(-11L,\
  \ 2L)), (Tuple.Create(-1L, -1L))).Equals((\"NO\")));\n    Debug.Assert(Intersection((Tuple.Create(1L,\
  \ 2L)), (Tuple.Create(3L, 5L))).Equals((\"NO\")));\n    Debug.Assert(Intersection((Tuple.Create(1L,\
  \ 2L)), (Tuple.Create(1L, 2L))).Equals((\"NO\")));\n    Debug.Assert(Intersection((Tuple.Create(-2L,\
  \ -2L)), (Tuple.Create(-3L, -2L))).Equals((\"NO\")));\n    }\n\n}\n"
completions: ["        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ num = 1;\n        long p = 2;\n        while (p < length) {\n            long\
    \ q = p * p;\n            if (q > length) q = length;\n            long r = q\
    \ - p;\n            if (r > length) r = length;\n            long s = q + p;\n\
    \            if (s < length) s = length;\n            if (r + s >= length) {\n\
    \                num += 1;\n                p += 1;\n            } else {\n  \
    \              num -= 1;\n                p += 2;\n            }\n        }\n\
    \        if (num == 0) return \"NO\";\n        if (num == 1) return \"YES\";\n\
    \        return \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ prime = GetPrime(length);\n        if (prime == length) return \"YES\";\n  \
    \      return \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ sum = 0;\n        long prime = 1;\n        while (prime <= length) {\n     \
    \       sum += prime;\n            prime++;\n        }\n        if (sum == length)\
    \ return \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        if (length == 1) return \"YES\";\n        if (length == 2) return \"\
    YES\";\n        long start2 = Math.Min(interval1.Item2, interval2.Item2);\n  \
    \      long end2 = Math.Max(interval1.Item1, interval2.Item1);\n        long length2\
    \ = end2 - start2;\n        if (length2 == 0) return \"NO\";\n        if (length2\
    \ == 1) return \"YES\";\n        if (length2 == 2) return \"YES\";\n        long\
    \ start3 = Math.Min(interval1.Item1, interval2.Item1);\n        long end3 = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length3 = end3 - start3;\n        if (length3\
    \ == 0) return \"NO\";\n        if (length3 == 1) return \"YES\";\n        if\
    \ (length3 == 2) return \"YES\";\n        long start4 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end4 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length4 = end4 - start4;\n        if (length4 == 0) return \"NO\"\
    ;\n        if (length4 == 1) return \"YES\";\n        if (length4 == 2) return\
    \ \"YES\";\n        long start5 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end5 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length5 = end5 - start5;\n        if (length5 == 0) return \"NO\";\n       \
    \ if (length5 == 1) return \"YES\";\n        if (length5 == 2) return \"YES\"\
    ;\n        long start6 = Math.Min(interval1.Item2, interval2.Item2);\n       \
    \ long end6 = Math.Max(interval1.Item1, interval2.Item1);\n        long length6\
    \ = end6 - start6;\n        if (length6 == 0) return \"NO\";\n        if (length6\
    \ == 1) return \"YES\";\n        if (length6 == 2) return \"YES\";\n        long\
    \ start7 = Math.Min(interval1.Item1, interval2.Item1);\n        long end7 = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length7 = end7 - start7;\n        if (length7\
    \ == 0) return \"NO\";\n        if (length7 == 1) return \"YES\";\n        if\
    \ (length7 == 2) return \"YES\";\n        long start8 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end8 = Math.Max(interval1.Item", "        long\
    \ start = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        long start2 = Math.Min(interval2.Item1, interval1.Item1);\n\
    \        long end2 = Math.Max(interval2.Item2, interval1.Item2);\n        long\
    \ length2 = end2 - start2;\n        if (length2 == 0) return \"NO\";\n       \
    \ long start3 = Math.Min(interval1.Item1, interval2.Item1);\n        long end3\
    \ = Math.Max(interval1.Item2, interval2.Item2);\n        long length3 = end3 -\
    \ start3;\n        if (length3 == 0) return \"NO\";\n        long start4 = Math.Min(interval2.Item1,\
    \ interval1.Item1);\n        long end4 = Math.Max(interval2.Item2, interval1.Item2);\n\
    \        long length4 = end4 - start4;\n        if (length4 == 0) return \"NO\"\
    ;\n        long start5 = Math.Min(interval1.Item1, interval2.Item1);\n       \
    \ long end5 = Math.Max(interval1.Item2, interval2.Item2);\n        long length5\
    \ = end5 - start5;\n        if (length5 == 0) return \"NO\";\n        long start6\
    \ = Math.Min(interval2.Item1, interval1.Item1);\n        long end6 = Math.Max(interval2.Item2,\
    \ interval1.Item2);\n        long length6 = end6 - start6;\n        if (length6\
    \ == 0) return \"NO\";\n        long start7 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end7 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length7 = end7 - start7;\n        if (length7 == 0) return \"NO\";\n       \
    \ long start8 = Math.Min(interval2.Item1, interval1.Item1);\n        long end8\
    \ = Math.Max(interval2.Item2, interval1.Item2);\n        long length8 = end8 -\
    \ start8;\n        if (length8 == 0) return \"NO\";\n        long start9 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end9 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length9 = end9 - start9;\n        if (length9 == 0) return \"NO\"\
    ;\n        long start10 = Math.Min(interval2.Item1, interval1.Item1);\n      \
    \  long end10 = Math.Max(interval2.Item2, interval1.Item2);\n        long length10\
    \ = end10 - start10;\n        if (length10 == 0) return \"NO\";\n        long\
    \ start11", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        bool\
    \ isPrime = true;\n        long prime = 2;\n        while (isPrime && prime <=\
    \ length) {\n            if (length % prime == 0) {\n                isPrime =\
    \ false;\n            }\n            else {\n                prime++;\n      \
    \      }\n        }\n        if (isPrime) return \"YES\";\n        else return\
    \ \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        if (length == 1)\n            return \"YES\";\n        long mid = start\
    \ + (end - start) / 2;\n        bool isPrime = true;\n        long prime = 2;\n\
    \        while (isPrime) {\n            isPrime = false;\n            long test\
    \ = 2;\n            while (test < length) {\n                if (mid % test ==\
    \ 0) {\n                    isPrime = true;\n                    break;\n    \
    \            }\n                test += 2;\n            }\n            if (isPrime)\n\
    \                prime++;\n        }\n        if (prime == length)\n         \
    \   return \"YES\";\n        return \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        if (length == 1) return \"YES\";\n        long max = (long)Math.Sqrt(length);\n\
    \        long mid = start + (end - start) / 2;\n        long count = 0;\n    \
    \    long prime = 1;\n        while (prime < max) {\n            long test = (long)Math.Sqrt(prime);\n\
    \            if (test > length) test = length;\n            long test2 = mid -\
    \ test;\n            if (test2 > 0) count++;\n            prime++;\n        }\n\
    \        if (count == 0) return \"NO\";\n        if (count == 1) return \"YES\"\
    ;\n        long max2 = (long)Math.Sqrt(count);\n        long mid2 = start + (end\
    \ - start) / 2;\n        long count2 = 0;\n        long prime2 = 1;\n        while\
    \ (prime2 < max2) {\n            long test2 = (long)Math.Sqrt(prime2);\n     \
    \       if (test2 > length) test2 = length;\n            long test3 = mid2 - test2;\n\
    \            if (test3 > 0) count2++;\n            prime2++;\n        }\n    \
    \    if (count2 == 0) return \"NO\";\n        if (count2 == 1) return \"YES\"\
    ;\n        long max3 = (long)Math.Sqrt(count2);\n        long mid3 = start + (end\
    \ - start) / 2;\n        long count3 = 0;\n        long prime3 = 1;\n        while\
    \ (prime3 < max3) {\n            long test3 = (long)Math.Sqrt(prime3);\n     \
    \       if (test3 > length) test3 = length;\n            long test4 = mid3 - test3;\n\
    \            if (test4 > 0) count3++;\n            prime3++;\n        }\n    \
    \    if (count3 == 0) return \"NO\";\n        if (count3 == 1) return \"YES\"\
    ;\n        long max4 = (long)Math.Sqrt(count3);\n        long mid4 = start + (end\
    \ - start) / 2;\n        long count4 = 0;\n        long prime4 = 1;\n        while\
    \ (prime4 < max4) {\n            long test4 = (long)Math.Sqrt(prime4);\n     \
    \       if (test4 > length) test4 = length;\n            long test5 = mid4 - test4;\n\
    \            if (test5 > 0) count4++;\n            prime4++;\n        }\n    \
    \    if (count4 == 0) return \"NO\";\n        if (count4 == 1) return \"YES\"\
    ;\n        long max5 = (long)Math.Sqrt(count4);\n        long mid5 = start + (end\
    \ - start) / 2;\n        long count5 = 0;\n        long prime5 = 1;\n        while\
    \ (prime5 < max", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        bool\
    \ isPrime = true;\n        long prime = 2;\n        while (isPrime) {\n      \
    \      if (length == prime) isPrime = false;\n            else {\n           \
    \     long nextPrime = prime + 1;\n                while (nextPrime <= length)\
    \ {\n                    if (length == nextPrime) break;\n                   \
    \ if (length % nextPrime == 0) break;\n                    nextPrime++;\n    \
    \            }\n                if (nextPrime > length) isPrime = false;\n   \
    \             else {\n                    prime = nextPrime;\n               \
    \     length = (length / prime) * prime;\n                }\n            }\n \
    \       }\n        if (isPrime) return \"YES\";\n        return \"NO\";", "  \
    \      long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0)\n            return \"NO\";\n        if (length\
    \ == 1)\n            return \"YES\";\n        long prime = GetPrime(length);\n\
    \        if (prime == 0)\n            return \"NO\";\n        if (prime == 1)\n\
    \            return \"YES\";\n        long inter = start - prime;\n        if\
    \ (inter > 0)\n            return \"NO\";\n        if (inter < 0)\n          \
    \  return \"YES\";\n        return \"YES\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        bool isPrime = true;\n        long prime = length / 2;\n  \
    \      while (prime > 1) {\n            if (length % prime == 0) {\n         \
    \       isPrime = false;\n                break;\n            }\n            prime--;\n\
    \        }\n        if (isPrime)\n            return \"YES\";\n        return\
    \ \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        if (length\
    \ == 1) return \"YES\";\n        long max = (long)Math.Sqrt(length);\n       \
    \ long max2 = max / 2;\n        long max3 = max * max;\n        long max4 = max3\
    \ * max;\n        long max5 = max4 * max;\n        long max6 = max5 * max;\n \
    \       long max7 = max6 * max;\n        long max8 = max7 * max;\n        long\
    \ max9 = max8 * max;\n        long max10 = max9 * max;\n        long max11 = max10\
    \ * max;\n        long max12 = max11 * max;\n        long max13 = max12 * max;\n\
    \        long max14 = max13 * max;\n        long max15 = max14 * max;\n      \
    \  long max16 = max15 * max;\n        long max17 = max16 * max;\n        long\
    \ max18 = max17 * max;\n        long max19 = max18 * max;\n        long max20\
    \ = max19 * max;\n        long max21 = max20 * max;\n        long max22 = max21\
    \ * max;\n        long max23 = max22 * max;\n        long max24 = max23 * max;\n\
    \        long max25 = max24 * max;\n        long max26 = max25 * max;\n      \
    \  long max27 = max26 * max;\n        long max28 = max27 * max;\n        long\
    \ max29 = max28 * max;\n        long max30 = max29 * max;\n        long max31\
    \ = max30 * max;\n        long max32 = max31 * max;\n        long max33 = max32\
    \ * max;\n        long max34 = max33 * max;\n        long max35 = max34 * max;\n\
    \        long max36 = max35 * max;\n        long max37 = max36 * max;\n      \
    \  long max38 = max37 * max;\n        long max39 = max38 * max;\n        long\
    \ max40 = max39 * max;\n        long max41 = max40 * max;\n        long max42\
    \ = max41 * max;\n        long max43 = max42 * max;\n        long max44", "  \
    \      long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0)\n            return \"NO\";\n        if (length\
    \ == 1)\n            return \"YES\";\n        long start2 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end2 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length2 = end2 - start2;\n        if (length2 == 0)\n          \
    \  return \"NO\";\n        if (length2 == 1)\n            return \"YES\";\n  \
    \      long start3 = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end3 = Math.Max(interval1.Item2, interval2.Item2);\n        long length3 = end3\
    \ - start3;\n        if (length3 == 0)\n            return \"NO\";\n        if\
    \ (length3 == 1)\n            return \"YES\";\n        long start4 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end4 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length4 = end4 - start4;\n        if (length4 == 0)\n          \
    \  return \"NO\";\n        if (length4 == 1)\n            return \"YES\";\n  \
    \      long start5 = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end5 = Math.Max(interval1.Item2, interval2.Item2);\n        long length5 = end5\
    \ - start5;\n        if (length5 == 0)\n            return \"NO\";\n        if\
    \ (length5 == 1)\n            return \"YES\";\n        long start6 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end6 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length6 = end6 - start6;\n        if (length6 == 0)\n          \
    \  return \"NO\";\n        if (length6 == 1)\n            return \"YES\";\n  \
    \      long start7 = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end7 = Math.Max(interval1.Item2, interval2.Item2);\n        long length7 = end7\
    \ - start7;\n        if (length7 == 0)\n            return \"NO\";\n        if\
    \ (length7 == 1)\n            return \"YES\";\n        long start8 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end8 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length8 = end8 - start8;\n        if (length8 == 0)\n          \
    \  return \"NO\";\n        if (length8 == 1)\n            return \"YES\";\n  \
    \      long start9 = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end9 = Math.Max(interval1.Item2, interval2.Item2);", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        long num = 1;\n        while (start <= end) {\n           \
    \ long mid = (start + end) / 2;\n            if (mid * mid > length)\n       \
    \         end = mid - 1;\n            else if (mid * mid < length)\n         \
    \       start = mid + 1;\n            else\n                num++;\n        }\n\
    \        if (num == 2)\n            return \"YES\";\n        else\n          \
    \  return \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        long sum = 0;\n        for (int i = start; i <= end; i++)\n         \
    \   sum += i;\n        if (sum % length != 0)\n            return \"NO\";\n  \
    \      return \"YES\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        if (length == 1)\n            return \"YES\";\n        long max = (long)Math.Sqrt(length);\n\
    \        long max2 = max * max;\n        long max3 = max2 * max;\n        long\
    \ max4 = max3 * max;\n        long max5 = max4 * max;\n        long max6 = max5\
    \ * max;\n        long max7 = max6 * max;\n        long max8 = max7 * max;\n \
    \       long max9 = max8 * max;\n        long max10 = max9 * max;\n        long\
    \ max11 = max10 * max;\n        long max12 = max11 * max;\n        long max13\
    \ = max12 * max;\n        long max14 = max13 * max;\n        long max15 = max14\
    \ * max;\n        long max16 = max15 * max;\n        long max17 = max16 * max;\n\
    \        long max18 = max17 * max;\n        long max19 = max18 * max;\n      \
    \  long max20 = max19 * max;\n        long max21 = max20 * max;\n        long\
    \ max22 = max21 * max;\n        long max23 = max22 * max;\n        long max24\
    \ = max23 * max;\n        long max25 = max24 * max;\n        long max26 = max25\
    \ * max;\n        long max27 = max26 * max;\n        long max28 = max27 * max;\n\
    \        long max29 = max28 * max;\n        long max30 = max29 * max;\n      \
    \  long max31 = max30 * max;\n        long max32 = max31 * max;\n        long\
    \ max33 = max32 * max;\n        long max34 = max33 * max;\n        long max35\
    \ = max34 * max;\n        long max36 = max35 * max;\n        long max37 = max36\
    \ * max;\n        long max38 = max37 * max;\n        long max39 = max38 * max;\n\
    \        long max40 = max39 * max;\n        long max41 = max40 * max;\n      \
    \  long max42 = max41 * max;\n        long max43 = max42 * max;\n        long\
    \ max", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n  \
    \      long end = Math.Max(interval1.Item2, interval2.Item2);\n        long length\
    \ = end - start;\n        if (length == 0) return \"NO\";\n        long prime\
    \ = length / 2;\n        bool isPrime = true;\n        for (long i = 2; i <= prime;\
    \ i++) {\n            if (length % i == 0) {\n                isPrime = false;\n\
    \                break;\n            }\n        }\n        if (isPrime) return\
    \ \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long prime = GetPrime(length);\n        if (prime == length) return \"\
    YES\";\n        if (prime == 0) return \"NO\";\n        long inter = start - prime;\n\
    \        if (inter == 0) return \"NO\";\n        if (inter == length) return \"\
    YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ max = (long)Math.Sqrt(length);\n        long min = (long)Math.Sqrt(length +\
    \ 1);\n        long mid = start + (end - start) / 2;\n        long count = 0;\n\
    \        long count2 = 0;\n        long count3 = 0;\n        long count4 = 0;\n\
    \        long count5 = 0;\n        long count6 = 0;\n        long count7 = 0;\n\
    \        long count8 = 0;\n        long count9 = 0;\n        long count10 = 0;\n\
    \        long count11 = 0;\n        long count12 = 0;\n        long count13 =\
    \ 0;\n        long count14 = 0;\n        long count15 = 0;\n        long count16\
    \ = 0;\n        long count17 = 0;\n        long count18 = 0;\n        long count19\
    \ = 0;\n        long count20 = 0;\n        long count21 = 0;\n        long count22\
    \ = 0;\n        long count23 = 0;\n        long count24 = 0;\n        long count25\
    \ = 0;\n        long count26 = 0;\n        long count27 = 0;\n        long count28\
    \ = 0;\n        long count29 = 0;\n        long count30 = 0;\n        long count31\
    \ = 0;\n        long count32 = 0;\n        long count33 = 0;\n        long count34\
    \ = 0;\n        long count35 = 0;\n        long count36 = 0;\n        long count37\
    \ = 0;\n        long count38 = 0;\n        long count39 = 0;\n        long count40\
    \ = 0;\n        long count41 = 0;\n        long count42 = 0;\n        long count43\
    \ = 0;\n        long count44 = 0;\n        long count45 = 0;\n        long count46\
    \ = 0;\n        long count47 = 0;\n        long count48 = 0;\n        long count49\
    \ = 0;\n        long count50 = 0;\n        long count51 = 0;\n        long count52\
    \ = 0;\n        long count53 = 0;\n        long count54 = 0;\n        long count55\
    \ = 0;\n        long count56 = 0;\n        long count57 = 0;\n        long count58\
    \ = 0;\n        long count59 = 0;\n        long count60 = 0;\n        long count61\
    \ = 0;\n        long count62 = 0;\n        long count63 = 0;\n        long count64\
    \ = 0;\n        long count65 = 0;\n        long count66 = 0;\n        long count67\
    \ = 0;\n        long count68 = 0;\n        long count69 = 0;\n        long count70\
    \ = 0;\n        long count71 = 0;\n        long count72", "        long start\
    \ = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        long inter = length / 2;\n        if (length == inter)\
    \ return \"YES\";\n        if (length < inter) return \"NO\";\n        long count\
    \ = 0;\n        long sum = 0;\n        long temp;\n        while (inter > 0) {\n\
    \            temp = inter;\n            inter = inter / 2;\n            sum +=\
    \ temp;\n            count++;\n        }\n        if (sum == length) return \"\
    YES\";\n        return \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long num = 1;\n        long prime = 1;\n        while (prime * prime\
    \ <= length) {\n            long cur = prime * prime;\n            while (cur\
    \ < length) {\n                long next = cur + cur;\n                if (next\
    \ > length) next = length;\n                if (interval1.Item1 <= next && interval2.Item2\
    \ >= next) {\n                    num = num * prime;\n                    cur\
    \ = next;\n                } else {\n                    cur = next;\n       \
    \         }\n            }\n            prime++;\n        }\n        if (num ==\
    \ length) return \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ max = (long)Math.Sqrt(length);\n        long max2 = max / 2;\n        long max3\
    \ = max2 / 2;\n        long max4 = max3 / 2;\n        long max5 = max4 / 2;\n\
    \        long max6 = max5 / 2;\n        long max7 = max6 / 2;\n        long max8\
    \ = max7 / 2;\n        long max9 = max8 / 2;\n        long max10 = max9 / 2;\n\
    \        long max11 = max10 / 2;\n        long max12 = max11 / 2;\n        long\
    \ max13 = max12 / 2;\n        long max14 = max13 / 2;\n        long max15 = max14\
    \ / 2;\n        long max16 = max15 / 2;\n        long max17 = max16 / 2;\n   \
    \     long max18 = max17 / 2;\n        long max19 = max18 / 2;\n        long max20\
    \ = max19 / 2;\n        long max21 = max20 / 2;\n        long max22 = max21 /\
    \ 2;\n        long max23 = max22 / 2;\n        long max24 = max23 / 2;\n     \
    \   long max25 = max24 / 2;\n        long max26 = max25 / 2;\n        long max27\
    \ = max26 / 2;\n        long max28 = max27 / 2;\n        long max29 = max28 /\
    \ 2;\n        long max30 = max29 / 2;\n        long max31 = max30 / 2;\n     \
    \   long max32 = max31 / 2;\n        long max33 = max32 / 2;\n        long max34\
    \ = max33 / 2;\n        long max35 = max34 / 2;\n        long max36 = max35 /\
    \ 2;\n        long max37 = max36 / 2;\n        long max38 = max37 / 2;\n     \
    \   long max39 = max38 / 2;\n        long max40 = max39 / 2;\n        long max41\
    \ = max40 / 2;\n        long max42 = max41 / 2;\n        long max43 = max42 /\
    \ 2;\n        long max44 = max43 / 2;\n        long max45 = max44 / 2;\n     \
    \   long max46 = max45 / 2;\n        long max47 = max46 / 2;", "        long start\
    \ = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        long prime = Prime(length);\n        if (length ==\
    \ prime) return \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        long prime = GetPrime(length);\n        if (prime == length)\n\
    \            return \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        if (length == 1) return \"YES\";\n        bool isPrime = true;\n    \
    \    long i = 2;\n        while (i < length) {\n            if (length % i ==\
    \ 0) {\n                isPrime = false;\n                break;\n           \
    \ }\n            i += 2;\n        }\n        if (isPrime) return \"YES\";\n  \
    \      return \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        long num = 1;\n        while (start <= end) {\n            long mid =\
    \ (start + end) / 2;\n            if (mid * mid > length)\n                end\
    \ = mid - 1;\n            else\n                start = mid + 1;\n           \
    \ num = num * mid + 1;\n        }\n        if (num == length)\n            return\
    \ \"YES\";\n        else\n            return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long prime = length / 2;\n        bool isPrime = true;\n        long\
    \ divisor = 2;\n        while (divisor < prime) {\n            if (length % divisor\
    \ == 0) {\n                isPrime = false;\n                break;\n        \
    \    }\n            divisor++;\n        }\n        if (isPrime) return \"YES\"\
    ;\n        return \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ sum = 0;\n        long prime = 1;\n        while (prime < length) {\n      \
    \      sum += prime;\n            prime += 2;\n        }\n        if (sum == length)\
    \ return \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        bool isPrime = true;\n        long max = (long)Math.Sqrt(length);\n \
    \       for (long i = 2; i <= max; i++) {\n            if (length % i == 0) {\n\
    \                isPrime = false;\n                break;\n            }\n   \
    \     }\n        if (isPrime) return \"YES\";\n        return \"NO\";", "    \
    \    long start = Math.Min(interval1.Item1, interval2.Item1);\n        long end\
    \ = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        bool isPrime = true;\n        long prime = 2;\n        while (isPrime)\
    \ {\n            if (length == prime) {\n                isPrime = false;\n  \
    \          } else {\n                prime++;\n            }\n        }\n    \
    \    if (length == prime) {\n            return \"YES\";\n        } else {\n \
    \           return \"NO\";\n        }", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        if (length == 1) return \"YES\";\n        long mid = start + (end - start)\
    \ / 2;\n        if (IsPrime(mid)) return \"YES\";\n        return \"NO\";", " \
    \       long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0) return \"NO\";\n        bool isPrime = true;\n\
    \        for (int i = 2; i <= Math.Sqrt(length); i++) {\n            if (length\
    \ % i == 0) {\n                isPrime = false;\n                break;\n    \
    \        }\n        }\n        if (isPrime) return \"YES\";\n        return \"\
    NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n  \
    \      long end = Math.Min(interval1.Item2, interval2.Item2);\n        long length\
    \ = end - start;\n        if (length == 0)\n            return \"NO\";\n     \
    \   if (length == 1)\n            return \"YES\";\n        long max = (long)Math.Sqrt(length);\n\
    \        long min = (long)Math.Sqrt(length + 1);\n        long mid = start + (end\
    \ - start) / 2;\n        long count = 0;\n        long sum = 0;\n        long\
    \ sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long sum5\
    \ = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n\
    \        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n  \
    \      long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n   \
    \     long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n    \
    \    long sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n     \
    \   long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n      \
    \  long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n       \
    \ long sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long\
    \ sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33\
    \ = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long sum36 =\
    \ 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n\
    \        long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n \
    \       long sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n  \
    \      long sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n   \
    \     long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n    \
    \    long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n     \
    \   long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n      \
    \  long sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n       \
    \ long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long\
    \ sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n        long sum67\
    \ = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long sum70 =\
    \ 0;\n        long sum71 = 0;", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        long count = 0;\n        long prime\
    \ = 1;\n        while (count < length) {\n            prime = prime * 2;\n   \
    \         count++;\n        }\n        if (length == prime)\n            return\
    \ \"YES\";\n        else\n            return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        bool isPrime = true;\n        long prime = length / 2;\n        while\
    \ (isPrime && prime > 1) {\n            if (length % prime == 0) {\n         \
    \       isPrime = false;\n            }\n            else {\n                prime\
    \ = prime / 2;\n            }\n        }\n        if (isPrime) return \"YES\"\
    ;\n        else return \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ start2 = Math.Max(interval1.Item1, interval2.Item1);\n        long end2 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length2 = end2 - start2;\n        if (length2\
    \ == 0)\n            return \"NO\";\n        if (length2 == 1)\n            return\
    \ \"YES\";\n        long start3 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end3 = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length3 = end3 - start3;\n        if (length3 == 0)\n            return \"NO\"\
    ;\n        if (length3 == 1)\n            return \"YES\";\n        long start4\
    \ = Math.Max(interval1.Item1, interval2.Item1);\n        long end4 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length4 = end4 - start4;\n        if (length4\
    \ == 0)\n            return \"NO\";\n        if (length4 == 1)\n            return\
    \ \"YES\";\n        long start5 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end5 = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length5 = end5 - start5;\n        if (length5 == 0)\n            return \"NO\"\
    ;\n        if (length5 == 1)\n            return \"YES\";\n        long start6\
    \ = Math.Max(interval1.Item1, interval2.Item1);\n        long end6 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length6 = end6 - start6;\n        if (length6\
    \ == 0)\n            return \"NO\";\n        if (length6 == 1)\n            return\
    \ \"YES\";\n        long start7 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end7 = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length7 = end7 - start7;\n        if (length7 == 0)\n            return \"NO\"\
    ;\n        if (length7 == 1)\n            return \"YES\";\n        long start8\
    \ = Math.Max(interval1.Item1, interval2.Item1);\n        long end8 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length8 = end8 - start8;\n        if (length8\
    \ == 0)\n            return \"NO\";\n        if (length8 == 1)\n            return\
    \ \"YES\";\n        long start9 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end9 = Math.Min(interval1.Item2, interval2.Item2);", "        long\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0)\n            return \"NO\";\n        if (length == 1)\n            return\
    \ \"YES\";\n        long max = (long)Math.Sqrt(length);\n        long max2 = max\
    \ * max;\n        long max3 = max2 * max;\n        long max4 = max3 * max;\n \
    \       long max5 = max4 * max;\n        long max6 = max5 * max;\n        long\
    \ max7 = max6 * max;\n        long max8 = max7 * max;\n        long max9 = max8\
    \ * max;\n        long max10 = max9 * max;\n        long max11 = max10 * max;\n\
    \        long max12 = max11 * max;\n        long max13 = max12 * max;\n      \
    \  long max14 = max13 * max;\n        long max15 = max14 * max;\n        long\
    \ max16 = max15 * max;\n        long max17 = max16 * max;\n        long max18\
    \ = max17 * max;\n        long max19 = max18 * max;\n        long max20 = max19\
    \ * max;\n        long max21 = max20 * max;\n        long max22 = max21 * max;\n\
    \        long max23 = max22 * max;\n        long max24 = max23 * max;\n      \
    \  long max25 = max24 * max;\n        long max26 = max25 * max;\n        long\
    \ max27 = max26 * max;\n        long max28 = max27 * max;\n        long max29\
    \ = max28 * max;\n        long max30 = max29 * max;\n        long max31 = max30\
    \ * max;\n        long max32 = max31 * max;\n        long max33 = max32 * max;\n\
    \        long max34 = max33 * max;\n        long max35 = max34 * max;\n      \
    \  long max36 = max35 * max;\n        long max37 = max36 * max;\n        long\
    \ max38 = max37 * max;\n        long max39 = max38 * max;\n        long max40\
    \ = max39 * max;\n        long max41 = max40 * max;\n        long max42 = max41\
    \ * max;\n        long max43 = max42 * max;\n        long max", "        long\
    \ start = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        bool isPrime = true;\n        long prime = 2;\n \
    \       while (isPrime && prime < length) {\n            if (length % prime ==\
    \ 0) {\n                isPrime = false;\n            }\n            prime +=\
    \ 2;\n        }\n        if (isPrime) return \"YES\";\n        return \"NO\";",
  "        long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0) return \"NO\";\n        bool isPrime = true;\n\
    \        for (int i = 2; i <= Math.Sqrt(length); i++) {\n            if (length\
    \ % i == 0) {\n                isPrime = false;\n                break;\n    \
    \        }\n        }\n        if (isPrime) return \"YES\";\n        return \"\
    NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n  \
    \      long end = Math.Min(interval1.Item2, interval2.Item2);\n        long length\
    \ = end - start;\n        if (length == 0)\n            return \"NO\";\n     \
    \   bool isPrime = true;\n        long prime = length / 2;\n        while (prime\
    \ > 1) {\n            if (length % prime == 0) {\n                isPrime = false;\n\
    \                break;\n            }\n            prime--;\n        }\n    \
    \    if (isPrime)\n            return \"YES\";\n        return \"NO\";", "   \
    \     long start = Math.Min(interval1.Item1, interval2.Item1);\n        long end\
    \ = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        bool isPrime = true;\n        long prime = 2;\n        while (isPrime)\
    \ {\n            if (length == prime) {\n                isPrime = false;\n  \
    \          } else {\n                length += prime;\n            }\n       \
    \     prime++;\n        }\n        return isPrime ? \"YES\" : \"NO\";", "    \
    \    long start = interval1.Item1;\n        long end = interval1.Item2;\n    \
    \    long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n  \
    \      long length = end - start;\n        long length2 = end2 - start2;\n   \
    \     if (length == 0 || length2 == 0) {\n            return \"NO\";\n       \
    \ }\n        long length = length * length2;\n        long start1 = start;\n \
    \       long end1 = end;\n        long start2 = start2;\n        long end2 = end2;\n\
    \        long length1 = end - start;\n        long length2 = end2 - start2;\n\
    \        long length3 = length1 * length2;\n        long length4 = length1 * length3;\n\
    \        long length5 = length2 * length3;\n        long length6 = length2 * length4;\n\
    \        long length7 = length3 * length4;\n        long length8 = length3 * length5;\n\
    \        long length9 = length4 * length5;\n        long length10 = length4 *\
    \ length6;\n        long length11 = length5 * length6;\n        long length12\
    \ = length5 * length7;\n        long length13 = length6 * length7;\n        long\
    \ length14 = length6 * length8;\n        long length15 = length7 * length8;\n\
    \        long length16 = length7 * length9;\n        long length17 = length8 *\
    \ length9;\n        long length18 = length8 * length10;\n        long length19\
    \ = length9 * length10;\n        long length20 = length9 * length11;\n       \
    \ long length21 = length10 * length11;\n        long length22 = length10 * length12;\n\
    \        long length23 = length11 * length12;\n        long length24 = length11\
    \ * length13;\n        long length25 = length12 * length13;\n        long length26\
    \ = length12 * length14;\n        long length27 = length13 * length14;\n     \
    \   long length28 = length13 * length15;\n        long length29 = length14 * length15;\n\
    \        long length30 = length14 * length16;\n        long length31 = length15\
    \ * length16;\n        long length32 = length15 * length17;\n        long length33\
    \ = length16 * length17;\n        long length34 = length16 * length18;\n     \
    \   long length35 = length17 * length18;\n        long length36 = length17 * length19;\n\
    \        long length37 = length18 * length19;\n        long length38 = length18\
    \ * length20;\n        long length39 = length19 * length20;\n        long length40\
    \ = length19 * length2", "        long start = interval1.Item1;\n        long\
    \ end = interval1.Item2;\n        long start2 = interval2.Item1;\n        long\
    \ end2 = interval2.Item2;\n        long length = end - start;\n        long length2\
    \ = end2 - start2;\n        if (length2 == 0) {\n            return \"NO\";\n\
    \        }\n        if (length2 == 1) {\n            return \"YES\";\n       \
    \ }\n        long length3 = length / length2;\n        if (length3 == 0) {\n \
    \           return \"NO\";\n        }\n        if (length3 == 1) {\n         \
    \   return \"YES\";\n        }\n        long length4 = length3 / length2;\n  \
    \      if (length4 == 0) {\n            return \"NO\";\n        }\n        if\
    \ (length4 == 1) {\n            return \"YES\";\n        }\n        long length5\
    \ = length4 / length2;\n        if (length5 == 0) {\n            return \"NO\"\
    ;\n        }\n        if (length5 == 1) {\n            return \"YES\";\n     \
    \   }\n        long length6 = length5 / length2;\n        if (length6 == 0) {\n\
    \            return \"NO\";\n        }\n        if (length6 == 1) {\n        \
    \    return \"YES\";\n        }\n        long length7 = length6 / length2;\n \
    \       if (length7 == 0) {\n            return \"NO\";\n        }\n        if\
    \ (length7 == 1) {\n            return \"YES\";\n        }\n        long length8\
    \ = length7 / length2;\n        if (length8 == 0) {\n            return \"NO\"\
    ;\n        }\n        if (length8 == 1) {\n            return \"YES\";\n     \
    \   }\n        long length9 = length8 / length2;\n        if (length9 == 0) {\n\
    \            return \"NO\";\n        }\n        if (length9 == 1) {\n        \
    \    return \"YES\";\n        }\n        long length10 = length9 / length2;\n\
    \        if (length10 == 0) {\n            return \"NO\";\n        }\n       \
    \ if (length10 == 1) {\n            return \"YES\";\n        }\n        long length11\
    \ = length10 / length2;\n        if (length11 == 0) {\n            return \"NO\"\
    ;\n        }\n        if (length11 == 1) {\n            return \"YES\";\n    \
    \    }\n        long length12 = length11 / length2;\n        if (length12 == 0)\
    \ {\n            return \"NO\";\n        }\n        if (length12 == 1) {\n   \
    \         return \"YES\";\n        }\n        long length13 = length12 / length2;\n\
    \        if (length13 == 0) {\n            return \"NO\";\n        }\n       \
    \ if (length13 == 1) {\n            return \"YES\";\n        }\n        long length14\
    \ = length13 / length2;\n        if (length14 == 0) {\n            return \"NO\"\
    ;\n        }\n        if (length14 == 1) {\n            return \"YES\";\n    \
    \    }\n        long length15 = length14 / length2;\n        if (length15 == 0)\
    \ {\n            return \"NO\";\n        }\n        if (length15 == 1) {\n   \
    \         return \"YES\";\n        }\n        long length16 = length15 / length2;\n",
  "        long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0) return \"NO\";\n        if (length == 1)\
    \ return \"YES\";\n        long max = (long)Math.Sqrt(length);\n        long min\
    \ = (long)Math.Sqrt(length / 2);\n        long mid = start + max;\n        bool\
    \ isPrime = true;\n        long count = 0;\n        while (isPrime && count <\
    \ max) {\n            if (mid % 2 == 0) {\n                isPrime = false;\n\
    \            }\n            else {\n                mid = mid/2;\n           \
    \ }\n            count++;\n        }\n        if (isPrime) return \"YES\";\n \
    \       return \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ start2 = Math.Max(interval1.Item1, interval2.Item1);\n        long end2 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length2 = end2 - start2;\n        if (length2\
    \ == 0) return \"NO\";\n        if (length == length2) return \"YES\";\n     \
    \   long start3 = Math.Max(interval1.Item1, interval2.Item1);\n        long end3\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        long length3 = end3 -\
    \ start3;\n        if (length3 == 0) return \"NO\";\n        if (length == length3)\
    \ return \"YES\";\n        long start4 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end4 = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length4 = end4 - start4;\n        if (length4 == 0) return \"NO\";\n       \
    \ if (length == length4) return \"YES\";\n        long start5 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end5 = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length5 = end5 - start5;\n        if (length5 == 0) return \"NO\"\
    ;\n        if (length == length5) return \"YES\";\n        long start6 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end6 = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length6 = end6 - start6;\n        if (length6 == 0) return \"NO\"\
    ;\n        if (length == length6) return \"YES\";\n        long start7 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end7 = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length7 = end7 - start7;\n        if (length7 == 0) return \"NO\"\
    ;\n        if (length == length7) return \"YES\";\n        long start8 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end8 = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length8 = end8 - start8;\n        if (length8 == 0) return \"NO\"\
    ;\n        if (length == length8) return \"YES\";\n        long start9 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end9 = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length9 = end9", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        bool isPrime = true;\n        long prime = 2;\n        while\
    \ (isPrime) {\n            if (length == prime)\n                return \"YES\"\
    ;\n            isPrime = false;\n            prime++;\n        }\n        return\
    \ \"NO\";", "        long start = interval1.Item1;\n        long end = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        if (start > end) {\n            long temp = start;\n            start\
    \ = end;\n            end = temp;\n            temp = start2;\n            start2\
    \ = end2;\n            end2 = temp;\n        }\n        long length = end - start;\n\
    \        long length2 = end2 - start2;\n        if (length2 == 0) {\n        \
    \    return \"NO\";\n        }\n        long length3 = length / length2;\n   \
    \     long length4 = length % length2;\n        long length5 = length3 / length4;\n\
    \        if (length5 == 1) {\n            return \"YES\";\n        }\n       \
    \ long length6 = length3 % length4;\n        long length7 = length5 / length6;\n\
    \        if (length7 == 1) {\n            return \"YES\";\n        }\n       \
    \ long length8 = length5 % length6;\n        long length9 = length7 / length8;\n\
    \        if (length9 == 1) {\n            return \"YES\";\n        }\n       \
    \ long length10 = length7 % length8;\n        long length11 = length9 / length10;\n\
    \        if (length11 == 1) {\n            return \"YES\";\n        }\n      \
    \  long length12 = length9 % length10;\n        long length13 = length11 / length12;\n\
    \        if (length13 == 1) {\n            return \"YES\";\n        }\n      \
    \  long length14 = length11 % length12;\n        long length15 = length13 / length14;\n\
    \        if (length15 == 1) {\n            return \"YES\";\n        }\n      \
    \  long length16 = length13 % length14;\n        long length17 = length15 / length16;\n\
    \        if (length17 == 1) {\n            return \"YES\";\n        }\n      \
    \  long length18 = length15 % length16;\n        long length19 = length17 / length18;\n\
    \        if (length19 == 1) {\n            return \"YES\";\n        }\n      \
    \  long length20 = length17 % length18;\n        long length21 = length19 / length20;\n\
    \        if (length21 == 1) {\n            return \"YES\";\n        }\n      \
    \  long length22 = length19 % length20;\n        long length23 = length21 / length22;\n\
    \        if (length23 == 1) {\n            return \"YES\";\n        }\n      \
    \  long length24 = length21 % length22;\n        long length25 = length23 / length24;\n\
    \        if (length25 == 1) {\n            return \"YES\";\n        }\n      \
    \  long length26 = length23 % length24;\n        long length27 = length25 / length26;\n\
    \        if (length27 == 1) {\n            return \"YES\";\n", "        long start\
    \ = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        long prime = length / 2;\n        if (length == prime)\
    \ return \"YES\";\n        long a = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long b = Math.Max(interval1.Item2, interval2.Item2);\n        long c\
    \ = Math.Max(interval1.Item1, interval2.Item2);\n        long d = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long e = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long f = Math.Max(interval1.Item1, interval2.Item1);\n        long g\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        long h = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long i = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long j = Math.Max(interval1.Item1, interval2.Item1);\n        long k\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        long l = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long m = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long n = Math.Max(interval1.Item1, interval2.Item1);\n        long o\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        long p = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long q = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long r = Math.Max(interval1.Item1, interval2.Item1);\n        long s\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        long t = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long u = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long v = Math.Max(interval1.Item1, interval2.Item1);\n        long w\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        long x = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long y = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long z = Math.Max(interval1.Item1, interval2.Item1);\n        long aa\
    \ = Math.Min(interval1.Item1, interval2.Item1);\n        long ab = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long ac = Math.Max(interval1.Item1, interval2.Item2);\n\
    \        long ad = Math.Min(interval1.Item1, interval2.Item1);\n", "        long\
    \ start = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0)\n            return \"NO\";\n        long prime = GetPrime(length);\n   \
    \     if (prime == 0)\n            return \"NO\";\n        if (length == prime)\n\
    \            return \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        bool isPrime = true;\n        long prime = 2;\n        while (isPrime)\
    \ {\n            if (length == prime) isPrime = false;\n            else if (length\
    \ == prime + 1) isPrime = false;\n            else length -= prime;\n        \
    \    prime += 2;\n        }\n        if (isPrime) return \"YES\";\n        else\
    \ return \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        long count = 0;\n        long start2 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end2 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length2 = end2 - start2;\n        long count2 = 0;\n        long\
    \ start3 = Math.Min(interval1.Item1, interval2.Item1);\n        long end3 = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length3 = end3 - start3;\n        long count3\
    \ = 0;\n        long start4 = Math.Min(interval1.Item1, interval2.Item1);\n  \
    \      long end4 = Math.Max(interval1.Item2, interval2.Item2);\n        long length4\
    \ = end4 - start4;\n        long count4 = 0;\n        long start5 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end5 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length5 = end5 - start5;\n        long count5 = 0;\n        long\
    \ start6 = Math.Min(interval1.Item1, interval2.Item1);\n        long end6 = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length6 = end6 - start6;\n        long count6\
    \ = 0;\n        long start7 = Math.Min(interval1.Item1, interval2.Item1);\n  \
    \      long end7 = Math.Max(interval1.Item2, interval2.Item2);\n        long length7\
    \ = end7 - start7;\n        long count7 = 0;\n        long start8 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end8 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length8 = end8 - start8;\n        long count8 = 0;\n        long\
    \ start9 = Math.Min(interval1.Item1, interval2.Item1);\n        long end9 = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length9 = end9 - start9;\n        long count9\
    \ = 0;\n        long start10 = Math.Min(interval1.Item1, interval2.Item1);\n \
    \       long end10 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length10 = end10 - start10;\n        long count10 = 0;\n        long start11\
    \ = Math.Min(interval1.Item1, interval2.Item1);\n        long end11 = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length11 = end11 - start11;\n        long count11\
    \ = 0;", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n \
    \       long end = Math.Max(interval1.Item2, interval2.Item2);\n        long length\
    \ = end - start;\n        if (length == 0) return \"NO\";\n        long inter\
    \ = start - end;\n        long prime = length / 2;\n        bool isPrime = true;\n\
    \        long maxPrime = prime + 1;\n        while (isPrime && maxPrime < inter)\
    \ {\n            if (inter % maxPrime == 0) {\n                isPrime = false;\n\
    \            }\n            maxPrime++;\n        }\n        if (isPrime) return\
    \ \"YES\";\n        return \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ max = (long)Math.Sqrt(length);\n        long min = (long)Math.Sqrt(length +\
    \ 1);\n        long mid = start + (end - start) / 2;\n        long sum = 0;\n\
    \        long count = 0;\n        long prime = 1;\n        while (prime < max)\
    \ {\n            long num = (long)Math.Sqrt(prime);\n            if (num == mid)\n\
    \                return \"YES\";\n            if (num % 2 == 0)\n            \
    \    prime = prime + 1;\n            else\n                prime = prime + 2;\n\
    \        }\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        long sum = 0;\n        long prime = 1;\n        bool isPrime\
    \ = true;\n        while (isPrime) {\n            sum += prime;\n            isPrime\
    \ = IsPrime(sum);\n            prime++;\n        }\n        if (length == sum)\n\
    \            return \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ mid = start + (end - start) / 2;\n        bool isPrime = true;\n        long\
    \ max = (long)Math.Sqrt(length) + 1;\n        long min = (long)Math.Sqrt(length)\
    \ - 1;\n        long maxPrime = (long)Math.Sqrt(max) + 1;\n        long minPrime\
    \ = (long)Math.Sqrt(max) - 1;\n        long maxPrime2 = maxPrime / 2;\n      \
    \  long minPrime2 = minPrime / 2;\n        long maxPrime3 = maxPrime / 3;\n  \
    \      long minPrime3 = minPrime / 3;\n        long maxPrime4 = maxPrime / 4;\n\
    \        long minPrime4 = minPrime / 4;\n        long maxPrime5 = maxPrime / 5;\n\
    \        long minPrime5 = minPrime / 5;\n        long maxPrime6 = maxPrime / 6;\n\
    \        long minPrime6 = minPrime / 6;\n        long maxPrime7 = maxPrime / 7;\n\
    \        long minPrime7 = minPrime / 7;\n        long maxPrime8 = maxPrime / 8;\n\
    \        long minPrime8 = minPrime / 8;\n        long maxPrime9 = maxPrime / 9;\n\
    \        long minPrime9 = minPrime / 9;\n        long maxPrime10 = maxPrime /\
    \ 10;\n        long minPrime10 = minPrime / 10;\n        long maxPrime11 = maxPrime\
    \ / 11;\n        long minPrime11 = minPrime / 11;\n        long maxPrime12 = maxPrime\
    \ / 12;\n        long minPrime12 = minPrime / 12;\n        long maxPrime13 = maxPrime\
    \ / 13;\n        long minPrime13 = minPrime / 13;\n        long maxPrime14 = maxPrime\
    \ / 14;\n        long minPrime14 = minPrime / 14;\n        long maxPrime15 = maxPrime\
    \ / 15;\n        long minPrime15 = minPrime / 15;\n        long maxPrime16 = maxPrime\
    \ / 16;\n        long minPrime16 = minPrime / 16;\n        long maxPrime17 = maxPrime\
    \ / 17;\n        long min", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        if (length\
    \ == 1) return \"YES\";\n        if (length == 2) return \"YES\";\n        if\
    \ (length == 3) return \"YES\";\n        if (length == 4) return \"YES\";\n  \
    \      if (length == 5) return \"YES\";\n        if (length == 6) return \"YES\"\
    ;\n        if (length == 7) return \"YES\";\n        if (length == 8) return \"\
    YES\";\n        if (length == 9) return \"YES\";\n        if (length == 10) return\
    \ \"YES\";\n        if (length == 11) return \"YES\";\n        if (length == 12)\
    \ return \"YES\";\n        if (length == 13) return \"YES\";\n        if (length\
    \ == 14) return \"YES\";\n        if (length == 15) return \"YES\";\n        if\
    \ (length == 16) return \"YES\";\n        if (length == 17) return \"YES\";\n\
    \        if (length == 18) return \"YES\";\n        if (length == 19) return \"\
    YES\";\n        if (length == 20) return \"YES\";\n        if (length == 21) return\
    \ \"YES\";\n        if (length == 22) return \"YES\";\n        if (length == 23)\
    \ return \"YES\";\n        if (length == 24) return \"YES\";\n        if (length\
    \ == 25) return \"YES\";\n        if (length == 26) return \"YES\";\n        if\
    \ (length == 27) return \"YES\";\n        if (length == 28) return \"YES\";\n\
    \        if (length == 29) return \"YES\";\n        if (length == 30) return \"\
    YES\";\n        if (length == 31) return \"YES\";\n        if (length == 32) return\
    \ \"YES\";\n        if (length == 33) return \"YES\";\n        if (length == 34)\
    \ return \"YES\";\n        if (length == 35) return \"YES\";\n        if (length\
    \ == 36) return \"YES\";\n        if (length == 37) return \"YES\";\n        if\
    \ (length == 38) return \"YES\";\n        if (length == 39) return \"YES\";\n\
    \        if (length == 40) return \"YES\";\n        if (length == 41) return \"\
    YES\";\n        if (length == 42) return \"YES\";\n        if (length == 43) return\
    \ \"YES\";\n        if (length == 44) return \"YES\";\n        if (length == 45)\
    \ return \"YES\";\n        if (length == 46) return \"YES\";\n        if (length\
    \ == 47) return \"YES\";\n        if (length == 48) return \"YES\";\n        if\
    \ (length == 49) return \"YES\";\n        if (length == 50) return \"YES\";\n\
    \        if (length == 51) return \"YES\";\n        if (length == 52) return \"\
    YES\";\n        if (length == 53) return \"YES\";\n        if (length == 54) return ",
  "        long start = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0)\n            return \"NO\";\n        long\
    \ prime = Prime(length);\n        if (prime == length)\n            return \"\
    YES\";\n        return \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long prime = GetPrime(length);\n        if (prime == length) return \"\
    YES\";\n        if (prime == 0) return \"NO\";\n        long inter = start - prime;\n\
    \        if (inter == 0) return \"NO\";\n        if (inter > 0) return \"YES\"\
    ;\n        return \"NO\";", "        long start1 = interval1.Item1;\n        long\
    \ end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n        long\
    \ end2 = interval2.Item2;\n        long length = (end1 - start1) * (end2 - start2);\n\
    \        if (length == 0) return \"NO\";\n        if (length == 1) return \"YES\"\
    ;\n        long start = 0;\n        long end = length;\n        long mid = start\
    \ + (end - start) / 2;\n        bool isPrime = true;\n        while (start < end)\
    \ {\n            long test = (start + end) / 2;\n            if (IsPrime(test))\
    \ {\n                isPrime = true;\n                break;\n            }\n\
    \            if (test < mid) {\n                end = test;\n            } else\
    \ {\n                start = test;\n            }\n        }\n        if (isPrime)\
    \ return \"YES\";\n        return \"NO\";", "        long start = interval1.Item1;\n\
    \        long end = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        long length = end - start;\n  \
    \      long length2 = end2 - start2;\n        if (length2 == 0) {\n          \
    \  return \"NO\";\n        }\n        if (length == length2) {\n            long\
    \ mid = (start + end) / 2;\n            if (mid == start) {\n                return\
    \ \"YES\";\n            }\n            if (mid == end) {\n                return\
    \ \"YES\";\n            }\n            long mid2 = (start2 + end2) / 2;\n    \
    \        if (mid2 == start2) {\n                return \"YES\";\n            }\n\
    \            if (mid2 == end2) {\n                return \"YES\";\n          \
    \  }\n            long mid3 = (start + end2) / 2;\n            if (mid3 == start)\
    \ {\n                return \"YES\";\n            }\n            if (mid3 == end)\
    \ {\n                return \"YES\";\n            }\n            long mid4 = (start2\
    \ + end) / 2;\n            if (mid4 == start2) {\n                return \"YES\"\
    ;\n            }\n            if (mid4 == end2) {\n                return \"YES\"\
    ;\n            }\n            long mid5 = (start2 + end2) / 2;\n            if\
    \ (mid5 == start) {\n                return \"YES\";\n            }\n        \
    \    if (mid5 == end) {\n                return \"YES\";\n            }\n    \
    \        long mid6 = (start + end2) / 2;\n            if (mid6 == start2) {\n\
    \                return \"YES\";\n            }\n            if (mid6 == end2)\
    \ {\n                return \"YES\";\n            }\n            long mid7 = (start2\
    \ + end) / 2;\n            if (mid7 == start) {\n                return \"YES\"\
    ;\n            }\n            if (mid7 == end) {\n                return \"YES\"\
    ;\n            }\n            long mid8 = (start + end2) / 2;\n            if\
    \ (mid8 == start2) {\n                return \"YES\";\n            }\n       \
    \     if (mid8 == end2) {\n                return \"YES\";\n            }\n  \
    \          long mid9 = (start2 + end) / 2;\n            if (mid9 == start) {\n\
    \                return \"YES\";\n            }\n            if (mid9 == end)\
    \ {\n                return \"YES\";\n            }\n            long mid10 =\
    \ (start + end2) / 2;\n            if (mid10 == start2) {\n                return\
    \ \"YES\";\n            }\n            if (mid10 == end2) {\n                return\
    \ \"YES\";\n            }\n            long mid11 = (start2 + end) / 2;\n    \
    \        if (mid11 == start) {\n                return \"YES\";\n            }\n\
    \            if (mid11 == end) {\n                return \"YES\";\n          \
    \  }\n            long mid12 = (start + end2) / 2;\n            if (mid12 == start2)\
    \ {\n                return \"YES\";\n            }", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long max = (long)Math.Sqrt(length);\n        long min = (long)Math.Sqrt(length\
    \ / 2);\n        long mid = start + min;\n        long count = 0;\n        long\
    \ prime = 1;\n        while (prime <= max) {\n            long num = (long)Math.Sqrt(prime);\n\
    \            long square = num * num;\n            if (square == prime) count++;\n\
    \            prime += num;\n        }\n        if (count == 0) return \"NO\";\n\
    \        long sum = 0;\n        long prime2 = 1;\n        while (prime2 <= max)\
    \ {\n            long num = (long)Math.Sqrt(prime2);\n            long square\
    \ = num * num;\n            if (square == prime2) sum += num;\n            prime2\
    \ += num;\n        }\n        if (sum == length) return \"YES\";\n        return\
    \ \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        if (length\
    \ == 1) return \"YES\";\n        long max = (long)Math.Sqrt(length);\n       \
    \ long max2 = max / 2;\n        long max3 = max * max;\n        long max4 = max3\
    \ * max;\n        long max5 = max4 * max;\n        long max6 = max5 * max;\n \
    \       long max7 = max6 * max;\n        long max8 = max7 * max;\n        long\
    \ max9 = max8 * max;\n        long max10 = max9 * max;\n        long max11 = max10\
    \ * max;\n        long max12 = max11 * max;\n        long max13 = max12 * max;\n\
    \        long max14 = max13 * max;\n        long max15 = max14 * max;\n      \
    \  long max16 = max15 * max;\n        long max17 = max16 * max;\n        long\
    \ max18 = max17 * max;\n        long max19 = max18 * max;\n        long max20\
    \ = max19 * max;\n        long max21 = max20 * max;\n        long max22 = max21\
    \ * max;\n        long max23 = max22 * max;\n        long max24 = max23 * max;\n\
    \        long max25 = max24 * max;\n        long max26 = max25 * max;\n      \
    \  long max27 = max26 * max;\n        long max28 = max27 * max;\n        long\
    \ max29 = max28 * max;\n        long max30 = max29 * max;\n        long max31\
    \ = max30 * max;\n        long max32 = max31 * max;\n        long max33 = max32\
    \ * max;\n        long max34 = max33 * max;\n        long max35 = max34 * max;\n\
    \        long max36 = max35 * max;\n        long max37 = max36 * max;\n      \
    \  long max38 = max37 * max;\n        long max39 = max38 * max;\n        long\
    \ max40 = max39 * max;\n        long max41 = max40 * max;\n        long max42\
    \ = max41 * max;\n        long max43 = max42 * max;\n        long max44", "  \
    \      long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        long length = end1 - start1 + end2 - start2;\n        if (length < 0)\n\
    \            return \"NO\";\n        if (length == 0)\n            return \"NO\"\
    ;\n        if (length == 1)\n            return \"YES\";\n        long startIntersection\
    \ = start1 + start2;\n        long endIntersection = end1 - end2;\n        long\
    \ startIntersection2 = start2 + start1;\n        long endIntersection2 = end2\
    \ - end1;\n        long startIntersection3 = start1 + start2;\n        long endIntersection3\
    \ = end1 - end2;\n        long startIntersection4 = start2 + start1;\n       \
    \ long endIntersection4 = end2 - end1;\n        long startIntersection5 = start1\
    \ + start2;\n        long endIntersection5 = end1 - end2;\n        long startIntersection6\
    \ = start2 + start1;\n        long endIntersection6 = end2 - end1;\n        long\
    \ startIntersection7 = start1 + start2;\n        long endIntersection7 = end1\
    \ - end2;\n        long startIntersection8 = start2 + start1;\n        long endIntersection8\
    \ = end2 - end1;\n        long startIntersection9 = start1 + start2;\n       \
    \ long endIntersection9 = end1 - end2;\n        long startIntersection10 = start2\
    \ + start1;\n        long endIntersection10 = end2 - end1;\n        long startIntersection11\
    \ = start1 + start2;\n        long endIntersection11 = end1 - end2;\n        long\
    \ startIntersection12 = start2 + start1;\n        long endIntersection12 = end2\
    \ - end1;\n        long startIntersection13 = start1 + start2;\n        long endIntersection13\
    \ = end1 - end2;\n        long startIntersection14 = start2 + start1;\n      \
    \  long endIntersection14 = end2 - end1;\n        long startIntersection15 = start1\
    \ + start2;\n        long endIntersection15 = end1 - end2;\n        long startIntersection16\
    \ = start2 + start1;\n        long endIntersection16 = end2 - end1;\n        long\
    \ startIntersection17 = start1 + start2;\n        long endIntersection17 = end1\
    \ - end2;\n        long startIntersection18 = start2 + start1;\n        long endIntersection18\
    \ = end2 - end1;\n        long startIntersection19 = start1 + start2;\n      \
    \  long endIntersection19 = end1 - end2;\n        long startIntersection", " \
    \       long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0)\n            return \"NO\";\n        if (length\
    \ == 1)\n            return \"YES\";\n        long max = (long)Math.Sqrt(length);\n\
    \        long mid = (start + end) / 2;\n        long count = 0;\n        for (long\
    \ i = start; i <= max; i++) {\n            long count = 0;\n            for (long\
    \ j = start; j <= max; j++) {\n                if (i == j)\n                 \
    \   continue;\n                if (i == mid && j == mid)\n                   \
    \ continue;\n                if (i == mid && j > mid)\n                    continue;\n\
    \                if (j == mid && i > mid)\n                    continue;\n   \
    \             long a = Math.Abs(i - mid);\n                long b = Math.Abs(j\
    \ - mid);\n                if (a > b)\n                    count++;\n        \
    \    }\n            if (count == 0)\n                return \"NO\";\n        }\n\
    \        return \"YES\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        if (length == 1)\n            return \"YES\";\n        long mid = start\
    \ + (end - start) / 2;\n        bool isPrime = true;\n        long count = 0;\n\
    \        while (isPrime && count < length) {\n            isPrime = IsPrime(mid);\n\
    \            count++;\n            mid = start + (end - start) / 2;\n        }\n\
    \        if (isPrime)\n            return \"YES\";\n        else\n           \
    \ return \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ sum = 0;\n        long prime = 1;\n        bool isPrime = true;\n        while\
    \ (isPrime) {\n            prime = prime * 2 + 1;\n            isPrime = prime\
    \ % length == 0;\n            sum += prime;\n        }\n        if (sum == length)\
    \ return \"YES\";\n        return \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        if (length\
    \ == 2)\n            return \"YES\";\n        if (length == 3)\n            return\
    \ \"YES\";\n        if (length == 4)\n            return \"YES\";\n        if\
    \ (length == 5)\n            return \"YES\";\n        if (length == 6)\n     \
    \       return \"YES\";\n        if (length == 7)\n            return \"YES\"\
    ;\n        if (length == 8)\n            return \"YES\";\n        if (length ==\
    \ 9)\n            return \"YES\";\n        if (length == 10)\n            return\
    \ \"YES\";\n        if (length == 11)\n            return \"YES\";\n        if\
    \ (length == 12)\n            return \"YES\";\n        if (length == 13)\n   \
    \         return \"YES\";\n        if (length == 14)\n            return \"YES\"\
    ;\n        if (length == 15)\n            return \"YES\";\n        if (length\
    \ == 16)\n            return \"YES\";\n        if (length == 17)\n           \
    \ return \"YES\";\n        if (length == 18)\n            return \"YES\";\n  \
    \      if (length == 19)\n            return \"YES\";\n        if (length == 20)\n\
    \            return \"YES\";\n        if (length == 21)\n            return \"\
    YES\";\n        if (length == 22)\n            return \"YES\";\n        if (length\
    \ == 23)\n            return \"YES\";\n        if (length == 24)\n           \
    \ return \"YES\";\n        if (length == 25)\n            return \"YES\";\n  \
    \      if (length == 26)\n            return \"YES\";\n        if (length == 27)\n\
    \            return \"YES\";\n        if (length == 28)\n            return \"\
    YES\";\n        if (length == 29)\n            return \"YES\";\n        if (length\
    \ == 30)\n            return \"YES\";\n        if (length == 31)\n           \
    \ return \"YES\";\n        if (length == 32)\n            return \"YES\";\n  \
    \      if (length == 33)\n            return \"YES\";\n        if (length == 34)\n\
    \            return \"YES\";\n        if (length == 35)\n            return \"\
    YES\";\n        if (length == 36)\n            return \"YES\";\n        if (length\
    \ == 37)\n            return \"YES\";\n        if (length == 38)\n           \
    \ return \"YES\";\n        if (length == 39)\n            return \"YES\";\n  \
    \      if (length == 40)\n            return \"YES\";\n        if (length == 41)\n\
    \            return \"YES\";\n        if (length == 42)\n            return \"\
    YES\";\n        if (length == 45)\n            return \"YES\";\n        if (length\
    \ == 46)\n            return \"YES\";\n        if (length == 47)\n           \
    \ return \"YES\";\n        if (length == 48)\n            return \"YES\";\n  \
    \      if (length == 49)\n            return \"YES\";\n        if (length == 50)\n\
    \            return \"YES\";\n        if (length == 51)\n            return \"\
    YES\";\n        if (length == 52)\n            return \"YES\";\n        if (length\
    \ == ", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n  \
    \      long end = Math.Max(interval1.Item2, interval2.Item2);\n        long length\
    \ = end - start;\n        if (length == 0)\n            return \"NO\";\n     \
    \   if (length == 1)\n            return \"YES\";\n        long max = (long)Math.Sqrt(length);\n\
    \        long max2 = max / 2;\n        long max3 = max * max;\n        long max4\
    \ = max3 * max;\n        long max5 = max4 * max;\n        long max6 = max5 * max;\n\
    \        long max7 = max6 * max;\n        long max8 = max7 * max;\n        long\
    \ max9 = max8 * max;\n        long max10 = max9 * max;\n        long max11 = max10\
    \ * max;\n        long max12 = max11 * max;\n        long max13 = max12 * max;\n\
    \        long max14 = max13 * max;\n        long max15 = max14 * max;\n      \
    \  long max16 = max15 * max;\n        long max17 = max16 * max;\n        long\
    \ max18 = max17 * max;\n        long max19 = max18 * max;\n        long max20\
    \ = max19 * max;\n        long max21 = max20 * max;\n        long max22 = max21\
    \ * max;\n        long max23 = max22 * max;\n        long max24 = max23 * max;\n\
    \        long max25 = max24 * max;\n        long max26 = max25 * max;\n      \
    \  long max27 = max26 * max;\n        long max28 = max27 * max;\n        long\
    \ max29 = max28 * max;\n        long max30 = max29 * max;\n        long max31\
    \ = max30 * max;\n        long max32 = max31 * max;\n        long max33 = max32\
    \ * max;\n        long max34 = max33 * max;\n        long max35 = max34 * max;\n\
    \        long max36 = max35 * max;\n        long max37 = max36 * max;\n      \
    \  long max38 = max37 * max;\n        long max39 = max38 * max;\n        long\
    \ max40 = max39 * max;\n        long max41 = max40 * max;\n        long max42\
    \ = max41 * max;\n        long max43 = max42 * max;\n        long max44", "  \
    \      long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0) return \"NO\";\n        long prime = length\
    \ / 2;\n        long count = 0;\n        long maxCount = prime + 1;\n        long\
    \ maxCount2 = prime + 2;\n        long maxCount3 = prime + 3;\n        long maxCount4\
    \ = prime + 4;\n        long maxCount5 = prime + 5;\n        long maxCount6 =\
    \ prime + 6;\n        long maxCount7 = prime + 7;\n        long maxCount8 = prime\
    \ + 8;\n        long maxCount9 = prime + 9;\n        long maxCount10 = prime +\
    \ 10;\n        long maxCount11 = prime + 11;\n        long maxCount12 = prime\
    \ + 12;\n        long maxCount13 = prime + 13;\n        long maxCount14 = prime\
    \ + 14;\n        long maxCount15 = prime + 15;\n        long maxCount16 = prime\
    \ + 16;\n        long maxCount17 = prime + 17;\n        long maxCount18 = prime\
    \ + 18;\n        long maxCount19 = prime + 19;\n        long maxCount20 = prime\
    \ + 20;\n        long maxCount21 = prime + 21;\n        long maxCount22 = prime\
    \ + 22;\n        long maxCount23 = prime + 23;\n        long maxCount24 = prime\
    \ + 24;\n        long maxCount25 = prime + 25;\n        long maxCount26 = prime\
    \ + 26;\n        long maxCount27 = prime + 27;\n        long maxCount28 = prime\
    \ + 28;\n        long maxCount29 = prime + 29;\n        long maxCount30 = prime\
    \ + 30;\n        long maxCount31 = prime + 31;\n        long maxCount32 = prime\
    \ + 32;\n        long maxCount33 = prime + 33;\n        long maxCount34 = prime\
    \ + 34;\n        long maxCount35 = prime + 35;\n        long maxCount36 = prime\
    \ + 36;\n        long maxCount37 = prime + 37;\n        long maxCount38 = prime\
    \ + 38;\n        long maxCount39 = prime + 39;\n        long maxCount40 = prime\
    \ + 40;\n        long maxCount41 = prime + 41;\n        long maxCount42 = prime\
    \ + 42;\n        long maxCount43 = prime + 43;\n        long maxCount44 = prime\
    \ + 44;\n        long max", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ prime = GetPrime(length);\n        if (prime == length) return \"YES\";\n  \
    \      return \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ count = 0;\n        long start2 = start;\n        long end2 = end;\n       \
    \ while (start2 <= end2) {\n            count++;\n            start2 += 1;\n \
    \           end2 -= 1;\n        }\n        if (count == 1) return \"YES\";\n \
    \       if (count > 1) return \"NO\";\n        long start3 = start;\n        long\
    \ end3 = end;\n        while (start3 <= end3) {\n            count--;\n      \
    \      start3 += 1;\n            end3 -= 1;\n        }\n        if (count == 1)\
    \ return \"YES\";\n        if (count > 1) return \"NO\";\n        long start4\
    \ = start;\n        long end4 = end;\n        while (start4 <= end4) {\n     \
    \       count++;\n            start4 += 1;\n            end4 -= 1;\n        }\n\
    \        if (count == 1) return \"YES\";\n        if (count > 1) return \"NO\"\
    ;\n        long start5 = start;\n        long end5 = end;\n        while (start5\
    \ <= end5) {\n            count--;\n            start5 += 1;\n            end5\
    \ -= 1;\n        }\n        if (count == 1) return \"YES\";\n        if (count\
    \ > 1) return \"NO\";\n        long start6 = start;\n        long end6 = end;\n\
    \        while (start6 <= end6) {\n            count++;\n            start6 +=\
    \ 1;\n            end6 -= 1;\n        }\n        if (count == 1) return \"YES\"\
    ;\n        if (count > 1) return \"NO\";\n        long start7 = start;\n     \
    \   long end7 = end;\n        while (start7 <= end7) {\n            count--;\n\
    \            start7 += 1;\n            end7 -= 1;\n        }\n        if (count\
    \ == 1) return \"YES\";\n        if (count > 1) return \"NO\";\n        long start8\
    \ = start;\n        long end8 = end;\n        while (start8 <= end8) {\n     \
    \       count++;\n            start8 += 1;\n            end8 -= 1;\n        }\n\
    \        if (count == 1) return \"YES\";\n        if (count > 1) return \"NO\"\
    ;\n        long start9 = start;\n        long end9 = end;\n        while (start9\
    \ <= end9) {\n            count--;\n            start9 += 1;\n            end9\
    \ -= 1;\n        }\n        if (count == 1) return \"YES\";\n        if (count\
    \ > 1) return \"NO\";\n        long start10 = start;\n        long end10 = end;\n\
    \        while (start10 <= end10) {\n            count++;\n            start10\
    \ += 1;\n            end10 -= ", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        bool isPrime = true;\n        long prime = 2;\n        while (isPrime)\
    \ {\n            if (length == prime) {\n                isPrime = false;\n  \
    \          } else {\n                prime++;\n            }\n        }\n    \
    \    if (length == prime) return \"YES\";\n        return \"NO\";", "        long\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        bool isPrime = true;\n        long i = 2;\n     \
    \   while (i < length) {\n            if (length % i == 0) {\n               \
    \ isPrime = false;\n                break;\n            }\n            i += 1;\n\
    \        }\n        if (isPrime) return \"YES\";\n        return \"NO\";", " \
    \       long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length < 2) return \"NO\";\n        long start2 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end2 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length2 = end2 - start2;\n        if (length2 < 2) return \"NO\"\
    ;\n        long start3 = Math.Min(interval1.Item1, interval2.Item1);\n       \
    \ long end3 = Math.Max(interval1.Item2, interval2.Item2);\n        long length3\
    \ = end3 - start3;\n        if (length3 < 2) return \"NO\";\n        long start4\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        long end4 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long length4 = end4 - start4;\n        if (length4\
    \ < 2) return \"NO\";\n        long start5 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end5 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length5 = end5 - start5;\n        if (length5 < 2) return \"NO\";\n        long\
    \ start6 = Math.Min(interval1.Item2, interval2.Item2);\n        long end6 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long length6 = end6 - start6;\n        if (length6\
    \ < 2) return \"NO\";\n        long start7 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end7 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length7 = end7 - start7;\n        if (length7 < 2) return \"NO\";\n        long\
    \ start8 = Math.Min(interval1.Item2, interval2.Item2);\n        long end8 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long length8 = end8 - start8;\n        if (length8\
    \ < 2) return \"NO\";\n        long start9 = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end9 = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length9 = end9 - start9;\n        if (length9 < 2) return \"NO\";\n        long\
    \ start10 = Math.Min(interval1.Item2, interval2.Item2);\n        long end10 =\
    \ Math.Max(interval1.Item1, interval2.Item1);\n        long length10 = end10 -\
    \ start10;\n        if (length10 < 2) return \"NO\";\n        long start11", " \
    \       long start = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0) return \"NO\";\n        long mid = (start\
    \ + end) / 2;\n        bool isPrime = true;\n        long prime = start;\n   \
    \     while (prime <= end) {\n            if (IsPrime(prime)) {\n            \
    \    isPrime = true;\n                break;\n            }\n            prime\
    \ += 1;\n        }\n        if (isPrime) return \"YES\";\n        return \"NO\"\
    ;", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n      \
    \  long end = Math.Max(interval1.Item2, interval2.Item2);\n        long length\
    \ = end - start;\n        if (length == 0) return \"NO\";\n        long prime\
    \ = GetPrime(length);\n        if (length == prime) return \"YES\";\n        return\
    \ \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        long prime = length / 2;\n        if (length == prime)\n            return\
    \ \"YES\";\n        bool isPrime = true;\n        long start2 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end2 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length2 = end2 - start2;\n        if (length2 == 0)\n          \
    \  return \"NO\";\n        long prime2 = length2 / 2;\n        if (length2 ==\
    \ prime2)\n            return \"YES\";\n        bool isPrime2 = true;\n      \
    \  long start3 = Math.Min(interval1.Item1, interval2.Item1);\n        long end3\
    \ = Math.Max(interval1.Item2, interval2.Item2);\n        long length3 = end3 -\
    \ start3;\n        if (length3 == 0)\n            return \"NO\";\n        long\
    \ prime3 = length3 / 2;\n        if (length3 == prime3)\n            return \"\
    YES\";\n        bool isPrime3 = true;\n        long start4 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end4 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length4 = end4 - start4;\n        if (length4 == 0)\n          \
    \  return \"NO\";\n        long prime4 = length4 / 2;\n        if (length4 ==\
    \ prime4)\n            return \"YES\";\n        bool isPrime4 = true;\n      \
    \  long start5 = Math.Min(interval1.Item1, interval2.Item1);\n        long end5\
    \ = Math.Max(interval1.Item2, interval2.Item2);\n        long length5 = end5 -\
    \ start5;\n        if (length5 == 0)\n            return \"NO\";\n        long\
    \ prime5 = length5 / 2;\n        if (length5 == prime5)\n            return \"\
    YES\";\n        bool isPrime5 = true;\n        long start6 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end6 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length6 = end6 - start6;\n        if (length6 == 0)\n          \
    \  return \"NO\";\n        long prime6 = length6 / 2;\n        if (length6 ==\
    \ prime6)\n            return \"YES\";\n        bool isPrime6 = true;\n      \
    \  long start7 = Math.Min(interval1.Item1, interval2.Item1);\n        long end7\
    \ = Math.Max(interval1.Item2, interval2.Item2);\n        long length7 = end7 -\
    \ start7;\n        if (length7 == 0)\n            return \"NO", "        long\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0)\n            return \"NO\";\n        if (length == 1)\n            return\
    \ \"YES\";\n        long num = 1;\n        long num2 = 2;\n        long num3 =\
    \ 1;\n        long num4 = 2;\n        long num5 = 3;\n        long num6 = 2;\n\
    \        long num7 = 2;\n        long num8 = 2;\n        long num9 = 2;\n    \
    \    long num10 = 2;\n        long num11 = 2;\n        long num12 = 2;\n     \
    \   long num13 = 2;\n        long num14 = 2;\n        long num15 = 2;\n      \
    \  long num16 = 2;\n        long num17 = 2;\n        long num18 = 2;\n       \
    \ long num19 = 2;\n        long num20 = 2;\n        long num21 = 1;\n        long\
    \ num22 = 2;\n        long num23 = 2;\n        long num24 = 2;\n        long num25\
    \ = 2;\n        long num26 = 2;\n        long num27 = 2;\n        long num28 =\
    \ 2;\n        long num29 = 2;\n        long num30 = 2;\n        long num31 = 1;\n\
    \        long num32 = 2;\n        long num33 = 2;\n        long num34 = 2;\n \
    \       long num35 = 2;\n        long num36 = 2;\n        long num37 = 2;\n  \
    \      long num38 = 2;\n        long num39 = 2;\n        long num40 = 2;\n   \
    \     long num41 = 1;\n        long num42 = 2;\n        long num43 = 1;\n    \
    \    long num44 = 2;\n        long num45 = 2;\n        long num46 = 2;\n     \
    \   long num47 = 2;\n        long num48 = 2;\n        long num49 = 2;\n      \
    \  long num50 = 2;\n        long num51 = 1;\n        long num52 = 2;\n       \
    \ long num53 = 1;\n        long num54 = 2;\n        long num55 = 2;\n        long\
    \ num56 = 2;\n        long num57 = 2;\n        long num58 = 2;\n        long num59\
    \ = 2;\n        long num60 = 2;\n        long num61 = 1;\n        long num62 =\
    \ 2;\n        long num63 = 1;\n        long num64 = 2;\n        long num65 = 2;\n\
    \        long num66 = 2;\n        long num67 = 2;\n        long num68 = 2;\n \
    \       long num69 = 2;\n        long num70 = 2;\n        long num71 = 1;\n  \
    \      long num72 = 2;\n        long num73 = 1;\n        long num74 = 2;\n   \
    \     long num75 = 2;\n        long num7", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long prime = Prime(length);\n        if (prime == length) return \"YES\"\
    ;\n        return \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        long num = 2;\n        while (true) {\n            long mid = (start\
    \ + end) / 2;\n            if (mid * mid == num)\n                return \"YES\"\
    ;\n            if (mid * mid > num)\n                end = mid;\n            else\n\
    \                start = mid;\n        }", "        long start1 = interval1.Item1;\n\
    \        long end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        long length = end1 - start1 + end2\
    \ - start2;\n        if (length == 0)\n            return \"NO\";\n        if\
    \ (length == 1)\n            return \"YES\";\n        long startIntersection =\
    \ start1 + start2;\n        long endIntersection = end1 - end2;\n        long\
    \ startIntersection2 = start1 + start2;\n        long endIntersection2 = end1\
    \ - end2;\n        long startIntersection3 = start1 + start2;\n        long endIntersection3\
    \ = end1 - end2;\n        long startIntersection4 = start1 + start2;\n       \
    \ long endIntersection4 = end1 - end2;\n        long startIntersection5 = start1\
    \ + start2;\n        long endIntersection5 = end1 - end2;\n        long startIntersection6\
    \ = start1 + start2;\n        long endIntersection6 = end1 - end2;\n        long\
    \ startIntersection7 = start1 + start2;\n        long endIntersection7 = end1\
    \ - end2;\n        long startIntersection8 = start1 + start2;\n        long endIntersection8\
    \ = end1 - end2;\n        long startIntersection9 = start1 + start2;\n       \
    \ long endIntersection9 = end1 - end2;\n        long startIntersection10 = start1\
    \ + start2;\n        long endIntersection10 = end1 - end2;\n        long startIntersection11\
    \ = start1 + start2;\n        long endIntersection11 = end1 - end2;\n        long\
    \ startIntersection12 = start1 + start2;\n        long endIntersection12 = end1\
    \ - end2;\n        long startIntersection13 = start1 + start2;\n        long endIntersection13\
    \ = end1 - end2;\n        long startIntersection14 = start1 + start2;\n      \
    \  long endIntersection14 = end1 - end2;\n        long startIntersection15 = start1\
    \ + start2;\n        long endIntersection15 = end1 - end2;\n        long startIntersection16\
    \ = start1 + start2;\n        long endIntersection16 = end1 - end2;\n        long\
    \ startIntersection17 = start1 + start2;\n        long endIntersection17 = end1\
    \ - end2;\n        long startIntersection18 = start1 + start2;\n        long endIntersection18\
    \ = end1 - end2;\n        long startIntersection19 = start1 + start2;\n      \
    \  long endIntersection19 = end1 - end2;\n        long startIntersection20 = start1\
    \ + start2;\n        long ", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ prime = GetPrime(length);\n        if (prime == length) return \"YES\";\n  \
    \      return \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        long max = (long)Math.Sqrt(length) + 1;\n        long min = (long)Math.Sqrt(length)\
    \ - 1;\n        long mid = start + (end - start) / 2;\n        bool isPrime =\
    \ true;\n        long maxPrime = max;\n        long minPrime = min;\n        while\
    \ (isPrime) {\n            isPrime = false;\n            long nextPrime = mid;\n\
    \            while (nextPrime < maxPrime) {\n                long nextPrime2 =\
    \ nextPrime + 1;\n                while (nextPrime2 < maxPrime) {\n          \
    \          long nextPrime3 = nextPrime2 + 1;\n                    while (nextPrime3\
    \ < maxPrime) {\n                        long nextPrime4 = nextPrime3 + 1;\n \
    \                       while (nextPrime4 < maxPrime) {\n                    \
    \        long nextPrime5 = nextPrime4 + 1;\n                            while\
    \ (nextPrime5 < maxPrime) {\n                                long nextPrime6 =\
    \ nextPrime5 + 1;\n                                while (nextPrime6 < maxPrime)\
    \ {\n                                    long nextPrime7 = nextPrime6 + 1;\n \
    \                                   while (nextPrime7 < maxPrime) {\n        \
    \                                long nextPrime8 = nextPrime7 + 1;\n         \
    \                               while (nextPrime8 < maxPrime) {\n            \
    \                                long nextPrime9 = nextPrime8 + 1;\n         \
    \                                   while (nextPrime9 < maxPrime) {\n        \
    \                                        long nextPrime10 = nextPrime9 + 1;\n\
    \                                                while (nextPrime10 < maxPrime)\
    \ {\n                                                    long nextPrime11 = nextPrime10\
    \ + 1;\n                                                    while (nextPrime11\
    \ < maxPrime) {\n                                                        long\
    \ nextPrime12 = nextPrime11 + 1;\n                                           \
    \             while (nextPrime12 < maxPrime) {\n                             \
    \                               long nextPrime13 = nextPrime12 + 1;\n        \
    \                                                    while (nextPrime13 < maxPrime)\
    \ {\n                                                                long nextPrime14\
    \ = nextPrime13 + 1;\n                                                       \
    \         while (nextPrime14 < maxPrime) {\n                                 \
    \                                   long nextPrime15 = nextPrime14 + 1;\n    \
    \                                                                while (nextPrime15\
    \ < maxPrime) {\n                                                            \
    \            long nextPrime16 = nextPrime15 + 1;\n                           \
    \                                             while (nextPrime16 < maxPrime) {\n\
    \                                                                            long\
    \ nextPrime17", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        long max = (long)Math.Sqrt(length);\n        long min = (long)Math.Sqrt(length\
    \ + 1);\n        long max2 = (long)(Math.Sqrt(length + 1) + 1);\n        long\
    \ min2 = (long)(Math.Sqrt(length + 1) + 2);\n        long max3 = (long)(Math.Sqrt(length\
    \ + 1) + 3);\n        long min3 = (long)(Math.Sqrt(length + 1) + 4);\n       \
    \ long max4 = (long)(Math.Sqrt(length + 1) + 5);\n        long min4 = (long)(Math.Sqrt(length\
    \ + 1) + 6);\n        long max5 = (long)(Math.Sqrt(length + 1) + 7);\n       \
    \ long min5 = (long)(Math.Sqrt(length + 1) + 8);\n        long max6 = (long)(Math.Sqrt(length\
    \ + 1) + 9);\n        long min6 = (long)(Math.Sqrt(length + 1) + 10);\n      \
    \  long max7 = (long)(Math.Sqrt(length + 1) + 11);\n        long min7 = (long)(Math.Sqrt(length\
    \ + 1) + 12);\n        long max8 = (long)(Math.Sqrt(length + 1) + 13);\n     \
    \   long min8 = (long)(Math.Sqrt(length + 1) + 14);\n        long max9 = (long)(Math.Sqrt(length\
    \ + 1) + 15);\n        long min9 = (long)(Math.Sqrt(length + 1) + 16);\n     \
    \   long max10 = (long)(Math.Sqrt(length + 1) + 17);\n        long min10 = (long)(Math.Sqrt(length\
    \ + 1) + 18);\n        long max11 = (long)(Math.Sqrt(length + 1) + 19);\n    \
    \    long min11 = (long)(Math.Sqrt(length + 1) + 20);\n        long max12 = (long)(Math.Sqrt(length\
    \ + 1) + 21);\n        long min12 = (long)(Math.Sqrt(length + 1) + 22);\n    \
    \    long max13 = (long)(Math.Sqrt(length + 1) + 23);\n        long min13 = (long)(Math.Sqrt(length\
    \ + 1) + 24);\n        long max14 = (long)(Math.Sqrt(length + 1) + 25);\n    \
    \    long min14 = (long)(Math.Sqrt(length + 1) + 26);\n        long max15 = (long)(Math.Sqrt(length\
    \ + 1) + 27);\n        long min15 = (long)(Math.Sqrt(length + 1) + 28);\n    \
    \    long max16 = (long)(Math.Sqrt(length + 1) + 29", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ mid = start + (end - start) / 2;\n        bool isPrime = true;\n        long\
    \ prime = 2;\n        while (isPrime) {\n            if (mid % prime == 0)\n \
    \               isPrime = false;\n            else\n                prime++;\n\
    \        }\n        return isPrime ? \"YES\" : \"NO\";", "        long start =\
    \ Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0)\n            return \"NO\";\n        long prime = GetPrime(length);\n   \
    \     if (prime == length)\n            return \"YES\";\n        return \"NO\"\
    ;", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n      \
    \  long end = Math.Max(interval1.Item2, interval2.Item2);\n        long length\
    \ = end - start;\n        if (length == 0)\n            return \"NO\";\n     \
    \   long prime = Prime(length);\n        if (prime == length)\n            return\
    \ \"YES\";\n        return \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ mid = start + (end - start) / 2;\n        bool isPrime = true;\n        long\
    \ prime = 2;\n        while (isPrime) {\n            if (length == prime)\n  \
    \              return \"YES\";\n            if (length == prime + 1) {\n     \
    \           isPrime = false;\n            }\n            prime++;\n        }\n\
    \        return \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ prime = GetPrime(length);\n        if (prime == length) return \"YES\";\n  \
    \      return \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        bool\
    \ isPrime = true;\n        long prime = 2;\n        while (isPrime) {\n      \
    \      if (length == prime) {\n                isPrime = false;\n            }\
    \ else {\n                prime++;\n            }\n        }\n        if (length\
    \ != prime) return \"NO\";\n        return \"YES\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        if (length\
    \ == 2)\n            return \"YES\";\n        long start2 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end2 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length2 = end2 - start2;\n        if (length2 == 0)\n          \
    \  return \"NO\";\n        if (length2 == 1)\n            return \"YES\";\n  \
    \      if (length2 == 2)\n            return \"YES\";\n        long start3 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end3 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length3 = end3 - start3;\n        if (length3 == 0)\n          \
    \  return \"NO\";\n        if (length3 == 1)\n            return \"YES\";\n  \
    \      if (length3 == 2)\n            return \"YES\";\n        long start4 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end4 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length4 = end4 - start4;\n        if (length4 == 0)\n          \
    \  return \"NO\";\n        if (length4 == 1)\n            return \"YES\";\n  \
    \      if (length4 == 2)\n            return \"YES\";\n        long start5 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end5 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length5 = end5 - start5;\n        if (length5 == 0)\n          \
    \  return \"NO\";\n        if (length5 == 1)\n            return \"YES\";\n  \
    \      if (length5 == 2)\n            return \"YES\";\n        long start6 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end6 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length6 = end6 - start6;\n        if (length6 == 0)\n          \
    \  return \"NO\";\n        if (length6 == 1)\n            return \"YES\";\n  \
    \      if (length6 == 2)\n            return \"YES\";\n        long start7 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end7 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length7 = end7 - start7;\n        if (length7 == 0)\n          \
    \  return \"NO\";\n        if (length7 == 1)\n            return \"YES\";\n  \
    \      if (length7 == 2)\n            return \"YES\";\n        long start8 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end8 = Math.Max(interval1.Item", "        long\
    \ start = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        long max = (long)Math.Sqrt(length);\n        long\
    \ max2 = max * max;\n        long max3 = max2 * max;\n        long max4 = max3\
    \ * max;\n        long max5 = max4 * max;\n        long max6 = max5 * max;\n \
    \       long max7 = max6 * max;\n        long max8 = max7 * max;\n        long\
    \ max9 = max8 * max;\n        long max10 = max9 * max;\n        long max11 = max10\
    \ * max;\n        long max12 = max11 * max;\n        long max13 = max12 * max;\n\
    \        long max14 = max13 * max;\n        long max15 = max14 * max;\n      \
    \  long max16 = max15 * max;\n        long max17 = max16 * max;\n        long\
    \ max18 = max17 * max;\n        long max19 = max18 * max;\n        long max20\
    \ = max19 * max;\n        long max21 = max20 * max;\n        long max22 = max21\
    \ * max;\n        long max23 = max22 * max;\n        long max24 = max23 * max;\n\
    \        long max25 = max24 * max;\n        long max26 = max25 * max;\n      \
    \  long max27 = max26 * max;\n        long max28 = max27 * max;\n        long\
    \ max29 = max28 * max;\n        long max30 = max29 * max;\n        long max31\
    \ = max30 * max;\n        long max32 = max31 * max;\n        long max33 = max32\
    \ * max;\n        long max34 = max33 * max;\n        long max35 = max34 * max;\n\
    \        long max36 = max35 * max;\n        long max37 = max36 * max;\n      \
    \  long max38 = max37 * max;\n        long max39 = max38 * max;\n        long\
    \ max40 = max39 * max;\n        long max41 = max40 * max;\n        long max42\
    \ = max41 * max;\n        long max43 = max42 * max;\n        long max44 = max43\
    \ * max;\n        ", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ prime = GetPrime(length);\n        if (prime == length) return \"YES\";\n  \
    \      if (prime == 0) return \"NO\";\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        long prime = GetPrime(length);\n\
    \        if (prime == length) return \"YES\";\n        if (prime == 0) return\
    \ \"NO\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        long prime = GetPrime(length);\n        if (prime\
    \ == length) return \"YES\";\n        if (prime == 0) return \"NO\";\n       \
    \ long start = Math.Max(interval1.Item1, interval2.Item1);\n        long end =\
    \ Math.Min(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        long prime = GetPrime(length);\n        if (prime == length) return \"\
    YES\";\n        if (prime == 0) return \"NO\";\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        long prime = GetPrime(length);\n\
    \        if (prime == length) return \"YES\";\n        if (prime == 0) return\
    \ \"NO\";\n        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        long prime = GetPrime(length);\n        if (prime\
    \ == length) return \"YES\";\n        if (prime == 0) return \"NO\";\n       \
    \ long start = Math.Max(interval1.Item1, interval2.Item1);\n        long end =\
    \ Math.Min(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        long prime = GetPrime(length);\n        if (prime == length) return \"\
    YES\";\n        if (prime == 0) return \"NO\";\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        long prime = GetPrime(length);\n\
    \        if (prime == length) return \"YES\";\n", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long max = (long)Math.Sqrt(length);\n        long min = (long)Math.Sqrt(length\
    \ + 1);\n        long mid = start + (end - start) / 2;\n        bool isPrime =\
    \ true;\n        long prime = start;\n        while (isPrime && prime <= max)\
    \ {\n            isPrime = IsPrime(prime);\n            prime++;\n        }\n\
    \        if (isPrime) return \"YES\";\n        return \"NO\";", "        long\
    \ start = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        long prime = length / 2;\n        if (length == prime)\
    \ return \"YES\";\n        bool isPrime = true;\n        for (int i = 2; i <=\
    \ Math.Sqrt(prime); i++) {\n            if (prime % i == 0) {\n              \
    \  isPrime = false;\n                break;\n            }\n        }\n      \
    \  if (isPrime) return \"YES\";\n        return \"NO\";", "        long start\
    \ = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0)\n            return \"NO\";\n        if (length == 1)\n            return\
    \ \"YES\";\n        long prime = length / 2;\n        long remainder = length\
    \ % 2;\n        bool isPrime = true;\n        long startPrime = start;\n     \
    \   long endPrime = end;\n        while (isPrime) {\n            isPrime = false;\n\
    \            startPrime++;\n            endPrime--;\n            if (startPrime\
    \ > endPrime)\n                break;\n            long startPrime2 = startPrime;\n\
    \            long endPrime2 = endPrime;\n            while (startPrime2 <= endPrime2)\
    \ {\n                long startPrime3 = startPrime2;\n                long endPrime3\
    \ = endPrime2;\n                while (startPrime3 <= endPrime3) {\n         \
    \           long startPrime4 = startPrime3;\n                    long endPrime4\
    \ = endPrime3;\n                    while (startPrime4 <= endPrime4) {\n     \
    \                   long startPrime5 = startPrime4;\n                        long\
    \ endPrime5 = endPrime4;\n                        while (startPrime5 <= endPrime5)\
    \ {\n                            long startPrime6 = startPrime5;\n           \
    \                 long endPrime6 = endPrime5;\n                            while\
    \ (startPrime6 <= endPrime6) {\n                                long startPrime7\
    \ = startPrime6;\n                                long endPrime7 = endPrime6;\n\
    \                                while (startPrime7 <= endPrime7) {\n        \
    \                            long startPrime8 = startPrime7;\n               \
    \                     long endPrime8 = endPrime7;\n                          \
    \          while (startPrime8 <= endPrime8) {\n                              \
    \          long startPrime9 = startPrime8;\n                                 \
    \       long endPrime9 = endPrime8;\n                                        while\
    \ (startPrime9 <= endPrime9) {\n                                            long\
    \ startPrime10 = startPrime9;\n                                            long\
    \ endPrime10 = endPrime9;\n                                            while (startPrime10\
    \ <= endPrime10) {\n                                                long startPrime11\
    \ = startPrime10;\n                                                long endPrime11\
    \ = endPrime10;\n                                                while (startPrime11\
    \ <= endPrime11) {\n                                                    long startPrime12\
    \ = startPrime11;\n                                                    long endPrime12\
    \ = endPrime11;\n                                                    while (startPrime12\
    \ <= endPrime12) {\n                                                        long ",
  "        long start = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0)\n            return \"NO\";\n        if (length\
    \ == 1)\n            return \"YES\";\n        long prime = GetPrime(length);\n\
    \        if (prime == 0)\n            return \"NO\";\n        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ prime = GetPrime(length);\n        if (prime == 0)\n            return \"NO\"\
    ;\n        if (length == prime)\n            return \"YES\";\n        return \"\
    NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n  \
    \      long end = Math.Max(interval1.Item2, interval2.Item2);\n        long length\
    \ = end - start;\n        if (length == 0)\n            return \"NO\";\n     \
    \   bool isPrime = true;\n        long prime = 2;\n        while (isPrime) {\n\
    \            if (length == prime)\n                return \"YES\";\n         \
    \   if (length < prime)\n                isPrime = false;\n            prime++;\n\
    \        }\n        return \"NO\";", "        long start = interval1.Item1;\n\
    \        long end = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        long length = end - start;\n  \
    \      long length2 = end2 - start2;\n        if (length2 == 0) {\n          \
    \  return \"NO\";\n        }\n        if (length2 == 1) {\n            return\
    \ \"YES\";\n        }\n        long length3 = length / length2;\n        long\
    \ length4 = length % length2;\n        if (length3 == 0) {\n            return\
    \ \"NO\";\n        }\n        if (length3 == 1) {\n            return \"YES\"\
    ;\n        }\n        long length5 = length3 / length4;\n        long length6\
    \ = length3 % length4;\n        if (length5 == 0) {\n            return \"NO\"\
    ;\n        }\n        if (length5 == 1) {\n            return \"YES\";\n     \
    \   }\n        long length7 = length5 / length6;\n        long length8 = length5\
    \ % length6;\n        if (length7 == 0) {\n            return \"NO\";\n      \
    \  }\n        if (length7 == 1) {\n            return \"YES\";\n        }\n  \
    \      long length9 = length7 / length8;\n        long length10 = length7 % length8;\n\
    \        if (length9 == 0) {\n            return \"NO\";\n        }\n        if\
    \ (length9 == 1) {\n            return \"YES\";\n        }\n        long length11\
    \ = length9 / length10;\n        long length12 = length9 % length10;\n       \
    \ if (length11 == 0) {\n            return \"NO\";\n        }\n        if (length11\
    \ == 1) {\n            return \"YES\";\n        }\n        long length13 = length11\
    \ / length12;\n        long length14 = length11 % length12;\n        if (length13\
    \ == 0) {\n            return \"NO\";\n        }\n        if (length13 == 1) {\n\
    \            return \"YES\";\n        }\n        long length15 = length13 / length14;\n\
    \        long length16 = length13 % length14;\n        if (length15 == 0) {\n\
    \            return \"NO\";\n        }\n        if (length15 == 1) {\n       \
    \     return \"YES\";\n        }\n        long length17 = length15 / length16;\n\
    \        long length18 = length15 % length16;\n        if (length17 == 0) {\n\
    \            return \"NO\";\n        }\n        if (length17 == 1) {\n       \
    \     return \"YES\";\n        }\n        long length19 = length17 / length18;\n\
    \        long length20 = length17 % length18;\n        if (length19 == 0) {\n\
    \            return \"NO\";\n        }\n        if (length19 == 1) {\n       \
    \     return \"YES\";\n        }\n        long length21 = length19 / length20;\n\
    \        long length22 = length19 % length20;\n        if (length21 == 0) {\n\
    \            return \"NO\";\n        }\n        if (length21 == 1) {\n       \
    \     return \"YES\";\n        }\n", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long start2 = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ end2 = Math.Max(interval1.Item1, interval2.Item1);\n        long length2 = end2\
    \ - start2;\n        if (length2 == 0) return \"NO\";\n        long start3 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end3 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length3 = end3 - start3;\n        if (length3 == 0) return \"NO\"\
    ;\n        long start4 = Math.Min(interval1.Item2, interval2.Item2);\n       \
    \ long end4 = Math.Max(interval1.Item1, interval2.Item1);\n        long length4\
    \ = end4 - start4;\n        if (length4 == 0) return \"NO\";\n        long start5\
    \ = Math.Min(interval1.Item1, interval2.Item1);\n        long end5 = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length5 = end5 - start5;\n        if (length5\
    \ == 0) return \"NO\";\n        long start6 = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long end6 = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ length6 = end6 - start6;\n        if (length6 == 0) return \"NO\";\n       \
    \ long start7 = Math.Min(interval1.Item1, interval2.Item1);\n        long end7\
    \ = Math.Max(interval1.Item2, interval2.Item2);\n        long length7 = end7 -\
    \ start7;\n        if (length7 == 0) return \"NO\";\n        long start8 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end8 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length8 = end8 - start8;\n        if (length8 == 0) return \"NO\"\
    ;\n        long start9 = Math.Min(interval1.Item1, interval2.Item1);\n       \
    \ long end9 = Math.Max(interval1.Item2, interval2.Item2);\n        long length9\
    \ = end9 - start9;\n        if (length9 == 0) return \"NO\";\n        long start10\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        long end10 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long length10 = end10 - start10;\n        if (length10\
    \ == 0) return \"NO\";\n        long start11", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        long prime = length / 2;\n        long count = 0;\n       \
    \ for (long i = start; i <= end; i++) {\n            if (IsPrime(i)) {\n     \
    \           count++;\n                if (count == prime)\n                  \
    \  return \"YES\";\n            }\n        }\n        return \"NO\";", "     \
    \   long start = Math.Max(interval1.Item1, interval2.Item1);\n        long end\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        if (length == 0) return \"NO\";\n        if (length == 1) return \"YES\"\
    ;\n        long max = (long)Math.Sqrt(length);\n        long min = (long)Math.Sqrt(length\
    \ + 1);\n        long mid = start + (end - start) / 2;\n        bool isPrime =\
    \ true;\n        long maxPrime = max;\n        long minPrime = min;\n        while\
    \ (isPrime) {\n            long prime = start + Math.Floor(Math.Sqrt(Math.Pow(mid,\
    \ 2) - Math.Pow(max, 2)));\n            if (prime > maxPrime) maxPrime = prime;\n\
    \            if (prime < minPrime) minPrime = prime;\n            if (prime ==\
    \ mid) isPrime = false;\n            mid = prime;\n        }\n        if (maxPrime\
    \ == minPrime) return \"YES\";\n        return \"NO\";", "        long start =\
    \ Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0)\n            return \"NO\";\n        if (length == 1)\n            return\
    \ \"YES\";\n        long max = (long)Math.Sqrt(length);\n        long min = (long)Math.Sqrt(length\
    \ / 2);\n        long mid = start + max;\n        long sum = 0;\n        long\
    \ count = 0;\n        while (start < mid) {\n            sum += start;\n     \
    \       count++;\n            start += max;\n        }\n        if (count == 1)\n\
    \            return \"YES\";\n        long sum2 = 0;\n        long count2 = 0;\n\
    \        while (end > mid) {\n            sum2 += end;\n            count2++;\n\
    \            end -= max;\n        }\n        if (count2 == 1)\n            return\
    \ \"YES\";\n        long sum3 = 0;\n        long count3 = 0;\n        while (start\
    \ < mid) {\n            sum3 += start;\n            count3++;\n            start\
    \ += max;\n        }\n        if (count3 == 1)\n            return \"YES\";\n\
    \        long sum4 = 0;\n        long count4 = 0;\n        while (end > mid) {\n\
    \            sum4 += end;\n            count4++;\n            end -= max;\n  \
    \      }\n        if (count4 == 1)\n            return \"YES\";\n        long\
    \ sum5 = 0;\n        long count5 = 0;\n        while (start < mid) {\n       \
    \     sum5 += start;\n            count5++;\n            start += max;\n     \
    \   }\n        if (count5 == 1)\n            return \"YES\";\n        long sum6\
    \ = 0;\n        long count6 = 0;\n        while (end > mid) {\n            sum6\
    \ += end;\n            count6++;\n            end -= max;\n        }\n       \
    \ if (count6 == 1)\n            return \"YES\";\n        long sum7 = 0;\n    \
    \    long count7 = 0;\n        while (start < mid) {\n            sum7 += start;\n\
    \            count7++;\n            start += max;\n        }\n        if (count7\
    \ == 1)\n            return \"YES\";\n        long sum8 = 0;\n        long count8\
    \ = 0;\n        while (end > mid) {\n            sum8 += end;\n            count8++;\n\
    \            end -= max;\n        }\n        if (count8 == 1)\n            return\
    \ \"YES\";\n        long sum9 = 0;\n        long count9 = 0;\n        while (start\
    \ < mid) {\n            sum9 += start;\n            count9++;\n            start\
    \ += max;\n        }\n        if (count9 == 1)\n            return \"YES\";\n\
    \        long sum10 = 0;\n        long count10 = 0;\n        while (end > mid)\
    \ {\n            sum10", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        if (length == 1)\n            return \"YES\";\n        long num = 2;\n\
    \        while (true) {\n            long mid = (start + end) / 2;\n         \
    \   if (mid * mid == length)\n                return \"YES\";\n            if\
    \ (mid * mid > length)\n                end = mid;\n            else\n       \
    \         start = mid;\n        }", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        long inter = start - end;\n        if (inter % 2 == 0)\n  \
    \          return \"NO\";\n        long prime = length / 2;\n        if (prime\
    \ == 1)\n            return \"NO\";\n        bool isPrime = true;\n        long\
    \ i = 2;\n        while (isPrime && i <= prime) {\n            if (length % i\
    \ == 0) {\n                isPrime = false;\n                break;\n        \
    \    }\n            i += 2;\n        }\n        if (isPrime)\n            return\
    \ \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        if (length\
    \ == 2)\n            return \"YES\";\n        long start2 = Math.Min(interval2.Item1,\
    \ interval1.Item1);\n        long end2 = Math.Max(interval2.Item2, interval1.Item2);\n\
    \        long length2 = end2 - start2;\n        if (length2 == 0)\n          \
    \  return \"NO\";\n        if (length2 == 1)\n            return \"YES\";\n  \
    \      if (length2 == 2)\n            return \"YES\";\n        long start3 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end3 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length3 = end3 - start3;\n        if (length3 == 0)\n          \
    \  return \"NO\";\n        if (length3 == 1)\n            return \"YES\";\n  \
    \      if (length3 == 2)\n            return \"YES\";\n        long start4 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end4 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length4 = end4 - start4;\n        if (length4 == 0)\n          \
    \  return \"NO\";\n        if (length4 == 1)\n            return \"YES\";\n  \
    \      if (length4 == 2)\n            return \"YES\";\n        long start5 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end5 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length5 = end5 - start5;\n        if (length5 == 0)\n          \
    \  return \"NO\";\n        if (length5 == 1)\n            return \"YES\";\n  \
    \      if (length5 == 2)\n            return \"YES\";\n        long start6 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end6 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length6 = end6 - start6;\n        if (length6 == 0)\n          \
    \  return \"NO\";\n        if (length6 == 1)\n            return \"YES\";\n  \
    \      if (length6 == 2)\n            return \"YES\";\n        long start7 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end7 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length7 = end7 - start7;\n        if (length7 == 0)\n          \
    \  return \"NO\";\n        if (length7 == 1)\n            return \"YES\";\n  \
    \      if (length7 == 2)\n            return \"YES\";\n        long start8 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end8 = Math.Max(interval1.Item", "        long\
    \ start = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        bool isPrime = true;\n        long prime = 2;\n \
    \       while (isPrime) {\n            if (length == prime) break;\n         \
    \   if (length % prime == 0) {\n                isPrime = false;\n           \
    \     break;\n            }\n            prime++;\n        }\n        if (isPrime)\
    \ return \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        bool isPrime = true;\n        long\
    \ prime = 2;\n        while (isPrime && prime < length) {\n            if (length\
    \ / prime == prime) {\n                isPrime = false;\n            }\n     \
    \       else {\n                prime++;\n            }\n        }\n        if\
    \ (isPrime) {\n            return \"YES\";\n        }\n        return \"NO\";",
  "        long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        bool isPrime = true;\n        if (length == 1) {\n       \
    \     isPrime = false;\n        }\n        if (length == 2) {\n            isPrime\
    \ = IsPrime(start) && IsPrime(end);\n        }\n        if (isPrime) {\n     \
    \       return \"YES\";\n        }\n        return \"NO\";", "        long start\
    \ = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length <\
    \ 2) return \"NO\";\n        if (length == 2) return \"YES\";\n        long mid\
    \ = start + (end - start) / 2;\n        bool isPrime = true;\n        long count\
    \ = 2;\n        while (count < length) {\n            if (IsPrime(mid)) {\n  \
    \              isPrime = true;\n                break;\n            }\n      \
    \      isPrime = false;\n            mid++;\n            count++;\n        }\n\
    \        if (isPrime) return \"YES\";\n        return \"NO\";", "        long\
    \ start = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0)\n            return \"NO\";\n        if (length == 1)\n            return\
    \ \"YES\";\n        long mid = start + (end - start) / 2;\n        bool isPrime\
    \ = true;\n        long prime = start;\n        while (prime <= end) {\n     \
    \       if (IsPrime(prime)) {\n                isPrime = true;\n             \
    \   break;\n            }\n            prime += 1;\n        }\n        if (isPrime)\n\
    \            return \"YES\";\n        return \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        long prime = length / 2;\n        bool isPrime = true;\n  \
    \      long count = 0;\n        long primeCount = 0;\n        long primePrimeCount\
    \ = 0;\n        long primePrimePrimeCount = 0;\n        long primePrimePrimePrimeCount\
    \ = 0;\n        long primePrimePrimePrimePrimeCount = 0;\n        long primePrimePrimePrimePrimePrimeCount\
    \ = 0;\n        long primePrimePrimePrimePrimePrimePrimeCount = 0;\n        long\
    \ primePrimePrimePrimePrimePrimePrimePrimeCount = 0;\n        long primePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n        long primePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount =\
    \ 0;\n        long primePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n        long primePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n        long primePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n        long primePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n        long primePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n        long primePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n        long primePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n        long primePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n        long primePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n        long primePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimePrimeCount\
    \ = 0;\n        long ", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        if (length\
    \ == 1) return \"YES\";\n        long max = (long)Math.Sqrt(length) + 1;\n   \
    \     long min = (long)Math.Sqrt(length) - 1;\n        long mid = (long)Math.Sqrt(max);\n\
    \        long count = 0;\n        long sum = 0;\n        long sum2 = 0;\n    \
    \    long sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long\
    \ sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9\
    \ = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 =\
    \ 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n\
    \        long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n \
    \       long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n  \
    \      long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n   \
    \     long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n    \
    \    long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n     \
    \   long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n      \
    \  long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n       \
    \ long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long\
    \ sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43\
    \ = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long sum46 =\
    \ 0;\n        long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n\
    \        long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n \
    \       long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n  \
    \      long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n   \
    \     long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n    \
    \    long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n     \
    \   long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n      \
    \  long sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        ",
  "        long start = interval1.Item1;\n        long end = interval1.Item2;\n  \
    \      long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        long length = end - start;\n        long length2 = end2 - start2;\n \
    \       long intersection = length * length2;\n        long product = length *\
    \ length;\n        long product2 = length2 * length2;\n        long product3 =\
    \ length2 * length3;\n        long product4 = length3 * length3;\n        long\
    \ product5 = length3 * length4;\n        long product6 = length4 * length4;\n\
    \        long product7 = length4 * length5;\n        long product8 = length5 *\
    \ length5;\n        long product9 = length5 * length6;\n        long product10\
    \ = length6 * length6;\n        long product11 = length6 * length7;\n        long\
    \ product12 = length7 * length7;\n        long product13 = length7 * length8;\n\
    \        long product14 = length8 * length8;\n        long product15 = length8\
    \ * length9;\n        long product16 = length9 * length9;\n        long product17\
    \ = length9 * length10;\n        long product18 = length10 * length10;\n     \
    \   long product19 = length10 * length11;\n        long product20 = length11 *\
    \ length11;\n        long product21 = length11 * length12;\n        long product22\
    \ = length12 * length12;\n        long product23 = length12 * length13;\n    \
    \    long product24 = length13 * length13;\n        long product25 = length13\
    \ * length14;\n        long product26 = length14 * length14;\n        long product27\
    \ = length14 * length15;\n        long product28 = length15 * length15;\n    \
    \    long product29 = length15 * length16;\n        long product30 = length16\
    \ * length16;\n        long product31 = length16 * length17;\n        long product32\
    \ = length17 * length17;\n        long product33 = length17 * length18;\n    \
    \    long product34 = length18 * length18;\n        long product35 = length18\
    \ * length19;\n        long product36 = length19 * length19;\n        long product37\
    \ = length19 * length20;\n        long product38 = length20 * length20;\n    \
    \    long product39 = length20 * length21;\n        long product40 = length21\
    \ * length21;\n        long product41 = length21 * length22;\n        long product42\
    \ = length22 * length22;\n        long product43 = length22 * ", "        long\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        long max = (long)Math.Sqrt(length);\n        long\
    \ mid = start + (end - start) / 2;\n        bool isPrime = true;\n        for\
    \ (long i = 2; i <= max; i++) {\n            if (mid % i == 0) {\n           \
    \     isPrime = false;\n                break;\n            }\n        }\n   \
    \     if (isPrime) return \"YES\";\n        return \"NO\";", "        long start1\
    \ = interval1.Item1;\n        long end1 = interval1.Item2;\n        long start2\
    \ = interval2.Item1;\n        long end2 = interval2.Item2;\n        long length\
    \ = end1 - start1 + end2 - start2;\n        if (length < 0)\n            return\
    \ \"NO\";\n        if (length == 0)\n            return \"NO\";\n        long\
    \ startIntersection = start1 + start2;\n        long endIntersection = end1 -\
    \ end2;\n        long startIntersection2 = startIntersection - length;\n     \
    \   long endIntersection2 = endIntersection + length;\n        if (startIntersection2\
    \ >= start1 && startIntersection2 <= end1 && endIntersection2 >= start2 && endIntersection2\
    \ <= end2)\n            return \"YES\";\n        return \"NO\";", "        long\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        if (length == 1) return \"YES\";\n        long mid\
    \ = start + (end - start) / 2;\n        bool isPrime = true;\n        bool isPrime2\
    \ = true;\n        long count = 1;\n        while (count < length) {\n       \
    \     long mid2 = mid + count;\n            if (mid2 == end || mid2 == start)\
    \ break;\n            if (IsPrime(mid2)) {\n                isPrime = true;\n\
    \                isPrime2 = false;\n            }\n            count++;\n    \
    \    }\n        if (isPrime) {\n            if (isPrime2) return \"YES\";\n  \
    \          return \"NO\";\n        }\n        return \"NO\";", "        long start\
    \ = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        long prime = Prime(length);\n        if (prime ==\
    \ length) return \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        bool isPrime = true;\n        long prime = 2;\n        while (isPrime)\
    \ {\n            if (length == prime) {\n                isPrime = false;\n  \
    \          } else {\n                length += prime;\n            }\n       \
    \     prime++;\n        }\n        if (length == prime) return \"YES\";\n    \
    \    else return \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        bool isPrime = true;\n        long prime = 2;\n        while (isPrime)\
    \ {\n            if (length == prime)\n                return \"YES\";\n     \
    \       if (length == prime + 1) {\n                isPrime = false;\n       \
    \     }\n            prime += 2;\n        }\n        return \"NO\";", "      \
    \  long start = Math.Min(interval1.Item1, interval2.Item1);\n        long end\
    \ = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        if (length == 0) return \"NO\";\n        if (length == 1) return \"YES\"\
    ;\n        bool isPrime = true;\n        long prime = length / 2;\n        while\
    \ (isPrime) {\n            long nextPrime = prime + 1;\n            isPrime =\
    \ IsPrime(nextPrime);\n            prime = nextPrime;\n        }\n        return\
    \ isPrime ? \"YES\" : \"NO\";", "        long start = interval1.Item1;\n     \
    \   long end = interval1.Item2;\n        long start2 = interval2.Item1;\n    \
    \    long end2 = interval2.Item2;\n        long length = end - start;\n      \
    \  long length2 = end2 - start2;\n        if (length2 == 0) {\n            return\
    \ \"NO\";\n        }\n        long length3 = length * length2;\n        long length4\
    \ = length2 * length;\n        long length5 = length3 * length2;\n        long\
    \ length6 = length2 * length3;\n        long length7 = length3 * length;\n   \
    \     long length8 = length * length3;\n        long length9 = length2 * length3;\n\
    \        long length10 = length3 * length2;\n        long length11 = length2 *\
    \ length;\n        long length12 = length3 * length;\n        long length13 =\
    \ length2 * length2;\n        long length14 = length3 * length3;\n        long\
    \ length15 = length2 * length3;\n        long length16 = length3 * length2;\n\
    \        long length17 = length2 * length;\n        long length18 = length3 *\
    \ length;\n        long length19 = length2 * length2;\n        long length20 =\
    \ length3 * length3;\n        long length21 = length2 * length3;\n        long\
    \ length22 = length3 * length2;\n        long length23 = length2 * length;\n \
    \       long length24 = length3 * length;\n        long length25 = length2 * length2;\n\
    \        long length26 = length3 * length3;\n        long length27 = length2 *\
    \ length3;\n        long length28 = length3 * length;\n        long length29 =\
    \ length2 * length2;\n        long length30 = length3 * length3;\n        long\
    \ length31 = length2 * length3;\n        long length32 = length3 * length;\n \
    \       long length33 = length2 * length2;\n        long length34 = length3 *\
    \ length3;\n        long length35 = length2 * length3;\n        long length36\
    \ = length3 * length;\n        long length37 = length2 * length2;\n        long\
    \ length38 = length3 * length3;\n        long length39 = length2 * length3;\n\
    \        long length40 = length3 * length;\n        long length41 = length2 *\
    \ length2;\n        long length42 = length3 * length3;\n        long length43\
    \ = length2 * length3;\n        long length44 = length3 * length;\n        long\
    \ length45 = length2 * length2;\n        long length46 = length3 * length3;\n\
    \        long length47 = length2 * length3;\n        long length48 = length3 *\
    \ length;\n        long length49 = length2 * length2;\n        long length50 =\
    \ length", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        if (length\
    \ == 1) return \"YES\";\n        if (length == 2 && start == end) return \"YES\"\
    ;\n        if (length == 2 && start > end) return \"NO\";\n        if (length\
    \ == 2 && start == end - 1) return \"YES\";\n        if (length == 2 && start\
    \ == end - 2) return \"YES\";\n        if (length == 2 && start == end - 3) return\
    \ \"YES\";\n        if (length == 2 && start == end - 4) return \"YES\";\n   \
    \     if (length == 2 && start == end - 5) return \"YES\";\n        if (length\
    \ == 2 && start == end - 6) return \"YES\";\n        if (length == 2 && start\
    \ == end - 7) return \"YES\";\n        if (length == 2 && start == end - 8) return\
    \ \"YES\";\n        if (length == 2 && start == end - 9) return \"YES\";\n   \
    \     if (length == 2 && start == end - 10) return \"YES\";\n        if (length\
    \ == 2 && start == end - 11) return \"YES\";\n        if (length == 2 && start\
    \ == end - 12) return \"YES\";\n        if (length == 2 && start == end - 13)\
    \ return \"YES\";\n        if (length == 2 && start == end - 14) return \"YES\"\
    ;\n        if (length == 2 && start == end - 15) return \"YES\";\n        if (length\
    \ == 2 && start == end - 16) return \"YES\";\n        if (length == 2 && start\
    \ == end - 17) return \"YES\";\n        if (length == 2 && start == end - 18)\
    \ return \"YES\";\n        if (length == 2 && start == end - 19) return \"YES\"\
    ;\n        if (length == 2 && start == end - 20) return \"YES\";\n        if (length\
    \ == 2 && start == end - 21) return \"YES\";\n        if (length == 2 && start\
    \ == end - 22) return \"YES\";\n        if (length == 2 && start == end - 23)\
    \ return \"YES\";\n        if (length == 2 && start == end - 24) return \"YES\"\
    ;\n        if (length == 2 && start == end - 25) return \"YES\";\n        if (length\
    \ == 2 && start == end - 26) return \"YES\";\n        if (length == 2 && start\
    \ == end - 27) return \"YES\";\n        if (length == 2 && start == end - 28)\
    \ return \"YES\";\n        if (length == 2 && start == end - 29) return \"YES\"\
    ;\n        if (length == 2 && start == end - 30) return \"YES\";\n        if (length\
    \ == 2 && start == end - 31) return \"YES\";\n        if (length == 2 && start\
    \ == end - 32) return \"YES\";\n        if (length == 2 && start == end - 33)\
    \ return \"YES\";\n        if (length == 2 && ", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ mid = start + (end - start) / 2;\n        bool isPrime = true;\n        long\
    \ prime = 2;\n        while (isPrime) {\n            if (length == prime)\n  \
    \              return \"YES\";\n            if (length == prime + 1) {\n     \
    \           isPrime = false;\n                return \"NO\";\n            }\n\
    \            if (length == prime * 2)\n                isPrime = false;\n    \
    \        prime++;\n        }\n        return \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        if (length == 1) return \"YES\";\n        long start2 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end2 = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length2 = end2 - start2;\n        if (length2 == 0) return \"NO\"\
    ;\n        if (length2 == 1) return \"YES\";\n        long start3 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end3 = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length3 = end3 - start3;\n        if (length3 == 0) return \"NO\"\
    ;\n        if (length3 == 1) return \"YES\";\n        long start4 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end4 = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length4 = end4 - start4;\n        if (length4 == 0) return \"NO\"\
    ;\n        if (length4 == 1) return \"YES\";\n        long start5 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end5 = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length5 = end5 - start5;\n        if (length5 == 0) return \"NO\"\
    ;\n        if (length5 == 1) return \"YES\";\n        long start6 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end6 = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length6 = end6 - start6;\n        if (length6 == 0) return \"NO\"\
    ;\n        if (length6 == 1) return \"YES\";\n        long start7 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end7 = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length7 = end7 - start7;\n        if (length7 == 0) return \"NO\"\
    ;\n        if (length7 == 1) return \"YES\";\n        long start8 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end8 = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length8 = end8 - start8;\n        if (length8 == 0) return \"NO\"\
    ;\n        if (length8 == 1) return \"YES\";\n        long start9 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end9 = Math.Min(interval1.Item2, interval2.Item2);",
  "        long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0) return \"NO\";\n        if (length == 1)\
    \ return \"YES\";\n        long start2 = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long end2 = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ length2 = end2 - start2;\n        if (length2 == 0) return \"NO\";\n       \
    \ if (length2 == 1) return \"YES\";\n        long start3 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end3 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length3 = end3 - start3;\n        if (length3 == 0) return \"NO\"\
    ;\n        if (length3 == 1) return \"YES\";\n        long start4 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end4 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length4 = end4 - start4;\n        if (length4 == 0) return \"NO\"\
    ;\n        if (length4 == 1) return \"YES\";\n        long start5 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end5 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length5 = end5 - start5;\n        if (length5 == 0) return \"NO\"\
    ;\n        if (length5 == 1) return \"YES\";\n        long start6 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end6 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length6 = end6 - start6;\n        if (length6 == 0) return \"NO\"\
    ;\n        if (length6 == 1) return \"YES\";\n        long start7 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end7 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length7 = end7 - start7;\n        if (length7 == 0) return \"NO\"\
    ;\n        if (length7 == 1) return \"YES\";\n        long start8 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end8 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length8 = end8 - start8;\n        if (length8 == 0) return \"NO\"\
    ;\n        if (length8 == 1) return \"YES\";\n        long start9 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end9 = Math.Max(interval1.Item2, interval2.Item2);",
  "        long start = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0) return \"NO\";\n        bool isPrime = true;\n\
    \        long prime = 2;\n        while (isPrime) {\n            if (length ==\
    \ prime) break;\n            if (length % prime == 0) isPrime = false;\n     \
    \       prime++;\n        }\n        return isPrime ? \"YES\" : \"NO\";", "  \
    \      long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0)\n            return \"NO\";\n        long\
    \ prime = GetPrime(length);\n        if (length == prime)\n            return\
    \ \"YES\";\n        return \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long mid = start + (end - start) / 2;\n        bool isPrime = true;\n\
    \        long i = 2;\n        while (i < mid && isPrime) {\n            if (mid\
    \ % i == 0) isPrime = false;\n            i++;\n        }\n        if (isPrime)\
    \ return \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        if (length == 1) return \"YES\";\n        long middle = start + (end\
    \ - start) / 2;\n        bool isPrime = true;\n        long prime = 2;\n     \
    \   while (isPrime) {\n            if (length == prime) {\n                isPrime\
    \ = false;\n            } else {\n                isPrime = IsPrime(middle);\n\
    \            }\n            prime++;\n        }\n        if (isPrime) return \"\
    YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        if (length == 1) return \"YES\";\n        long start2 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end2 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length2 = end2 - start2;\n        if (length2 == 0) return \"NO\"\
    ;\n        if (length2 == 1) return \"YES\";\n        long start3 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end3 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length3 = end3 - start3;\n        if (length3 == 0) return \"NO\"\
    ;\n        if (length3 == 1) return \"YES\";\n        long start4 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end4 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length4 = end4 - start4;\n        if (length4 == 0) return \"NO\"\
    ;\n        if (length4 == 1) return \"YES\";\n        long start5 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end5 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length5 = end5 - start5;\n        if (length5 == 0) return \"NO\"\
    ;\n        if (length5 == 1) return \"YES\";\n        long start6 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end6 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length6 = end6 - start6;\n        if (length6 == 0) return \"NO\"\
    ;\n        if (length6 == 1) return \"YES\";\n        long start7 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end7 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length7 = end7 - start7;\n        if (length7 == 0) return \"NO\"\
    ;\n        if (length7 == 1) return \"YES\";\n        long start8 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end8 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length8 = end8 - start8;\n        if (length8 == 0) return \"NO\"\
    ;\n        if (length8 == 1) return \"YES\";\n        long start9 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end9 = Math.Max(interval1.Item2, interval2.Item2);",
  "        long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0) return \"NO\";\n        long prime = GetPrime(length);\n\
    \        if (prime == length) return \"YES\";\n        if (prime == 0) return\
    \ \"NO\";\n        long inter = GetIntersection(interval1, interval2, prime);\n\
    \        if (inter == 0) return \"NO\";\n        return \"YES\";", "        long\
    \ start = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length <\
    \ 2) {\n            return \"NO\";\n        }\n        long start2 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end2 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length2 = end2 - start2;\n        if (length2 < 2) {\n         \
    \   return \"NO\";\n        }\n        long start3 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end3 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length3 = end3 - start3;\n        if (length3 < 2) {\n         \
    \   return \"NO\";\n        }\n        long start4 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end4 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length4 = end4 - start4;\n        if (length4 < 2) {\n         \
    \   return \"NO\";\n        }\n        long start5 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end5 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length5 = end5 - start5;\n        if (length5 < 2) {\n         \
    \   return \"NO\";\n        }\n        long start6 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end6 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length6 = end6 - start6;\n        if (length6 < 2) {\n         \
    \   return \"NO\";\n        }\n        long start7 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end7 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length7 = end7 - start7;\n        if (length7 < 2) {\n         \
    \   return \"NO\";\n        }\n        long start8 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end8 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length8 = end8 - start8;\n        if (length8 < 2) {\n         \
    \   return \"NO\";\n        }\n        long start9 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end9 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length9 = end9 - start9;\n        if (length9 < 2) {\n         \
    \   return \"NO\";\n        }\n        long start10 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long end10 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long length10 = end10", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ max = (long)Math.Sqrt(length);\n        long max2 = max / 2;\n        long max3\
    \ = max * max;\n        long max4 = max3 * max;\n        long max5 = max4 * max;\n\
    \        long max6 = max5 * max;\n        long max7 = max6 * max;\n        long\
    \ max8 = max7 * max;\n        long max9 = max8 * max;\n        long max10 = max9\
    \ * max;\n        long max11 = max10 * max;\n        long max12 = max11 * max;\n\
    \        long max13 = max12 * max;\n        long max14 = max13 * max;\n      \
    \  long max15 = max14 * max;\n        long max16 = max15 * max;\n        long\
    \ max17 = max16 * max;\n        long max18 = max17 * max;\n        long max19\
    \ = max18 * max;\n        long max20 = max19 * max;\n        long max21 = max20\
    \ * max;\n        long max22 = max21 * max;\n        long max23 = max22 * max;\n\
    \        long max24 = max23 * max;\n        long max25 = max24 * max;\n      \
    \  long max26 = max25 * max;\n        long max27 = max26 * max;\n        long\
    \ max28 = max27 * max;\n        long max29 = max28 * max;\n        long max30\
    \ = max29 * max;\n        long max31 = max30 * max;\n        long max32 = max31\
    \ * max;\n        long max33 = max32 * max;\n        long max34 = max33 * max;\n\
    \        long max35 = max34 * max;\n        long max36 = max35 * max;\n      \
    \  long max37 = max36 * max;\n        long max38 = max37 * max;\n        long\
    \ max39 = max38 * max;\n        long max40 = max39 * max;\n        long max41\
    \ = max40 * max;\n        long max42 = max41 * max;\n        long max43 = max42\
    \ * max;\n        long max44", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ max = (long)Math.Sqrt(length);\n        long min = (long)Math.Sqrt(length +\
    \ 1);\n        long mid = start + (end - start) / 2;\n        bool isPrime = true;\n\
    \        bool isPrime2 = true;\n        bool isPrime3 = true;\n        bool isPrime4\
    \ = true;\n        bool isPrime5 = true;\n        bool isPrime6 = true;\n    \
    \    bool isPrime7 = true;\n        bool isPrime8 = true;\n        bool isPrime9\
    \ = true;\n        bool isPrime10 = true;\n        bool isPrime11 = true;\n  \
    \      bool isPrime12 = true;\n        bool isPrime13 = true;\n        bool isPrime14\
    \ = true;\n        bool isPrime15 = true;\n        bool isPrime16 = true;\n  \
    \      bool isPrime17 = true;\n        bool isPrime18 = true;\n        bool isPrime19\
    \ = true;\n        bool isPrime20 = true;\n        bool isPrime21 = true;\n  \
    \      bool isPrime22 = true;\n        bool isPrime23 = true;\n        bool isPrime24\
    \ = true;\n        bool isPrime25 = true;\n        bool isPrime26 = true;\n  \
    \      bool isPrime27 = true;\n        bool isPrime28 = true;\n        bool isPrime29\
    \ = true;\n        bool isPrime30 = true;\n        bool isPrime31 = true;\n  \
    \      bool isPrime32 = true;\n        bool isPrime33 = true;\n        bool isPrime34\
    \ = true;\n        bool isPrime35 = true;\n        bool isPrime36 = true;\n  \
    \      bool isPrime37 = true;\n        bool isPrime38 = true;\n        bool isPrime39\
    \ = true;\n        bool isPrime40 = true;\n        bool isPrime41 = true;\n  \
    \      bool isPrime42 = true;\n        bool isPrime43 = true;\n        bool isPrime44\
    \ = true;\n        bool isPrime45 = true;\n        bool isPrime46 = true;\n  \
    \      bool isPrime47 = true;\n        bool isPrime48 = true;\n        bool isPrime49\
    \ = true;\n        bool isPrime50 = true;\n        bool isPrime51 = true;\n  \
    \      bool isPrime52 = true;\n        ", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long prime = Prime(length);\n        if (prime == length) return \"YES\"\
    ;\n        return \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        bool isPrime = true;\n        long prime = 2;\n\
    \        while (isPrime) {\n            if (length == prime) {\n             \
    \   isPrime = false;\n            } else {\n                length += prime;\n\
    \            }\n            prime += 2;\n        }\n        if (length != 1) {\n\
    \            return \"NO\";\n        } else {\n            return \"YES\";\n \
    \       }", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ count = 0;\n        long prime = 1;\n        while (prime * prime <= length)\
    \ {\n            long candidate = prime * prime;\n            if (candidate >\
    \ length) candidate = length;\n            if (candidate == start || candidate\
    \ == end) break;\n            count += candidate;\n            prime++;\n    \
    \    }\n        if (count == length) return \"YES\";\n        return \"NO\";",
  "        long start = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0) return \"NO\";\n        long sum = 0;\n \
    \       for (long i = start; i <= end; i++) {\n            sum += i;\n       \
    \ }\n        if (sum == length) return \"YES\";\n        return \"NO\";", "  \
    \      long start = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0) return \"NO\";\n        long prime = GetPrime(length);\n\
    \        if (prime == length) return \"YES\";\n        return \"NO\";", "    \
    \    long start = Math.Min(interval1.Item1, interval2.Item1);\n        long end\
    \ = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        if (length == 0)\n            return \"NO\";\n        if (length == 1)\n\
    \            return \"YES\";\n        long max = (long)Math.Sqrt(length);\n  \
    \      long max2 = max * max;\n        long max3 = max2 * max;\n        long max4\
    \ = max3 * max;\n        long max5 = max4 * max;\n        long max6 = max5 * max;\n\
    \        long max7 = max6 * max;\n        long max8 = max7 * max;\n        long\
    \ max9 = max8 * max;\n        long max10 = max9 * max;\n        long max11 = max10\
    \ * max;\n        long max12 = max11 * max;\n        long max13 = max12 * max;\n\
    \        long max14 = max13 * max;\n        long max15 = max14 * max;\n      \
    \  long max16 = max15 * max;\n        long max17 = max16 * max;\n        long\
    \ max18 = max17 * max;\n        long max19 = max18 * max;\n        long max20\
    \ = max19 * max;\n        long max21 = max20 * max;\n        long max22 = max21\
    \ * max;\n        long max23 = max22 * max;\n        long max24 = max23 * max;\n\
    \        long max25 = max24 * max;\n        long max26 = max25 * max;\n      \
    \  long max27 = max26 * max;\n        long max28 = max27 * max;\n        long\
    \ max29 = max28 * max;\n        long max30 = max29 * max;\n        long max31\
    \ = max30 * max;\n        long max32 = max31 * max;\n        long max33 = max32\
    \ * max;\n        long max34 = max33 * max;\n        long max35 = max34 * max;\n\
    \        long max36 = max35 * max;\n        long max37 = max36 * max;\n      \
    \  long max38 = max37 * max;\n        long max39 = max38 * max;\n        long\
    \ max40 = max39 * max;\n        long max41 = max40 * max;\n        long max42\
    \ = max41 * max;\n        long max43 = max42 * max;\n        long max", "    \
    \    long start = Math.Min(interval1.Item1, interval2.Item1);\n        long end\
    \ = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        if (length == 0) return \"NO\";\n        bool isPrime = true;\n     \
    \   long i = 2;\n        while (i < length) {\n            if (length % i == 0)\
    \ {\n                isPrime = false;\n                break;\n            }\n\
    \            i += 2;\n        }\n        if (isPrime) return \"YES\";\n      \
    \  return \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        if (length == 1)\n            return \"YES\";\n        long start2 =\
    \ Math.Max(interval1.Item1, interval2.Item1);\n        long end2 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length2 = end2 - start2;\n        if (length2\
    \ == 0)\n            return \"NO\";\n        if (length2 == 1)\n            return\
    \ \"YES\";\n        long start3 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end3 = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length3 = end3 - start3;\n        if (length3 == 0)\n            return \"NO\"\
    ;\n        if (length3 == 1)\n            return \"YES\";\n        long start4\
    \ = Math.Max(interval1.Item1, interval2.Item1);\n        long end4 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length4 = end4 - start4;\n        if (length4\
    \ == 0)\n            return \"NO\";\n        if (length4 == 1)\n            return\
    \ \"YES\";\n        long start5 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end5 = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length5 = end5 - start5;\n        if (length5 == 0)\n            return \"NO\"\
    ;\n        if (length5 == 1)\n            return \"YES\";\n        long start6\
    \ = Math.Max(interval1.Item1, interval2.Item1);\n        long end6 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length6 = end6 - start6;\n        if (length6\
    \ == 0)\n            return \"NO\";\n        if (length6 == 1)\n            return\
    \ \"YES\";\n        long start7 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end7 = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length7 = end7 - start7;\n        if (length7 == 0)\n            return \"NO\"\
    ;\n        if (length7 == 1)\n            return \"YES\";\n        long start8\
    \ = Math.Max(interval1.Item1, interval2.Item1);\n        long end8 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length8 = end8 - start8;\n        if (length8\
    \ == 0)\n            return \"NO\";\n        if (length8 == 1)\n            return\
    \ \"YES\";\n        long start9 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end9 = Math.Min(interval1.Item2, interval2.Item2);", "        long\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        long max = (long)Math.Sqrt(length);\n        long\
    \ max2 = max * max;\n        long max3 = max2 * max;\n        long max4 = max3\
    \ * max;\n        long max5 = max4 * max;\n        long max6 = max5 * max;\n \
    \       long max7 = max6 * max;\n        long max8 = max7 * max;\n        long\
    \ max9 = max8 * max;\n        long max10 = max9 * max;\n        long max11 = max10\
    \ * max;\n        long max12 = max11 * max;\n        long max13 = max12 * max;\n\
    \        long max14 = max13 * max;\n        long max15 = max14 * max;\n      \
    \  long max16 = max15 * max;\n        long max17 = max16 * max;\n        long\
    \ max18 = max17 * max;\n        long max19 = max18 * max;\n        long max20\
    \ = max19 * max;\n        long max21 = max20 * max;\n        long max22 = max21\
    \ * max;\n        long max23 = max22 * max;\n        long max24 = max23 * max;\n\
    \        long max25 = max24 * max;\n        long max26 = max25 * max;\n      \
    \  long max27 = max26 * max;\n        long max28 = max27 * max;\n        long\
    \ max29 = max28 * max;\n        long max30 = max29 * max;\n        long max31\
    \ = max30 * max;\n        long max32 = max31 * max;\n        long max33 = max32\
    \ * max;\n        long max34 = max33 * max;\n        long max35 = max34 * max;\n\
    \        long max36 = max35 * max;\n        long max37 = max36 * max;\n      \
    \  long max38 = max37 * max;\n        long max39 = max38 * max;\n        long\
    \ max40 = max39 * max;\n        long max41 = max40 * max;\n        long max42\
    \ = max41 * max;\n        long max43 = max42 * max;\n        long max44 = max43\
    \ * max;\n        ", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        if (length\
    \ == 1) return \"YES\";\n        long max = (long)Math.Sqrt(length);\n       \
    \ long mid = start + (end - start) / 2;\n        long count = 0;\n        long\
    \ sum = 0;\n        long prime = 1;\n        while (prime < max) {\n         \
    \   sum += prime;\n            count += prime * prime;\n            prime++;\n\
    \        }\n        if (sum == length) return \"YES\";\n        if (count % 2\
    \ == 1) return \"NO\";\n        long a = Math.Sqrt(count / 2);\n        long b\
    \ = Math.Sqrt(count / 2);\n        long c = Math.Sqrt(count / 2);\n        long\
    \ d = Math.Sqrt(count / 2);\n        long e = Math.Sqrt(count / 2);\n        long\
    \ f = Math.Sqrt(count / 2);\n        long g = Math.Sqrt(count / 2);\n        long\
    \ h = Math.Sqrt(count / 2);\n        long i = Math.Sqrt(count / 2);\n        long\
    \ j = Math.Sqrt(count / 2);\n        long k = Math.Sqrt(count / 2);\n        long\
    \ l = Math.Sqrt(count / 2);\n        long m = Math.Sqrt(count / 2);\n        long\
    \ n = Math.Sqrt(count / 2);\n        long o = Math.Sqrt(count / 2);\n        long\
    \ p = Math.Sqrt(count / 2);\n        long q = Math.Sqrt(count / 2);\n        long\
    \ r = Math.Sqrt(count / 2);\n        long s = Math.Sqrt(count / 2);\n        long\
    \ t = Math.Sqrt(count / 2);\n        long u = Math.Sqrt(count / 2);\n        long\
    \ v = Math.Sqrt(count / 2);\n        long w = Math.Sqrt(count / 2);\n        long\
    \ x = Math.Sqrt(count / 2);\n        long y = Math.Sqrt(count / 2);\n        long\
    \ z = Math.Sqrt(count / 2);\n        long aa = Math.Sqrt(count / 2);\n       \
    \ long ab = Math.Sqrt(count / 2);\n        long ac = Math.Sqrt(count / 2);\n \
    \       long ad = Math.Sqrt(count / 2);\n        long ae = Math.Sqrt(count / 2);\n\
    \        long af = Math.Sqrt(count / 2);\n        long ag = Math.Sqrt(count /\
    \ 2);\n        long ah = Math.Sqrt(count / 2);\n        long ai", "        long\
    \ start = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0)\n            return \"NO\";\n        if (length == 1)\n            return\
    \ \"YES\";\n        long max = (long)Math.Sqrt(length);\n        long min = (long)Math.Sqrt(length\
    \ + 1);\n        long mid = start + (end - start) / 2;\n        long count = 0;\n\
    \        long sum = 0;\n        while (count < max) {\n            sum += count;\n\
    \            count += 1;\n        }\n        long sum2 = sum;\n        while (sum2\
    \ < min) {\n            sum2 += 1;\n        }\n        if (sum % 2 == 0)\n   \
    \         return \"NO\";\n        long sum3 = sum2;\n        while (sum3 < max)\
    \ {\n            sum3 += 2;\n        }\n        if (sum3 % 2 == 0)\n         \
    \   return \"NO\";\n        long sum4 = sum3;\n        while (sum4 < max) {\n\
    \            sum4 += 3;\n        }\n        if (sum4 % 2 == 0)\n            return\
    \ \"NO\";\n        long sum5 = sum4;\n        while (sum5 < max) {\n         \
    \   sum5 += 4;\n        }\n        if (sum5 % 2 == 0)\n            return \"NO\"\
    ;\n        long sum6 = sum5;\n        while (sum6 < max) {\n            sum6 +=\
    \ 5;\n        }\n        if (sum6 % 2 == 0)\n            return \"NO\";\n    \
    \    long sum7 = sum6;\n        while (sum7 < max) {\n            sum7 += 6;\n\
    \        }\n        if (sum7 % 2 == 0)\n            return \"NO\";\n        long\
    \ sum8 = sum7;\n        while (sum8 < max) {\n            sum8 += 7;\n       \
    \ }\n        if (sum8 % 2 == 0)\n            return \"NO\";\n        long sum9\
    \ = sum8;\n        while (sum9 < max) {\n            sum9 += 8;\n        }\n \
    \       if (sum9 % 2 == 0)\n            return \"NO\";\n        long sum10 = sum9;\n\
    \        while (sum10 < max) {\n            sum10 += 9;\n        }\n        if\
    \ (sum10 % 2 == 0)\n            return \"NO\";\n        long sum11 = sum10;\n\
    \        while (sum11 < max) {\n            sum11 += 10;\n        }\n        if\
    \ (sum11 % 2 == 0)\n            return \"NO\";\n        long sum12 = sum11;\n\
    \        while (sum12 < max) {\n            sum12 += 11;\n        }\n        if\
    \ (sum12 % 2 == 0)\n            return \"NO\";\n        long sum13 = sum12;\n\
    \        while (sum13 < max) {\n            sum13 += 12;\n        }\n        if\
    \ (sum13 % 2 == 0)\n            return \"NO\";\n        long sum14", "       \
    \ long start = Math.Min(interval1.Item1, interval2.Item1);\n        long end =\
    \ Math.Max(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        if (length == 0)\n            return \"NO\";\n        long product =\
    \ length * length;\n        long sum = 0;\n        for (long i = start; i <= end;\
    \ i++)\n            sum += i;\n        if (product == sum)\n            return\
    \ \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ middle = start + (end - start) / 2;\n        bool isPrime = true;\n        long\
    \ prime = 2;\n        while (isPrime) {\n            if (length == prime)\n  \
    \              return \"YES\";\n            if (length == prime + 1) {\n     \
    \           isPrime = false;\n            }\n            prime++;\n        }\n\
    \        return \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        long prime = GetPrime(length);\n        if (prime == 0)\n           \
    \ return \"NO\";\n        if (length == prime)\n            return \"YES\";\n\
    \        return \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        long prime = length / 2;\n        if (length == prime)\n            return\
    \ \"YES\";\n        if (length < prime)\n            return \"NO\";\n        long\
    \ a = interval1.Item1;\n        long b = interval1.Item2;\n        long c = interval2.Item1;\n\
    \        long d = interval2.Item2;\n        long p = 1;\n        long q = prime;\n\
    \        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u\
    \ = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n      \
    \  long y = 1;\n        long z = 1;\n        long a = prime + 1;\n        long\
    \ b = prime + 1;\n        long c = prime + 1;\n        long d = prime + 1;\n \
    \       long p = 1;\n        long q = prime;\n        long r = 1;\n        long\
    \ s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n    \
    \    long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = prime + 1;\n        long b = prime + 1;\n        long c = prime\
    \ + 1;\n        long d = prime + 1;\n        long p = 1;\n        long q = prime;\n\
    \        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u\
    \ = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n      \
    \  long y = 1;\n        long z = 1;\n        long a = prime + 1;\n        long\
    \ b = prime + 1;\n        long c = prime + 1;\n        long d = prime + 1;\n \
    \       long p = 1;\n        long q = prime;\n        long r = 1;\n        long\
    \ s = 1;\n        long t = 1;\n        long u = 1;\n        long v = 1;\n    \
    \    long w = 1;\n        long x = 1;\n        long y = 1;\n        long z = 1;\n\
    \        long a = prime + 1;\n        long b = prime + 1;\n        long c = prime\
    \ + 1;\n        long d = prime + 1;\n        long p = 1;\n        long q = prime;\n\
    \        long r = 1;\n        long s = 1;\n        long t = 1;\n        long u\
    \ = 1;\n        long v = 1;\n        long w = 1;\n        long x = 1;\n      \
    \  long y = 1;\n        long z = 1;\n        long a = prime + 1;\n        long\
    \ b = prime + 1;\n        ", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        if (length\
    \ == 1) return \"YES\";\n        if (length == 2 && start == end) return \"YES\"\
    ;\n        if (length == 2 && start == end - 1) return \"YES\";\n        if (length\
    \ == 2 && start == end - 2) return \"YES\";\n        if (length == 2 && start\
    \ == end - 3) return \"YES\";\n        if (length == 2 && start == end - 4) return\
    \ \"YES\";\n        if (length == 2 && start == end - 5) return \"YES\";\n   \
    \     if (length == 2 && start == end - 6) return \"YES\";\n        if (length\
    \ == 2 && start == end - 7) return \"YES\";\n        if (length == 2 && start\
    \ == end - 8) return \"YES\";\n        if (length == 2 && start == end - 9) return\
    \ \"YES\";\n        if (length == 2 && start == end - 10) return \"YES\";\n  \
    \      if (length == 2 && start == end - 11) return \"YES\";\n        if (length\
    \ == 2 && start == end - 12) return \"YES\";\n        if (length == 2 && start\
    \ == end - 13) return \"YES\";\n        if (length == 2 && start == end - 14)\
    \ return \"YES\";\n        if (length == 2 && start == end - 15) return \"YES\"\
    ;\n        if (length == 2 && start == end - 16) return \"YES\";\n        if (length\
    \ == 2 && start == end - 17) return \"YES\";\n        if (length == 2 && start\
    \ == end - 18) return \"YES\";\n        if (length == 2 && start == end - 19)\
    \ return \"YES\";\n        if (length == 2 && start == end - 20) return \"YES\"\
    ;\n        if (length == 2 && start == end - 21) return \"YES\";\n        if (length\
    \ == 2 && start == end - 22) return \"YES\";\n        if (length == 2 && start\
    \ == end - 23) return \"YES\";\n        if (length == 2 && start == end - 24)\
    \ return \"YES\";\n        if (length == 2 && start == end - 25) return \"YES\"\
    ;\n        if (length == 2 && start == end - 26) return \"YES\";\n        if (length\
    \ == 2 && start == end - 27) return \"YES\";\n        if (length == 2 && start\
    \ == end - 28) return \"YES\";\n        if (length == 2 && start == end - 29)\
    \ return \"YES\";\n        if (length == 2 && start == end - 30) return \"YES\"\
    ;\n        if (length == 2 && start == end - 31) return \"YES\";\n        if (length\
    \ == 2 && start == end - 32) return \"YES\";\n        if (length == 2 && start\
    \ == end - 33) return \"YES\";\n        if (length == 2 && start == end - 34)\
    \ return \"YES\";\n        if (length == 2 ", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ max = (long)Math.Sqrt(length);\n        long max2 = max / 2;\n        long max3\
    \ = max * max;\n        long max4 = max3 * max;\n        long max5 = max4 * max;\n\
    \        long max6 = max5 * max;\n        long max7 = max6 * max;\n        long\
    \ max8 = max7 * max;\n        long max9 = max8 * max;\n        long max10 = max9\
    \ * max;\n        long max11 = max10 * max;\n        long max12 = max11 * max;\n\
    \        long max13 = max12 * max;\n        long max14 = max13 * max;\n      \
    \  long max15 = max14 * max;\n        long max16 = max15 * max;\n        long\
    \ max17 = max16 * max;\n        long max18 = max17 * max;\n        long max19\
    \ = max18 * max;\n        long max20 = max19 * max;\n        long max21 = max20\
    \ * max;\n        long max22 = max21 * max;\n        long max23 = max22 * max;\n\
    \        long max24 = max23 * max;\n        long max25 = max24 * max;\n      \
    \  long max26 = max25 * max;\n        long max27 = max26 * max;\n        long\
    \ max28 = max27 * max;\n        long max29 = max28 * max;\n        long max30\
    \ = max29 * max;\n        long max31 = max30 * max;\n        long max32 = max31\
    \ * max;\n        long max33 = max32 * max;\n        long max34 = max33 * max;\n\
    \        long max35 = max34 * max;\n        long max36 = max35 * max;\n      \
    \  long max37 = max36 * max;\n        long max38 = max37 * max;\n        long\
    \ max39 = max38 * max;\n        long max40 = max39 * max;\n        long max41\
    \ = max40 * max;\n        long max42 = max41 * max;\n        long max43 = max42\
    \ * max;\n        long max44", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        long max = (long)Math.Sqrt(length) + 1;\n        long max2\
    \ = max * max;\n        long max3 = max2 * max;\n        long max4 = max3 * max;\n\
    \        long max5 = max4 * max;\n        long max6 = max5 * max;\n        long\
    \ max7 = max6 * max;\n        long max8 = max7 * max;\n        long max9 = max8\
    \ * max;\n        long max10 = max9 * max;\n        long max11 = max10 * max;\n\
    \        long max12 = max11 * max;\n        long max13 = max12 * max;\n      \
    \  long max14 = max13 * max;\n        long max15 = max14 * max;\n        long\
    \ max16 = max15 * max;\n        long max17 = max16 * max;\n        long max18\
    \ = max17 * max;\n        long max19 = max18 * max;\n        long max20 = max19\
    \ * max;\n        long max21 = max20 * max;\n        long max22 = max21 * max;\n\
    \        long max23 = max22 * max;\n        long max24 = max23 * max;\n      \
    \  long max25 = max24 * max;\n        long max26 = max25 * max;\n        long\
    \ max27 = max26 * max;\n        long max28 = max27 * max;\n        long max29\
    \ = max28 * max;\n        long max30 = max29 * max;\n        long max31 = max30\
    \ * max;\n        long max32 = max31 * max;\n        long max33 = max32 * max;\n\
    \        long max34 = max33 * max;\n        long max35 = max34 * max;\n      \
    \  long max36 = max35 * max;\n        long max37 = max36 * max;\n        long\
    \ max38 = max37 * max;\n        long max39 = max38 * max;\n        long max40\
    \ = max39 * max;\n        long max41 = max40 * max;\n        long max42 = max41\
    \ * max;\n        long max43 = max42 * max;\n        long max44 = max43 * max;",
  "        long start1 = interval1.Item1;\n        long end1 = interval1.Item2;\n\
    \        long start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n\
    \        long length = end1 - start1 + end2 - start2;\n        if (length < 2)\
    \ {\n            return \"NO\";\n        }\n        bool isPrime = true;\n   \
    \     long prime = 2;\n        while (isPrime) {\n            isPrime = false;\n\
    \            long i = 2;\n            while (i < length) {\n                if\
    \ (length % i == 0) {\n                    long temp = length / i;\n         \
    \           if (temp == prime) {\n                        isPrime = true;\n  \
    \                      break;\n                    }\n                }\n    \
    \            i++;\n            }\n        }\n        if (length == prime) {\n\
    \            return \"YES\";\n        }\n        return \"NO\";", "        long\
    \ start = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        if (length == 1) return \"YES\";\n        bool isPrime\
    \ = true;\n        long n = 2;\n        while (isPrime && n <= length) {\n   \
    \         if (n % 2 == 0) {\n                isPrime = false;\n            }\n\
    \            n = n + 2;\n        }\n        if (isPrime) return \"YES\";\n   \
    \     return \"NO\";", "        long start = interval1.Item1;\n        long end\
    \ = interval1.Item2;\n        long start2 = interval2.Item1;\n        long end2\
    \ = interval2.Item2;\n        long length = end - start;\n        long length2\
    \ = end2 - start2;\n        if (length == 0) return \"NO\";\n        if (length2\
    \ == 0) return \"NO\";\n        if (length == length2) return \"YES\";\n     \
    \   long max = (long)Math.Max(length, length2);\n        long min = (long)Math.Min(length,\
    \ length2);\n        long mid = max / 2;\n        long mid2 = min / 2;\n     \
    \   long mid3 = mid / 3;\n        long mid4 = mid2 / 3;\n        long mid5 = mid3\
    \ / 3;\n        long mid6 = mid4 / 3;\n        long mid7 = mid5 / 3;\n       \
    \ long mid8 = mid6 / 3;\n        long mid9 = mid7 / 3;\n        long mid10 = mid8\
    \ / 3;\n        long mid11 = mid9 / 3;\n        long mid12 = mid10 / 3;\n    \
    \    long mid13 = mid11 / 3;\n        long mid14 = mid12 / 3;\n        long mid15\
    \ = mid13 / 3;\n        long mid16 = mid14 / 3;\n        long mid17 = mid15 /\
    \ 3;\n        long mid18 = mid16 / 3;\n        long mid19 = mid17 / 3;\n     \
    \   long mid20 = mid18 / 3;\n        long mid21 = mid19 / 3;\n        long mid22\
    \ = mid20 / 3;\n        long mid23 = mid21 / 3;\n        long mid24 = mid22 /\
    \ 3;\n        long mid25 = mid23 / 3;\n        long mid26 = mid24 / 3;\n     \
    \   long mid27 = mid25 / 3;\n        long mid28 = mid26 / 3;\n        long mid29\
    \ = mid27 / 3;\n        long mid30 = mid28 / 3;\n        long mid31 = mid29 /\
    \ 3;\n        long mid32 = mid30 / 3;\n        long mid33 = mid31 / 3;\n     \
    \   long mid34 = mid32 / 3;\n        long mid35 = mid33 / 3;\n        long mid36\
    \ = mid34 / 3;\n        long mid37 = mid35 / 3;\n        long mid38 = mid36 /\
    \ 3;\n        long mid39 = mid37 / 3;\n        long mid40 = mid38 / 3;\n     \
    \   long mid41 = mid39 / 3;\n        long mid42 = mid40 / 3;\n        long mid43\
    \ = mid", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        long\
    \ num = 2;\n        while (length >= num) {\n            if (length%num == 0)\
    \ return \"NO\";\n            num = num * 2 + 1;\n        }\n        return \"\
    YES\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n \
    \       long end = Math.Max(interval1.Item2, interval2.Item2);\n        long length\
    \ = end - start;\n        if (length == 0)\n            return \"NO\";\n     \
    \   if (length == 1)\n            return \"YES\";\n        long start2 = Math.Min(interval2.Item1,\
    \ interval1.Item1);\n        long end2 = Math.Max(interval2.Item2, interval1.Item2);\n\
    \        long length2 = end2 - start2;\n        if (length2 == 0)\n          \
    \  return \"NO\";\n        if (length2 == 1)\n            return \"YES\";\n  \
    \      long start3 = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end3 = Math.Max(interval1.Item2, interval2.Item2);\n        long length3 = end3\
    \ - start3;\n        if (length3 == 0)\n            return \"NO\";\n        if\
    \ (length3 == 1)\n            return \"YES\";\n        long start4 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end4 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length4 = end4 - start4;\n        if (length4 == 0)\n          \
    \  return \"NO\";\n        if (length4 == 1)\n            return \"YES\";\n  \
    \      long start5 = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end5 = Math.Max(interval1.Item2, interval2.Item2);\n        long length5 = end5\
    \ - start5;\n        if (length5 == 0)\n            return \"NO\";\n        if\
    \ (length5 == 1)\n            return \"YES\";\n        long start6 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end6 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length6 = end6 - start6;\n        if (length6 == 0)\n          \
    \  return \"NO\";\n        if (length6 == 1)\n            return \"YES\";\n  \
    \      long start7 = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end7 = Math.Max(interval1.Item2, interval2.Item2);\n        long length7 = end7\
    \ - start7;\n        if (length7 == 0)\n            return \"NO\";\n        if\
    \ (length7 == 1)\n            return \"YES\";\n        long start8 = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end8 = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length8 = end8 - start8;\n        if (length8 == 0)\n          \
    \  return \"NO\";\n        if (length8 == 1)\n            return \"YES\";\n  \
    \      long start9 = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end9 = Math.Max(interval1.Item2, interval2.Item2);", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        if (length == 1) return \"YES\";\n        long max = (long)Math.Sqrt(length);\n\
    \        long max2 = max * max;\n        long max3 = max2 * max;\n        long\
    \ max4 = max3 * max;\n        long max5 = max4 * max;\n        long max6 = max5\
    \ * max;\n        long max7 = max6 * max;\n        long max8 = max7 * max;\n \
    \       long max9 = max8 * max;\n        long max10 = max9 * max;\n        long\
    \ max11 = max10 * max;\n        long max12 = max11 * max;\n        long max13\
    \ = max12 * max;\n        long max14 = max13 * max;\n        long max15 = max14\
    \ * max;\n        long max16 = max15 * max;\n        long max17 = max16 * max;\n\
    \        long max18 = max17 * max;\n        long max19 = max18 * max;\n      \
    \  long max20 = max19 * max;\n        long max21 = max20 * max;\n        long\
    \ max22 = max21 * max;\n        long max23 = max22 * max;\n        long max24\
    \ = max23 * max;\n        long max25 = max24 * max;\n        long max26 = max25\
    \ * max;\n        long max27 = max26 * max;\n        long max28 = max27 * max;\n\
    \        long max29 = max28 * max;\n        long max30 = max29 * max;\n      \
    \  long max31 = max30 * max;\n        long max32 = max31 * max;\n        long\
    \ max33 = max32 * max;\n        long max34 = max33 * max;\n        long max35\
    \ = max34 * max;\n        long max36 = max35 * max;\n        long max37 = max36\
    \ * max;\n        long max38 = max37 * max;\n        long max39 = max38 * max;\n\
    \        long max40 = max39 * max;\n        long max41 = max40 * max;\n      \
    \  long max42 = max41 * max;\n        long max43 = max42 * max;\n        long\
    \ max", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n  \
    \      long end = Math.Max(interval1.Item2, interval2.Item2);\n        long length\
    \ = end - start;\n        if (length == 0)\n            return \"NO\";\n     \
    \   if (length == 1)\n            return \"YES\";\n        long max = (long)Math.Sqrt(length);\n\
    \        long min = (long)Math.Sqrt(length + 1);\n        long mid = start + (end\
    \ - start) / 2;\n        long sum = 0;\n        long count = 0;\n        while\
    \ (count < max) {\n            sum += Math.Pow(mid, count);\n            count\
    \ += 2;\n            mid = (mid + Math.Pow(mid, 2)) / 2;\n        }\n        if\
    \ (sum == length)\n            return \"YES\";\n        return \"NO\";", "   \
    \     long start = Math.Min(interval1.Item1, interval2.Item1);\n        long end\
    \ = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        if (length == 0) return \"NO\";\n        bool isPrime = true;\n     \
    \   long prime = 2;\n        while (isPrime) {\n            if (length == prime)\
    \ return \"YES\";\n            if (length == prime + 1) isPrime = false;\n   \
    \         prime += 2;\n        }\n        return \"NO\";", "        long start\
    \ = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0)\n            return \"NO\";\n        bool isPrime = true;\n        long max\
    \ = (long)Math.Sqrt(length);\n        long counter = 1;\n        while (counter\
    \ <= max) {\n            long candidate = start + counter;\n            if (candidate\
    \ % 2 == 0)\n                candidate /= 2;\n            else\n             \
    \   candidate = 3 * candidate + 1;\n            if (candidate == length)\n   \
    \             isPrime = false;\n            counter++;\n        }\n        if\
    \ (isPrime)\n            return \"YES\";\n        else\n            return \"\
    NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n  \
    \      long end = Math.Max(interval1.Item2, interval2.Item2);\n        long length\
    \ = end - start;\n        if (length == 0) return \"NO\";\n        long prime\
    \ = GetPrime(length);\n        if (prime == length) return \"YES\";\n        if\
    \ (prime == 0) return \"NO\";\n        long primeLength = prime - 1;\n       \
    \ long startPrime = GetPrime(start);\n        long endPrime = GetPrime(end);\n\
    \        if (startPrime == endPrime) return \"NO\";\n        if (startPrime ==\
    \ primeLength) return \"YES\";\n        if (endPrime == primeLength) return \"\
    YES\";\n        long startPrimeLength = startPrime - 1;\n        long endPrimeLength\
    \ = endPrime - 1;\n        long startEndPrime = startPrimeLength + endPrimeLength;\n\
    \        long startEndPrimeLength = startEndPrime - 1;\n        long startPrimePrime\
    \ = startPrimeLength + primeLength;\n        long startPrimePrimeLength = startPrimePrime\
    \ - 1;\n        long endPrimePrime = endPrimeLength + primeLength;\n        long\
    \ endPrimePrimeLength = endPrimePrime - 1;\n        long startEndPrimePrime =\
    \ startEndPrimeLength + primeLength;\n        long startEndPrimePrimeLength =\
    \ startEndPrimePrime - 1;\n        long startPrimePrimePrime = startPrimePrimeLength\
    \ + primeLength;\n        long startPrimePrimePrimeLength = startPrimePrimePrime\
    \ - 1;\n        long endPrimePrimePrime = endPrimePrimeLength + primeLength;\n\
    \        long endPrimePrimePrimeLength = endPrimePrimePrime - 1;\n        long\
    \ startEndPrimePrimePrime = startEndPrimePrimeLength + primeLength;\n        long\
    \ startEndPrimePrimePrimeLength = startEndPrimePrimePrime - 1;\n        long startPrimePrimePrimePrime\
    \ = startPrimePrimePrimeLength + primeLength;\n        long startPrimePrimePrimePrimeLength\
    \ = startPrimePrimePrimePrime - 1;\n        long endPrimePrimePrimePrime = endPrimePrimePrimeLength\
    \ + primeLength;\n        long endPrimePrimePri", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ max = (long)Math.Sqrt(length);\n        long min = (long)Math.Sqrt(length +\
    \ 1);\n        long mid = (start + end) / 2;\n        bool isPrime = true;\n \
    \       bool isPrime2 = true;\n        long prime = start;\n        long prime2\
    \ = end;\n        while (prime < max) {\n            isPrime = true;\n       \
    \     prime2 = prime;\n            while (prime2 < max) {\n                if\
    \ (prime % prime2 == 0) {\n                    isPrime = false;\n            \
    \        break;\n                }\n                prime2 += 1;\n           \
    \ }\n            if (isPrime) {\n                isPrime2 = true;\n          \
    \      while (prime2 < max) {\n                    if (prime % prime2 == 0) {\n\
    \                        isPrime2 = false;\n                        break;\n \
    \                   }\n                    prime2 += 1;\n                }\n \
    \               if (isPrime2) {\n                    isPrime = true;\n       \
    \             prime += 1;\n                    prime2 -= 1;\n                }\n\
    \            }\n        }\n        if (isPrime)\n            return \"YES\";\n\
    \        else\n            return \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        long prime = length / 2;\n        if (length == prime)\n  \
    \          return \"YES\";\n        if (length < prime)\n            return \"\
    NO\";\n        long a = interval1.Item1;\n        long b = interval1.Item2;\n\
    \        long c = interval2.Item1;\n        long d = interval2.Item2;\n      \
    \  long m = Math.Min(a, b);\n        long n = Math.Max(a, b);\n        long p\
    \ = Math.Min(c, d);\n        long q = Math.Max(c, d);\n        long r = Math.Min(m,\
    \ n);\n        long s = Math.Max(m, n);\n        long t = Math.Min(p, q);\n  \
    \      long u = Math.Max(p, q);\n        long v = Math.Min(r, s);\n        long\
    \ w = Math.Max(r, s);\n        long x = Math.Min(t, u);\n        long y = Math.Max(t,\
    \ u);\n        long z = Math.Min(v, w);\n        long a = Math.Min(x, y);\n  \
    \      long b = Math.Max(x, y);\n        long c = Math.Min(z, a);\n        long\
    \ d = Math.Max(z, a);\n        long m = Math.Min(a, b);\n        long n = Math.Max(a,\
    \ b);\n        long p = Math.Min(c, d);\n        long q = Math.Max(c, d);\n  \
    \      long r = Math.Min(m, n);\n        long s = Math.Max(m, n);\n        long\
    \ t = Math.Min(p, q);\n        long u = Math.Max(p, q);\n        long v = Math.Min(r,\
    \ s);\n        long w = Math.Max(r, s);\n        long x = Math.Min(t, u);\n  \
    \      long y = Math.Max(t, u);\n        long z = Math.Min(v, w);\n        long\
    \ a = Math.Min(x, y);\n        long b = Math.Max(x, y);\n        long c = Math.Min(z,\
    \ a);\n        long d = Math.Max(z, a);\n        long m = Math.Min(a, b);\n  \
    \      long n = Math.Max(a, b);\n        long p = Math.Min(c, d);\n        long\
    \ q = Math.Max(c, d);\n        long r = Math.Min(m, n);\n        long s = Math.Max(m,\
    \ n);\n        long t = Math.Min(p, q);\n        long u = Math.Max(p, q);\n  \
    \      long v = Math.Min(r, s);\n        long w = Math.Max(r, s);\n        long\
    \ x = Math.Min(t, u);\n        long y = Math.Max(t, u);\n        long z = Math.Min(v, ",
  "        long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0) return \"NO\";\n        long prime = Prime(length);\n\
    \        if (prime == length) return \"YES\";\n        return \"NO\";", "    \
    \    long start = Math.Max(interval1.Item1, interval2.Item1);\n        long end\
    \ = Math.Min(interval1.Item2, interval2.Item2);\n        long length = end - start;\n\
    \        if (length == 0) return \"NO\";\n        long inter = start + (end -\
    \ start) / 2;\n        bool isPrime = true;\n        long prime = start;\n   \
    \     while (prime < inter) {\n            if (IsPrime(prime)) {\n           \
    \     isPrime = true;\n            } else {\n                isPrime = false;\n\
    \                break;\n            }\n            prime++;\n        }\n    \
    \    if (isPrime) return \"YES\";\n        else return \"NO\";", "        long\
    \ start = interval1.Item1;\n        long end = interval1.Item2;\n        long\
    \ start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n        long\
    \ length = end - start;\n        long length2 = end2 - start2;\n        if (length\
    \ == 0 || length2 == 0) {\n            return \"NO\";\n        }\n        long\
    \ length3 = length * length2;\n        long length4 = length3 * length;\n    \
    \    long length5 = length4 * length2;\n        long length6 = length5 * length;\n\
    \        long length7 = length6 * length2;\n        long length8 = length7 * length;\n\
    \        long length9 = length8 * length2;\n        long length10 = length9 *\
    \ length;\n        long length11 = length10 * length2;\n        long length12\
    \ = length11 * length;\n        long length13 = length12 * length2;\n        long\
    \ length14 = length13 * length;\n        long length15 = length14 * length2;\n\
    \        long length16 = length15 * length;\n        long length17 = length16\
    \ * length2;\n        long length18 = length17 * length;\n        long length19\
    \ = length18 * length2;\n        long length20 = length19 * length;\n        long\
    \ length21 = length20 * length2;\n        long length22 = length21 * length;\n\
    \        long length23 = length22 * length2;\n        long length24 = length23\
    \ * length;\n        long length25 = length24 * length2;\n        long length26\
    \ = length25 * length;\n        long length27 = length26 * length2;\n        long\
    \ length28 = length27 * length;\n        long length29 = length28 * length2;\n\
    \        long length30 = length29 * length;\n        long length31 = length30\
    \ * length2;\n        long length32 = length31 * length;\n        long length33\
    \ = length32 * length2;\n        long length34 = length33 * length;\n        long\
    \ length35 = length34 * length2;\n        long length36 = length35 * length;\n\
    \        long length37 = length36 * length2;\n        long length38 = length37\
    \ * length;\n        long length39 = length38 * length2;\n        long length40\
    \ = length39 * length;\n        long length41 = length40 * length2;\n        long\
    \ length42 = length41 * length;\n        long length43 = length42 * length2;\n\
    \        long length44 = length43 * length;\n        long length45 = length44\
    \ * length2;\n        long length46 = length45 * length;\n        long length",
  "        long start = Math.Max(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Min(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0) return \"NO\";\n        if (length == 1)\
    \ return \"YES\";\n        long prime = Prime(length);\n        if (prime == length)\
    \ return \"YES\";\n        return \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long sum = 0;\n        long product = 1;\n        for (long i = start;\
    \ i <= end; i++) {\n            sum += i;\n            product *= i;\n       \
    \ }\n        if (sum == 0 || product == 1) return \"NO\";\n        long p = 2;\n\
    \        while (p < length) {\n            if (product % p == 0) return \"NO\"\
    ;\n            p++;\n        }\n        return \"YES\";", "        long start\
    \ = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0)\n            return \"NO\";\n        if (length == 1)\n            return\
    \ \"YES\";\n        long max = (long)Math.Sqrt(length);\n        long mid = start\
    \ + (end - start) / 2;\n        long count = 0;\n        long sum = 0;\n     \
    \   while (start <= end) {\n            long mid = start + (end - start) / 2;\n\
    \            sum += Math.Abs(mid - mid);\n            if (sum > max)\n       \
    \         max = sum;\n            count++;\n            start = mid + 1;\n   \
    \     }\n        if (count % 2 == 0)\n            return \"YES\";\n        return\
    \ \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length < 2) return \"NO\";\n        bool\
    \ isPrime = true;\n        for (int i = 2; i <= Math.Sqrt(length); i++) {\n  \
    \          if (length % i == 0) {\n                isPrime = false;\n        \
    \        break;\n            }\n        }\n        if (isPrime) return \"YES\"\
    ;\n        return \"NO\";", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        if (length\
    \ == 1) return \"YES\";\n        long start2 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end2 = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length2 = end2 - start2;\n        if (length2 == 0) return \"NO\";\n       \
    \ if (length2 == 1) return \"YES\";\n        long start3 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end3 = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length3 = end3 - start3;\n        if (length3 == 0) return \"NO\"\
    ;\n        if (length3 == 1) return \"YES\";\n        long start4 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end4 = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length4 = end4 - start4;\n        if (length4 == 0) return \"NO\"\
    ;\n        if (length4 == 1) return \"YES\";\n        long start5 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end5 = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length5 = end5 - start5;\n        if (length5 == 0) return \"NO\"\
    ;\n        if (length5 == 1) return \"YES\";\n        long start6 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end6 = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length6 = end6 - start6;\n        if (length6 == 0) return \"NO\"\
    ;\n        if (length6 == 1) return \"YES\";\n        long start7 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end7 = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length7 = end7 - start7;\n        if (length7 == 0) return \"NO\"\
    ;\n        if (length7 == 1) return \"YES\";\n        long start8 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end8 = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length8 = end8 - start8;\n        if (length8 == 0) return \"NO\"\
    ;\n        if (length8 == 1) return \"YES\";\n        long start9 = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end9 = Math.Min(interval1.Item2, interval2.Item2);",
  "        long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0) return \"NO\";\n        if (length == 1)\
    \ return \"YES\";\n        long mid = start + (end - start) / 2;\n        bool\
    \ isPrime = true;\n        long prime = 2;\n        while (isPrime) {\n      \
    \      if (length == prime) {\n                isPrime = false;\n            }\
    \ else {\n                prime++;\n            }\n        }\n        return isPrime\
    \ ? \"YES\" : \"NO\";", "        long start = interval1.Item1;\n        long end\
    \ = interval1.Item2;\n        long start2 = interval2.Item1;\n        long end2\
    \ = interval2.Item2;\n        long length = end - start;\n        long length2\
    \ = end2 - start2;\n        if (length == 0 || length2 == 0) {\n            return\
    \ \"NO\";\n        }\n        long length = length * length2;\n        long length3\
    \ = length / 3;\n        long length4 = length3 / 4;\n        long length5 = length4\
    \ / 5;\n        long length6 = length5 / 6;\n        long length7 = length6 /\
    \ 7;\n        long length8 = length7 / 8;\n        long length9 = length8 / 9;\n\
    \        long length10 = length9 / 10;\n        long length11 = length10 / 11;\n\
    \        long length12 = length11 / 12;\n        long length13 = length12 / 13;\n\
    \        long length14 = length13 / 14;\n        long length15 = length14 / 15;\n\
    \        long length16 = length15 / 16;\n        long length17 = length16 / 17;\n\
    \        long length18 = length17 / 18;\n        long length19 = length18 / 19;\n\
    \        long length20 = length19 / 20;\n        long length21 = length20 / 21;\n\
    \        long length22 = length21 / 22;\n        long length23 = length22 / 23;\n\
    \        long length24 = length23 / 24;\n        long length25 = length24 / 25;\n\
    \        long length26 = length25 / 26;\n        long length27 = length26 / 27;\n\
    \        long length28 = length27 / 28;\n        long length29 = length28 / 29;\n\
    \        long length30 = length29 / 30;\n        long length31 = length30 / 31;\n\
    \        long length32 = length31 / 32;\n        long length33 = length32 / 33;\n\
    \        long length34 = length33 / 34;\n        long length35 = length34 / 35;\n\
    \        long length36 = length35 / 36;\n        long length37 = length36 / 37;\n\
    \        long length38 = length37 / 38;\n        long length39 = length38 / 39;\n\
    \        long length40 = length39 / 40;\n        long length41 = length40 / 41;\n\
    \        long length42 = length41 / 42;\n        long length43 = length42 / 43;\n\
    \        long length44 = length43 / 44;\n        long length45 = length", "  \
    \      long start = Math.Min(interval1.Item1, interval2.Item1);\n        long\
    \ end = Math.Max(interval1.Item2, interval2.Item2);\n        long length = end\
    \ - start;\n        if (length == 0)\n            return \"NO\";\n        long\
    \ inter = start + (end - start) / 2;\n        bool isPrime = true;\n        long\
    \ prime = 2;\n        while (prime * prime <= inter) {\n            if (inter\
    \ % prime == 0) {\n                isPrime = false;\n                break;\n\
    \            }\n            prime++;\n        }\n        if (isPrime)\n      \
    \      return \"YES\";\n        else\n            return \"NO\";", "        long\
    \ start = Math.Max(interval1.Item1, interval2.Item1);\n        long end = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        if (length == 1) return \"YES\";\n        if (length\
    \ == 2 && start == end) return \"YES\";\n        if (length == 2 && start == end\
    \ - 1) return \"YES\";\n        if (length == 2 && start == end - 2) return \"\
    YES\";\n        if (length == 2 && start == end - 3) return \"YES\";\n       \
    \ if (length == 2 && start == end - 4) return \"YES\";\n        if (length ==\
    \ 2 && start == end - 5) return \"YES\";\n        if (length == 2 && start ==\
    \ end - 6) return \"YES\";\n        if (length == 2 && start == end - 7) return\
    \ \"YES\";\n        if (length == 2 && start == end - 8) return \"YES\";\n   \
    \     if (length == 2 && start == end - 9) return \"YES\";\n        if (length\
    \ == 2 && start == end - 10) return \"YES\";\n        if (length == 2 && start\
    \ == end - 11) return \"YES\";\n        if (length == 2 && start == end - 12)\
    \ return \"YES\";\n        if (length == 2 && start == end - 13) return \"YES\"\
    ;\n        if (length == 2 && start == end - 14) return \"YES\";\n        if (length\
    \ == 2 && start == end - 15) return \"YES\";\n        if (length == 2 && start\
    \ == end - 16) return \"YES\";\n        if (length == 2 && start == end - 17)\
    \ return \"YES\";\n        if (length == 2 && start == end - 18) return \"YES\"\
    ;\n        if (length == 2 && start == end - 19) return \"YES\";\n        if (length\
    \ == 2 && start == end - 20) return \"YES\";\n        if (length == 2 && start\
    \ == end - 21) return \"YES\";\n        if (length == 2 && start == end - 22)\
    \ return \"YES\";\n        if (length == 2 && start == end - 23) return \"YES\"\
    ;\n        if (length == 2 && start == end - 24) return \"YES\";\n        if (length\
    \ == 2 && start == end - 25) return \"YES\";\n        if (length == 2 && start\
    \ == end - 26) return \"YES\";\n        if (length == 2 && start == end - 27)\
    \ return \"YES\";\n        if (length == 2 && start == end - 28) return \"YES\"\
    ;\n        if (length == 2 && start == end - 29) return \"YES\";\n        if (length\
    \ == 2 && start == end - 30) return \"YES\";\n        if (length == 2 && start\
    \ == end - 31) return \"YES\";\n        if (length == 2 && start == end - 32)\
    \ return \"YES\";\n        if (length == 2 && start == end - 33) return \"YES\"\
    ;\n        if (length == 2 && start == end - 34) return \"YES\";\n        if (length\
    \ == 2 ", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        if (length == 1)\n            return \"YES\";\n        long mid = (start\
    \ + end) / 2;\n        if (IsPrime(mid))\n            return \"YES\";\n      \
    \  return \"NO\";", "        long start = interval1.Item1;\n        long end =\
    \ interval1.Item2;\n        long start2 = interval2.Item1;\n        long end2\
    \ = interval2.Item2;\n        long length = end - start;\n        long length2\
    \ = end2 - start2;\n        if (length2 == 0) {\n            return \"NO\";\n\
    \        }\n        if (length2 == 1) {\n            return \"YES\";\n       \
    \ }\n        long length3 = length * length2;\n        long length4 = length *\
    \ length;\n        long length5 = length * length3;\n        long length6 = length\
    \ * length4;\n        long length7 = length * length5;\n        long length8 =\
    \ length * length6;\n        long length9 = length * length7;\n        long length10\
    \ = length * length8;\n        long length11 = length * length9;\n        long\
    \ length12 = length * length10;\n        long length13 = length * length11;\n\
    \        long length14 = length * length12;\n        long length15 = length *\
    \ length13;\n        long length16 = length * length14;\n        long length17\
    \ = length * length15;\n        long length18 = length * length16;\n        long\
    \ length19 = length * length17;\n        long length20 = length * length18;\n\
    \        long length21 = length * length19;\n        long length22 = length *\
    \ length20;\n        long length23 = length * length21;\n        long length24\
    \ = length * length22;\n        long length25 = length * length23;\n        long\
    \ length26 = length * length24;\n        long length27 = length * length25;\n\
    \        long length28 = length * length26;\n        long length29 = length *\
    \ length27;\n        long length30 = length * length28;\n        long length31\
    \ = length * length29;\n        long length32 = length * length30;\n        long\
    \ length33 = length * length31;\n        long length34 = length * length32;\n\
    \        long length35 = length * length33;\n        long length36 = length *\
    \ length34;\n        long length37 = length * length35;\n        long length38\
    \ = length * length36;\n        long length39 = length * length37;\n        long\
    \ length40 = length * length38;\n        long length41 = length * length39;\n\
    \        long length42 = length * length40;\n        long length43 = length *\
    \ length41;\n        long length44 = length * length42;\n        long length45\
    \ = length * length43", "        long start1 = interval1.Item1;\n        long\
    \ end1 = interval1.Item2;\n        long start2 = interval2.Item1;\n        long\
    \ end2 = interval2.Item2;\n        long length = end1 - start1 + end2 - start2;\n\
    \        if (length == 0) return \"NO\";\n        long start = (start1 < start2)\
    \ ? start1 : start2;\n        long end = (end1 < end2) ? end1 : end2;\n      \
    \  long middle = start + (end - start) / 2;\n        long count = 0;\n       \
    \ for (long i = start; i <= middle; i++) {\n            if (IsPrime(i)) {\n  \
    \              count++;\n            }\n        }\n        if (count == length)\
    \ return \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        bool isPrime = true;\n        long prime = 2;\n        while (isPrime)\
    \ {\n            if (length == prime) break;\n            if (length % prime ==\
    \ 0) isPrime = false;\n            prime++;\n        }\n        if (isPrime) return\
    \ \"YES\";\n        return \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ max = (long)Math.Sqrt(length);\n        long min = (long)Math.Sqrt(length /\
    \ 2);\n        long mid = start + (end - start) / 2;\n        long count = 0;\n\
    \        long prime = 1;\n        bool isPrime = true;\n        while (count <\
    \ max) {\n            long test = (long)Math.Sqrt(prime);\n            if (test\
    \ == mid)\n                prime++;\n            else\n                prime =\
    \ test;\n            long test2 = (long)Math.Sqrt(prime);\n            if (test2\
    \ == mid)\n                prime++;\n            else\n                prime =\
    \ test2;\n            long test3 = (long)Math.Sqrt(prime);\n            if (test3\
    \ == mid)\n                prime++;\n            else\n                prime =\
    \ test3;\n            long test4 = (long)Math.Sqrt(prime);\n            if (test4\
    \ == mid)\n                prime++;\n            else\n                prime =\
    \ test4;\n            long test5 = (long)Math.Sqrt(prime);\n            if (test5\
    \ == mid)\n                prime++;\n            else\n                prime =\
    \ test5;\n            long test6 = (long)Math.Sqrt(prime);\n            if (test6\
    \ == mid)\n                prime++;\n            else\n                prime =\
    \ test6;\n            long test7 = (long)Math.Sqrt(prime);\n            if (test7\
    \ == mid)\n                prime++;\n            else\n                prime =\
    \ test7;\n            long test8 = (long)Math.Sqrt(prime);\n            if (test8\
    \ == mid)\n                prime++;\n            else\n                prime =\
    \ test8;\n            long test9 = (long)Math.Sqrt(prime);\n            if (test9\
    \ == mid)\n                prime++;\n            else\n                prime =\
    \ test9;\n            long test10 = (long)Math.Sqrt(prime);\n            if (test10\
    \ == mid)\n                prime++;\n            else\n                prime =\
    \ test10;\n            long test11 = (long)Math.Sqrt(prime);\n            if (test11\
    \ == mid)\n                prime++;\n            else\n                prime =\
    \ test11;\n            long test12 = (long)Math.Sqrt(prime);\n            if (test12\
    \ == mid)\n                prime++;\n            else\n                prime =\
    \ test12;\n            long test13 = (long)Math.Sqrt(", "        long start =\
    \ Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        long max = (long)Math.Sqrt(length) + 1;\n       \
    \ long max2 = max / 2;\n        long max3 = max * max;\n        long max4 = max3\
    \ * max;\n        long max5 = max4 * max;\n        long max6 = max5 * max;\n \
    \       long max7 = max6 * max;\n        long max8 = max7 * max;\n        long\
    \ max9 = max8 * max;\n        long max10 = max9 * max;\n        long max11 = max10\
    \ * max;\n        long max12 = max11 * max;\n        long max13 = max12 * max;\n\
    \        long max14 = max13 * max;\n        long max15 = max14 * max;\n      \
    \  long max16 = max15 * max;\n        long max17 = max16 * max;\n        long\
    \ max18 = max17 * max;\n        long max19 = max18 * max;\n        long max20\
    \ = max19 * max;\n        long max21 = max20 * max;\n        long max22 = max21\
    \ * max;\n        long max23 = max22 * max;\n        long max24 = max23 * max;\n\
    \        long max25 = max24 * max;\n        long max26 = max25 * max;\n      \
    \  long max27 = max26 * max;\n        long max28 = max27 * max;\n        long\
    \ max29 = max28 * max;\n        long max30 = max29 * max;\n        long max31\
    \ = max30 * max;\n        long max32 = max31 * max;\n        long max33 = max32\
    \ * max;\n        long max34 = max33 * max;\n        long max35 = max34 * max;\n\
    \        long max36 = max35 * max;\n        long max37 = max36 * max;\n      \
    \  long max38 = max37 * max;\n        long max39 = max38 * max;\n        long\
    \ max40 = max39 * max;\n        long max41 = max40 * max;\n        long max42\
    \ = max41 * max;\n        long max43 = max42 * max;\n        long max44 = max43\
    \ * max;\n", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        long prime = length / 2;\n        if (length == prime)\n            return\
    \ \"YES\";\n        bool isPrime = true;\n        long i = 2;\n        while (i\
    \ < prime) {\n            if (length % i == 0)\n                isPrime = false;\n\
    \            i++;\n        }\n        if (isPrime)\n            return \"YES\"\
    ;\n        return \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        bool\
    \ isPrime = true;\n        long prime = 2;\n        while (isPrime) {\n      \
    \      if (length == prime) {\n                isPrime = false;\n            }\
    \ else {\n                length += prime;\n                prime += 2;\n    \
    \        }\n        }\n        if (length == prime) return \"YES\";\n        return\
    \ \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        if (length\
    \ == 1) return \"YES\";\n        if (length == 2 && Math.Abs(interval1.Item1 -\
    \ interval2.Item1) == 1) return \"YES\";\n        if (length == 2 && Math.Abs(interval1.Item1\
    \ - interval2.Item1) == -1) return \"YES\";\n        if (length == 2 && Math.Abs(interval1.Item1\
    \ - interval2.Item1) == 1) return \"YES\";\n        if (length == 2 && Math.Abs(interval1.Item1\
    \ - interval2.Item1) == -1) return \"YES\";\n        if (length == 3 && Math.Abs(interval1.Item1\
    \ - interval2.Item1) == 1) return \"YES\";\n        if (length == 3 && Math.Abs(interval1.Item1\
    \ - interval2.Item1) == -1) return \"YES\";\n        if (length == 3 && Math.Abs(interval1.Item1\
    \ - interval2.Item1) == 1) return \"YES\";\n        if (length == 3 && Math.Abs(interval1.Item1\
    \ - interval2.Item1) == -1) return \"YES\";\n        if (length == 4 && Math.Abs(interval1.Item1\
    \ - interval2.Item1) == 1) return \"YES\";\n        if (length == 4 && Math.Abs(interval1.Item1\
    \ - interval2.Item1) == -1) return \"YES\";\n        if (length == 4 && Math.Abs(interval1.Item1\
    \ - interval2.Item1) == 1) return \"YES\";\n        if (length == 4 && Math.Abs(interval1.Item1\
    \ - interval2.Item1) == -1) return \"YES\";\n        if (length == 5 && Math.Abs(interval1.Item1\
    \ - interval2.Item1) == 1) return \"YES\";\n        if (length == 5 && Math.Abs(interval1.Item1\
    \ - interval2.Item1) == -1) return \"YES\";\n        if (length == 5 && Math.Abs(interval1.Item1\
    \ - interval2.Item1) == 1) return \"YES\";\n        if (length == 5 && Math.Abs(interval1.Item1\
    \ - interval2.Item1) == -1) return \"YES\";\n        if (length == 6 && Math.Abs(interval1.Item1\
    \ - interval2.Item1) == 1) return \"YES\";\n        if (length == 6 && Math.Abs(interval1.Item1\
    \ - interval2.Item1) == -1) return \"YES\";\n        if (length == 6 && Math.Abs(interval1.Item1\
    \ - interval2.Item1) == 1) return \"YES\";\n        if (length == 6 && Math.Abs(interval1.Item1\
    \ - interval2.Item1) == -1) return \"YES\";\n        if (length == 7 && Math.Abs(interval1.Item1\
    \ - interval2.Item1) == 1) return \"YES\";\n        if (length == 7 && Math.Abs(interval1.Item1\
    \ - interval2.Item1) == -1) return ", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        long product = length * length;\n        long sum = 0;\n  \
    \      long prime = 1;\n        while (prime <= product) {\n            long num\
    \ = Math.Sqrt(prime);\n            sum += num;\n            prime += num;\n  \
    \      }\n        long num1 = Math.Sqrt(sum);\n        long num2 = Math.Sqrt(product);\n\
    \        long num3 = Math.Sqrt(product - num1);\n        long num4 = Math.Sqrt(product\
    \ - num2);\n        long num5 = Math.Sqrt(product - num3);\n        long num6\
    \ = Math.Sqrt(product - num4);\n        long num7 = Math.Sqrt(product - num5);\n\
    \        long num8 = Math.Sqrt(product - num6);\n        long num9 = Math.Sqrt(product\
    \ - num7);\n        long num10 = Math.Sqrt(product - num8);\n        long num11\
    \ = Math.Sqrt(product - num9);\n        long num12 = Math.Sqrt(product - num10);\n\
    \        long num13 = Math.Sqrt(product - num11);\n        long num14 = Math.Sqrt(product\
    \ - num12);\n        long num15 = Math.Sqrt(product - num13);\n        long num16\
    \ = Math.Sqrt(product - num14);\n        long num17 = Math.Sqrt(product - num15);\n\
    \        long num18 = Math.Sqrt(product - num16);\n        long num19 = Math.Sqrt(product\
    \ - num17);\n        long num20 = Math.Sqrt(product - num18);\n        long num21\
    \ = Math.Sqrt(product - num19);\n        long num22 = Math.Sqrt(product - num20);\n\
    \        long num23 = Math.Sqrt(product - num21);\n        long num24 = Math.Sqrt(product\
    \ - num22);\n        long num25 = Math.Sqrt(product - num23);\n        long num26\
    \ = Math.Sqrt(product - num24);\n        long num27 = Math.Sqrt(product - num25);\n\
    \        long num28 = Math.Sqrt(product - num26);\n        long num29 = Math.Sqrt(product\
    \ - num27);\n        long num30 = Math.Sqrt(product - num28);\n        long num31\
    \ = Math.Sqrt(product - num29);\n        long num32 = Math.Sqrt(", "        long\
    \ start = Math.Min(interval1.Item1, interval2.Item1);\n        long end = Math.Max(interval1.Item2,\
    \ interval2.Item2);\n        long length = end - start;\n        if (length ==\
    \ 0) return \"NO\";\n        long num = 0;\n        long num2 = 0;\n        long\
    \ num3 = 0;\n        long num4 = 0;\n        long num5 = 0;\n        long num6\
    \ = 0;\n        long num7 = 0;\n        long num8 = 0;\n        long num9 = 0;\n\
    \        long num10 = 0;\n        long num11 = 0;\n        long num12 = 0;\n \
    \       long num13 = 0;\n        long num14 = 0;\n        long num15 = 0;\n  \
    \      long num16 = 0;\n        long num17 = 0;\n        long num18 = 0;\n   \
    \     long num19 = 0;\n        long num20 = 0;\n        long num21 = 0;\n    \
    \    long num22 = 0;\n        long num23 = 0;\n        long num24 = 0;\n     \
    \   long num25 = 0;\n        long num26 = 0;\n        long num27 = 0;\n      \
    \  long num28 = 0;\n        long num29 = 0;\n        long num30 = 0;\n       \
    \ long num31 = 0;\n        long num32 = 0;\n        long num33 = 0;\n        long\
    \ num34 = 0;\n        long num35 = 0;\n        long num36 = 0;\n        long num37\
    \ = 0;\n        long num38 = 0;\n        long num39 = 0;\n        long num40 =\
    \ 0;\n        long num41 = 0;\n        long num42 = 0;\n        long num43 = 0;\n\
    \        long num44 = 0;\n        long num45 = 0;\n        long num46 = 0;\n \
    \       long num47 = 0;\n        long num48 = 0;\n        long num49 = 0;\n  \
    \      long num50 = 0;\n        long num51 = 0;\n        long num52 = 0;\n   \
    \     long num53 = 0;\n        long num54 = 0;\n        long num55 = 0;\n    \
    \    long num56 = 0;\n        long num57 = 0;\n        long num58 = 0;\n     \
    \   long num59 = 0;\n        long num60 = 0;\n        long num61 = 0;\n      \
    \  long num62 = 0;\n        long num63 = 0;\n        long num64 = 0;\n       \
    \ long num65 = 0;\n        long num66 = 0;\n        long num67 = 0;\n        long\
    \ num68 = 0;\n        long num69 = 0;\n        long num70 = 0;\n        long num71\
    \ = 0;\n        long num72 = 0;\n        long num73 = 0;\n        long num74 =\
    \ 0;\n        long num75 = 0;\n        long num76 = 0;\n        long num77 = 0;\n\
    \        long num78 = 0;\n        long num79", "        long start = interval1.Item1;\n\
    \        long end = interval1.Item2;\n        long start2 = interval2.Item1;\n\
    \        long end2 = interval2.Item2;\n        long length = end - start;\n  \
    \      long length2 = end2 - start2;\n        if (length2 == 0) {\n          \
    \  return \"NO\";\n        }\n        long length3 = length / length2;\n     \
    \   long length4 = length % length2;\n        long length5 = length3 / length4;\n\
    \        long length6 = length3 % length4;\n        long length7 = length5 / length6;\n\
    \        long length8 = length5 % length6;\n        long length9 = length7 / length8;\n\
    \        long length10 = length7 % length8;\n        long length11 = length9 /\
    \ length10;\n        long length12 = length9 % length10;\n        long length13\
    \ = length11 / length12;\n        long length14 = length11 % length12;\n     \
    \   long length15 = length13 / length14;\n        long length16 = length13 % length14;\n\
    \        long length17 = length15 / length16;\n        long length18 = length15\
    \ % length16;\n        long length19 = length17 / length18;\n        long length20\
    \ = length17 % length18;\n        long length21 = length19 / length20;\n     \
    \   long length22 = length19 % length20;\n        long length23 = length21 / length22;\n\
    \        long length24 = length21 % length22;\n        long length25 = length23\
    \ / length24;\n        long length26 = length23 % length24;\n        long length27\
    \ = length25 / length26;\n        long length28 = length25 % length26;\n     \
    \   long length29 = length27 / length28;\n        long length30 = length27 % length28;\n\
    \        long length31 = length29 / length30;\n        long length32 = length29\
    \ % length30;\n        long length33 = length31 / length32;\n        long length34\
    \ = length31 % length32;\n        long length35 = length33 / length34;\n     \
    \   long length36 = length33 % length34;\n        long length37 = length35 / length36;\n\
    \        long length38 = length35 % length36;\n        long length39 = length37\
    \ / length38;\n        long length40 = length37 % length38;\n        long length41\
    \ = length39 / length40;\n        long length42 = length39 % length40;\n     \
    \   long ", "        long start = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0) return \"NO\";\n        if (length\
    \ == 1) return \"YES\";\n        long max = (long)Math.Sqrt(length);\n       \
    \ long mid = start + (end - start) / 2;\n        bool isPrime = true;\n      \
    \  long prime = 2;\n        while (isPrime && prime <= max) {\n            isPrime\
    \ = IsPrime(mid);\n            prime++;\n        }\n        return isPrime ? \"\
    YES\" : \"NO\";", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n\
    \        long end = Math.Max(interval1.Item2, interval2.Item2);\n        long\
    \ length = end - start;\n        if (length == 0)\n            return \"NO\";\n\
    \        long prime = GetPrime(length);\n        if (prime == length)\n      \
    \      return \"YES\";\n        return \"NO\";", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ mid = start + (end - start) / 2;\n        bool isPrime = true;\n        long\
    \ prime = start;\n        while (prime <= end) {\n            if (IsPrime(prime))\
    \ {\n                isPrime = true;\n                break;\n            }\n\
    \            prime += 1;\n        }\n        if (isPrime)\n            return\
    \ \"YES\";\n        return \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ start2 = Math.Max(interval1.Item1, interval2.Item1);\n        long end2 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length2 = end2 - start2;\n        if (length2\
    \ == 0)\n            return \"NO\";\n        if (length2 == 1)\n            return\
    \ \"YES\";\n        long start3 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end3 = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length3 = end3 - start3;\n        if (length3 == 0)\n            return \"NO\"\
    ;\n        if (length3 == 1)\n            return \"YES\";\n        long start4\
    \ = Math.Max(interval1.Item1, interval2.Item1);\n        long end4 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length4 = end4 - start4;\n        if (length4\
    \ == 0)\n            return \"NO\";\n        if (length4 == 1)\n            return\
    \ \"YES\";\n        long start5 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end5 = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length5 = end5 - start5;\n        if (length5 == 0)\n            return \"NO\"\
    ;\n        if (length5 == 1)\n            return \"YES\";\n        long start6\
    \ = Math.Max(interval1.Item1, interval2.Item1);\n        long end6 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length6 = end6 - start6;\n        if (length6\
    \ == 0)\n            return \"NO\";\n        if (length6 == 1)\n            return\
    \ \"YES\";\n        long start7 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end7 = Math.Min(interval1.Item2, interval2.Item2);\n        long\
    \ length7 = end7 - start7;\n        if (length7 == 0)\n            return \"NO\"\
    ;\n        if (length7 == 1)\n            return \"YES\";\n        long start8\
    \ = Math.Max(interval1.Item1, interval2.Item1);\n        long end8 = Math.Min(interval1.Item2,\
    \ interval2.Item2);\n        long length8 = end8 - start8;\n        if (length8\
    \ == 0)\n            return \"NO\";\n        if (length8 == 1)\n            return\
    \ \"YES\";\n        long start9 = Math.Max(interval1.Item1, interval2.Item1);\n\
    \        long end9 = Math.Min(interval1.Item2, interval2.Item2);", "        long\
    \ start = interval1.Item1;\n        long end = interval1.Item2;\n        long\
    \ start2 = interval2.Item1;\n        long end2 = interval2.Item2;\n        long\
    \ length = end - start;\n        long length2 = end2 - start2;\n        if (length2\
    \ == 0) {\n            return \"NO\";\n        }\n        long length3 = length\
    \ * length2;\n        long length4 = length2 * length;\n        long length5 =\
    \ length3 * length2;\n        long length6 = length2 * length3;\n        long\
    \ length7 = length3 * length;\n        long length8 = length2 * length2;\n   \
    \     long length9 = length3 * length3;\n        long length10 = length4 * length2;\n\
    \        long length11 = length2 * length4;\n        long length12 = length3 *\
    \ length4;\n        long length13 = length4 * length;\n        long length14 =\
    \ length2 * length3;\n        long length15 = length3 * length2;\n        long\
    \ length16 = length2 * length4;\n        long length17 = length3 * length3;\n\
    \        long length18 = length4 * length4;\n        long length19 = length2 *\
    \ length2;\n        long length20 = length3 * length3;\n        long length21\
    \ = length4 * length4;\n        long length22 = length2 * length3;\n        long\
    \ length23 = length3 * length2;\n        long length24 = length2 * length4;\n\
    \        long length25 = length3 * length3;\n        long length26 = length4 *\
    \ length4;\n        long length27 = length2 * length2;\n        long length28\
    \ = length3 * length3;\n        long length29 = length4 * length4;\n        long\
    \ length30 = length2 * length3;\n        long length31 = length3 * length2;\n\
    \        long length32 = length2 * length4;\n        long length33 = length3 *\
    \ length3;\n        long length34 = length4 * length4;\n        long length35\
    \ = length2 * length2;\n        long length36 = length3 * length3;\n        long\
    \ length37 = length4 * length4;\n        long length38 = length2 * length2;\n\
    \        long length39 = length3 * length3;\n        long length40 = length4 *\
    \ length4;\n        long length41 = length2 * length2;\n        long length42\
    \ = length3 * length3;\n        long length43 = length4 * length4;\n        long\
    \ length44 = length2 * length2;\n        long length45 = length3 * length3;\n\
    \        long length46 = length4 * length4;\n        long length47 = length2 *\
    \ length2;\n        long length48 = length3 * length3;\n        long length49\
    \ = ", "        long start = Math.Min(interval1.Item1, interval2.Item1);\n   \
    \     long end = Math.Max(interval1.Item2, interval2.Item2);\n        long length\
    \ = end - start;\n        if (length == 0)\n            return \"NO\";\n     \
    \   if (length == 1)\n            return \"YES\";\n        long max = (long)Math.Sqrt(length);\n\
    \        long min = (long)Math.Sqrt(length / 2);\n        long mid = start + max;\n\
    \        long count = 0;\n        bool isPrime = true;\n        while (isPrime)\
    \ {\n            long next = (long)Math.Sqrt(mid);\n            if (next == mid)\n\
    \                isPrime = false;\n            else\n                mid = next;\n\
    \            count++;\n        }\n        if (count % 2 == 0)\n            return\
    \ \"NO\";\n        return \"YES\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ max = (long)Math.Sqrt(length);\n        long max2 = max / 2;\n        long max3\
    \ = max * max;\n        long max4 = max3 * max;\n        long max5 = max4 * max;\n\
    \        long max6 = max5 * max;\n        long max7 = max6 * max;\n        long\
    \ max8 = max7 * max;\n        long max9 = max8 * max;\n        long max10 = max9\
    \ * max;\n        long max11 = max10 * max;\n        long max12 = max11 * max;\n\
    \        long max13 = max12 * max;\n        long max14 = max13 * max;\n      \
    \  long max15 = max14 * max;\n        long max16 = max15 * max;\n        long\
    \ max17 = max16 * max;\n        long max18 = max17 * max;\n        long max19\
    \ = max18 * max;\n        long max20 = max19 * max;\n        long max21 = max20\
    \ * max;\n        long max22 = max21 * max;\n        long max23 = max22 * max;\n\
    \        long max24 = max23 * max;\n        long max25 = max24 * max;\n      \
    \  long max26 = max25 * max;\n        long max27 = max26 * max;\n        long\
    \ max28 = max27 * max;\n        long max29 = max28 * max;\n        long max30\
    \ = max29 * max;\n        long max31 = max30 * max;\n        long max32 = max31\
    \ * max;\n        long max33 = max32 * max;\n        long max34 = max33 * max;\n\
    \        long max35 = max34 * max;\n        long max36 = max35 * max;\n      \
    \  long max37 = max36 * max;\n        long max38 = max37 * max;\n        long\
    \ max39 = max38 * max;\n        long max40 = max39 * max;\n        long max41\
    \ = max40 * max;\n        long max42 = max41 * max;\n        long max43 = max42\
    \ * max;\n        long max44", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0)\n            return\
    \ \"NO\";\n        if (length == 1)\n            return \"YES\";\n        long\
    \ max = (long)Math.Sqrt(length);\n        long max2 = max * max;\n        long\
    \ max3 = max2 * max;\n        long max4 = max3 * max;\n        long max5 = max4\
    \ * max;\n        long max6 = max5 * max;\n        long max7 = max6 * max;\n \
    \       long max8 = max7 * max;\n        long max9 = max8 * max;\n        long\
    \ max10 = max9 * max;\n        long max11 = max10 * max;\n        long max12 =\
    \ max11 * max;\n        long max13 = max12 * max;\n        long max14 = max13\
    \ * max;\n        long max15 = max14 * max;\n        long max16 = max15 * max;\n\
    \        long max17 = max16 * max;\n        long max18 = max17 * max;\n      \
    \  long max19 = max18 * max;\n        long max20 = max19 * max;\n        long\
    \ max21 = max20 * max;\n        long max22 = max21 * max;\n        long max23\
    \ = max22 * max;\n        long max24 = max23 * max;\n        long max25 = max24\
    \ * max;\n        long max26 = max25 * max;\n        long max27 = max26 * max;\n\
    \        long max28 = max27 * max;\n        long max29 = max28 * max;\n      \
    \  long max30 = max29 * max;\n        long max31 = max30 * max;\n        long\
    \ max32 = max31 * max;\n        long max33 = max32 * max;\n        long max34\
    \ = max33 * max;\n        long max35 = max34 * max;\n        long max36 = max35\
    \ * max;\n        long max37 = max36 * max;\n        long max38 = max37 * max;\n\
    \        long max39 = max38 * max;\n        long max40 = max39 * max;\n      \
    \  long max41 = max40 * max;\n        long max42 = max41 * max;\n        long\
    \ max43 = max42 * max;\n        long max", "        long start = Math.Min(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Max(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        long max = (long)Math.Sqrt(length);\n        long min = (long)Math.Sqrt(length\
    \ / 2);\n        long mid = start + max;\n        long count = 0;\n        long\
    \ sum = 0;\n        while (start <= mid) {\n            sum += start;\n      \
    \      count++;\n            start += max;\n        }\n        while (end >= mid)\
    \ {\n            sum += end;\n            count++;\n            end -= max;\n\
    \        }\n        if (count == 1) return \"YES\";\n        if (sum == length)\
    \ return \"YES\";\n        return \"NO\";", "        long start = Math.Max(interval1.Item1,\
    \ interval2.Item1);\n        long end = Math.Min(interval1.Item2, interval2.Item2);\n\
    \        long length = end - start;\n        if (length == 0) return \"NO\";\n\
    \        if (length == 1) return \"YES\";\n        long prime = length / 2;\n\
    \        bool isPrime = true;\n        for (int i = 2; i <= prime; i++) {\n  \
    \          if (length % i == 0) {\n                isPrime = false;\n        \
    \        break;\n            }\n        }\n        if (isPrime) return \"YES\"\
    ;\n        return \"NO\";", "        long start = interval1.Item1;\n        long\
    \ end = interval1.Item2;\n        long start2 = interval2.Item1;\n        long\
    \ end2 = interval2.Item2;\n        long length = end - start;\n        long length2\
    \ = end2 - start2;\n        if (length2 == 0) {\n            return \"NO\";\n\
    \        }\n        if (length == length2) {\n            long mid = (start +\
    \ end) / 2;\n            if (start <= mid && mid <= end) {\n                return\
    \ \"YES\";\n            }\n        }\n        if (length < length2) {\n      \
    \      long mid = (start + end) / 2;\n            if (start <= mid && mid <= end)\
    \ {\n                return \"YES\";\n            }\n        }\n        return\
    \ \"NO\";"]
stop_tokens:
- "\n    }\n"

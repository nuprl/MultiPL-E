language: cs
name: HumanEval_14_all_prefixes
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        if (str.Length == 0) return
    new List<string>();\n        var result = new List<string>();\n        var prefix
    = new StringBuilder(str.Substring(0, 1));\n        foreach (var c in str.Substring(1))
    {\n            result.Add(prefix.ToString());\n            prefix.Append(c);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <659e319f331445788739800d317e2858>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <659e319f331445788739800d317e2858>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        int len = str.Length;\n        for (int i = 0; i
    < len; i++) {\n            prefixes.Add(str.Substring(0, i));\n        }\n        return
    prefixes;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a0f1b163783f48f8b9e5b564fe93ac54>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a0f1b163783f48f8b9e5b564fe93ac54>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        string prefix = \"\";\n        foreach (char c in
    str) {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b733e211a62410b8c26dd523f7cec38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b733e211a62410b8c26dd523f7cec38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        string prefix = \"\";\n        for (int i = 0; i
    < str.Length; i++) {\n            prefix += str[i];\n            prefixes.Add(prefix);\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <97d446d01def4af69748ea419e6e752d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <97d446d01def4af69748ea419e6e752d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       var prefixes = new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq1rboheo.cs(16,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        for (int i = 0; i <
    str.Length; i++) {\n            prefixes.Add(prefixes[prefixes.Count - 1] + str.Substring(0,
    i));\n        }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9a3cb5ca058141be997528d48088a9cc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9a3cb5ca058141be997528d48088a9cc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        foreach (char c in str)
    {\n            prefixes.AddRange(AllPrefixes(c + str));\n        }\n        return
    prefixes;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Timeout
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8bff35e62eb465dace5dcd6ccb6cdfd>:0
    \n"
  stdout: None
  timestamp: 1659805411
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str,
    1));\n        return prefixes;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new
    List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\",
    (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5w8drt0b.cs(15,27): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       var prefixes = new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq1rboheo.cs(16,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        string prefix = \"\";\n        for (int i = 0; i
    < str.Length; i++) {\n            prefix += str[i];\n            prefixes.Add(prefix);\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <97d446d01def4af69748ea419e6e752d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <97d446d01def4af69748ea419e6e752d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       var prefixes = new List<string>();\n        prefixes.Add(str);\n        while
    (prefixes.Count > 0) {\n            var prefix = prefixes.First();\n            prefixes.Remove(prefix);\n
    \           result.Add(prefix);\n            foreach (var c in prefix) {\n                prefixes.Add(c
    + prefix);\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Timeout
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3f81250ab09247919a3692565aecd4bb>:0
    \n"
  stdout: None
  timestamp: 1659805410
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        string prefix = \"\";\n        for (int i = 0; i
    < str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <79bb087368914a0d9d8557e221cfc8c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <79bb087368914a0d9d8557e221cfc8c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       var prefix = new StringBuilder();\n        foreach (var c in str) {\n
    \           prefix.Append(c);\n            result.Add(prefix.ToString());\n            prefix.Remove(0,
    1);\n        }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <18602545d8884b23880dc68714238bfa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <18602545d8884b23880dc68714238bfa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var prefixes = new List<string>();\n
    \       prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphg7esxve.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesRec(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbozbnvw3.cs(15,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesRec(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbozbnvw3.cs(15,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str,
    1));\n        return prefixes;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new
    List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\",
    (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5w8drt0b.cs(15,27): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        if (str == null || str.Length
    == 0)\n            return new List<string>();\n        var prefixes = new List<string>();\n
    \       var prefix = new StringBuilder(str.Length);\n        prefixes.Add(prefix.ToString());\n
    \       foreach (var c in str) {\n            prefix.Append(c);\n            prefixes.Add(prefix.ToString());\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4fac9c1eebcc44ed925d1987ae45b966>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4fac9c1eebcc44ed925d1987ae45b966>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        string prefix = \"\";\n        for (int i = 0; i < str.Length;
    i++) {\n            prefix = prefix + str[i];\n            result.Add(prefix);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a134ef0bf854be593b89cd5f3ddd768>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a134ef0bf854be593b89cd5f3ddd768>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       var prefixes = new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq1rboheo.cs(16,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str,
    1));\n        return prefixes;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new
    List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\",
    (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5w8drt0b.cs(15,27): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixes(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbkidhumr.cs(15,27): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        string prefix = \"\";\n        for (int i = 0; i
    < str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <79bb087368914a0d9d8557e221cfc8c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <79bb087368914a0d9d8557e221cfc8c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        string prefix = \"\";\n        foreach (char c in
    str) {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b733e211a62410b8c26dd523f7cec38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b733e211a62410b8c26dd523f7cec38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       var prefixes = new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq1rboheo.cs(16,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        foreach (var c in str) {\n            result.Add(c);\n
    \           result.AddRange(AllPrefixes(c.ToString()));\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpliu3abnh.cs(15,24): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        string prefix = \"\";\n        for (int i = 0; i < str.Length;
    i++) {\n            prefix = prefix + str[i];\n            result.Add(prefix);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a134ef0bf854be593b89cd5f3ddd768>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a134ef0bf854be593b89cd5f3ddd768>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesRec(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbozbnvw3.cs(15,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        if (str.Length == 0) return
    new List<string>();\n        List<string> prefixes = new List<string>();\n        prefixes.Add(str);\n
    \       prefixes.AddRange(AllPrefixes(str.Substring(0, str.Length - 1)));\n        return
    prefixes;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <72d7edcd98c943af993e35687e7adeb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <72d7edcd98c943af993e35687e7adeb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str,
    1));\n        return prefixes;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new
    List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\",
    (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5w8drt0b.cs(15,27): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       var prefixes = new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq1rboheo.cs(16,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        if (str == null || str.Length
    == 0)\n            return new List<string>();\n        var prefixes = new List<string>();\n
    \       var prefix = new StringBuilder(str);\n        while (prefix.Length > 0)
    {\n            prefixes.Add(prefix.ToString());\n            prefix.Remove(0,
    1);\n        }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d233af5332e94dcf898a6e63865ed300>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d233af5332e94dcf898a6e63865ed300>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       var prefixes = new List<string>();\n        var prefix = new StringBuilder();\n
    \       foreach (var c in str) {\n            prefix.Append(c);\n            prefixes.Add(prefix.ToString());\n
    \       }\n        foreach (var p in prefixes) {\n            result.AddRange(AllPrefixes(p));\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Timeout
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a090ebf847144598b30c5c207c46437a>:0
    \n"
  stdout: None
  timestamp: 1659805410
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixes(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbkidhumr.cs(15,27): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(str);\n        int len = str.Length;\n
    \       for (int i = 1; i < len; i++) {\n            prefixes.Add(str.Substring(0,
    i));\n        }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3bc561a289a841a692ace664d8d17ef9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3bc561a289a841a692ace664d8d17ef9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       foreach (var c in str) {\n            result.AddRange(AllPrefixes(c));\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdkfepn0c.cs(15,41): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        string prefix = \"\";\n        for (int i = 0; i
    < str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <79bb087368914a0d9d8557e221cfc8c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <79bb087368914a0d9d8557e221cfc8c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        foreach (var c in str) {\n            result.Add(c);\n
    \           result.AddRange(AllPrefixes(c.ToString()));\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpliu3abnh.cs(15,24): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        foreach (var c in str) {\n            result.AddRange(AllPrefixes(c));\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsxzz8u1c.cs(15,41): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(str);\n        foreach (string s in
    AllPrefixes(str, str)) {\n            prefixes.Add(s);\n        }\n        return
    prefixes;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpez1y1a6v.cs(15,30): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        string prefix = \"\";\n        for (int i = 0; i
    < str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <79bb087368914a0d9d8557e221cfc8c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <79bb087368914a0d9d8557e221cfc8c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        string prefix = \"\";\n        for (int i = 0; i
    < str.Length; i++) {\n            prefix += str[i];\n            prefixes.Add(prefix);\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <97d446d01def4af69748ea419e6e752d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <97d446d01def4af69748ea419e6e752d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        foreach (var c in str) {\n            result.AddRange(AllPrefixes(c));\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsxzz8u1c.cs(15,41): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        string prefix = \"\";\n        foreach (char c in str)
    {\n            prefix = prefix + c;\n            result.Add(prefix);\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new
    List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\",
    (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fbb7d365e0e743a7807a2c03fe00196a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fbb7d365e0e743a7807a2c03fe00196a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(str);\n        int len = str.Length;\n
    \       for (int i = 0; i < len; i++) {\n            prefixes.Add(str.Substring(0,
    i));\n        }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e90cf27458724125bf6b63418a803bd9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e90cf27458724125bf6b63418a803bd9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        if (str == null || str.Length
    == 0)\n            return new List<string>();\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str.Substring(0,
    str.Length - 1)));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7e8845002b844ef49d43bf6bd9be373d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7e8845002b844ef49d43bf6bd9be373d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        string prefix = \"\";\n        for (int i = 0; i < str.Length;
    i++) {\n            prefix = prefix + str[i];\n            result.Add(prefix);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a134ef0bf854be593b89cd5f3ddd768>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a134ef0bf854be593b89cd5f3ddd768>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        if (str == null || str.Length
    == 0)\n            return new List<string>();\n        var prefixes = new List<string>();\n
    \       prefixes.Add(str);\n        foreach (var s in AllPrefixes(str.Substring(1))
    {\n            prefixes.Add(s + str);\n        }\n        return prefixes;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_gd_kmo0.cs(17,57): error CS1026: ) expected

    '
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str.Substring(0,
    str.Length - 1)));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Length cannot
    be less than zero.\nParameter name: length\n  at System.String.Substring (System.Int32
    startIndex, System.Int32 length) [0x00031] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.AllPrefixes (System.String str) [0x00018] in <1eb9056964e14f9fa254bbdacc2c1f9a>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <1eb9056964e14f9fa254bbdacc2c1f9a>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Length
    cannot be less than zero.\nParameter name: length\n  at System.String.Substring
    (System.Int32 startIndex, System.Int32 length) [0x00031] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.AllPrefixes (System.String str) [0x00018] in <1eb9056964e14f9fa254bbdacc2c1f9a>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <1eb9056964e14f9fa254bbdacc2c1f9a>:0
    \n"
  stdout: ''
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       var prefix = new List<string>();\n        foreach (var c in str) {\n            prefix.Add(c);\n
    \           result.AddRange(AllPrefixes(prefix.ToArray()));\n            prefix.RemoveAt(prefix.Count
    - 1);\n        }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwsc49dzb.cs(16,24): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    /tmp/tmpwsc49dzb.cs(17,41): error CS1503: Argument 1: cannot convert from ''string[]''
    to ''string''

    '
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesRec(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbozbnvw3.cs(15,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       foreach (var c in str) {\n            result.AddRange(AllPrefixes(new
    string[] { c }));\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjpr0calm.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        if (str == null || str.Length
    == 0)\n            return new List<string>();\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(str);\n        string prefix = str.Substring(0,
    1);\n        string rest = str.Substring(1);\n        foreach (string s in AllPrefixes(rest))
    {\n            prefixes.Add(prefix + s);\n        }\n        return prefixes;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <97b8ef5452e74433888b6f34320549ea>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <97b8ef5452e74433888b6f34320549ea>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        string prefix = \"\";\n        foreach (char c in
    str) {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b733e211a62410b8c26dd523f7cec38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b733e211a62410b8c26dd523f7cec38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str,
    1));\n        return prefixes;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new
    List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\",
    (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5w8drt0b.cs(15,27): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659805405
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        if (str == null)\n            throw
    new ArgumentNullException(\"str\");\n        if (str.Length == 0)\n            return
    new List<string>();\n        List<string> result = new List<string>();\n        Stack<string>
    stack = new Stack<string>();\n        stack.Push(str);\n        while (stack.Count
    > 0) {\n            string prefix = stack.Pop();\n            result.Add(prefix);\n
    \           foreach (char c in prefix)\n                stack.Push(prefix + c);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Timeout
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <16af4701e2144000978d23529b910dd2>:0
    \n"
  stdout: None
  timestamp: 1659805411
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(str);\n        foreach (string prefix
    in AllPrefixes(str, 1))\n            prefixes.Add(prefix);\n        return prefixes;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnuu5wk_b.cs(15,35): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        string prefix = \"\";\n        foreach (char c in
    str) {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b733e211a62410b8c26dd523f7cec38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b733e211a62410b8c26dd523f7cec38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str,
    1));\n        return prefixes;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new
    List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\",
    (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5w8drt0b.cs(15,27): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        int len = str.Length;\n        for (int i = 0; i
    < len; i++) {\n            prefixes.Add(str.Substring(0, i));\n        }\n        return
    prefixes;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a0f1b163783f48f8b9e5b564fe93ac54>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a0f1b163783f48f8b9e5b564fe93ac54>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var prefixes = new List<string>();\n
    \       prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphg7esxve.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        string prefix = \"\";\n        for (int i = 0; i < str.Length;
    i++) {\n            prefix = prefix + str[i];\n            result.Add(prefix);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a134ef0bf854be593b89cd5f3ddd768>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a134ef0bf854be593b89cd5f3ddd768>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        foreach (var c in str) {\n            result.AddRange(AllPrefixes(c));\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsxzz8u1c.cs(15,41): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str.Substring(0,
    str.Length - 1)));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Length cannot
    be less than zero.\nParameter name: length\n  at System.String.Substring (System.Int32
    startIndex, System.Int32 length) [0x00031] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.AllPrefixes (System.String str) [0x00018] in <1eb9056964e14f9fa254bbdacc2c1f9a>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <1eb9056964e14f9fa254bbdacc2c1f9a>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Length
    cannot be less than zero.\nParameter name: length\n  at System.String.Substring
    (System.Int32 startIndex, System.Int32 length) [0x00031] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.AllPrefixes (System.String str) [0x00018] in <1eb9056964e14f9fa254bbdacc2c1f9a>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <1eb9056964e14f9fa254bbdacc2c1f9a>:0
    \n"
  stdout: ''
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       var prefix = new StringBuilder();\n        foreach (var c in str) {\n
    \           prefix.Append(c);\n            result.Add(prefix.ToString());\n            prefix.Remove(0,
    1);\n        }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <18602545d8884b23880dc68714238bfa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <18602545d8884b23880dc68714238bfa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesRec(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbozbnvw3.cs(15,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        foreach (string s in AllPrefixesRec(str, \"\")) {\n            result.Add(s);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqbvy41ig.cs(14,30): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        List<string> prefixes = new List<string>();\n        prefixes.Add(str);\n
    \       while (prefixes.Count > 0) {\n            string prefix = prefixes.First();\n
    \           prefixes.Remove(prefix);\n            result.Add(prefix);\n            foreach
    (string suffix in prefixes) {\n                string newPrefix = prefix + suffix;\n
    \               prefixes.Remove(newPrefix);\n                result.Add(newPrefix);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1b2890d327174d9d844c702d8ef72608>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1b2890d327174d9d844c702d8ef72608>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       var prefixes = new List<string>();\n        var prefix = new StringBuilder(str);\n
    \       while (prefix.Length > 0) {\n            prefixes.Add(prefix.ToString());\n
    \           prefix = prefix.Remove(0, 1);\n        }\n        foreach (var prefix
    in prefixes) {\n            result.AddRange(AllPrefixes(prefix));\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new
    List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\",
    (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprg7l49cv.cs(20,22): error CS0136: A local or parameter named ''prefix''
    cannot be declared in this scope because that name is used in an enclosing local
    scope to define a local or parameter

    '
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        foreach (char c in str) {\n            result.Add(c);\n
    \           result.AddRange(AllPrefixes(c.ToString()));\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwmkakoio.cs(15,24): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesRec(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbozbnvw3.cs(15,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        for (int i = 0; i <
    str.Length; i++) {\n            prefixes.Add(prefixes[prefixes.Count - 1] + str[i]);\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ee5653f0c245418cb9c1c1c1dd365a5f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ee5653f0c245418cb9c1c1c1dd365a5f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        if (str == null || str.Length
    == 0)\n            return new List<string>();\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str.Substring(0,
    str.Length - 1)));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7e8845002b844ef49d43bf6bd9be373d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7e8845002b844ef49d43bf6bd9be373d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        string prefix = \"\";\n        for (int i = 0; i < str.Length;
    i++) {\n            prefix = prefix + str[i];\n            result.Add(prefix);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a134ef0bf854be593b89cd5f3ddd768>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a134ef0bf854be593b89cd5f3ddd768>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        string prefix = \"\";\n        foreach (char c in str)
    {\n            prefix = prefix + c;\n            result.Add(prefix);\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new
    List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\",
    (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fbb7d365e0e743a7807a2c03fe00196a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fbb7d365e0e743a7807a2c03fe00196a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        string prefix = \"\";\n        for (int i = 0; i
    < str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <79bb087368914a0d9d8557e221cfc8c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <79bb087368914a0d9d8557e221cfc8c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       foreach (var c in str) {\n            result.Add(c);\n            result.AddRange(AllPrefixes(c.ToString()));\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6ozrsb_g.cs(15,24): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        string prefix = \"\";\n        for (int i = 0; i < str.Length;
    i++) {\n            prefix = prefix + str[i];\n            result.Add(prefix);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a134ef0bf854be593b89cd5f3ddd768>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a134ef0bf854be593b89cd5f3ddd768>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        foreach (var c in str) {\n            result.AddRange(AllPrefixes(c));\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsxzz8u1c.cs(15,41): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       var prefixes = new List<string>();\n        var prefix = new StringBuilder();\n
    \       foreach (var c in str) {\n            prefix.Append(c);\n            prefixes.Add(prefix.ToString());\n
    \           prefix.Remove(0, 1);\n        }\n        foreach (var p in prefixes)
    {\n            result.Add(p);\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c8817ee970de4472a9e7be2663f2ef62>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c8817ee970de4472a9e7be2663f2ef62>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       var prefix = new StringBuilder(str);\n        while (prefix.Length > 0)
    {\n            result.Add(prefix.ToString());\n            prefix.Remove(0, 1);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0aae1225a836456986ed5b1690bb1cb7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0aae1225a836456986ed5b1690bb1cb7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       var prefixes = new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq1rboheo.cs(16,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        int len = str.Length;\n        for (int i = 0; i
    < len; i++) {\n            prefixes.Add(str.Substring(0, i));\n        }\n        return
    prefixes;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a0f1b163783f48f8b9e5b564fe93ac54>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a0f1b163783f48f8b9e5b564fe93ac54>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        string prefix = \"\";\n        foreach (char c in
    str) {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b733e211a62410b8c26dd523f7cec38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b733e211a62410b8c26dd523f7cec38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        for (int i = 0; i <
    str.Length; i++) {\n            prefixes.Add(prefixes[prefixes.Count - 1] + str[i]);\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ee5653f0c245418cb9c1c1c1dd365a5f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ee5653f0c245418cb9c1c1c1dd365a5f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        string prefix = \"\";\n        for (int i = 0; i
    < str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <79bb087368914a0d9d8557e221cfc8c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <79bb087368914a0d9d8557e221cfc8c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        string prefix = \"\";\n        foreach (char c in str)
    {\n            prefix = prefix + c;\n            result.Add(prefix);\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new
    List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\",
    (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fbb7d365e0e743a7807a2c03fe00196a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fbb7d365e0e743a7807a2c03fe00196a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        if (str == null || str.Length
    == 0) return new List<string>();\n        var result = new List<string>();\n        foreach
    (var c in str) {\n            result.AddRange(AllPrefixes(c));\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpuurv__xi.cs(16,41): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(str);\n        while (prefixes.Count
    < str.Length) {\n            prefixes.Add(prefixes[prefixes.Count - 1] + str[prefixes.Count
    - 1]);\n        }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2d3dfe41f81c493e92e0769000c45d04>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2d3dfe41f81c493e92e0769000c45d04>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805407
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        if (str == null || str.Length
    == 0)\n            return new List<string>();\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(str);\n        foreach (string s in
    AllPrefixes(str.Substring(1)) {\n            prefixes.Add(s + str.Substring(0,
    s.Length));\n        }\n        return prefixes;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwa3v41oy.cs(17,60): error CS1026: ) expected

    '
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str.Substring(0,
    str.Length - 1)));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Length cannot
    be less than zero.\nParameter name: length\n  at System.String.Substring (System.Int32
    startIndex, System.Int32 length) [0x00031] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.AllPrefixes (System.String str) [0x00018] in <1eb9056964e14f9fa254bbdacc2c1f9a>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <1eb9056964e14f9fa254bbdacc2c1f9a>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Length
    cannot be less than zero.\nParameter name: length\n  at System.String.Substring
    (System.Int32 startIndex, System.Int32 length) [0x00031] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.AllPrefixes (System.String str) [0x00018] in <1eb9056964e14f9fa254bbdacc2c1f9a>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <1eb9056964e14f9fa254bbdacc2c1f9a>:0
    \n"
  stdout: ''
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new
    string[] { c }));\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr_9t3g77.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        string prefix = \"\";\n        foreach (char c in str)
    {\n            prefix = prefix + c;\n            result.Add(prefix);\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new
    List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\",
    (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fbb7d365e0e743a7807a2c03fe00196a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fbb7d365e0e743a7807a2c03fe00196a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       var prefix = new StringBuilder();\n        foreach (var c in str) {\n
    \           prefix.Append(c);\n            result.Add(prefix.ToString());\n            prefix.Remove(0,
    1);\n        }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <18602545d8884b23880dc68714238bfa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <18602545d8884b23880dc68714238bfa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesRec(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbozbnvw3.cs(15,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        foreach (string s in AllPrefixes(str, new List<string>()))
    {\n            result.Add(s);\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpp93tugwq.cs(14,30): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659805407
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        if (str == null || str.Length
    == 0)\n            return new List<string>();\n        var prefixes = new List<string>();\n
    \       var prefix = new StringBuilder(str);\n        while (prefix.Length > 0)
    {\n            prefixes.Add(prefix.ToString());\n            prefix.Remove(0,
    1);\n        }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d233af5332e94dcf898a6e63865ed300>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d233af5332e94dcf898a6e63865ed300>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       var prefix = new StringBuilder();\n        foreach (var c in str) {\n
    \           prefix.Append(c);\n            result.Add(prefix.ToString());\n            prefix.Remove(0,
    1);\n        }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <18602545d8884b23880dc68714238bfa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <18602545d8884b23880dc68714238bfa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        string prefix = \"\";\n        foreach (char c in str)
    {\n            prefix = prefix + c;\n            result.Add(prefix);\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new
    List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\",
    (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fbb7d365e0e743a7807a2c03fe00196a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fbb7d365e0e743a7807a2c03fe00196a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        string prefix = \"\";\n        for (int i = 0; i
    < str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <79bb087368914a0d9d8557e221cfc8c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <79bb087368914a0d9d8557e221cfc8c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        string prefix = \"\";\n        for (int i = 0; i
    < str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <79bb087368914a0d9d8557e221cfc8c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <79bb087368914a0d9d8557e221cfc8c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesRec(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbozbnvw3.cs(15,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var prefixes = new List<string>();\n
    \       prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str, 1));\n
    \       return prefixes;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new
    List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\",
    (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpuxcvhciz.cs(15,27): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659805407
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        for (int i = 0; i <
    str.Length; i++) {\n            prefixes.Add(prefixes[prefixes.Count - 1] + str[i]);\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ee5653f0c245418cb9c1c1c1dd365a5f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ee5653f0c245418cb9c1c1c1dd365a5f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        string prefix = \"\";\n        for (int i = 0; i < str.Length;
    i++) {\n            prefix = prefix + str[i];\n            result.Add(prefix);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a134ef0bf854be593b89cd5f3ddd768>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a134ef0bf854be593b89cd5f3ddd768>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        if (str == null || str.Length
    == 0) return new List<string>();\n        var prefixes = new List<string>();\n
    \       prefixes.Add(str);\n        var prefix = new StringBuilder();\n        foreach
    (var c in str) {\n            prefix.Append(c);\n            prefixes.Add(prefix.ToString());\n
    \           prefix.Remove(0, 1);\n        }\n        return prefixes;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aae093b9a0be4605848326492eda087b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aae093b9a0be4605848326492eda087b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805407
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        if (str == null || str.Length
    == 0)\n            return new List<string>();\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str.Substring(0,
    str.Length - 1)));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7e8845002b844ef49d43bf6bd9be373d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7e8845002b844ef49d43bf6bd9be373d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       var prefix = new StringBuilder();\n        foreach (var c in str) {\n
    \           prefix.Append(c);\n            result.Add(prefix.ToString());\n            prefix.Remove(0,
    1);\n        }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <18602545d8884b23880dc68714238bfa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <18602545d8884b23880dc68714238bfa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       var prefix = new StringBuilder();\n        foreach (var c in str) {\n
    \           prefix.Append(c);\n            result.Add(prefix.ToString());\n            prefix.Remove(0,
    1);\n        }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <18602545d8884b23880dc68714238bfa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <18602545d8884b23880dc68714238bfa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        foreach (var c in str) {\n            result.AddRange(AllPrefixes(c));\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsxzz8u1c.cs(15,41): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        if (str == null || str.Length
    == 0)\n            return new List<string>();\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(str);\n        int len = str.Length;\n
    \       while (len > 0) {\n            prefixes.Add(str.Substring(0, len));\n
    \           str = str.Substring(len);\n            len--;\n        }\n        return
    prefixes;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a4d160facb0e44709dbfd4e0f33f8fce>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length
    must refer to a location within the string.\nParameter name: length\n  at System.String.Substring
    (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0
    \n  at Problem.AllPrefixes (System.String str) [0x00034] in <a4d160facb0e44709dbfd4e0f33f8fce>:0
    \n  at Problem.Main (System.String[] args) [0x0001b] in <a4d160facb0e44709dbfd4e0f33f8fce>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index
    and length must refer to a location within the string.\nParameter name: length\n
    \ at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c]
    in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.AllPrefixes (System.String
    str) [0x00034] in <a4d160facb0e44709dbfd4e0f33f8fce>:0 \n  at Problem.Main (System.String[]
    args) [0x0001b] in <a4d160facb0e44709dbfd4e0f33f8fce>:0 \n"
  stdout: ''
  timestamp: 1659805407
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       foreach (var c in str) {\n            result.Add(c);\n            result.AddRange(AllPrefixes(c.ToString()));\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6ozrsb_g.cs(15,24): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        Stack<string> stack = new Stack<string>();\n        foreach
    (char c in str) {\n            stack.Add(c);\n            while (stack.Count >
    0) {\n                string prefix = stack.Count > 1 ? string.Join(\"\", stack)
    : stack.Pop();\n                result.Add(prefix);\n                foreach (char
    d in str) {\n                    if (d == c) {\n                        break;\n
    \                   }\n                    stack.Add(prefix + d);\n                }\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp74vslell.cs(16,19): error CS1061: ''Stack<string>'' does not contain a
    definition for ''Add'' and no accessible extension method ''Add'' accepting a
    first argument of type ''Stack<string>'' could be found (are you missing a using
    directive or an assembly reference?)

    /tmp/tmp74vslell.cs(24,27): error CS1061: ''Stack<string>'' does not contain a
    definition for ''Add'' and no accessible extension method ''Add'' accepting a
    first argument of type ''Stack<string>'' could be found (are you missing a using
    directive or an assembly reference?)

    '
  timestamp: 1659805407
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var prefixes = new List<string>();\n
    \       var prefix = new StringBuilder();\n        foreach (var c in str) {\n
    \           prefix.Append(c);\n            prefixes.Add(prefix.ToString());\n
    \           prefix = new StringBuilder();\n        }\n        return prefixes;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <65d13bdef5f846dd9b39103a6b8e65db>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <65d13bdef5f846dd9b39103a6b8e65db>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805407
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       foreach (var c in str) {\n            result.AddRange(AllPrefixes(c));\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdkfepn0c.cs(15,41): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       var prefixes = new List<string>();\n        prefixes.Add(str);\n        while
    (prefixes.Count > 0) {\n            var prefix = prefixes.First();\n            prefixes.Remove(prefix);\n
    \           result.Add(prefix);\n            foreach (var suffix in prefixes)
    {\n                result.Add(prefix + suffix);\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <07c74e0a422b4bea85c219edbb7df2f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <07c74e0a422b4bea85c219edbb7df2f6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805407
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        foreach (var c in str) {\n            result.Add(c);\n
    \           result.AddRange(AllPrefixes(c.ToString()));\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpliu3abnh.cs(15,24): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       var prefix = new StringBuilder();\n        var len = str.Length;\n        var
    i = 0;\n        while (i < len) {\n            prefix.Append(str.Substring(0,
    i));\n            result.Add(prefix.ToString());\n            i += 1;\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new
    List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\",
    (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3b3ce2042b3143c59ea80d330b98275a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3b3ce2042b3143c59ea80d330b98275a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805407
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        string prefix = \"\";\n        foreach (char c in
    str) {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b733e211a62410b8c26dd523f7cec38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b733e211a62410b8c26dd523f7cec38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        string prefix = \"\";\n        for (int i = 0; i
    < str.Length; i++) {\n            prefix += str[i];\n            prefixes.Add(prefix);\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <97d446d01def4af69748ea419e6e752d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <97d446d01def4af69748ea419e6e752d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        if (str == null || str.Length
    == 0)\n            return new List<string>();\n        List<string> result = new
    List<string>();\n        char c = str[0];\n        for (int i = 1; i < str.Length;
    i++) {\n            if (str[i] == c)\n                result.Add(c);\n            else\n
    \               result.Add(c + str[i]);\n            c = str[i];\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new
    List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\",
    (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcbdjjijk.cs(19,28): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    /tmp/tmpcbdjjijk.cs(21,28): error CS1503: Argument 1: cannot convert from ''int''
    to ''string''

    '
  timestamp: 1659805407
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        string prefix = \"\";\n        for (int i = 0; i
    < str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <79bb087368914a0d9d8557e221cfc8c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <79bb087368914a0d9d8557e221cfc8c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       var prefixes = new List<string>();\n        var prefix = new StringBuilder();\n
    \       foreach (var c in str) {\n            prefix.Append(c);\n            if
    (prefix.Length > 0) {\n                prefixes.Add(prefix.ToString());\n                prefix
    = new StringBuilder();\n            }\n        }\n        result.AddRange(prefixes);\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new
    List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\",
    (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8e6dc2b1cc3442a3b85268c9e41dc04c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8e6dc2b1cc3442a3b85268c9e41dc04c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805407
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       var prefix = new StringBuilder(str);\n        while (prefix.Length > 0)
    {\n            result.Add(prefix.ToString());\n            prefix.Remove(0, 1);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0aae1225a836456986ed5b1690bb1cb7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0aae1225a836456986ed5b1690bb1cb7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesRec(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbozbnvw3.cs(15,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       foreach (var c in str) {\n            result.Add(c);\n            result.AddRange(AllPrefixes(c));\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl1xi03kp.cs(15,24): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    /tmp/tmpl1xi03kp.cs(16,41): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659805407
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        foreach (var c in str) {\n            result.AddRange(AllPrefixes(c,
    result.Count));\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbrea2zg_.cs(15,29): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659805407
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        foreach (string s in AllPrefixesRec(str, \"\")) {\n            result.Add(s);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqbvy41ig.cs(14,30): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        int n = str.Length;\n        for (int i = 0; i <
    n; i++) {\n            prefixes.Add(str.Substring(0, i));\n        }\n        return
    prefixes;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2f7aa9d20bcb438ebec1d70582bae032>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2f7aa9d20bcb438ebec1d70582bae032>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805407
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesRec(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbozbnvw3.cs(15,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesRec(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbozbnvw3.cs(15,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        foreach (var c in str) {\n            result.Add(c);\n
    \           result.AddRange(AllPrefixes(c.ToString()));\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpliu3abnh.cs(15,24): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        foreach (string s in AllPrefixesRecursive(str)) {\n            result.Add(s);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnat2wvu5.cs(14,30): error CS0103: The name ''AllPrefixesRecursive'' does
    not exist in the current context

    '
  timestamp: 1659805407
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        string prefix = \"\";\n        for (int i = 0; i < str.Length;
    i++) {\n            prefix = prefix + str[i];\n            result.Add(prefix);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a134ef0bf854be593b89cd5f3ddd768>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a134ef0bf854be593b89cd5f3ddd768>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       foreach (var c in str) {\n            result.AddRange(AllPrefixes(new
    string[] { c }));\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjpr0calm.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        int len = str.Length;\n        for (int i = 0; i
    < len; i++) {\n            prefixes.Add(str.Substring(0, i));\n        }\n        return
    prefixes;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a0f1b163783f48f8b9e5b564fe93ac54>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a0f1b163783f48f8b9e5b564fe93ac54>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        string prefix = \"\";\n        for (int i = 0; i < str.Length;
    i++) {\n            prefix = prefix + str[i];\n            result.Add(prefix);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a134ef0bf854be593b89cd5f3ddd768>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7a134ef0bf854be593b89cd5f3ddd768>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       var prefixes = new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(str.Select(c
    => c.ToString()));\n        while (prefixes.Count > 0) {\n            var prefix
    = prefixes.First();\n            result.Add(prefix);\n            prefixes.Remove(prefix);\n
    \           foreach (var c in prefix) {\n                prefixes.Add(c + prefix);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Timeout
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7c5ed5bb1d5540c3b9482d92849f41a1>:0
    \n"
  stdout: None
  timestamp: 1659805412
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n
    \       var prefixes = new List<string>();\n        var prefix = new StringBuilder();\n
    \       foreach (var c in str) {\n            prefix.Append(c);\n            if
    (prefix.Length > 0) {\n                prefixes.Add(prefix.ToString());\n                prefix
    = new StringBuilder();\n            }\n        }\n        if (prefix.Length >
    0) {\n            prefixes.Add(prefix.ToString());\n        }\n        foreach
    (var p in prefixes) {\n            result.Add(p);\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <47c40bd0e55a4293a645f676fd58aac7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <47c40bd0e55a4293a645f676fd58aac7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805407
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixes(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbkidhumr.cs(15,27): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        List<string> prefixes = new List<string>();\n        prefixes.Add(str);\n
    \       while (prefixes.Count > 0) {\n            string prefix = prefixes.First();\n
    \           prefixes.Remove(prefix);\n            result.Add(prefix);\n            foreach
    (string suffix in prefixes) {\n                string newPrefix = prefix + suffix;\n
    \               if (newPrefix.Length > str.Length) {\n                    result.Add(newPrefix);\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d2b4b4e9ae2f40afb122fd2bcb749533>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d2b4b4e9ae2f40afb122fd2bcb749533>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805407
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        List<string> prefixes = new List<string>();\n        prefixes.Add(\"\");\n
    \       prefixes.AddRange(AllPrefixesRec(str, prefixes));\n        return prefixes;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9x6crze8.cs(16,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805407
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(str);\n        int len = str.Length;\n
    \       for (int i = 1; i < len; i++) {\n            prefixes.Add(str.Substring(0,
    i));\n        }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3bc561a289a841a692ace664d8d17ef9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3bc561a289a841a692ace664d8d17ef9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        List<string> prefixes = new List<string>();\n        prefixes.Add(str);\n
    \       while (prefixes.Count > 0) {\n            string prefix = prefixes.First();\n
    \           prefixes.Remove(prefix);\n            result.Add(prefix);\n            foreach
    (string suffix in prefixes) {\n                string newPrefix = prefix + suffix;\n
    \               if (newPrefix.Length < str.Length) {\n                    prefixes.Add(newPrefix);\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6f306280270c421e922bfa0a7379df61>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6f306280270c421e922bfa0a7379df61>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805407
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> result = new
    List<string>();\n        foreach (var c in str) {\n            result.AddRange(AllPrefixes(c));\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsxzz8u1c.cs(15,41): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        string prefix = \"\";\n        foreach (char c in
    str) {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b733e211a62410b8c26dd523f7cec38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b733e211a62410b8c26dd523f7cec38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        if (str == null || str.Length
    == 0)\n            return new List<string>();\n        var prefixes = new List<string>();\n
    \       var prefix = new StringBuilder(str.Length);\n        prefix.Append(str[0]);\n
    \       prefixes.Add(prefix.ToString());\n        for (int i = 1; i < str.Length;
    i++) {\n            prefix.Append(str[i]);\n            prefixes.Add(prefix.ToString());\n
    \       }\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f5b4c9f199814871a50a52916d8250dd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f5b4c9f199814871a50a52916d8250dd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805407
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqrjhy_5.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        if (str == null || str.Length
    == 0)\n            return new List<string>();\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str.Substring(0,
    str.Length - 1)));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7e8845002b844ef49d43bf6bd9be373d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7e8845002b844ef49d43bf6bd9be373d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805406
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        if (str == null || str.Length
    == 0) return new List<string>();\n        var result = new List<string>();\n        var
    prefix = new StringBuilder(str.Length);\n        prefix.Append(str[0]);\n        result.Add(prefix.ToString());\n
    \       for (int i = 1; i < str.Length; i++) {\n            prefix.Append(str[i]);\n
    \           result.Add(prefix.ToString());\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <34fad9b40d0f4de69ce76a2e61615c66>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <34fad9b40d0f4de69ce76a2e61615c66>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805408
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(str);\n        foreach (string s in
    AllPrefixes(str, prefixes)) {\n            prefixes.Add(s);\n        }\n        return
    prefixes;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new
    List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new
    string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\",
    (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9aj6yk3h.cs(15,30): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659805407
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixes(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbkidhumr.cs(15,27): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        if (str.Length == 0)\n
    \           return new List<string>();\n        var result = new List<string>();\n
    \       var prefix = new StringBuilder(str.Substring(0, 1));\n        result.Add(prefix.ToString());\n
    \       var rest = str.Substring(1);\n        while (rest.Length > 0) {\n            prefix.Append(rest.Substring(0,
    1));\n            result.Add(prefix.ToString());\n            rest = rest.Substring(1);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <24045da1edcc4afb9855a984dbe5a064>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <24045da1edcc4afb9855a984dbe5a064>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805408
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str,
    1));\n        return prefixes;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new
    List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\",
    (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5w8drt0b.cs(15,27): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659805405
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        List<string> prefixes =
    new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesRec(str,
    prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n
    \   Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\",
    (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n
    \   Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"W\",
    (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbozbnvw3.cs(15,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805405
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Return list of all prefixes from shortest to longest of the
    input string\n    // >>> all_prefixes('abc')\n    // ['a', 'ab', 'abc']\n    public
    static List<string> AllPrefixes(string str) {\n        if (str.Length == 0)\n
    \           return new List<string>();\n        List<string> prefixes = new List<string>();\n
    \       prefixes.Add(str);\n        int n = str.Length;\n        for (int i =
    0; i < n; i++) {\n            prefixes.Add(str.Substring(0, i));\n        }\n
    \       return prefixes;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new
    List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\",
    (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new
    List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5b9df0af58ce450d9a0958ac3789985c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5b9df0af58ce450d9a0958ac3789985c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805408

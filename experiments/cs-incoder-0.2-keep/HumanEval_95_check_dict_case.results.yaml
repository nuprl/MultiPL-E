language: cs
name: HumanEval_95_check_dict_case
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys)\n        {\n            if (key.Length > 0)\n            {\n
    \               if (char.IsLower(key[0]) || char.IsUpper(key[0]))\n                    return
    false;\n            }\n            else\n            {\n                if (char.IsLower(key[0])
    || char.IsUpper(key[0]))\n                    return false;\n            }\n        }\n
    \       return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6b3bcc86da2b42d29bc518ae52cc1d77>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6b3bcc86da2b42d29bc518ae52cc1d77>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys)\n        {\n            if (key.Length > 0)\n            {\n
    \               if (char.IsLower(key[0]) || char.IsUpper(key[0]))\n                    return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c93d66c16ff547199f56fc9069bf9584>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c93d66c16ff547199f56fc9069bf9584>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var item in dict)\n        {\n            string key = item.Key;\n            string
    value = item.Value;\n            if (key.Length > 0)\n            {\n                if
    (char.IsLower(key[0]) || char.IsUpper(key[0]))\n                {\n                    if
    (value.Length > 0)\n                    {\n                        return true;\n
    \                   }\n                }\n                else\n                {\n
    \                   if (value.Length > 0)\n                    {\n                        return
    false;\n                    }\n                }\n            }\n            else\n
    \           {\n                if (value.Length > 0)\n                {\n                    return
    true;\n                }\n            }\n        }\n        return false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1354fdc28deb4561b362646a741efb08>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1354fdc28deb4561b362646a741efb08>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (KeyValuePair<string, string>
    kvp in dict) {\n            if (kvp.Key.ToLower() == kvp.Key) {\n                result
    = false;\n                break;\n            }\n            if (kvp.Key.ToUpper()
    == kvp.Key) {\n                result = false;\n                break;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53520851ea234613938e781dcc07f83e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53520851ea234613938e781dcc07f83e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (string key
    in dict.Keys) {\n            if (key.Length != 1) return false;\n        }\n        foreach
    (string key in dict.Keys) {\n            if (dict[key] == null) continue;\n            if
    (dict[key].Length != 1) return false;\n        }\n        return true;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7de2ae1664f7482e81814504a6d0a9cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7de2ae1664f7482e81814504a6d0a9cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var item in dict)\n        {\n            if (item.Key.Length > 0 && item.Key.ToLower()
    == item.Key)\n                return false;\n            if (item.Key.Length >
    0 && item.Key.ToUpper() == item.Key)\n                return false;\n        }\n
    \       return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cf179e782957431ba5393922ca61953d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cf179e782957431ba5393922ca61953d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) {\n            return false;\n        }\n
    \       foreach (KeyValuePair<string, string> kvp in dict) {\n            string
    key = kvp.Key;\n            string value = kvp.Value;\n            if (key.Length
    > 0) {\n                if (Char.IsLower(key[0])) {\n                    if (value.Length
    > 0) {\n                        return true;\n                    }\n                }
    else {\n                    if (value.Length > 0) {\n                        return
    false;\n                    }\n                }\n            }\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a940c2029bf34382a00641d9845cccee>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a940c2029bf34382a00641d9845cccee>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var item in dict)\n        {\n            if (item.Key.Length != item.Value.Length)\n
    \               return false;\n            foreach (var c in item.Key)\n            {\n
    \               if (!char.IsLower(c) && !char.IsUpper(c))\n                    return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a8ae3e799c5c4f4ebb81e7f730171225>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a8ae3e799c5c4f4ebb81e7f730171225>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (KeyValuePair<string, string>
    kvp in dict) {\n            string key = kvp.Key;\n            string value =
    kvp.Value;\n            if (key.Length > 0) {\n                if (key.ToLower()
    == key) {\n                    result = false;\n                    break;\n                }\n
    \               if (key.ToUpper() == key) {\n                    result = false;\n
    \                   break;\n                }\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ce8a7fc9eb7747ad926dd7b4c7d5d5ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ce8a7fc9eb7747ad926dd7b4c7d5d5ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (var item in dict)\n        {\n
    \           if (item.Key.ToLower() == item.Key)\n            {\n                result
    = false;\n            }\n            else\n            {\n                result
    = true;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1b596be051a24cd3a034a83ff3cd9dec>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1b596be051a24cd3a034a83ff3cd9dec>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (string key in dict.Keys) {\n            string lowerCase = key.ToLower();\n            string
    upperCase = key.ToUpper();\n            if (lowerCase == upperCase)\n                continue;\n
    \           return false;\n        }\n        return true;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <392b4ceca05242f28948940349ffacf0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <392b4ceca05242f28948940349ffacf0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (var key
    in dict.Keys) {\n            if (key.Length != 1) return false;\n            if
    (dict[key.ToLower()] != dict[key.ToUpper()]) return false;\n        }\n        return
    true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:
    The given key 'P' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CheckDictCase
    (System.Collections.Generic.Dictionary`2[TKey,TValue] dict) [0x00053] in <5dbe771e4caf44b1a8f65c2ef7f9e4a0>:0
    \n  at Problem.Main (System.String[] args) [0x00027] in <5dbe771e4caf44b1a8f65c2ef7f9e4a0>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException:
    The given key 'P' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CheckDictCase
    (System.Collections.Generic.Dictionary`2[TKey,TValue] dict) [0x00053] in <5dbe771e4caf44b1a8f65c2ef7f9e4a0>:0
    \n  at Problem.Main (System.String[] args) [0x00027] in <5dbe771e4caf44b1a8f65c2ef7f9e4a0>:0
    \n"
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool ret = true;\n        foreach (string key in dict.Keys) {\n
    \           string value = dict[key];\n            if (key.Length > 0 && value.Length
    > 0) {\n                bool isUpper = char.IsUpper(key[0]); \n                bool
    isLower = char.IsLower(key[0]); \n                if (isUpper != isLower) {\n
    \                   ret = false;\n                    break;\n                }\n
    \           }\n        }\n        return ret;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <189c217aee2248fcaf1c1a0c3555c2cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <189c217aee2248fcaf1c1a0c3555c2cb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (KeyValuePair<string, string>
    kvp in dict) {\n            if (kvp.Key.Length != kvp.Value.Length) {\n                result
    = false;\n                break;\n            }\n            string lowerCase
    = kvp.Key.ToLower();\n            string upperCase = kvp.Key.ToUpper();\n            if
    (lowerCase != kvp.Value || upperCase != kvp.Value) {\n                result =
    false;\n                break;\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <75732528e3cc4efeaa4aae65a11bcf1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <75732528e3cc4efeaa4aae65a11bcf1a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys)\n        {\n            if (key.Length > 0)\n            {\n
    \               if (Char.IsLower(key[0]) || Char.IsUpper(key[0]))\n                {\n
    \                   if (!dict.ContainsKey(key.ToLower()))\n                        return
    false;\n                }\n                else\n                {\n                    if
    (!dict.ContainsKey(key.ToUpper()))\n                        return false;\n                }\n
    \           }\n        }\n        return true;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6e544aea31ef48d7b0aeef6ae58af221>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6e544aea31ef48d7b0aeef6ae58af221>:0
    \n"
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys)\n        {\n            if (key.Length > 0)\n            {\n
    \               if (char.IsLower(key[0]) || char.IsUpper(key[0]))\n                {\n
    \                   if (!dict.ContainsKey(key.ToLower()))\n                        return
    false;\n                }\n                else\n                {\n                    if
    (!dict.ContainsKey(key.ToUpper()))\n                        return false;\n                }\n
    \           }\n        }\n        return true;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <97fd51b2915d4c17a4e9625b4ec0f71c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <97fd51b2915d4c17a4e9625b4ec0f71c>:0
    \n"
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys)\n        {\n            if (key.Length > 0)\n            {\n
    \               if (char.IsLower(key[0]) || char.IsUpper(key[0]))\n                    return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c93d66c16ff547199f56fc9069bf9584>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c93d66c16ff547199f56fc9069bf9584>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool ret = true;\n        foreach (var key in dict.Keys) {\n
    \           if (key.Length > 0) {\n                string lower = key.ToLower();\n
    \               string upper = key.ToUpper();\n                if (lower != upper)
    {\n                    ret = false;\n                    break;\n                }\n
    \           }\n        }\n        return ret;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e075cf39d8c748d29cf0d2d68115c790>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e075cf39d8c748d29cf0d2d68115c790>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (KeyValuePair<string, string>
    entry in dict)\n        {\n            string key = entry.Key;\n            string
    value = entry.Value;\n            if (key.Length != value.Length)\n            {\n
    \               result = false;\n                break;\n            }\n            else\n
    \           {\n                for (int i = 0; i < key.Length; i++)\n                {\n
    \                   if (char.IsLower(key[i]) != char.IsLower(value[i]))\n                    {\n
    \                       result = false;\n                        break;\n                    }\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0eb757422b134b318e1e18e10eaecd98>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0eb757422b134b318e1e18e10eaecd98>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) {\n            return false;\n        }\n
    \       foreach (var key in dict.Keys) {\n            string lowerCase = key.ToLower();\n
    \           string upperCase = key.ToUpper();\n            if (lowerCase == upperCase)
    {\n                continue;\n            }\n            return false;\n        }\n
    \       return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6e32ddb6eb384d059f218883593154ec>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6e32ddb6eb384d059f218883593154ec>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) {\n            return false;\n        }\n
    \       foreach (KeyValuePair<string, string> kvp in dict) {\n            string
    key = kvp.Key;\n            string value = kvp.Value;\n            if (key.Length
    > 0) {\n                if (key.ToLower() == key) {\n                    string
    lowerCase = value.ToLower();\n                    if (lowerCase == value) {\n
    \                       return true;\n                    }\n                }\n
    \               else {\n                    string upperCase = value.ToUpper();\n
    \                   if (upperCase == value) {\n                        return
    true;\n                    }\n                }\n            }\n            else
    {\n                if (value.ToLower() == value) {\n                    return
    true;\n                }\n                else {\n                    string upperCase
    = value.ToUpper();\n                    if (upperCase == value) {\n                        return
    true;\n                    }\n                }\n            }\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0c9b4074d5f443f187f35e808f247d2b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0c9b4074d5f443f187f35e808f247d2b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (KeyValuePair<string, string> kvp in dict)\n        {\n            string key
    = kvp.Key;\n            string value = kvp.Value;\n            if (key.Length
    > 0 && value.Length > 0)\n            {\n                if (Char.IsUpper(key[0])
    && Char.IsLower(key[0]))\n                {\n                    string upper
    = key.Substring(1);\n                    string lower = value.Substring(1);\n
    \                   if (upper.Equals(lower))\n                    {\n                        string
    upper2 = upper.ToUpper();\n                        string lower2 = lower.ToLower();\n
    \                       if (upper2.Equals(lower2))\n                        {\n
    \                           if (upper2.Length > lower2.Length)\n                                return
    false;\n                        }\n                    }\n                }\n
    \               else\n                {\n                    if (Char.IsLower(key[0])
    && Char.IsUpper(key[0]))\n                    {\n                        string
    upper = key.Substring(1);\n                        string lower = value.Substring(1);\n
    \                       if (upper.Equals(lower))\n                        {\n
    \                           string upper2 = upper.ToUpper();\n                            string
    lower2 = lower.ToLower();\n                            if (upper2.Equals(lower2))\n
    \                           {\n                                if (upper2.Length
    > lower2.Length)\n                                    return false;\n                            }\n
    \                       }\n                    }\n                }\n            }\n
    \       }\n        return true;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b744ca58b3d24df394c9e1063cfb9a30>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b744ca58b3d24df394c9e1063cfb9a30>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var item in dict)\n        {\n            string key = item.Key;\n            string
    value = item.Value;\n            if (key.Length > 0 && value.Length > 0)\n            {\n
    \               if (Char.IsLower(key[0]) || Char.IsUpper(key[0]))\n                {\n
    \                   if (Char.IsLower(value[0]) || Char.IsUpper(value[0]))\n                    {\n
    \                       return true;\n                    }\n                }\n
    \               else\n                {\n                    if (Char.IsLower(value[0])
    || Char.IsUpper(value[0]))\n                    {\n                        return
    false;\n                    }\n                }\n            }\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8dc32800e20a4f80a2c81a1be1a64228>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8dc32800e20a4f80a2c81a1be1a64228>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys)\n        {\n            string lowerKey = key.ToLower();\n
    \           string upperKey = key.ToUpper();\n            if (lowerKey == upperKey)\n
    \               continue;\n            if (dict.ContainsKey(lowerKey))\n                return
    false;\n            if (dict.ContainsKey(upperKey))\n                return false;\n
    \       }\n        return true;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <884ab958ff8c46dc86107733608ae64a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <884ab958ff8c46dc86107733608ae64a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var item in dict)\n        {\n            if (item.Key.Length != item.Value.Length)\n
    \               return false;\n        }\n        return true;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <099610702a954ff099334c7a2d155af3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <099610702a954ff099334c7a2d155af3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800165
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool ret = true;\n        foreach (var item in dict) {\n            string
    key = item.Key;\n            string value = item.Value;\n            bool isUpper
    = char.IsUpper(value);\n            bool isLower = char.IsLower(value);\n            if
    (isUpper != isLower) {\n                ret = false;\n            }\n        }\n
    \       return ret;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp599a2wgi.cs(23,41): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmp599a2wgi.cs(24,41): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    '
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys)\n        {\n            if (key.Length > 0)\n            {\n
    \               if (Char.IsLower(key[0]) || Char.IsUpper(key[0]))\n                    return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <19dd7dcbd6ea48b5b7422a98bd0bebe5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <19dd7dcbd6ea48b5b7422a98bd0bebe5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (var item in dict) {\n            string
    key = item.Key;\n            string value = item.Value;\n            bool isUpper
    = char.IsUpper(key[0]);\n            bool isLower = char.IsLower(key[0]);\n            if
    (isUpper != isLower) {\n                result = false;\n                break;\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a2cf4b37d8af4049a48169eef18cda25>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a2cf4b37d8af4049a48169eef18cda25>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) {\n            return false;\n        }\n
    \       bool isStringInLowerCase = true;\n        bool isStringInUpperCase = true;\n
    \       foreach (KeyValuePair<string, string> kvp in dict) {\n            if (kvp.Key.Length
    > 0) {\n                isStringInLowerCase = isStringInLowerCase && kvp.Key.ToLower()
    == kvp.Key;\n                isStringInUpperCase = isStringInUpperCase && kvp.Key.ToUpper()
    == kvp.Key;\n            }\n        }\n        return isStringInLowerCase && isStringInUpperCase;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <907e26e8511b46d58841ceefb6e306d8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <907e26e8511b46d58841ceefb6e306d8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var item in dict)\n        {\n            if (item.Key.ToLower() == item.Key.ToUpper())\n
    \               return false;\n        }\n        return true;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c7125bba439d4deeb51e64c6177c3825>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c7125bba439d4deeb51e64c6177c3825>:0
    \n"
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (string key in dict.Keys) {\n            if (key.Length > 0)\n                return
    true;\n        }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fa3cf2c63b834f6b8e75802a4db5ee64>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fa3cf2c63b834f6b8e75802a4db5ee64>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (string key in dict.Keys)\n        {\n            if (key.Length > 0)\n            {\n
    \               if (char.IsLower(key[0]) || char.IsUpper(key[0]))\n                    return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cf97c874381d43989215ed158183bc7b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cf97c874381d43989215ed158183bc7b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (string key
    in dict.Keys) {\n            if (key.Length > 0) return true;\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d709e66bda154f22a2fe57a5bf133eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d709e66bda154f22a2fe57a5bf133eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (string key in dict.Keys)\n        {\n            string lowerCase = key.ToLower();\n
    \           string upperCase = key.ToUpper();\n            if (lowerCase == upperCase)\n
    \               continue;\n            if (dict.ContainsKey(lowerCase))\n                return
    false;\n            if (dict.ContainsKey(upperCase))\n                return false;\n
    \       }\n        return true;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1daab0b05fef42ab9fe4ea9ea32c404a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1daab0b05fef42ab9fe4ea9ea32c404a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys)\n        {\n            if (key.Length != 1)\n                return
    false;\n        }\n        foreach (var key in dict.Keys)\n        {\n            if
    (key.Length != 0)\n                return false;\n        }\n        return true;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9eae197202df44ba9138f86135c5d589>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9eae197202df44ba9138f86135c5d589>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (string key in dict.Keys)\n        {\n            string lowerCaseKey = key.ToLower();\n
    \           string upperCaseKey = key.ToUpper();\n            if (lowerCaseKey
    != upperCaseKey)\n                return false;\n        }\n        return true;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6a1a075e0d66489ba2e16a85cfb1fbf9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6a1a075e0d66489ba2e16a85cfb1fbf9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys) {\n            string lowerCase = key.ToLower();\n            string
    upperCase = key.ToUpper();\n            if (lowerCase == upperCase)\n                continue;\n
    \           return false;\n        }\n        return true;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8439ba900d224cab881b6ebabd3b41b2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8439ba900d224cab881b6ebabd3b41b2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var item in dict)\n        {\n            if (item.Key.Length != item.Value.Length)\n
    \               return false;\n            foreach (var c in item.Key)\n            {\n
    \               if (c < 'A' || c > 'Z')\n                    return false;\n            }\n
    \           foreach (var c in item.Value)\n            {\n                if (c
    < 'a' || c > 'z')\n                    return false;\n            }\n        }\n
    \       return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53b672b77da54794abed355ee2ba2da4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53b672b77da54794abed355ee2ba2da4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var item in dict)\n        {\n            if (item.Key.Length > 0 && item.Key.ToLower()
    == item.Key)\n                return false;\n            if (item.Key.Length >
    0 && item.Key.ToUpper() == item.Key)\n                return false;\n        }\n
    \       return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cf179e782957431ba5393922ca61953d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cf179e782957431ba5393922ca61953d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (var key in dict.Keys) {\n
    \           if (key.Length > 0) {\n                string lowerCase = key.ToLower();\n
    \               string upperCase = key.ToUpper();\n                if (lowerCase
    != upperCase) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <75453310eb58432fa0e207dba26939c8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <75453310eb58432fa0e207dba26939c8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (KeyValuePair<string,string> kvp in dict)\n        {\n            if (kvp.Key.Length
    > 0 && kvp.Key.ToLower() == kvp.Key)\n            {\n                return true;\n
    \           }\n            else if (kvp.Key.Length > 0 && kvp.Key.ToUpper() ==
    kvp.Key)\n            {\n                return true;\n            }\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cb9cdd60c141458391af30bac8ef15c5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cb9cdd60c141458391af30bac8ef15c5>:0
    \n"
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (var item in dict) {\n            string
    key = item.Key;\n            string value = item.Value;\n            if (key.Length
    > 0) {\n                if (key.ToLower() != value.ToLower()) {\n                    result
    = false;\n                    break;\n                }\n            } else {\n
    \               if (value != value.ToUpper()) {\n                    result =
    false;\n                    break;\n                }\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c742a48c69224f6286ffb6778567adfe>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c742a48c69224f6286ffb6778567adfe>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (string key in dict.Keys)\n        {\n            if (key.Length > 0)\n            {\n
    \               if (char.IsLower(key[0]) || char.IsUpper(key[0]))\n                    return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cf97c874381d43989215ed158183bc7b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cf97c874381d43989215ed158183bc7b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) {\n            return false;\n        }\n
    \       foreach (KeyValuePair<string, string> kvp in dict) {\n            string
    key = kvp.Key;\n            string value = kvp.Value;\n            if (key.Length
    > 0 && value.Length > 0) {\n                if (char.IsLower(key[0]) || char.IsUpper(key[0]))
    {\n                    if (char.IsLower(value[0]) || char.IsUpper(value[0])) {\n
    \                       return true;\n                    }\n                }
    else {\n                    if (char.IsLower(value[0]) || char.IsUpper(value[0]))
    {\n                        return true;\n                    }\n                }\n
    \           }\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e552ac2b66949a7ba68e86c737a8a25>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e552ac2b66949a7ba68e86c737a8a25>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys)\n        {\n            if (key.Length > 0)\n            {\n
    \               if (char.IsLower(key[0]) || char.IsUpper(key[0]))\n                    return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c93d66c16ff547199f56fc9069bf9584>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c93d66c16ff547199f56fc9069bf9584>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) {\n            return false;\n        }\n
    \       foreach (var item in dict) {\n            if (item.Key.ToLower() == item.Key)
    {\n                return true;\n            }\n        }\n        return false;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <820fb6ca74d54315a42b7580b690ef0b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <820fb6ca74d54315a42b7580b690ef0b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (string key in dict.Keys) {\n            if (key.Length != 0)\n                return
    true;\n        }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <91dd6070dfd94882bbeb9676b41251da>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <91dd6070dfd94882bbeb9676b41251da>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (string key in dict.Keys)
    {\n            string value = dict[key];\n            if (key.Length != value.Length)
    {\n                result = false;\n                break;\n            }\n            foreach
    (char c in key) {\n                if (c >= 'A' && c <= 'Z') {\n                    if
    (!char.IsLower(c)) {\n                        result = false;\n                        break;\n
    \                   }\n                } else if (c >= 'a' && c <= 'z') {\n                    if
    (!char.IsUpper(c)) {\n                        result = false;\n                        break;\n
    \                   }\n                } else {\n                    result =
    false;\n                    break;\n                }\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b50f737b8bf449b481c6f5242f6ed1c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b50f737b8bf449b481c6f5242f6ed1c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (KeyValuePair<string, string> kvp in dict)\n        {\n            if (kvp.Key.ToLower()
    == kvp.Key)\n                return true;\n            if (kvp.Key.ToUpper() ==
    kvp.Key)\n                return true;\n        }\n        return false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1172ad92ba734e71a079d7b9abd1be47>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1172ad92ba734e71a079d7b9abd1be47>:0
    \n"
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) {\n            return false;\n        }\n
    \       foreach (var key in dict.Keys) {\n            if (key.Length > 0) {\n
    \               string lowerCase = key.ToLower();\n                string upperCase
    = key.ToUpper();\n                if (lowerCase == upperCase) {\n                    return
    true;\n                }\n            }\n        }\n        return false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <55700aef770a476ab34fd00b50d0792c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <55700aef770a476ab34fd00b50d0792c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        bool
    isUpper = true;\n        bool isLower = true;\n        foreach (var key in dict.Keys)\n
    \       {\n            if (isUpper && char.IsUpper(key[0]))\n            {\n                isUpper
    = false;\n            }\n            else if (isLower && char.IsLower(key[0]))\n
    \           {\n                isLower = false;\n            }\n            else\n
    \           {\n                return false;\n            }\n        }\n        return
    isUpper && isLower;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bef7133358a74805a313f5ffc313399f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bef7133358a74805a313f5ffc313399f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (KeyValuePair<string, string> kvp in dict)\n        {\n            if (kvp.Key.ToLower()
    == kvp.Key)\n                return true;\n            if (kvp.Key.ToUpper() ==
    kvp.Key)\n                return true;\n        }\n        return false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1172ad92ba734e71a079d7b9abd1be47>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1172ad92ba734e71a079d7b9abd1be47>:0
    \n"
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (KeyValuePair<string,
    string> kvp in dict) {\n            if (kvp.Key.Length > 0) return true;\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <484bfce22a384d228114ec424fe65396>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <484bfce22a384d228114ec424fe65396>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) {\n            return false;\n        }\n
    \       foreach (var key in dict.Keys) {\n            if (key.Length > 0) {\n
    \               if (char.IsLower(key[0])) {\n                    if (!char.IsUpper(key[0]))
    {\n                        return false;\n                    }\n                }\n
    \               else {\n                    if (char.IsUpper(key[0])) {\n                        return
    false;\n                    }\n                }\n            }\n        }\n        return
    true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af767ddea09f44f788ed15dccf3e95c9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <af767ddea09f44f788ed15dccf3e95c9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (var item in dict)\n        {\n
    \           string key = item.Key;\n            string value = item.Value;\n            if
    (key.Length > 0)\n            {\n                if (key.ToLower() == key)\n                {\n
    \                   result = false;\n                    break;\n                }\n
    \           }\n            else\n            {\n                if (value.ToUpper()
    == value)\n                {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <528fb665e764471cae6786e1ecd8830d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <528fb665e764471cae6786e1ecd8830d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (var item
    in dict) {\n            if (item.Key.Length != item.Value.Length) return false;\n
    \           foreach (char c in item.Key) {\n                if (c >= 'a' && c
    <= 'z') continue;\n                if (c >= 'A' && c <= 'Z') continue;\n                return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9df13c431e84f448de73718b8ed1816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9df13c431e84f448de73718b8ed1816>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (KeyValuePair<string, string> kvp in dict)\n        {\n            if (kvp.Key.ToLower()
    == kvp.Key)\n                return true;\n            if (kvp.Key.ToUpper() ==
    kvp.Key)\n                return true;\n        }\n        return false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1172ad92ba734e71a079d7b9abd1be47>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1172ad92ba734e71a079d7b9abd1be47>:0
    \n"
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (string key in dict.Keys)
    {\n            string lowerCase = key.ToLower();\n            string upperCase
    = key.ToUpper();\n            if (lowerCase != upperCase) {\n                result
    = false;\n                break;\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6c4ddbb58c1841d7a4137d753a7cd99f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6c4ddbb58c1841d7a4137d753a7cd99f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys)\n        {\n            if (key.Length > 0)\n            {\n
    \               if (char.IsLower(key[0]) || char.IsUpper(key[0]))\n                    return
    false;\n            }\n            else\n            {\n                if (char.IsLower(key[0])
    || char.IsUpper(key[0]))\n                    return false;\n            }\n        }\n
    \       return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6b3bcc86da2b42d29bc518ae52cc1d77>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6b3bcc86da2b42d29bc518ae52cc1d77>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (string key
    in dict.Keys) {\n            if (key.Length > 0 && char.IsLower(key[0])) {\n                if
    (dict.ContainsKey(key.ToUpper())) {\n                    return false;\n                }\n
    \           } else {\n                if (dict.ContainsKey(key.ToLower())) {\n
    \                   return false;\n                }\n            }\n        }\n
    \       return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7e91e82d1a7b488da64dd289c86f72b5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7e91e82d1a7b488da64dd289c86f72b5>:0
    \n"
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (string key in dict.Keys)
    {\n            if (key.Length > 0) {\n                string lowerCaseKey = key.ToLower();\n
    \               string upperCaseKey = key.ToUpper();\n                if (lowerCaseKey
    != upperCaseKey) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c8bfa63a982e457eb0b42d8e759ec1c4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c8bfa63a982e457eb0b42d8e759ec1c4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys)\n            if (key.Length > 0)\n                return
    true;\n        return false;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6232429d84094abf9543bea4cf343885>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6232429d84094abf9543bea4cf343885>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (KeyValuePair<string,
    string> kvp in dict) {\n            if (kvp.Key.Length != kvp.Value.Length) return
    false;\n            foreach (char c in kvp.Key) {\n                if (c >= 'A'
    && c <= 'Z') continue;\n                if (c >= 'a' && c <= 'z') continue;\n
    \               return false;\n            }\n        }\n        return true;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39733e4c65ae4e4e967a1347d96e91b1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39733e4c65ae4e4e967a1347d96e91b1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (string key
    in dict.Keys) {\n            string value = dict[key];\n            if (key.Length
    != value.Length) return false;\n            bool isUpper = false;\n            bool
    isLower = false;\n            for (int i = 0; i < key.Length; i++) {\n                if
    (char.IsUpper(key[i])) isUpper = true;\n                if (char.IsLower(key[i]))
    isLower = true;\n            }\n            if (isUpper != isLower) return false;\n
    \       }\n        return true;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a61f4e8fa7404f508aac71b1977c6d9b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a61f4e8fa7404f508aac71b1977c6d9b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool ret = true;\n        foreach (KeyValuePair<string, string>
    kvp in dict) {\n            string key = kvp.Key;\n            string val = kvp.Value;\n
    \           if (key.Length > 0 && val.Length > 0) {\n                if (key.Length
    == val.Length) {\n                    for (int i = 0; i < key.Length; i++) {\n
    \                       if (key[i] >= 'A' && key[i] <= 'Z') {\n                            if
    (key[i] != val[i]) {\n                                ret = false;\n                                break;\n
    \                           }\n                        } else {\n                            if
    (key[i] != val[i]) {\n                                ret = false;\n                                break;\n
    \                           }\n                        }\n                    }\n
    \               } else {\n                    ret = false;\n                    break;\n
    \               }\n            } else {\n                ret = false;\n                break;\n
    \           }\n        }\n        return ret;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3c17010e5bae4aa6aba7d64863580eca>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3c17010e5bae4aa6aba7d64863580eca>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (string key
    in dict.Keys) {\n            string value = dict[key];\n            if (key.Length
    > 0 && value.Length > 0) {\n                char firstChar = key[0];\n                char
    lastChar = key[key.Length - 1];\n                if (firstChar == lastChar) {\n
    \                   string lowerCase = key.ToLower();\n                    string
    upperCase = key.ToUpper();\n                    if (lowerCase == upperCase) {\n
    \                       continue;\n                    }\n                }\n
    \           }\n            return false;\n        }\n        return true;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c8a84cb8a14fdaad9500d5a430d485>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <57c8a84cb8a14fdaad9500d5a430d485>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (KeyValuePair<string,
    string> kvp in dict) {\n            if (kvp.Key.Length != kvp.Value.Length) return
    false;\n            foreach (char c in kvp.Key) {\n                if (c >= 'A'
    && c <= 'Z') continue;\n                if (c >= 'a' && c <= 'z') continue;\n
    \               return false;\n            }\n        }\n        return true;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39733e4c65ae4e4e967a1347d96e91b1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39733e4c65ae4e4e967a1347d96e91b1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (KeyValuePair<string, string>
    kvp in dict) {\n            string key = kvp.Key;\n            string value =
    kvp.Value;\n            if (key.Length > 0 && value.Length > 0) {\n                if
    (key.ToLower() == value.ToLower()) {\n                    result = true;\n                }\n
    \               else {\n                    result = false;\n                    break;\n
    \               }\n            }\n            else {\n                result =
    false;\n                break;\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f7650dcc69644e5bec18294c685fadf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f7650dcc69644e5bec18294c685fadf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (string key in dict.Keys)
    {\n            string lowerKey = key.ToLower();\n            string upperKey =
    key.ToUpper();\n            if (dict.ContainsKey(lowerKey)) {\n                if
    (dict[key] != dict[lowerKey]) {\n                    result = false;\n                    break;\n
    \               }\n            }\n            if (dict.ContainsKey(upperKey))
    {\n                if (dict[key] != dict[upperKey]) {\n                    result
    = false;\n                    break;\n                }\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1514aff6eac64e5e94901dd3195fa078>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1514aff6eac64e5e94901dd3195fa078>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (KeyValuePair<string, string>
    kvp in dict) {\n            string key = kvp.Key;\n            string value =
    kvp.Value;\n            if (key.Length > 0) {\n                bool isUpper =
    char.IsUpper(key[0]);\n                bool isLower = char.IsLower(key[0]);\n
    \               if (isUpper != isLower) {\n                    result = false;\n
    \                   break;\n                }\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <688601ffc97140e2ada82ad4e510b910>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <688601ffc97140e2ada82ad4e510b910>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (string key
    in dict.Keys) {\n            string lowerCase = key.ToLower();\n            string
    upperCase = key.ToUpper();\n            if (lowerCase == upperCase) {\n                continue;\n
    \           }\n            if (dict.ContainsKey(lowerCase)) {\n                return
    false;\n            }\n            if (dict.ContainsKey(upperCase)) {\n                return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0261e0ac73a34512be6fec6a53b3c2dd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0261e0ac73a34512be6fec6a53b3c2dd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var item in dict)\n        {\n            if (item.Key.Length > 0)\n            {\n
    \               if (item.Key.ToLower() == item.Key)\n                {\n                    return
    true;\n                }\n                else\n                {\n                    if
    (item.Key.ToUpper() == item.Key)\n                    {\n                        return
    true;\n                    }\n                }\n            }\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3c0a7977d348405fb108f3bd2f8b21e7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3c0a7977d348405fb108f3bd2f8b21e7>:0
    \n"
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var item in dict)\n        {\n            if (item.Key.ToLower() == item.Key)\n
    \               return true;\n            if (item.Key.ToUpper() == item.Key)\n
    \               return true;\n        }\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ccf4a3dca91842b581ce565ed5078f38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ccf4a3dca91842b581ce565ed5078f38>:0
    \n"
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys)\n        {\n            if (key.Length > 0)\n            {\n
    \               if (char.IsLower(key[0]) || char.IsUpper(key[0]))\n                    return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c93d66c16ff547199f56fc9069bf9584>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c93d66c16ff547199f56fc9069bf9584>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (var item in dict) {\n            if
    (item.Key.ToLower() != item.Key.ToUpper()) {\n                result = false;\n
    \               break;\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9e397cf5870c4d5c9e4173d016737933>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9e397cf5870c4d5c9e4173d016737933>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (var key
    in dict.Keys) {\n            if (key.Length != 1) return false;\n        }\n        foreach
    (var key in dict.Keys) {\n            if (key.Length == 1) return true;\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dc90a46c088c41849845247a30cfcb82>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dc90a46c088c41849845247a30cfcb82>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var item in dict)\n        {\n            string key = item.Key;\n            string
    value = item.Value;\n            if (key.Length > 0)\n            {\n                if
    (char.IsLower(key[0]) || char.IsUpper(key[0]))\n                {\n                    if
    (value.Length > 0)\n                    {\n                        if (char.IsLower(value[0])
    || char.IsUpper(value[0]))\n                        {\n                            if
    (key.Length > 1)\n                            {\n                                if
    (char.IsLower(key[1]) || char.IsUpper(key[1]))\n                                {\n
    \                                   if (value.Length > 1)\n                                    {\n
    \                                       if (char.IsLower(value[1]) || char.IsUpper(value[1]))\n
    \                                       {\n                                            return
    true;\n                                        }\n                                    }\n
    \                               }\n                            }\n                        }\n
    \                   }\n                }\n            }\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c3e9d5ff972d47688fe836e5358d0657>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c3e9d5ff972d47688fe836e5358d0657>:0
    \n"
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool ret = true;\n        foreach (string key in dict.Keys) {\n
    \           if (key.Length > 0) {\n                string lowerKey = key.ToLower();\n
    \               string upperKey = key.ToUpper();\n                if (lowerKey
    != upperKey) {\n                    ret = false;\n                    break;\n
    \               }\n            }\n        }\n        return ret;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0c10d633245f486f88ba61b42bb42b42>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0c10d633245f486f88ba61b42bb42b42>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) {\n            return false;\n        }\n
    \       foreach (var item in dict) {\n            if (item.Key.ToLower() == item.Key.ToUpper())
    {\n                return false;\n            }\n        }\n        return true;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5785da49f19f4b24ac148015918d5c6e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5785da49f19f4b24ac148015918d5c6e>:0
    \n"
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool ret = true;\n        foreach (KeyValuePair<string, string>
    kvp in dict) {\n            string key = kvp.Key;\n            string value =
    kvp.Value;\n            if (key.Length > 0 && value.Length > 0) {\n                if
    (key.ToLower() == value.ToLower()) {\n                    ret = true;\n                }
    else {\n                    ret = false;\n                    break;\n                }\n
    \           } else {\n                ret = false;\n                break;\n            }\n
    \       }\n        return ret;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8e723c88ba0f4a58978105e7594c8639>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8e723c88ba0f4a58978105e7594c8639>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool ret = true;\n        foreach (KeyValuePair<string, string>
    kvp in dict) {\n            if (kvp.Key.Length > 0) {\n                ret = ret
    && (kvp.Key.ToLower() == kvp.Key);\n            }\n            if (kvp.Key.Length
    > 0) {\n                ret = ret && (kvp.Key.ToUpper() == kvp.Key);\n            }\n
    \       }\n        return ret;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2b276b4e5ee14026ba8fed6f40a7c973>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2b276b4e5ee14026ba8fed6f40a7c973>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) {\n            return false;\n        }\n
    \       foreach (var item in dict) {\n            if (item.Key.ToLower() == item.Key.ToUpper())
    {\n                return false;\n            }\n        }\n        return true;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5785da49f19f4b24ac148015918d5c6e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5785da49f19f4b24ac148015918d5c6e>:0
    \n"
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (KeyValuePair<string, string>
    kvp in dict)\n        {\n            if (kvp.Key.ToLower() != kvp.Key.ToUpper())\n
    \           {\n                result = false;\n                break;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ed96774ce42446fdb40e94429aa07a4c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ed96774ce42446fdb40e94429aa07a4c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys)\n        {\n            if (key.Length > 0)\n            {\n
    \               if (char.IsLower(key[0]) || char.IsUpper(key[0]))\n                    return
    false;\n            }\n            else\n            {\n                if (char.IsLower(key)
    || char.IsUpper(key))\n                    return false;\n            }\n        }\n
    \       return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbnskuszo.cs(30,34): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpbnskuszo.cs(30,55): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    '
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (string key
    in dict.Keys) {\n            string lowerCase = key.ToLower();\n            string
    upperCase = key.ToUpper();\n            if (lowerCase != upperCase) {\n                return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71283459e1cb429d962b016a0fa8a08a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71283459e1cb429d962b016a0fa8a08a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (string key in dict.Keys)
    {\n            string value = dict[key];\n            bool isUpper = char.IsUpper(key[0]);\n
    \           bool isLower = char.IsLower(key[0]);\n            if (isUpper != isLower)
    {\n                result = false;\n                break;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7bec2d36d6044b86a7078310cd79ef2e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7bec2d36d6044b86a7078310cd79ef2e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (var item in dict)\n        {\n
    \           if (item.Key.Length > 0)\n            {\n                if (item.Key.ToLower()
    != item.Key)\n                {\n                    result = false;\n                    break;\n
    \               }\n            }\n            else\n            {\n                if
    (item.Key.ToUpper() != item.Key)\n                {\n                    result
    = false;\n                    break;\n                }\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba106d4330ec4ec98db80f1fbf032b3d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba106d4330ec4ec98db80f1fbf032b3d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys)\n        {\n            if (key.Length > 0)\n            {\n
    \               if (char.IsLower(key[0]) || char.IsUpper(key[0]))\n                {\n
    \                   if (!dict.ContainsKey(key.ToLower()))\n                        return
    false;\n                }\n                else\n                {\n                    if
    (!dict.ContainsKey(key.ToUpper()))\n                        return false;\n                }\n
    \           }\n        }\n        return true;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <97fd51b2915d4c17a4e9625b4ec0f71c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <97fd51b2915d4c17a4e9625b4ec0f71c>:0
    \n"
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (var item in dict) {\n            if
    (item.Key.ToLower() == item.Key.ToUpper()) {\n                result = false;\n
    \               break;\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <172d02344adb484ebdd4c32cdcc53a40>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <172d02344adb484ebdd4c32cdcc53a40>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) {\n            return false;\n        }\n
    \       foreach (var key in dict.Keys) {\n            string lowerKey = key.ToLower();\n
    \           string upperKey = key.ToUpper();\n            if (lowerKey == upperKey)
    {\n                continue;\n            }\n            if (dict.ContainsKey(lowerKey))
    {\n                return false;\n            }\n            if (dict.ContainsKey(upperKey))
    {\n                return false;\n            }\n        }\n        return true;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <835d93d5424a443d8892a1abf77a3f13>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <835d93d5424a443d8892a1abf77a3f13>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (var item in dict) {\n            if
    (item.Key.ToLower() != item.Key.ToUpper()) {\n                result = false;\n
    \               break;\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9e397cf5870c4d5c9e4173d016737933>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9e397cf5870c4d5c9e4173d016737933>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys)\n        {\n            if (key.Length > 0)\n            {\n
    \               if (char.IsLower(key[0]) || char.IsUpper(key[0]))\n                {\n
    \                   if (!dict.ContainsKey(key.ToLower()))\n                        return
    false;\n                }\n                else\n                {\n                    if
    (!dict.ContainsKey(key.ToUpper()))\n                        return false;\n                }\n
    \           }\n        }\n        return true;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <97fd51b2915d4c17a4e9625b4ec0f71c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <97fd51b2915d4c17a4e9625b4ec0f71c>:0
    \n"
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (KeyValuePair<string, string>
    kvp in dict) {\n            string key = kvp.Key;\n            string value =
    kvp.Value;\n            if (key.Length != value.Length) {\n                result
    = false;\n                break;\n            }\n            char[] chars = key.ToCharArray();\n
    \           char[] chars2 = value.ToCharArray();\n            Array.Sort(chars);\n
    \           Array.Sort(chars2);\n            bool same = true;\n            for
    (int i = 0; i < chars.Length; i++) {\n                if (chars[i] != chars2[i])
    {\n                    same = false;\n                    break;\n                }\n
    \           }\n            if (same) {\n                result = true;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <48c495c0d8154046a0f1ef7055112ef8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <48c495c0d8154046a0f1ef7055112ef8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (string key
    in dict.Keys) {\n            if (key.Length > 0) return true;\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d709e66bda154f22a2fe57a5bf133eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d709e66bda154f22a2fe57a5bf133eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (string key in dict.Keys)\n        {\n            if (key.Length > 0)\n            {\n
    \               string lowerCase = key.ToLower();\n                string upperCase
    = key.ToUpper();\n                if (lowerCase == upperCase)\n                {\n
    \                   return true;\n                }\n            }\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71dfa504ba4f4ce7bd947f964d926f19>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71dfa504ba4f4ce7bd947f964d926f19>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (var item in dict)\n        {\n
    \           if (item.Key.Length > 0)\n            {\n                if (item.Key.ToLower()
    != item.Key)\n                {\n                    result = false;\n                    break;\n
    \               }\n            }\n            else\n            {\n                if
    (item.Key.ToUpper() != item.Key)\n                {\n                    result
    = false;\n                    break;\n                }\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba106d4330ec4ec98db80f1fbf032b3d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ba106d4330ec4ec98db80f1fbf032b3d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var item in dict)\n        {\n            string key = item.Key;\n            string
    value = item.Value;\n            if (key.Length > 0 && value.Length > 0)\n            {\n
    \               char c = key[0];\n                if (c >= 'a' && c <= 'z')\n
    \               {\n                    if (value.Length == 1)\n                    {\n
    \                       if (value[0] >= 'a' && value[0] <= 'z')\n                        {\n
    \                           if (key.Length == 1)\n                            {\n
    \                               return true;\n                            }\n
    \                       }\n                    }\n                    else\n                    {\n
    \                       if (value.Length > 1)\n                        {\n                            if
    (value[0] >= 'a' && value[0] <= 'z')\n                            {\n                                if
    (key.Length > 1)\n                                {\n                                    return
    true;\n                                }\n                            }\n                        }\n
    \                   }\n                }\n                else if (c >= 'A' &&
    c <= 'Z')\n                {\n                    if (value.Length == 1)\n                    {\n
    \                       if (value[0] >= 'A' && value[0] <= 'Z')\n                        {\n
    \                           if (key.Length == 1)\n                            {\n
    \                               return true;\n                            }\n
    \                       }\n                    }\n                    else\n                    {\n
    \                       if (value.Length > 1)\n                        {\n                            if
    (value[0] >= 'A' && value[0] <= 'Z')\n                            {\n                                if
    (key.Length > 1)\n                                {\n                                    return
    true;\n                                }\n                            }\n                        }\n
    \                   }\n                }\n            }\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <649a4ec3873e40b99f6f47a5d2a07880>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <649a4ec3873e40b99f6f47a5d2a07880>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool ret = true;\n        foreach (KeyValuePair<string, string>
    kvp in dict) {\n            if (kvp.Key.Length > 0) {\n                if (kvp.Key.ToLower()
    != kvp.Key) {\n                    ret = false;\n                    break;\n
    \               }\n            }\n            else {\n                if (kvp.Key.ToUpper()
    != kvp.Key) {\n                    ret = false;\n                    break;\n
    \               }\n            }\n        }\n        return ret;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0fff03a710524de1a85eeb096a3abad7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0fff03a710524de1a85eeb096a3abad7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys)\n        {\n            if (key.Length != 1)\n                return
    false;\n        }\n        foreach (var key in dict.Keys)\n        {\n            if
    (key.Length > 1)\n                return false;\n        }\n        return true;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d8edafc13110483f8675e3579c413259>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d8edafc13110483f8675e3579c413259>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (KeyValuePair<string,string>
    kvp in dict) {\n            string key = kvp.Key;\n            string value =
    kvp.Value;\n            bool isUpper = char.IsUpper(key[0]);\n            bool
    isLower = char.IsLower(key[0]);\n            if (isUpper != isLower) {\n                result
    = false;\n                break;\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <458ee8babf3548349054f4e13c37dd5b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <458ee8babf3548349054f4e13c37dd5b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool ret = true;\n        foreach (KeyValuePair<string, string>
    kvp in dict) {\n            string key = kvp.Key;\n            string value =
    kvp.Value;\n            if (key.Length != value.Length) {\n                ret
    = false;\n                break;\n            }\n            bool foundUpper =
    false;\n            bool foundLower = false;\n            for (int i = 0; i <
    key.Length; i++) {\n                if (char.IsUpper(key[i])) {\n                    foundUpper
    = true;\n                }\n                if (char.IsLower(key[i])) {\n                    foundLower
    = true;\n                }\n            }\n            if (foundUpper && foundLower)
    {\n                ret = false;\n                break;\n            }\n        }\n
    \       return ret;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b6fd061f75c34cf489345daee99654e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b6fd061f75c34cf489345daee99654e3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (var item in dict) {\n            if
    (item.Key.Length > 0) {\n                if (item.Key.ToLower() == item.Key) {\n
    \                   result = false;\n                }\n            }\n            else
    {\n                if (item.Key.ToUpper() == item.Key) {\n                    result
    = false;\n                }\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b8354da7432b42e7b4d4e5e7b362fb1e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b8354da7432b42e7b4d4e5e7b362fb1e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (KeyValuePair<string, string>
    kvp in dict) {\n            if (kvp.Key.Length != kvp.Value.Length) {\n                result
    = false;\n                break;\n            }\n            char[] chars = kvp.Key.ToCharArray();\n
    \           char[] chars2 = kvp.Value.ToCharArray();\n            bool isUpper
    = true;\n            bool isLower = true;\n            for (int i = 0; i < chars.Length;
    i++) {\n                if (chars[i] != chars2[i]) {\n                    isUpper
    = false;\n                    isLower = false;\n                    break;\n                }\n
    \           }\n            if (isUpper != isLower) {\n                result =
    false;\n                break;\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cb51c54548f1409387846f839e99cd46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cb51c54548f1409387846f839e99cd46>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool ret = true;\n        foreach (var item in dict) {\n            if
    (item.Key.ToLower() == item.Key.ToUpper()) {\n                ret = false;\n                break;\n
    \           }\n        }\n        return ret;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <def919d5621e4f29bbf91fa050455079>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <def919d5621e4f29bbf91fa050455079>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (KeyValuePair<string,
    string> kvp in dict) {\n            string key = kvp.Key;\n            string
    value = kvp.Value;\n            if (key.Length > 0 && value.Length > 0) {\n                bool
    isUpper = char.IsUpper(key[0]); // true if the first character is upper case\n
    \               bool isLower = char.IsLower(key[0]); // true if the first character
    is lower case\n                if (isUpper != isLower) {\n                    return
    false;\n                }\n            }\n        }\n        return true;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <44fd7f98afc04d5c837d11739f0daf52>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <44fd7f98afc04d5c837d11739f0daf52>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool isAllUpper = false;\n        bool isAllLower = false;\n
    \       foreach (KeyValuePair<string, string> kvp in dict)\n        {\n            isAllUpper
    = isAllUpper || kvp.Key.ToUpper() == kvp.Key;\n            isAllLower = isAllLower
    || kvp.Key.ToLower() == kvp.Key;\n        }\n        return isAllUpper && isAllLower;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <08a26e512e5649e6833fdb79ab63e17f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <08a26e512e5649e6833fdb79ab63e17f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (string key in dict.Keys)\n        {\n            string lowerCase = key.ToLower();\n
    \           string upperCase = key.ToUpper();\n            if (lowerCase == upperCase)\n
    \               continue;\n            return false;\n        }\n        return
    true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6488686719648ddaf9cc4207de33925>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6488686719648ddaf9cc4207de33925>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (string key in dict.Keys)
    {\n            string value = dict[key];\n            if (value.Length != 0) {\n
    \               bool isUpper = char.IsUpper(value[0]);\n                bool isLower
    = char.IsLower(value[0]);\n                if (!isUpper && !isLower) {\n                    result
    = false;\n                }\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a570546ae008469185482be7d55f643d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a570546ae008469185482be7d55f643d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (var item
    in dict) {\n            if (item.Key.ToLower() == item.Key.ToUpper()) return false;\n
    \       }\n        return true;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a86ac1224afe4df2bb91c4d73c4de324>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a86ac1224afe4df2bb91c4d73c4de324>:0
    \n"
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) {\n            return false;\n        }\n
    \       foreach (var item in dict) {\n            if (item.Key.Length > 0) {\n
    \               if (item.Key.ToLower() == item.Key) {\n                    return
    true;\n                }\n            }\n        }\n        return false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0c7b31946d694463b4aced9f8e1c12b8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0c7b31946d694463b4aced9f8e1c12b8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (KeyValuePair<string, string>
    kvp in dict)\n        {\n            if (kvp.Key.ToLower() == kvp.Key)\n            {\n
    \               result = false;\n                break;\n            }\n            if
    (kvp.Key.ToUpper() == kvp.Key)\n            {\n                result = false;\n
    \               break;\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aa8525bec59a4a4f93f377dcaeaca042>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <aa8525bec59a4a4f93f377dcaeaca042>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (string key
    in dict.Keys) {\n            if (key.Length > 0) return true;\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d709e66bda154f22a2fe57a5bf133eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d709e66bda154f22a2fe57a5bf133eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (string key in dict.Keys)\n        {\n            if (key.Length > 0)\n            {\n
    \               string lowerKey = key.ToLower();\n                string upperKey
    = key.ToUpper();\n                if (lowerKey == upperKey)\n                {\n
    \                   return true;\n                }\n            }\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1c160092b68d4b2f9acdb5b324535eb4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1c160092b68d4b2f9acdb5b324535eb4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys) {\n            if (key.Length > 0)\n                return
    true;\n        }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dc8d6a551cbe4818a3992d88d756c0cf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dc8d6a551cbe4818a3992d88d756c0cf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (KeyValuePair<string, string>
    kvp in dict) {\n            string key = kvp.Key;\n            string value =
    kvp.Value;\n            if (key.Length > 0 && value.Length > 0) {\n                if
    (char.IsLower(key[0])) {\n                    result = false;\n                    break;\n
    \               }\n                if (char.IsUpper(key[0])) {\n                    result
    = false;\n                    break;\n                }\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cfe257038d74ba5a64a057fbe5e8a62>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cfe257038d74ba5a64a057fbe5e8a62>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys)\n        {\n            string lowerCase = key.ToLower();\n
    \           string upperCase = key.ToUpper();\n            if (lowerCase == upperCase)\n
    \               continue;\n            if (dict.ContainsKey(lowerCase))\n                return
    false;\n            if (dict.ContainsKey(upperCase))\n                return false;\n
    \       }\n        return true;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7ab9f806648147f0a470b48a40bd9545>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7ab9f806648147f0a470b48a40bd9545>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool ret = true;\n        foreach(KeyValuePair<string, string>
    kvp in dict) {\n            string key = kvp.Key;\n            string value =
    kvp.Value;\n            bool isUpper = char.IsUpper(key[0]);\n            bool
    isLower = char.IsLower(key[0]);\n            bool isDigit = char.IsDigit(key[0]);\n
    \           bool isAlpha = char.IsLetter(key[0]);\n            bool isAlphanumeric
    = char.IsLetterOrDigit(key[0]);\n            bool isAlphanumericOrDigit = char.IsLetterOrDigit(key[0])
    || char.IsDigit(key[0]);\n            bool isAlphanumericOrUpper = char.IsLetterOrUpper(key[0])
    || char.IsUpper(key[0]);\n            bool isAlphanumericOrLower = char.IsLetterOrLower(key[0])
    || char.IsLower(key[0]);\n            bool isAlphanumericOrUpperOrLower = char.IsLetterOrUpper(key[0])
    || char.IsUpper(key[0]) || char.IsLower(key[0]);\n            bool isAlphanumericOrUpperOrLowerOrDigit
    = char.IsLetterOrUpper(key[0]) || char.IsUpper(key[0]) || char.IsLower(key[0])
    || char.IsDigit(key[0]);\n            bool isAlphanumericOrUpperOrLowerOrDigitOrDigit
    = char.IsLetterOrUpper(key[0]) || char.IsUpper(key[0]) || char.IsLower(key[0])
    || char.IsDigit(key[0]) || char.IsDigit(key[0]);\n            bool isAlphanumericOrUpperOrLowerOrDigitOrDigitOrDigit
    = char.IsLetterOrUpper(key[0]) || char.IsUpper(key[0]) || char.IsLower(key[0])
    || char.IsDigit(key[0]) || char.IsDigit(key[0]) || char.IsDigit(key[0]);\n            bool
    isAlphanumericOrUpperOrLowerOrDigitOrDigitOrDigitOrDigit = char.IsLetterOrUpper(key[0])
    || char.IsUpper(key[0]) || char.IsLower(key[0]) || char.IsDigit(key[0]) || char.IsDigit(key[0])
    || char.IsDigit(key[0]) || char.IsDigit(key[0]);\n            bool isAlphanumericOrUpperOrLowerOrDigitOrDigitOrDigitOrDigitOrDigit
    = char.IsLetterOrUpper(key[0]) || char.IsUpper(key[0]) || char.IsLower(key[0])
    || char.IsDigit(key[0]) || char.IsDigit(key[0]) || \n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3cn4209d.cs(36,211): error CS1525: Invalid expression term ''}''

    /tmp/tmp3cn4209d.cs(36,211): error CS1002: ; expected

    /tmp/tmp3cn4209d.cs(38,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp3cn4209d.cs(48,2): error CS1513: } expected

    '
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (KeyValuePair<string,string>
    kvp in dict)\n        {\n            string key = kvp.Key;\n            string
    value = kvp.Value;\n            bool isUpper = char.IsUpper(key[0]);\n            bool
    isLower = char.IsLower(key[0]);\n            if (isUpper != isLower)\n            {\n
    \               result = false;\n                break;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <988c9aa9ab3e4aadb8b002713e22f512>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <988c9aa9ab3e4aadb8b002713e22f512>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) {\n            return false;\n        }\n
    \       foreach (var item in dict) {\n            if (item.Key.Length != item.Value.Length)
    {\n                return false;\n            }\n            foreach (char c in
    item.Key) {\n                if (!(char.IsLower(c) || char.IsUpper(c))) {\n                    return
    false;\n                }\n            }\n        }\n        return true;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6bcb0ec1a9e64fe1b3a9f90aff3e516b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6bcb0ec1a9e64fe1b3a9f90aff3e516b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (string key
    in dict.Keys) {\n            if (key.Length != 1) return false;\n            char
    c = key[0];\n            if (c >= 'a' && c <= 'z') continue;\n            if (c
    >= 'A' && c <= 'Z') continue;\n            return false;\n        }\n        return
    true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5a8830cdda6e4af4a845468afcb07a23>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5a8830cdda6e4af4a845468afcb07a23>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict == null || dict.Count == 0)\n            return false;\n
    \       foreach (KeyValuePair<string, string> kvp in dict)\n        {\n            if
    (kvp.Key.Length != kvp.Value.Length)\n                return false;\n            foreach
    (char c in kvp.Key)\n            {\n                if (c >= 'a' && c <= 'z')\n
    \                   kvp.Key = kvp.Key.ToLower();\n                else if (c >=
    'A' && c <= 'Z')\n                    kvp.Key = kvp.Key.ToUpper();\n            }\n
    \       }\n        return true;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2ejc6v9g.cs(28,21): error CS0200: Property or indexer ''KeyValuePair<string,
    string>.Key'' cannot be assigned to -- it is read only

    /tmp/tmp2ejc6v9g.cs(30,21): error CS0200: Property or indexer ''KeyValuePair<string,
    string>.Key'' cannot be assigned to -- it is read only

    '
  timestamp: 1659800167
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (var key
    in dict.Keys) {\n            if (key.Length != 1) return false;\n            if
    (dict[key.ToLower()] != dict[key.ToUpper()]) return false;\n        }\n        return
    true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:
    The given key 'P' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CheckDictCase
    (System.Collections.Generic.Dictionary`2[TKey,TValue] dict) [0x00053] in <5dbe771e4caf44b1a8f65c2ef7f9e4a0>:0
    \n  at Problem.Main (System.String[] args) [0x00027] in <5dbe771e4caf44b1a8f65c2ef7f9e4a0>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException:
    The given key 'P' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CheckDictCase
    (System.Collections.Generic.Dictionary`2[TKey,TValue] dict) [0x00053] in <5dbe771e4caf44b1a8f65c2ef7f9e4a0>:0
    \n  at Problem.Main (System.String[] args) [0x00027] in <5dbe771e4caf44b1a8f65c2ef7f9e4a0>:0
    \n"
  stdout: ''
  timestamp: 1659800164
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict == null) return false;\n        foreach (var item in
    dict) {\n            if (item.Key.ToLower() == item.Key.ToUpper()) return false;\n
    \       }\n        return true;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3a1d95f9280401e9947c971f26ab9aa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b3a1d95f9280401e9947c971f26ab9aa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool ret = true;\n        foreach (string key in dict.Keys) {\n
    \           string lowerKey = key.ToLower();\n            string upperKey = key.ToUpper();\n
    \           if (lowerKey != upperKey) {\n                ret = false;\n                break;\n
    \           }\n        }\n        return ret;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd7b6a80cef04642b05eeef59454fd1b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dd7b6a80cef04642b05eeef59454fd1b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (KeyValuePair<string, string>
    kvp in dict) {\n            string lowerCase = kvp.Key.ToLower();\n            string
    upperCase = kvp.Key.ToUpper();\n            if (lowerCase != upperCase) {\n                result
    = false;\n                break;\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <da83775564c1427897fb452262a618c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <da83775564c1427897fb452262a618c7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (KeyValuePair<string,string> kvp in dict)\n        {\n            if (kvp.Key.Length
    != kvp.Value.Length)\n                return false;\n            else if (kvp.Key.ToLower()
    == kvp.Value)\n                continue;\n            else if (kvp.Key.ToUpper()
    == kvp.Value)\n                continue;\n            else\n                return
    false;\n        }\n        return true;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f2e41f01dd1c4af98747b1bd8d2981fa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f2e41f01dd1c4af98747b1bd8d2981fa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (KeyValuePair<string, string>
    kvp in dict) {\n            string key = kvp.Key;\n            string value =
    kvp.Value;\n            if (key.Length > 0 && value.Length > 0) {\n                bool
    isUpper = char.IsUpper(key[0]);\n                bool isLower = char.IsLower(key[0]);\n
    \               if (isUpper != isLower) {\n                    result = false;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9c55077cdd344e89b203a0e67379ee89>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9c55077cdd344e89b203a0e67379ee89>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (string key in dict.Keys) {\n            string lowerCase = key.ToLower();\n            string
    upperCase = key.ToUpper();\n            if (lowerCase == upperCase)\n                return
    true;\n        }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6a50f66cfddd439ca4b9849064e840fc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6a50f66cfddd439ca4b9849064e840fc>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var item in dict)\n        {\n            if (item.Key.ToLower() == item.Key.ToUpper())\n
    \               return false;\n        }\n        return true;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c7125bba439d4deeb51e64c6177c3825>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c7125bba439d4deeb51e64c6177c3825>:0
    \n"
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (string key in dict.Keys)\n        {\n            if (key.Length > 0)\n            {\n
    \               string lowerKey = key.ToLower();\n                string upperKey
    = key.ToUpper();\n                if (lowerKey != upperKey)\n                    return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <35e3cafeca8c4572b0bba31e0e4cb799>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <35e3cafeca8c4572b0bba31e0e4cb799>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var item in dict)\n        {\n            if (item.Key.ToLower() == item.Key.ToUpper())\n
    \               return false;\n        }\n        return true;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c7125bba439d4deeb51e64c6177c3825>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c7125bba439d4deeb51e64c6177c3825>:0
    \n"
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) {\n            return false;\n        }\n
    \       foreach (var item in dict) {\n            if (item.Key.ToLower() == item.Key.ToUpper())
    {\n                return false;\n            }\n        }\n        return true;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5785da49f19f4b24ac148015918d5c6e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5785da49f19f4b24ac148015918d5c6e>:0
    \n"
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var item in dict)\n        {\n            if (item.Key.Length > 0)\n            {\n
    \               if (item.Key.ToLower() == item.Key)\n                {\n                    return
    true;\n                }\n            }\n            else\n            {\n                if
    (item.Key.ToUpper() == item.Key)\n                {\n                    return
    true;\n                }\n            }\n        }\n        return false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <862c95b92d014b3ca76aad03c75823d3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <862c95b92d014b3ca76aad03c75823d3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (string key in dict.Keys)\n            if (key.Length > 0)\n                return
    true;\n        return false;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f1558ddd34645ffafa4c1d46d82e3dd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9f1558ddd34645ffafa4c1d46d82e3dd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (var key
    in dict.Keys) {\n            if (key.Length > 0 && char.IsLower(key[0]) == false
    && char.IsUpper(key[0]) == false) {\n                return false;\n            }\n
    \       }\n        return true;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <23e96357b4fe4a31a2e7dd3217a4c137>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <23e96357b4fe4a31a2e7dd3217a4c137>:0
    \n"
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool isCase = true;\n        foreach (var item in dict) {\n            isCase
    = isCase && (item.Key.ToLower() == item.Key.ToUpper());\n        }\n        return
    isCase;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <83216939c26c4ce7bb38e7329e5a5898>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <83216939c26c4ce7bb38e7329e5a5898>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) {\n            return false;\n        }\n
    \       foreach (var item in dict) {\n            if (item.Key.Length != item.Value.Length)
    {\n                return false;\n            }\n            foreach (char c in
    item.Key) {\n                if (c < 'A' || c > 'Z') {\n                    return
    false;\n                }\n            }\n        }\n        return true;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dfab134e41f24e9cbc8cb4269ed816b0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dfab134e41f24e9cbc8cb4269ed816b0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (KeyValuePair<string, string>
    entry in dict)\n        {\n            string key = entry.Key;\n            string
    value = entry.Value;\n            if (key.Length > 0 && value.Length > 0)\n            {\n
    \               if (key.ToLower() == value.ToLower())\n                {\n                    result
    = true;\n                }\n                else\n                {\n                    result
    = false;\n                    break;\n                }\n            }\n            else\n
    \           {\n                result = false;\n                break;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2e807eadd2bd44dab0756d948d488837>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2e807eadd2bd44dab0756d948d488837>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (KeyValuePair<string, string>
    kvp in dict) {\n            if (kvp.Key.ToLower() == kvp.Key.ToUpper()) {\n                result
    = false;\n                break;\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <79578e5ad2aa426186ca2c28b9b0aa92>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <79578e5ad2aa426186ca2c28b9b0aa92>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (var item in dict) {\n            string
    key = item.Key;\n            string value = item.Value;\n            if (key.Length
    != value.Length) {\n                result = false;\n                break;\n
    \           }\n            char[] chars = key.ToCharArray();\n            char[]
    chars2 = value.ToCharArray();\n            bool isUpper = true;\n            bool
    isLower = true;\n            foreach (char c in chars) {\n                if (char.IsUpper(c))
    {\n                    isUpper = false;\n                }\n                if
    (char.IsLower(c)) {\n                    isLower = false;\n                }\n
    \           }\n            if (isUpper != isLower) {\n                result =
    false;\n                break;\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0cf0c2dc93864463a94f7d5276ecf1a7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0cf0c2dc93864463a94f7d5276ecf1a7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var item in dict)\n        {\n            if (item.Key.ToLower() == item.Key)\n
    \               return true;\n            if (item.Key.ToUpper() == item.Key)\n
    \               return true;\n        }\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ccf4a3dca91842b581ce565ed5078f38>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ccf4a3dca91842b581ce565ed5078f38>:0
    \n"
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (var key in dict.Keys) {\n
    \           string lowerKey = key.ToLower();\n            string upperKey = key.ToUpper();\n
    \           if (dict.ContainsKey(lowerKey) && dict.ContainsKey(upperKey)) {\n
    \               if (dict[key] != dict[lowerKey] || dict[key] != dict[upperKey])
    {\n                    result = false;\n                    break;\n                }\n
    \           }\n            else {\n                result = false;\n                break;\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <196a66afcee14d658ed560d292f983fa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <196a66afcee14d658ed560d292f983fa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys) {\n            if (key.Length > 0)\n                return
    true;\n        }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dc8d6a551cbe4818a3992d88d756c0cf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dc8d6a551cbe4818a3992d88d756c0cf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool ret = false;\n        foreach (var item in dict) {\n            string
    key = item.Key;\n            string value = item.Value;\n            bool isUpper
    = char.IsUpper(key[0]);\n            bool isLower = char.IsLower(key[0]);\n            if
    (isUpper == isLower) {\n                ret = true;\n                break;\n
    \           }\n        }\n        return ret;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a1c1062d995d4fa7a41ecd7664c85c0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a1c1062d995d4fa7a41ecd7664c85c0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (string key
    in dict.Keys) {\n            if (key.Length > 0 && char.IsUpper(key[0]) && char.IsLower(key[0]))
    {\n                return false;\n            }\n        }\n        return true;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86301a49b64f4db28afba842a3528842>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86301a49b64f4db28afba842a3528842>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (var key in dict.Keys) {\n
    \           if (key.Length > 0) {\n                string lowerCase = key.ToLower();\n
    \               string upperCase = key.ToUpper();\n                if (lowerCase
    != upperCase) {\n                    result = false;\n                    break;\n
    \               }\n            }\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <75453310eb58432fa0e207dba26939c8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <75453310eb58432fa0e207dba26939c8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool ret = true;\n        foreach (var key in dict.Keys) {\n
    \           string lowerCase = key.ToLower();\n            string upperCase =
    key.ToUpper();\n            if (lowerCase != upperCase) {\n                ret
    = false;\n                break;\n            }\n        }\n        return ret;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1df373e22f564e818d3ca3ad383e94a7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1df373e22f564e818d3ca3ad383e94a7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (KeyValuePair<string, string> kvp in dict)\n        {\n            string key
    = kvp.Key;\n            string value = kvp.Value;\n            if (key.Length
    > 0 && value.Length > 0)\n            {\n                if (char.IsLower(key[0])
    || char.IsUpper(key[0]))\n                {\n                    if (char.IsLower(value[0])
    || char.IsUpper(value[0]))\n                    {\n                        return
    true;\n                    }\n                }\n                else\n                {\n
    \                   if (char.IsLower(value[0]) || char.IsUpper(value[0]))\n                    {\n
    \                       return true;\n                    }\n                }\n
    \           }\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <25bbf0356c7a4294a3bdf22e90d40421>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <25bbf0356c7a4294a3bdf22e90d40421>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (string key in dict.Keys)\n        {\n            if (key.Length != 1)\n                return
    false;\n        }\n        foreach (string key in dict.Keys)\n        {\n            if
    (key.Length == 1)\n            {\n                if (dict[key].ToLower() != dict[key])\n
    \                   return false;\n            }\n            else\n            {\n
    \               if (dict[key].ToUpper() != dict[key])\n                    return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <082e611a5f814859860a5862e797cceb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <082e611a5f814859860a5862e797cceb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool ret = true;\n        foreach (KeyValuePair<string, string>
    kvp in dict) {\n            string key = kvp.Key;\n            string value =
    kvp.Value;\n            bool isUpper = char.IsUpper(key[0]);\n            bool
    isLower = char.IsLower(key[0]);\n            if (isUpper != isLower) {\n                ret
    = false;\n                break;\n            }\n        }\n        return ret;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e2521713ee9c494ebbe5949932ec027e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e2521713ee9c494ebbe5949932ec027e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (var key in dict.Keys) {\n
    \           string lowerKey = key.ToLower();\n            string upperKey = key.ToUpper();\n
    \           if (dict[key] != lowerKey && dict[key] != upperKey) {\n                result
    = false;\n                break;\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe32438cddd5482983ba27a32880b214>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe32438cddd5482983ba27a32880b214>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (var key in dict.Keys) {\n
    \           string lowerCase = key.ToLower();\n            string upperCase =
    key.ToUpper();\n            if (dict.ContainsKey(lowerCase) || dict.ContainsKey(upperCase))
    {\n                result = false;\n                break;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4dcc3940cf6948bd85801f4de471b358>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4dcc3940cf6948bd85801f4de471b358>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800169
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (KeyValuePair<string, string>
    kvp in dict) {\n            if (kvp.Key.ToLower() == kvp.Key) {\n                result
    = false;\n                break;\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c3e0f4a7c29841a49ab8ee56524f9a6e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c3e0f4a7c29841a49ab8ee56524f9a6e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (KeyValuePair<string, string> kvp in dict) {\n            string key = kvp.Key;\n
    \           string value = kvp.Value;\n            if (key.Length > 0 && value.Length
    > 0) {\n                if (char.IsLower(key[0]) || char.IsUpper(key[0])) {\n
    \                   if (!char.IsLower(value[0]) || !char.IsUpper(value[0])) {\n
    \                       return false;\n                    }\n                }\n
    \               else {\n                    if (!char.IsLower(value[0]) && !char.IsUpper(value[0]))
    {\n                        return false;\n                    }\n                }\n
    \           }\n        }\n        return true;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e89e1865b81540f19054945fa2ef3725>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e89e1865b81540f19054945fa2ef3725>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (string key in dict.Keys)\n        {\n            string lowerCase = key.ToLower();\n
    \           string upperCase = key.ToUpper();\n            if (lowerCase == upperCase)\n
    \               continue;\n            if (dict.ContainsKey(lowerCase))\n            {\n
    \               if (dict[key] != dict[lowerCase])\n                    return
    false;\n            }\n            else\n            {\n                if (dict[key]
    != dict[upperCase])\n                    return false;\n            }\n        }\n
    \       return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b2b20c17561c46cca069ea815f0f2059>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b2b20c17561c46cca069ea815f0f2059>:0
    \n\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException: The
    given key 'NAME' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item
    (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.CheckDictCase
    (System.Collections.Generic.Dictionary`2[TKey,TValue] dict) ["
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys)\n        {\n            if (key.Length > 0)\n            {\n
    \               if (char.IsLower(key[0]) || char.IsUpper(key[0]))\n                {\n
    \                   if (dict[key].Length > 0)\n                    {\n                        return
    false;\n                    }\n                }\n                else\n                {\n
    \                   if (dict[key].Length > 0)\n                    {\n                        return
    true;\n                    }\n                }\n            }\n        }\n        return
    true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f8240865e3674482bcb35d3b0f4b0e84>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f8240865e3674482bcb35d3b0f4b0e84>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool ret = true;\n        foreach(KeyValuePair<string, string>
    kvp in dict) {\n            string key = kvp.Key;\n            string value =
    kvp.Value;\n            bool isUpper = char.IsUpper(key[0]); \n            bool
    isLower = char.IsLower(key[0]); \n            if (isUpper != isLower) {\n                ret
    = false;\n                break;\n            }\n        }\n        return ret;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fba8ffdb175941b6a33b068ff0385a2e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fba8ffdb175941b6a33b068ff0385a2e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (var item in dict) {\n            string
    key = item.Key;\n            string value = item.Value;\n            bool isUpper
    = char.IsUpper(key.ToCharArray()[0]);\n            bool isLower = char.IsLower(key.ToCharArray()[0]);\n
    \           if (isUpper != isLower) {\n                result = false;\n                break;\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9190db0fd69344f8abb0b07db16b6ad6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <9190db0fd69344f8abb0b07db16b6ad6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (KeyValuePair<string, string>
    kvp in dict) {\n            string key = kvp.Key;\n            string value =
    kvp.Value;\n            bool isUpper = char.IsUpper(key[0]);\n            bool
    isLower = char.IsLower(key[0]);\n            if (isUpper != isLower) {\n                result
    = false;\n                break;\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c9e9fcc6cb7c480e8647416245164289>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c9e9fcc6cb7c480e8647416245164289>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (var key in dict.Keys) {\n
    \           string lowerCase = key.ToLower();\n            string upperCase =
    key.ToUpper();\n            if (lowerCase == upperCase) {\n                result
    = false;\n                break;\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <18df2106eeb94d4a88cb092bb8fdb2d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <18df2106eeb94d4a88cb092bb8fdb2d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (KeyValuePair<string, string> kvp in dict) {\n            if (kvp.Key.Length !=
    kvp.Value.Length)\n                return false;\n            bool isUpper = false;\n
    \           bool isLower = false;\n            for (int i = 0; i < kvp.Key.Length;
    i++) {\n                if (Char.IsUpper(kvp.Key[i]))\n                    isUpper
    = true;\n                else if (Char.IsLower(kvp.Key[i]))\n                    isLower
    = true;\n            }\n            if (isUpper != isLower)\n                return
    false;\n        }\n        return true;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dc1a356407094e29afe7a44f9bd5d15c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dc1a356407094e29afe7a44f9bd5d15c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800169
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (var key in dict.Keys) {\n
    \           if (key.Length > 0) {\n                if (char.IsLower(key[0])) {\n
    \                   result = false;\n                    break;\n                }\n
    \               else if (char.IsUpper(key[0])) {\n                    result =
    false;\n                    break;\n                }\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a0b40dcf1c9d48858a82d039f09c8e96>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a0b40dcf1c9d48858a82d039f09c8e96>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800169
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys)\n        {\n            if (key.Length > 0)\n            {\n
    \               if (Char.IsLower(key[0]) || Char.IsUpper(key[0]))\n                    return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <19dd7dcbd6ea48b5b7422a98bd0bebe5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <19dd7dcbd6ea48b5b7422a98bd0bebe5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (var item
    in dict) {\n            if (item.Key.ToLower() == item.Key) return true;\n            if
    (item.Key.ToUpper() == item.Key) return true;\n        }\n        return false;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cd4ea88a48cb478c924efd2655c0b8ad>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cd4ea88a48cb478c924efd2655c0b8ad>:0
    \n"
  stdout: ''
  timestamp: 1659800169
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (string key in dict.Keys) {\n            string value = dict[key];\n            if
    (string.IsNullOrEmpty(value))\n                return false;\n            if (value.Length
    > 0)\n                foreach (char c in value)\n                    if (c >=
    'A' && c <= 'Z')\n                        return true;\n                if (value.Length
    > 1)\n                    foreach (char c in value)\n                        if
    (c >= 'a' && c <= 'z')\n                            return true;\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1c232b6abf4d49dc84e34dd4927e5e8a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1c232b6abf4d49dc84e34dd4927e5e8a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800169
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) {\n            return false;\n        }\n
    \       foreach (var key in dict.Keys) {\n            if (key.Length > 0) {\n
    \               if (char.IsLower(key[0])) {\n                    if (!char.IsUpper(key[0]))
    {\n                        return false;\n                    }\n                }\n
    \               else {\n                    if (!char.IsUpper(key[0])) {\n                        return
    false;\n                    }\n                }\n            }\n        }\n        return
    true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <54a1fa55eee146c0885104fab3710c8d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <54a1fa55eee146c0885104fab3710c8d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800169
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys) {\n            if (key.Length > 0)\n                return
    true;\n        }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dc8d6a551cbe4818a3992d88d756c0cf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dc8d6a551cbe4818a3992d88d756c0cf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool ret = true;\n        foreach (var item in dict) {\n            if
    (item.Key.ToLower() != item.Key.ToUpper()) {\n                ret = false;\n                break;\n
    \           }\n        }\n        return ret;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f0eb3763ef6a481d80daf01a51cfc163>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f0eb3763ef6a481d80daf01a51cfc163>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800169
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (KeyValuePair<string,string>
    kvp in dict) {\n            string key = kvp.Key;\n            string value =
    kvp.Value;\n            if (key.Length > 0) {\n                if (key.Length
    > 1 && key.ToLower() == key.ToUpper()) {\n                    result = false;\n
    \                   break;\n                }\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <49b9889dbda94bf999452b909535db35>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <49b9889dbda94bf999452b909535db35>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800169
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (KeyValuePair<string, string>
    kvp in dict) {\n            string key = kvp.Key;\n            string value =
    kvp.Value;\n            if (key.Length > 0 && value.Length > 0) {\n                char
    firstChar = key[0];\n                char secondChar = firstChar;\n                if
    (firstChar == 'A' || firstChar == 'B') {\n                    secondChar = firstChar;\n
    \               }\n                else if (firstChar == 'a' || firstChar == 'b')
    {\n                    secondChar = firstChar;\n                }\n                else
    {\n                    result = false;\n                    break;\n                }\n
    \               if (secondChar != value[0]) {\n                    result = false;\n
    \                   break;\n                }\n            }\n            else
    {\n                result = false;\n                break;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bb7c4f3c8e414f0189d700944330616e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bb7c4f3c8e414f0189d700944330616e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800169
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) {\n            return false;\n        }\n
    \       foreach (var key in dict.Keys) {\n            if (key.Length > 0) {\n
    \               if (char.IsLower(key[0])) {\n                    if (!dict.ContainsKey(key.ToLower()))
    {\n                        return false;\n                    }\n                }
    else if (char.IsUpper(key[0])) {\n                    if (!dict.ContainsKey(key.ToUpper()))
    {\n                        return false;\n                    }\n                }
    else {\n                    return false;\n                }\n            }\n
    \       }\n        return true;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3752d539dcda4adcb0ad7c22ee666ec8>:0
    \n"
  stdout: ''
  timestamp: 1659800169
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (var key in dict.Keys) {\n
    \           string value = dict[key];\n            if (key.Length > 0 && value.Length
    > 0) {\n                if (char.IsLower(key[0]) || char.IsUpper(key[0])) {\n
    \                   result = false;\n                }\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0acdae1d220b4f28a2e4f33deb6fbd0b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0acdae1d220b4f28a2e4f33deb6fbd0b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800169
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) {\n            return false;\n        }\n
    \       foreach (string key in dict.Keys) {\n            if (key.Length > 0) {\n
    \               string lowerCase = key.ToLower();\n                string upperCase
    = key.ToUpper();\n                if (lowerCase != upperCase) {\n                    return
    false;\n                }\n            }\n        }\n        return true;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a408b182095f4dc59efcb3b320fac243>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a408b182095f4dc59efcb3b320fac243>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800169
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) {\n            return false;\n        }\n
    \       foreach (var key in dict.Keys) {\n            if (key.Length > 0) {\n
    \               string lowerKey = key.ToLower();\n                string upperKey
    = key.ToUpper();\n                if (lowerKey != upperKey) {\n                    return
    false;\n                }\n            }\n        }\n        return true;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4fd7a231d56143c7bee280da0d9948c3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4fd7a231d56143c7bee280da0d9948c3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800169
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool ret = true;\n        foreach (KeyValuePair<string, string>
    kvp in dict) {\n            if (kvp.Key.ToLower() == kvp.Key) {\n                ret
    = false;\n                break;\n            }\n            if (kvp.Key.ToUpper()
    == kvp.Key) {\n                ret = false;\n                break;\n            }\n
    \       }\n        return ret;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c9693fd277914b13884ff1196321e7db>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c9693fd277914b13884ff1196321e7db>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800169
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (string key in dict.Keys)
    {\n            if (key.Length != 1) {\n                result = false;\n                break;\n
    \           }\n            string lowerKey = key.ToLower();\n            string
    upperKey = key.ToUpper();\n            if (lowerKey != upperKey) {\n                result
    = false;\n                break;\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d9346667e5b443eaa043d908f9142e6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d9346667e5b443eaa043d908f9142e6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800169
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (string key
    in dict.Keys) {\n            string lowerCase = key.ToLower();\n            string
    upperCase = key.ToUpper();\n            if (lowerCase != upperCase) {\n                return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71283459e1cb429d962b016a0fa8a08a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <71283459e1cb429d962b016a0fa8a08a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (var item
    in dict) {\n            if (item.Key.Length > 0) return true;\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7722350a5b3547388172aceefcc27d5e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7722350a5b3547388172aceefcc27d5e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800169
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (var key
    in dict.Keys) {\n            if (key.Length != 1) return false;\n        }\n        foreach
    (var key in dict.Keys) {\n            if (key.Length > 1) return false;\n        }\n
    \       return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50e6abf7a6f849aeb7bff257fb5c5491>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <50e6abf7a6f849aeb7bff257fb5c5491>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800169
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var item in dict)\n        {\n            if (item.Key.Length > 0)\n            {\n
    \               if (item.Key.ToLower() == item.Key)\n                {\n                    return
    true;\n                }\n            }\n            else\n            {\n                if
    (item.Key.ToUpper() == item.Key)\n                {\n                    return
    true;\n                }\n            }\n        }\n        return false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <862c95b92d014b3ca76aad03c75823d3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <862c95b92d014b3ca76aad03c75823d3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800168
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach(KeyValuePair<string, string>
    kvp in dict) {\n            string key = kvp.Key;\n            string value =
    kvp.Value;\n            bool isUpper = char.IsUpper(key[0]);\n            bool
    isLower = char.IsLower(key[0]);\n            if (isUpper != isLower) {\n                result
    = false;\n                break;\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <acc87dc855cc44ce966b4486de67dbbd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <acc87dc855cc44ce966b4486de67dbbd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800169
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (KeyValuePair<string, string> kvp in dict)\n        {\n            if (kvp.Key.ToLower()
    == kvp.Key)\n                return true;\n            if (kvp.Key.ToUpper() ==
    kvp.Key)\n                return true;\n        }\n        return false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1172ad92ba734e71a079d7b9abd1be47>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1172ad92ba734e71a079d7b9abd1be47>:0
    \n"
  stdout: ''
  timestamp: 1659800165
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (var item in dict)\n        {\n
    \           string key = item.Key;\n            string value = item.Value;\n            if
    (key.Length > 0 && value.Length > 0)\n            {\n                if (Char.IsLower(key[0])
    || Char.IsUpper(key[0]))\n                {\n                    result = false;\n
    \                   break;\n                }\n            }\n            else\n
    \           {\n                result = false;\n                break;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <76efd3cb11494ea3979e4462c1afbb36>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <76efd3cb11494ea3979e4462c1afbb36>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800169
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (string key
    in dict.Keys) {\n            string lowerKey = key.ToLower();\n            string
    upperKey = key.ToUpper();\n            if (lowerKey == upperKey)\n                continue;\n
    \           if (dict.ContainsKey(lowerKey) && dict.ContainsKey(upperKey))\n                return
    false;\n        }\n        return true;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d38216261e6f44c8ac2075ca44a320f3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d38216261e6f44c8ac2075ca44a320f3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800169
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach(KeyValuePair<string, string>
    kvp in dict)\n        {\n            string key = kvp.Key;\n            string
    value = kvp.Value;\n            bool isUpper = char.IsUpper(key[0]);\n            bool
    isLower = char.IsLower(key[0]);\n            bool isDigit = char.IsDigit(key[0]);\n
    \           bool isAlpha = char.IsLetter(key[0]);\n            bool isAlphanumeric
    = isAlpha || isDigit || isUpper;\n            bool isAllUpper = isUpper && isAllLower;\n
    \           bool isAllLower = !isUpper && isAllUpper;\n            bool isAllDigit
    = isDigit && isAllUpper;\n            bool isAllAlpha = isAlpha && isAllLower;\n
    \           bool isAllAlphanumeric = isAlphanumeric && isAllUpper;\n            bool
    isAllLetters = isAlpha && isAllLower;\n            bool isAllNumbers = isDigit
    && isAllUpper;\n            bool isAllLettersAndNumbers = isAlphanumeric && isAllUpper;\n
    \           bool isAllLettersAndNumbersAndUpper = isAlphanumeric && isAllLower;\n
    \           bool isAllLettersAndNumbersAndLower = !isAlphanumeric && isAllUpper;\n
    \           bool isAllLettersAndNumbersAndLower = !isAlphanumeric && isAllLower;\n
    \           bool isAllLettersAndNumbersAndUpper = !isAlphanumeric && isAllLower;\n
    \           bool isAllLettersAndNumbersAndLower = !isAlphanumeric && isAllUpper;\n
    \           bool isAllLettersAndNumbersAndUpper = !isAlphanumeric && isAllLower;\n
    \           bool isAllLettersAndNumbersAndLower = !isAlphanumeric && isAllUpper;\n
    \           bool isAllLettersAndNumbersAndUpper = !isAlphanumeric && isAllLower;\n
    \           bool isAllLettersAndNumbersAndLower = !isAlphanumeric && isAllUpper;\n
    \           bool isAllLettersAndNumbersAndUpper = !isAlphanumeric && isAllLower;\n
    \           bool isAllLettersAndNumbersAndLower = !isAlphanumeric && isAllUpper;\n
    \           bool isAllLettersAndNumbersAndUpper = !isAlphanumeric && isAllLower;\n
    \           bool isAllLettersAndNumbersAndLower = !isAlphanumeric && isAllUpper;\n
    \           bool is\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpc_8skwvd.cs(50,18): error CS1001: Identifier expected

    /tmp/tmpc_8skwvd.cs(50,18): error CS1002: ; expected

    /tmp/tmpc_8skwvd.cs(50,18): error CS1525: Invalid expression term ''is''

    /tmp/tmpc_8skwvd.cs(50,20): error CS1031: Type expected

    /tmp/tmpc_8skwvd.cs(50,20): error CS1002: ; expected

    /tmp/tmpc_8skwvd.cs(52,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpc_8skwvd.cs(62,2): error CS1513: } expected

    '
  timestamp: 1659800169
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (string key
    in dict.Keys) {\n            string lowerCase = key.ToLower();\n            string
    upperCase = key.ToUpper();\n            if (lowerCase == upperCase) {\n                continue;\n
    \           }\n            if (dict.ContainsKey(lowerCase)) {\n                return
    false;\n            }\n            if (dict.ContainsKey(upperCase)) {\n                return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0261e0ac73a34512be6fec6a53b3c2dd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0261e0ac73a34512be6fec6a53b3c2dd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (KeyValuePair<string, string> kvp in dict)\n        {\n            string key
    = kvp.Key;\n            string value = kvp.Value;\n            if (key.Length
    > 0 && value.Length > 0)\n            {\n                if (key.ToLower() ==
    value.ToLower())\n                {\n                    return true;\n                }\n
    \               else if (key.ToUpper() == value.ToUpper())\n                {\n
    \                   return true;\n                }\n            }\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b4eb916bba834f889f0f3375b020ad8f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b4eb916bba834f889f0f3375b020ad8f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800169
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict == null || dict.Count == 0)\n            return false;\n
    \       foreach (var key in dict.Keys)\n            if (key.Length > 0 && char.IsLower(key[0])
    || char.IsUpper(key[0]))\n                return false;\n        return true;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b0b27d0e843045729b0d8a1f6e1ca75d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b0b27d0e843045729b0d8a1f6e1ca75d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800169
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (var key in dict.Keys) {\n
    \           string lowerCase = key.ToLower();\n            string upperCase =
    key.ToUpper();\n            if (lowerCase != upperCase) {\n                result
    = false;\n                break;\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29f22230c04747809f0d0a7378b61510>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <29f22230c04747809f0d0a7378b61510>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800169
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys)\n        {\n            string lowerCase = key.ToLower();\n
    \           string upperCase = key.ToUpper();\n            if (lowerCase == upperCase)\n
    \               continue;\n            return false;\n        }\n        return
    true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <13ab2db85058447bae1cd05e877ac85c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <13ab2db85058447bae1cd05e877ac85c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800170
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) {\n            return false;\n        }\n
    \       foreach (var item in dict) {\n            if (item.Key.ToLower() == item.Key.ToUpper())
    {\n                return false;\n            }\n        }\n        return true;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5785da49f19f4b24ac148015918d5c6e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5785da49f19f4b24ac148015918d5c6e>:0
    \n"
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (string key
    in dict.Keys) {\n            if (key.Length != 1) return false;\n        }\n        foreach
    (string key in dict.Keys) {\n            string lowerKey = key.ToLower();\n            string
    upperKey = key.ToUpper();\n            if (lowerKey != upperKey) return false;\n
    \       }\n        return true;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ff5d899bf9464fa199ac2a833b895ec5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ff5d899bf9464fa199ac2a833b895ec5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800170
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys)\n        {\n            if (key.Length > 0)\n            {\n
    \               string lowerCase = key.ToLower();\n                string upperCase
    = key.ToUpper();\n                if (lowerCase != upperCase)\n                    return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7444ef87c0484dc0a515f305baf9658d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7444ef87c0484dc0a515f305baf9658d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800170
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (var key in dict.Keys) {\n            if (key.Length > 0)\n                return
    true;\n        }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\",
    \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\",
    \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"STATE\",
    \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))
    == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dc8d6a551cbe4818a3992d88d756c0cf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dc8d6a551cbe4818a3992d88d756c0cf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800167
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (KeyValuePair<string,
    string> kvp in dict) {\n            if (kvp.Key.Length != kvp.Value.Length) return
    false;\n            foreach (char c in kvp.Key) {\n                if (c >= 'A'
    && c <= 'Z') continue;\n                if (c >= 'a' && c <= 'z') continue;\n
    \               return false;\n            }\n        }\n        return true;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39733e4c65ae4e4e967a1347d96e91b1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39733e4c65ae4e4e967a1347d96e91b1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict == null || dict.Count == 0)\n            return false;\n
    \       foreach (string key in dict.Keys)\n        {\n            string value
    = dict[key];\n            if (value.Length > 0)\n            {\n                bool
    isUpper = char.IsUpper(value[0]);\n                bool isLower = char.IsLower(value[0]);\n
    \               if (isUpper == isLower)\n                    return false;\n            }\n
    \       }\n        return true;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"},
    {\"b\", \"banana\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ac1c90c737e4485c839e7bca4ce79b67>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ac1c90c737e4485c839e7bca4ce79b67>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800170
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (var item
    in dict)\n        {\n            if (item.Key.ToLower() == item.Key.ToUpper())\n
    \           {\n                return true;\n            }\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe004d17f6604e2d999f7b891d6e4852>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fe004d17f6604e2d999f7b891d6e4852>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800170
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        bool result = true;\n        foreach (var item in dict)\n        {\n
    \           string key = item.Key;\n            string value = item.Value;\n            if
    (key.Length > 0)\n            {\n                if (char.IsLower(key[0]) || char.IsUpper(key[0]))\n
    \               {\n                    result = false;\n                    break;\n
    \               }\n            }\n            else\n            {\n                result
    = false;\n                break;\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1d8e09c958be44a49359cc5338e40aea>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1d8e09c958be44a49359cc5338e40aea>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800170
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0) return false;\n        foreach (KeyValuePair<string,
    string> kvp in dict) {\n            if (kvp.Key.Length != kvp.Value.Length) return
    false;\n            foreach (char c in kvp.Key) {\n                if (c >= 'A'
    && c <= 'Z') continue;\n                if (c >= 'a' && c <= 'z') continue;\n
    \               return false;\n            }\n        }\n        return true;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39733e4c65ae4e4e967a1347d96e91b1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <39733e4c65ae4e4e967a1347d96e91b1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800166
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Given a dictionary, return True if all keys are strings in lower
    \n    // case or all keys are strings in upper case, else return False.\n    //
    The function should return False is the given dictionary is empty.\n    // Examples:\n
    \   // check_dict_case({\"a\":\"apple\", \"b\":\"banana\"}) should return True.\n
    \   // check_dict_case({\"a\":\"apple\", \"A\":\"banana\", \"B\":\"banana\"})
    should return False.\n    // check_dict_case({\"a\":\"apple\", \"8\":\"banana\",
    \"a\":\"apple\"}) should return False.\n    // check_dict_case({\"Name\":\"John\",
    \"Age\":\"36\", \"City\":\"Houston\"}) should return False.\n    // check_dict_case({\"STATE\":\"NC\",
    \"ZIP\":\"12345\" }) should return True.\n    public static bool CheckDictCase(Dictionary<string,string>
    dict) {\n        if (dict.Count == 0)\n            return false;\n        foreach
    (KeyValuePair<string, string> kvp in dict)\n        {\n            if (kvp.Key.Length
    != kvp.Value.Length)\n                return false;\n            else if (kvp.Key.ToLower()
    != kvp.Value.ToLower())\n                return false;\n            else if (kvp.Key.ToUpper()
    != kvp.Value.ToUpper())\n                return false;\n        }\n        return
    true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==
    (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\",
    \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"5\", \"banana\"}, {\"a\",
    \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"Name\",
    \"John\"}, {\"Age\", \"36\"}, {\"City\", \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new
    Dictionary<string,string>(){{\"STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n
    \   Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"fruit\", \"Orange\"},
    {\"taste\", \"Sweet\"}})) == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))
    == (false));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a7df68080c6e404a847e7f5ad37f6dcd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a7df68080c6e404a847e7f5ad37f6dcd>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800170

language: cs
name: HumanEval_118_get_closest_vowel
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRight = vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeft = vowelsMiddleRightLeftRight.Substring(vowelsMiddleRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRight = vowelsMiddleRightLeftRightLeft.Substring(vowelsMiddleRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeft = vowelsMiddleRightLeftRightLeftRight.Substring(vowelsMiddleRightLeftRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRight = vowelsMiddleRightLeftRightLeftRightLeft.Substring(vowelsMiddleRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeft = vowelsMiddleRightLeftRightLeftRightLeftRight.Substring(vowelsMiddleRightLeftRightLeftRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeft.Substring(vowelsMiddleRightLeftRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight.Substring(vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft.Substring(vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft.Substring(vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddle\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_w8_i5sk.cs(36,28): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = word.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleRight = word.Substring(word.Length / 2, word.Length / 2);\n    \
    \    string vowelsMiddleLeft = word.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleLeftRight = word.Substring(word.Length / 2, word.Length / 2);\n\
    \        string vowelsMiddleLeftLeftRight = word.Substring(word.Length / 2, word.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight = word.\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzrdcln2x.cs(44,57): error CS1001: Identifier expected

    /tmp/tmpzrdcln2x.cs(44,57): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftRightRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRightRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightRightLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRightRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightRightRight =\
    \ vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightRightRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightRightRight\
    \ = \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5zbnqanb.cs(45,50): error CS1525: Invalid expression term ''}''

    /tmp/tmp5zbnqanb.cs(45,50): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n      \
    \  string vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperUpper = vowelsBothCapitalUpper.ToUpper();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().ToUpper().\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphpgynu_5.cs(41,124): error CS1001: Identifier expected

    /tmp/tmphpgynu_5.cs(41,124): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1)\
    \ + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string vowelsBothBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1)\
    \ + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Sub\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0myht22m.cs(32,263): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2);\n        string\
    \ vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeft =\
    \ vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftRight = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRightLeft = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRightLeftRight = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRightLeftRightLeft =\
    \ vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRightLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb8v6t8ls.cs(44,95): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBothMiddle =\
    \ vowels.Substring(vowels.Length / 2, vowels.Length / 2 - 1);\n        string\
    \ vowels\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph7ihrha1.cs(44,22): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(word.Length / 2);\n      \
    \  string vowelsMiddleUpper = vowelsMiddle.ToUpper();\n        string vowelsMiddleLowerUpper\
    \ = vowelsMiddle.ToLower();\n        string vowelsMiddleLowerUpperUpper = vowelsMiddle.ToUpper();\n\
    \        string vowelsMiddleLowerUpperUpperUpper = vowelsMiddle.ToUpper();\n \
    \       string vowelsMiddleLowerUpperUpperUpperUpper = vowelsMiddle.ToUpper();\n\
    \        string vowelsMiddleLowerUpperUpperUpperUpperUpper = vowelsMiddle.ToUpper();\n\
    \        string vowelsMiddleLowerUpperUpperUpperUpperUpperUpper = vowelsMiddle.ToUpper();\n\
    \        string vowelsMiddleLowerUpperUpperUpperUpperUpperUpperUpper = vowelsMiddle.ToUpper();\n\
    \        string vowelsMiddleLowerUpperUpperUpperUpperUpperUpperUpperUpper = vowelsMiddle.ToUpper();\n\
    \        string vowelsMiddleLowerUpperUpperUpperUpperUpperUpperUpperUpper = vowelsMiddle.ToUpper();\n\
    \        string vowelsMiddleLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsMiddle.ToUpper();\n        string vowelsMiddleLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsMiddle.ToUpper();\n        string vowelsMiddleLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsMiddle.ToUpper();\n        string vowelsMiddleLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsMiddle.ToUpper();\n        string vowelsMiddleLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsMiddle.ToUpper();\n        string vowelsMiddleLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsMiddle.ToUpper();\n        string vowelsMiddleLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsMiddle.ToUpper();\n        string vowelsMiddleLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsMiddle.ToUpper();\n        string vowelsMiddleLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsMiddle.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpedo6i_bl.cs(42,124): error CS1001: Identifier expected

    /tmp/tmpedo6i_bl.cs(42,124): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllCaps = vowelsAll.ToUpper();\n\
    \        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string\
    \ vowelsAllCapsAll = vowelsAllCaps + vowelsAllCapsLower + vowelsAll;\n       \
    \ string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllUpperLower = vowelsAllCapsAllUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperLowerUpper = vowelsAllCapsAllUpperLower.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperLower = vowelsAllCapsAllUpperLowerUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperLowerUpperLowerUpper = vowelsAllCapsAllUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperLowerUpperLower = vowelsAllCapsAllUpperLowerUpperLowerUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperLowerUpperLowerUpperUpper = vowelsAllCapsAllUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperLowerUpperLowerUpper = vowelsAllCapsAllUpperLowerUpperLowerUpperLowerUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperLowerUpperLowerUpperLowerUpper = vowelsAllCapsAllUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperLowerUpperLowerUpperUpper = vowelsAllCapsAllUpperLowerUpperLowerUpperLowerUpperLowerUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsAllCapsAllUpper\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu6bbkt2e.cs(41,101): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleUpper = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2).ToUpper();\n        string vowelsMiddleLower = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2).ToLower();\n        string vowelsMiddleUpperLower =\
    \ vowels.Substring(vowels.Length / 2, vowels.Length / 2).ToUpper().ToLower();\n\
    \        string vowelsMiddleLowerUpper = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2).ToLower().ToUpper();\n        string vowelsMiddleLowerUpperLower = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2).ToLower().ToUpper().ToLower();\n        string vowelsMiddleUpperLowerUpper\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2).ToUpper().ToLower().ToUpper();\n\
    \        string vowelsMiddleUpperLowerUpperLower = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2).ToUpper().ToLower().ToUpper().ToLower();\n        string\
    \ vowelsMiddleLowerUpperLowerUpper = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2).ToLower().ToUpper().ToLower().ToUpper().ToLower();\n        string vowelsMiddleLowerUpperLowerUpperLower\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2).ToLower().ToUpper().ToLower().ToUpper().ToLower().ToUpper();\n\
    \        string vowelsMiddleUpperLowerUpperLowerUpper = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2).ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower();\n\
    \        string vowelsMiddleUpperLowerUpperLowerUpperLower = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2).ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower().ToUpper();\n\
    \        string vowelsMiddleUpperLowerUpperLowerUpperUpperLower = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2).ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower();\n\
    \        string vowelsMiddle\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpesls2ey7.cs(36,28): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsAll = vowelsLeft + vowelsRight;\n        string vowelsAllUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLower = vowelsAll.ToLower();\n\
    \        string vowelsAllCap = vowelsAll.ToUpper();\n        string vowelsAllCapLower\
    \ = vowelsAllCap.ToLower();\n        string vowelsAllCapAll = vowelsAllCap.ToUpper()\
    \ + vowelsAllCap.ToLower();\n        string vowelsAllCapAllLower = vowelsAllCapAll.ToLower();\n\
    \        string vowelsAllCapAllUpper = vowelsAllCapAll.ToUpper();\n        string\
    \ vowelsAllCapAllUpperLower = vowelsAllCapAllUpper.ToLower();\n        string\
    \ vowelsAllCapAllUpperLowerUpper = vowelsAllCapAllUpperLower.ToUpper();\n    \
    \    string vowelsAllCapAllUpperLowerUpperLower = vowelsAllCapAllUpperLowerUpper.ToLower();\n\
    \        string vowelsAllCapAllUpperLowerUpperLowerUpper = vowelsAllCapAllUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsAllCapAllUpperLowerUpperLowerUpperLower = vowelsAllCapAllUpperLowerUpperLowerUpper.ToLower();\n\
    \        string vowelsAllCapAllUpperLowerUpperLowerUpperUpper = vowelsAllCapAllUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsAllCapAllUpperLowerUpperLowerUpperUpperLower = vowelsAllCapAllUpperLowerUpperLowerUpperUpperUpper.ToLower();\n\
    \        string vowelsAllCapAllUpperLowerUpperLowerUpperUpperUpper = vowelsAllCapAllUpperLowerUpperLowerUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsAllCapAllUpperLowerUpperLowerUpperUpperUpperLower = vowelsAllCapAllUpperLowerUpperLowerUpperUpperUpperUpperUpper.ToLower();\n\
    \        string vowelsAllCapAllUpperLowerUpperLowerUpperUpperUpperUpperLower =\
    \ vowelsAllCapAllUpperLowerUpperLowerUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsAllCapAllUpperLowerUpperLowerUpperUpperUpperUpperUpperLower\
    \ = vowelsAllCapAllUpperLowerUpperLowerUpperUpperUpperUpperUpperLowerUpper.ToLower();\n\
    \        string \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpg50bkcvh.cs(42,15): error CS1001: Identifier expected

    /tmp/tmpg50bkcvh.cs(42,15): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n\
    \        string vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpenvcjkiu.cs(51,45): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n\
    \        string vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string\
    \ vowelsBothCapLower = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower\
    \ = vowelsBothCapUpper.ToLower();\n        string vowelsBothCapUpperLowerUpper\
    \ = vowelsBothCapUpperLower.ToUpper();\n        string vowelsBothCapUpperLowerUpperUpper\
    \ = vowelsBothCapUpperLowerUpper.ToUpper();\n        string vowelsBothCapUpperLowerUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpper.ToUpper();\n        string vowelsBothCapUpperLowerUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpper.ToUpper();\n        string vowelsBothCapUpperLowerUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpper.ToUpper();\n        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpper.ToUpper();\n        string\
    \ vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpper\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4mvgga04.cs(41,120): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight =\
    \ vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3ydu3xun.cs(43,36): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n\
    \        string vowelsMiddleRight = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddleLeft = vowelsLeft.Substring(vowelsLeft.Length / 2,\
    \ vowelsLeft.Length / 2);\n        string vowelsMiddleRightLeft = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddleLeftRight = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddleRightLeftRight = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddleRightLeftRightLeft\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2, vowelsLeft.Length / 2);\n    \
    \    string vowelsMiddleRightLeftRightLeftRight = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeft\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2, vowelsLeft.Length / 2);\n    \
    \    string vowelsMiddleRightLeftRightLeftRightLeftRight = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeft\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2, vowelsLeft.Length / 2);\n    \
    \    string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2, vowelsLeft.Length / 2);\n    \
    \    string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRight = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRight\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz5zhsi1v.cs(38,78): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n      \
    \  string vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperUpper = vowelsBothCapitalUpper.ToUpper();\n        string\
    \ vowelsBothCapitalUpperUpperLower = vowelsBothCapitalUpperUpper.ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpper = vowelsBothCapitalUpperUpper.ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperLower = vowelsBothCapitalUpperUpperUpper.ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpper = vowelsBothCapitalUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperLower = vowelsBothCapitalUpperUpperUpperUpper.ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpper = vowelsBothCapitalUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperLower = vowelsBothCapitalUpperUpperUpperUpperUpper.ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpper = vowelsBothCapitalUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpperLower = vowelsBothCapitalUpperUpperUpperUpperUpperUpperUpper.ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapitalUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapitalUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpper\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgs7sm9_t.cs(42,58): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length - 1);\n        string vowelsRight = vowels.Substring(word.Length\
    \ - 1);\n        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeft = vowelsMiddle.Substring(0, word.Length - 1);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(word.Length - 1);\n\
    \        string vowelsMiddleMiddle = vowelsMiddle.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0, word.Length\
    \ - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Sub\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3u5fibjy.cs(44,65): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddle\
    \ = vowels.Substring(0, vowels.Length / 8);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeft\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddle\
    \ = vowels.Substring(0, vowels.Length / 16);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddle = vowels.Substring(0,\
    \ vowels.Length / 32);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(0, vowels.Length / 64);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(0, vowels.Length / 128);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128);\n        \n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxqzclmrt.cs(19,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n\
    \        string vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string\
    \ vowelsBothCapLower = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower\
    \ = vowelsBothCapUpper.ToLower();\n        string vowelsBothCapUpperLowerUpper\
    \ = vowelsBothCapUpperLower.ToUpper();\n        string vowelsBothCapUpperLowerUpperUpper\
    \ = vowelsBothCapUpperLowerUpper.ToUpper();\n        string vowelsBothCapUpperLowerUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpper.ToUpper();\n        string vowelsBothCapUpperLowerUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpper.ToUpper();\n        string vowelsBothCapUpperLowerUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpper.ToUpper();\n        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpper.ToUpper();\n        string\
    \ vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpper\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4mvgga04.cs(41,120): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothCaps = vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToLower();\n        string vowelsBothCapsLower = vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToLower();\n        string vowelsBothCapsUpper = vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToUpper();\n        string vowelsBothCapsLower = vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToLower();\n        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToUpper();\n        string vowelsBothCapsUpperUpper = vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToUpper();\n        string vowelsBothCapsUpperUpperLower = vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToUpper();\n        string vowelsBothCapsUpperUpperUpper = vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToUpper();\n        string vowelsBothCapsUpperUpperUpperLower =\
    \ vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n        string vowelsBothCapsUpperUpperUpperUpper\
    \ = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n        string vowelsBothCapsUpperUpperUpperUpperLower\
    \ = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n        string vowelsBothCapsUpperUpperUpperUpperUpper\
    \ = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n        string vowelsBothCapsUpperUpperUpperUpperUpperLower\
    \ = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n        string vowelsBothCapsUpperUpperUpperUpperUpperUpper\
    \ = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n        string vowelsBothCapsUpperUpperUpperUpperUpperUpperLower\
    \ = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n        string vowelsBothCapsUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBoth.ToUpper() + vowelsBoth.\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpipx1zoga.cs(41,102): error CS1001: Identifier expected

    /tmp/tmpipx1zoga.cs(41,102): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsAll = vowelsLeft + vowelsRight;\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllCaps = vowelsAll.ToUpper();\n        string vowelsAllCapsLower\
    \ = vowelsAllCaps.ToLower();\n        string vowelsAllCapsUpper = vowelsAllCaps.ToUpper();\n\
    \        string vowelsAllCapsAll = vowelsAllCaps + vowelsAllCapsLower + vowelsAllCapsUpper;\n\
    \        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string\
    \ vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower\
    \ = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n\
    \        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string\
    \ vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower\
    \ = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n\
    \        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string\
    \ vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower\
    \ = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n\
    \        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string\
    \ vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower\
    \ = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n\
    \        string vowelsAllCapsAllLower = vowel\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkoqwxort.cs(46,45): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsRightLeft = vowelsRight.Substring(0, vowelsRight.Length\
    \ - 1);\n        string vowelsRightRight = vowelsRight.Substring(vowelsRight.Length\
    \ - 1);\n        string vowelsRightLeftRight = vowelsRightLeft.Substring(0, vowelsRightLeft.Length\
    \ - 1);\n        string vowelsRightLeftLeftRight = vowelsRightLeftRight.Substring(0,\
    \ vowelsRightLeftRight.Length - 1);\n        string vowelsRightLeftLeftLeftRight\
    \ = vowelsRightLeftLeftRight.Substring(0, vowelsRightLeftLeftRight.Length - 1);\n\
    \        string vowelsRightLeftLeftLeftLeftRight = vowelsRightLeftLeftLeftRight.Substring(0,\
    \ vowelsRightLeftLeftLeftRight.Length - 1);\n        string vowelsRightLeftLeftLeftLeftRight\
    \ = vowelsRightLeftLeftLeftRight.Substring(0, vowelsRightLeftLeftLeftRight.Length\
    \ - 1);\n        string vowelsRightLeftLeftLeftLeftRight = vowelsRightLeftLeftLeftRight.Substring(0,\
    \ vowelsRightLeftLeftLeftRight.Length - 1);\n        string vowelsRightLeftLeftLeftLeftRightLeft\
    \ = vowelsRightLeftLeftLeftRightLeft.Substring(0, vowelsRightLeftLeftLeftRightLeft.Length\
    \ - 1);\n        string vowelsRightLeftLeftLeftLeftRightRight = vowelsRightLeftLeftLeftRightLeft.Substring(0,\
    \ vowelsRightLeftLeftLeftRightLeft.Length - 1);\n        string vowelsRightLeftLeftLeftLeftRightLeft\
    \ = vowelsRightLeftLeftLeftRightLeft.Substring(0, vowelsRightLeftLeftLeftRightLeft.Length\
    \ - 1);\n        string vowelsRightLeftLeftLeftLeftRightRight = vowelsRightLeftLeftLeftRightLeft.Substring(0,\
    \ vowelsRightLeftLeftLeftRightLeft.Length - 1);\n        string vowelsRightLeftLeftLeftLeftRightLeft\
    \ = vowelsRightLeftLeftLeftRightLeft.Substring(0, vowelsRightLeftLeftLeftRightLeft.Length\
    \ - 1);\n        string vowelsRightLeftLeftLeftLeftRightRight = vowelsRightLeftLeftLeftRightLeft.Substring(0,\
    \ vowelsRightLeftLeftLeftRightLeft.Length - 1);\n        string vowelsRightLeftLeftLeftLeftRightLeft\
    \ = vowelsRightLeftLeftLeftRightLeft.Substring(0, vowelsRight\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpolzr3jxs.cs(37,112): error CS1026: ) expected

    /tmp/tmpolzr3jxs.cs(37,112): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothLeftRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothRightLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothRight = vowels.Substring(0, vowels.Length - 1) +\
    \ vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothLeftRightBoth = vowels.Substring(0, vowels.Length - 1)\
    \ + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothRightLeftBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + \n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd77hcwwu.cs(33,82): error CS1525: Invalid expression term ''}''

    /tmp/tmpd77hcwwu.cs(33,82): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftRight =\
    \ vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeft\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdz8u6jiw.cs(41,48): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothLeftRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothRightLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothRight = vowels.Substring(0, vowels.Length - 1) +\
    \ vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothLeftRightBoth = vowels.Substring(0, vowels.Length - 1)\
    \ + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothRightLeftBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + \n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpasye85wn.cs(33,82): error CS1525: Invalid expression term ''}''

    /tmp/tmpasye85wn.cs(33,82): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsRightLeft = vowelsRight.Substring(0, vowelsRight.Length\
    \ - 1);\n        string vowelsRightRight = vowelsRight.Substring(vowelsRight.Length\
    \ - 1);\n        string vowelsRightLeftLeft = vowelsRightLeft.Substring(0, vowelsRightLeft.Length\
    \ - 1);\n        string vowelsRightLeftRight = vowelsRightLeft.Substring(vowelsRightLeft.Length\
    \ - 1);\n        string vowelsRightLeftLeftLeft = vowelsRightLeftLeft.Substring(0,\
    \ vowelsRightLeftLeft.Length - 1);\n        string vowelsRightLeftLeftRight =\
    \ vowelsRightLeftLeft.Substring(vowelsRightLeftLeft.Length - 1);\n        string\
    \ vowelsRightLeftLeftLeftLeft = vowelsRightLeftLeftRight.Substring(0, vowelsRightLeftLeftRight.Length\
    \ - 1);\n        string vowelsRightLeftLeftLeftRight = vowelsRightLeftLeftRight.Substring(vowelsRightLeftLeftRight.Length\
    \ - 1);\n        string vowelsRightLeftLeftLeftLeftLeft = vowelsRightLeftLeftLeftLeftRight.Substring(0,\
    \ vowelsRightLeftLeftLeftLeftRight.Length - 1);\n        string vowelsRightLeftLeftLeftLeftRight\
    \ = vowelsRightLeftLeftLeftLeftRight.Substring(vowelsRightLeftLeftLeftRight.Length\
    \ - 1);\n        string vowelsRightLeftLeftLeftLeftLeftLeft = vowelsRightLeftLeftLeftLeftLeftRight.Substring(0,\
    \ vowelsRightLeftLeftLeftLeftRight.Length - 1);\n        string vowelsRightLeftLeftLeftLeftLeftRight\
    \ = vowelsRightLeftLeftLeftLeftLeftRight.Substring(vowelsRightLeftLeftLeftLeftRight.Length\
    \ - 1);\n        string vowelsRightLeftLeftLeftLeftLeftLeftLeft = vowelsRightLeftLeftLeftLeftLeftRight.Substring(0,\
    \ vowelsRightLeftLeftLeftLeftRight.Length - 1);\n        string vowelsRightLeftLeftLeftLeftLeftLeftRight\
    \ = vowelsRightLeftLeftLeftLeftLeftRight.Substring(vowelsRightLeftLeftLeftLeftRight.Length\
    \ - 1);\n        string vowelsRightLeftLeftLeftLeftLeftLeftLeftLeft = vowelsRightLeftLeftLeftLeftLeftRight.Substring(0,\
    \ vowelsRightLeftLeftLeftLeftRight.Length - 1);\n        string vowelsRightLeftLeftLeftLeftLeftLeft\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps1meifrc.cs(38,51): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2 - 1);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 64);\n\
    \        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 64 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddle =\
    \ vowels.Substring(0, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 256\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp118maeiw.cs(44,88): error CS1026: ) expected

    /tmp/tmp118maeiw.cs(44,88): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCaps = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapsLower = vowelsBoth.ToUpper().ToLower();\n        string vowelsBothCapsUpper\
    \ = vowelsBoth.ToUpper().ToUpper();\n        string vowelsBothCapsLower = vowelsBoth.ToUpper().ToLower();\n\
    \        string vowelsBothCapsUpper = vowelsBoth.ToUpper().ToUpper();\n      \
    \  string vowelsBothCapsUpperLower = vowelsBoth.ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq5i2krxp.cs(44,54): error CS1001: Identifier expected

    /tmp/tmpq5i2krxp.cs(44,54): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(word.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRightLeft\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRightLeftRightLeft\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRightLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRightLeftRightLeftRightLeft\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxjg0r8rm.cs(42,72): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleLeftLeft = vowelsMiddleLeft.Substring(vowelsMiddleLeft.Length\
    \ / 2);\n        string vowelsMiddleRightRight = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeft = vowelsMiddleLeftRight.Substring(vowelsMiddleLeftRight.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowelsMiddleLeftLeft.Substring(vowelsMiddleLeftLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftRightRight = vowelsMiddleLeftRight.Substring(vowelsMiddleLeftRight.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRight = vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeft = vowelsMiddleRightRight.Substring(vowelsMiddleRightRight.Length\
    \ / 2);\n        string vowelsMiddleRightRightLeft = vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftRightRightLeft = vowelsMiddleLeftRightRight.Substring(vowelsMiddleLeftRightRight.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeftRight = vowelsMiddleLeftRightLeftRight.Substring(vowelsMiddleLeftRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeft = vowelsMiddleRightLeftRight.Substring(vowelsMiddleRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleRightRightLeftRight = vowelsMiddleRightRightLeftRight.Substring(vowelsMiddleRightRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleLeftRightRightLeftRight = vowelsMiddleLeftRightRightLeftRight.Substring(vowelsMiddleLeftRightRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRight = vowelsMiddleRightRightLeftRight.Sub\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq0q6lrp3.cs(40,89): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsRight1 = vowelsRight.Substring(0, 1);\n        string vowelsRight2\
    \ = vowelsRight.Substring(1, 1);\n        string vowelsRight3 = vowelsRight.Substring(2,\
    \ 1);\n        string vowelsRight4 = vowelsRight.Substring(3, 1);\n        string\
    \ vowelsRight5 = vowelsRight.Substring(4, 1);\n        string vowelsRight6 = vowelsRight.Substring(5,\
    \ 1);\n        string vowelsRight7 = vowelsRight.Substring(6, 1);\n        string\
    \ vowelsRight8 = vowelsRight.Substring(7, 1);\n        string vowelsRight9 = vowelsRight.Substring(8,\
    \ 1);\n        string vowelsRight10 = vowelsRight.Substring(9, 1);\n        string\
    \ vowelsRight11 = vowelsRight.Substring(10, 1);\n        string vowelsRight12\
    \ = vowelsRight.Substring(11, 1);\n        string vowelsRight13 = vowelsRight.Substring(12,\
    \ 1);\n        string vowelsRight14 = vowelsRight.Substring(13, 1);\n        string\
    \ vowelsRight15 = vowelsRight.Substring(14, 1);\n        string vowelsRight16\
    \ = vowelsRight.Substring(15, 1);\n        string vowelsRight17 = vowelsRight.Substring(16,\
    \ 1);\n        string vowelsRight18 = vowelsRight.Substring(17, 1);\n        string\
    \ vowelsRight19 = vowelsRight.Substring(18, 1);\n        string vowelsRight20\
    \ = vowelsRight.Substring(19, 1);\n        string vowelsRight21 = vowelsRight.Substring(20,\
    \ 1);\n        string vowelsRight22 = vowelsRight.Substring(21, 1);\n        string\
    \ vowelsRight23 = vowelsRight.Substring(22, 1);\n        string vowelsRight24\
    \ = vowelsRight.Substring(23, 1);\n        string vowelsRight25 = vowelsRight.Substring(24,\
    \ 1);\n        string vowelsRight26 = vowelsRight.Substring(25, 1);\n        string\
    \ vowelsRight27 = vowelsRight.Substring(26, 1);\n        string vowelsRight28\
    \ = vowelsRight.Substring(27, 1);\n        string vowelsRight29 = vowelsRight.Substring(28,\
    \ 1);\n        string vowelsRight30 = vowelsRight.Substring(29, 1);\n        string\
    \ vowelsRight\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpc70r_1f1.cs(53,27): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddle2 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle3 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 4);\n        string vowelsMiddle4 = vowels.Substring(vowels.Length / 4, vowels.Length\
    \ / 4);\n        string vowelsMiddle5 = vowels.Substring(vowels.Length / 4, vowels.Length\
    \ / 8);\n        string vowelsMiddle6 = vowels.Substring(vowels.Length / 8, vowels.Length\
    \ / 8);\n        string vowelsMiddle7 = vowels.Substring(vowels.Length / 8, vowels.Length\
    \ / 16);\n        string vowelsMiddle8 = vowels.Substring(vowels.Length / 16,\
    \ vowels.Length / 16);\n        string vowelsMiddle9 = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 32);\n        string vowelsMiddle10 = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddle11 = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 64);\n        string vowelsMiddle12 = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64);\n        string vowelsMiddle13 = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 128);\n        string vowelsMiddle14 = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddle15 = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 256);\n        string vowelsMiddle16 = vowels.Substring(vowels.Length\
    \ / 256, vowels.Length / 256);\n        string vowelsMiddle17 = vowels.Substring(vowels.Length\
    \ / 256, vowels.Length / 512);\n        string vowelsMiddle18 = vowels.Substring(vowels.Length\
    \ / 512, vowels.Length / 512);\n        string vowelsMiddle19 = vowels.Substring(vowels.Length\
    \ / 512, vowels.Length / 1024);\n        string vowelsMiddle20 = vowels.Substring(vowels.Length\
    \ / 1024, vowels.Length / 1024);\n        string vowelsMiddle21 = vowels.Substring(vowels.Length\
    \ / 1024, vowels.Length / 2048);\n        string vowelsMiddle22 = vowel\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp18ub8yea.cs(44,38): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length - 1);\n        string vowelsRight = vowels.Substring(word.Length\
    \ - 1);\n        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeft = vowelsMiddle.Substring(0, word.Length - 1);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(word.Length - 1);\n\
    \        string vowelsMiddleMiddle = vowelsMiddle.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0, word.Length\
    \ - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Sub\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3u5fibjy.cs(44,65): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2);\n        string\
    \ vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightLeft\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeftLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeftLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeft\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightLeftLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeft\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddle\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4lx4nsng.cs(48,28): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp02xjic90.cs(39,15): error CS1001: Identifier expected

    /tmp/tmp02xjic90.cs(39,15): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllCaps = vowelsAll.ToUpper();\n\
    \        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string\
    \ vowelsAllCapsAll = vowelsAllCapsLower + vowelsAllCaps;\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpperLower = vowelsAllCapsAllUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperLowerUpper = vowelsAllCapsAllUpperLower.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpper = vowelsAllCapsAllUpperLowerUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpperUpperUpper.ToUpper();\n\
    \        string \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw0i14sqw.cs(42,15): error CS1001: Identifier expected

    /tmp/tmpw0i14sqw.cs(42,15): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp02xjic90.cs(39,15): error CS1001: Identifier expected

    /tmp/tmp02xjic90.cs(39,15): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllCaps = vowelsAll.ToUpper();\n\
    \        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string\
    \ vowelsAllCapsAll = vowelsAllCapsLower + vowelsAllCaps;\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpperLower = vowelsAllCapsAllUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperLower = vowelsAllCapsAllUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperLowerUpper = vowelsAllCapsAllUpperLower.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpper = vowelsAllCapsAllUpperLowerUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpper = vowels\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfwxf3k74.cs(42,76): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothLeftRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1)\
    \ + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1);\n        string vowelsBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1);\n        string vowelsBothBothRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1)\
    \ + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1)\
    \ + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowel\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqknqvfof.cs(32,217): error CS1026: ) expected

    /tmp/tmpqknqvfof.cs(32,217): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight =\
    \ vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeft\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpezdb6ksl.cs(44,40): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBoth = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsAll = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsAllLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsAllRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAllBoth = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsAllAll = vowels.Substring(0, vowels.Length /\
    \ 2);\n        string vowelsAllAllLeft = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsAllAllRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllAllMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAllAllBoth = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2 + 1);\n        string vowelsAllAllAll = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllAllAllLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllAllAllRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsAllAllAllMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAllAllAllBoth = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsAllAllAllAll = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllAllAllAllLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllAllAllAllRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsAllAllAllAllMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAllAllAllAllBoth = vowels.Substring(vowel\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp06p7s5wz.cs(44,63): error CS1026: ) expected

    /tmp/tmp06p7s5wz.cs(44,63): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAll = vowelsLeft + vowelsRight\
    \ + vowelsMiddle;\n        string vowelsAllUpper = vowelsAll.ToUpper();\n    \
    \    string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllCaps\
    \ = vowelsAll.ToUpper();\n        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n\
    \        string vowelsAllCapsAll = vowelsAllCapsLower + vowelsAllCaps;\n     \
    \   string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpperLower\
    \ = vowelsAllCapsAllUpper.ToLower();\n        string vowelsAllCapsAllUpperLowerUpper\
    \ = vowelsAllCapsAllUpperLower.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpper.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpperUpper.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpperUpperUpper.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpperUpperUpperUpper.ToUpper();\n        string\
    \ vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsAllCap\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwhm1f3qd.cs(41,92): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle2 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle3 = vowelsLeft.Substring(vowelsLeft.Length / 3);\n\
    \        string vowelsMiddle4 = vowelsLeft.Substring(vowelsLeft.Length / 4);\n\
    \        string vowelsMiddle5 = vowelsLeft.Substring(vowelsLeft.Length / 5);\n\
    \        string vowelsMiddle6 = vowelsLeft.Substring(vowelsLeft.Length / 6);\n\
    \        string vowelsMiddle7 = vowelsLeft.Substring(vowelsLeft.Length / 7);\n\
    \        string vowelsMiddle8 = vowelsLeft.Substring(vowelsLeft.Length / 8);\n\
    \        string vowelsMiddle9 = vowelsLeft.Substring(vowelsLeft.Length / 9);\n\
    \        string vowelsMiddle10 = vowelsLeft.Substring(vowelsLeft.Length / 10);\n\
    \        string vowelsMiddle11 = vowelsLeft.Substring(vowelsLeft.Length / 11);\n\
    \        string vowelsMiddle12 = vowelsLeft.Substring(vowelsLeft.Length / 12);\n\
    \        string vowelsMiddle13 = vowelsLeft.Substring(vowelsLeft.Length / 13);\n\
    \        string vowelsMiddle14 = vowelsLeft.Substring(vowelsLeft.Length / 14);\n\
    \        string vowelsMiddle15 = vowelsLeft.Substring(vowelsLeft.Length / 15);\n\
    \        string vowelsMiddle16 = vowelsLeft.Substring(vowelsLeft.Length / 16);\n\
    \        string vowelsMiddle17 = vowelsLeft.Substring(vowelsLeft.Length / 17);\n\
    \        string vowelsMiddle18 = vowelsLeft.Substring(vowelsLeft.Length / 18);\n\
    \        string vowelsMiddle19 = vowelsLeft.Substring(vowelsLeft.Length / 19);\n\
    \        string vowelsMiddle20 = vowelsLeft.Substring(vowelsLeft.Length / 20);\n\
    \        string vowelsMiddle21 = vowelsLeft.Substring(vowelsLeft.Length / 21);\n\
    \        string vowelsMiddle22 = vowelsLeft.Substring(vowelsLeft.Length / 22);\n\
    \        string vowelsMiddle23 = vowelsLeft.Substring(vowelsLeft.Length\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpn3ots3hm.cs(45,71): error CS1026: ) expected

    /tmp/tmpn3ots3hm.cs(45,71): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsLeft = vowelsLeft.ToUpper();\n        string vowelsRight\
    \ = vowelsRight.ToUpper();\n        string vowelsAll = vowelsLeft + vowelsRight;\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllLowerUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLowerUpper = vowelsAll.ToUpper();\n        string vowelsAllLowerUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLowerUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLowerUpper = vowelsAll.ToUpper();\n        string vowelsAllLowerUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLowerUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLowerUpper = vowelsAll.ToUpper();\n        string vowelsAllLowerUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLowerUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLowerUpper = vowelsAll.ToUpper();\n        string vowelsAllLowerUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLowerUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLowerUpper = vowelsAll.ToUpper();\n        string vowelsAllLowerUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLowerUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLowerUpper = vowelsAll.ToUpper();\n        string vowelsAllLowerUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLowerUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLowerUpper = vowelsAll.ToUpper();\n        string vowelsAllLowerUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLowerUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLowerUpper = vowelsAll.ToUpper();\n        string vowelsAllLowerUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLowerUpper = vowelsAll.ToUpper();\n\
    \        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyw0fg3vr.cs(23,16): error CS0128: A local variable or function named ''vowelsLeft''
    is already defined in this scope

    /tmp/tmpyw0fg3vr.cs(24,16): error CS0128: A local variable or function named ''vowelsRight''
    is already defined in this scope

    /tmp/tmpyw0fg3vr.cs(29,16): error CS0128: A local variable or function named ''vowelsAllLowerUpper''
    is already defined in this scope

    /tmp/tmpyw0fg3vr.cs(30,16): error CS0128: A local variable or function named ''vowelsAllLowerUpper''
    is already defined in this scope

    /tmp/tmpyw0fg3vr.cs(31,16): error CS0128: A local variable or function named ''vowelsAllLowerUpper''
    is already defined in this scope

    /tmp/tmpyw0fg3vr.cs(32,16): error CS0128: A local variable or function named ''vowelsAllLowerUpper''
    is already defined in this scope

    /tmp/tmpyw0fg3vr.cs(33,16): error CS0128: A local variable or function named ''vowelsAllLowerUpper''
    is already defined in this scope

    /tmp/tmpyw0fg3vr.cs(34,16): error CS0128: A local variable or function named ''vowelsAllLowerUpper''
    is already defined in this scope

    /tmp/tmpyw0fg3vr.cs(35,16): error CS0128: A local variable or function named ''vowelsAllLowerUpper''
    is already defined in this scope

    /tmp/tmpyw0fg3vr.cs(36,16): error CS0128: A local variable or function named ''vowelsAllLowerUpper''
    is already defined in this scope

    /tmp/tmpyw0fg3vr.cs(37,16): error CS0128: A local variable or function named ''vowelsAllLowerUpper''
    is already defined in this scope

    /tmp/tmpyw0fg3vr.cs(38,16): error CS0128: A local variable or function named ''vowelsAllLowerUpper''
    is already defined in this scope

    /tmp/tmpyw0fg3vr.cs(39,16): error CS0128: A local variable or function named ''vowelsAllLowerUpper''
    is already defined in this scope

    /tmp/tmpyw0fg3vr.cs(40,16): error CS0128: A local variable or function named ''vowelsAllLowerUpper''
    is already defined in this scope

    /tmp/tmpyw0fg3vr.cs(41,16): error CS0128: A local variable or function named ''vowelsAllLow'
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothBoth = vowelsBothUpper.Replace(vowelsBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n   \
    \     string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = \n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmxl_ta_2.cs(50,37): error CS1525: Invalid expression term ''}''

    /tmp/tmpmxl_ta_2.cs(50,37): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftRight =\
    \ vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeft\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdz8u6jiw.cs(41,48): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsBothRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBothMiddle = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsBothBothLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBothMiddle =\
    \ vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBothBoth\
    \ = vowels.Sub\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmbtw021e.cs(44,59): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle2 = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle3 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle4 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle5 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle6 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle7 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle8 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle9 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle10 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle11 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle12 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle13 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle14 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle15 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle16 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle17 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle18 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle19 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle20 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle21 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle22 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle23 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprw6d5eqy.cs(19,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRight.Substring(0,\
    \ vowelsMiddleRight.Length / 2);\n        string vowelsMiddleRightRight = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowelsMiddleLeft.Substring(0,\
    \ vowelsMiddleLeft.Length / 2);\n        string vowelsMiddleLeftLeft = vowelsMiddleLeft.Substring(vowelsMiddleLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRight = vowelsMiddleRightLeft.Substring(0,\
    \ vowelsMiddleRightLeft.Length / 2);\n        string vowelsMiddleRightRightLeft\
    \ = vowelsMiddleRightRight.Substring(0, vowelsMiddleRightRight.Length / 2);\n\
    \        string vowelsMiddleLeftRightLeft = vowelsMiddleLeftRight.Substring(0,\
    \ vowelsMiddleLeftRight.Length / 2);\n        string vowelsMiddleLeftLeftRight\
    \ = vowelsMiddleLeftLeft.Substring(0, vowelsMiddleLeftLeft.Length / 2);\n    \
    \    string vowelsMiddleRightLeftLeftRight = vowelsMiddleRightLeftRight.Substring(0,\
    \ vowelsMiddleRightLeftRight.Length / 2);\n        string vowelsMiddleLeftRightLeftRight\
    \ = vowelsMiddleLeftRightLeftRight.Substring(0, vowelsMiddleLeftRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftLeftRightLeft = vowelsMiddleLeftLeftLeftRight.Substring(0,\
    \ vowelsMiddleLeftLeftLeftRight.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeft\
    \ = vowelsMiddleRightLeftLeftRightLeft.Substring(0, vowelsMiddleRightLeftLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRight = vowelsMiddleLeftRightLeftRightLeft.Substring(0,\
    \ vowelsMiddleLeftRightLeftRightLeft.Length / 2);\n        string vowelsMiddleLeftLeftLeftRightLeftRightLeft\
    \ = vowelsMiddleLeftLeftLeftRightLeftRight.Substring(0, vowelsMiddleLeftLeftLeftRight\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpppw7z4bz.cs(39,142): error CS1026: ) expected

    /tmp/tmpppw7z4bz.cs(39,142): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAll = vowelsLeft + vowelsRight\
    \ + vowelsMiddle;\n        string vowelsAllUpper = vowelsAll.ToUpper();\n    \
    \    string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllCaps\
    \ = vowelsAll.ToUpper();\n        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n\
    \        string vowelsAllCapsAll = vowelsAllCapsLower + vowelsAllCaps;\n     \
    \   string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpperLower\
    \ = vowelsAllCapsAllUpper.ToLower();\n        string vowelsAllCapsAllUpperLowerUpper\
    \ = vowelsAllCapsAllUpperLower.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpper.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpperUpper.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpperUpperUpper.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpperUpperUpper.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpperUpperUpperUpper.ToUpper();\n        string\
    \ vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpperUpperUpper.To\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6_4bnhd9.cs(41,124): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleLeftLeft = vowelsMiddleLeft.Substring(vowelsMiddleLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleRightRight = vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftLeft = vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightRight = vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftLeft = vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightRight = vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftLeft = vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightRight = vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length\
    \ / 2);\n        string \n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2s3lyh61.cs(42,15): error CS1001: Identifier expected

    /tmp/tmp2s3lyh61.cs(42,15): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1);\n        string vowelsMiddle = vowels.Substring(vowels.Length / 2);\n\
    \        string vowelsMiddle1 = vowels.Substring(0, vowels.Length / 2);\n    \
    \    string vowelsMiddle2 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle3 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle4 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle5 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle6 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle7 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle8 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle9 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle10 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle11 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle12 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle13 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle14 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle15 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle16 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle17 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle18 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle19 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle20 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle21 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle22 = \n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbi3ro_g0.cs(45,32): error CS1525: Invalid expression term ''}''

    /tmp/tmpbi3ro_g0.cs(45,32): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftRight =\
    \ vowels.Substring(vowels.Length / 4, vowels.Length / 8);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeft\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpig50g6u4.cs(41,32): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothMiddle = vowelsLeft + vowelsMiddle + vowelsRight;\n\
    \        string vowelsBothMiddleLeft = vowelsLeft + vowelsMiddle + vowelsLeft.Substring(0,\
    \ vowelsLeft.Length - 1);\n        string vowelsBothMiddleRight = vowelsRight\
    \ + vowelsMiddle + vowelsRight.Substring(0, vowelsRight.Length - 1);\n       \
    \ string vowelsBothMiddleBoth = vowelsLeft + vowelsMiddle + vowelsRight + vowelsLeft.Substring(0,\
    \ vowelsLeft.Length - 1) + vowelsRight.Substring(0, vowelsRight.Length - 1);\n\
    \        string vowelsBothMiddleBothLeft = vowelsLeft + vowelsMiddle + vowelsLeft.Substring(0,\
    \ vowelsLeft.Length - 1) + vowelsLeft.Substring(0, vowelsLeft.Length - 1) + vowelsRight.Substring(0,\
    \ vowelsRight.Length - 1);\n        string vowelsBothMiddleBothRight = vowelsRight\
    \ + vowelsMiddle + vowelsRight.Substring(0, vowelsRight.Length - 1) + vowelsRight.Substring(0,\
    \ vowelsRight.Length - 1) + vowelsLeft.Substring(0, vowelsLeft.Length - 1);\n\
    \        string vowelsBothMiddleBothBothLeft = vowelsLeft + vowelsMiddle + vowelsRight\
    \ + vowelsLeft.Substring(0, vowelsLeft.Length - 1) + vowelsLeft.Substring(0, vowelsLeft.Length\
    \ - 1) + vowelsRight.Substring(0, vowelsRight.Length - 1) + vowelsRight.Substring(0,\
    \ vowelsRight.Length - 1);\n        string vowelsBothMiddleBothRightLeft = vowelsRight\
    \ + vowelsMiddle + vowelsRight.Substring(0, vowelsRight.Length - 1) + vowelsRight.Substring(0,\
    \ vowelsRight.Length - 1) + vowelsLeft.Substring(0, vowelsLeft.Length - 1) + vowelsLeft.Substring(0,\
    \ vowelsLeft.Length - 1);\n        string vowelsBothMiddleBothBothRight = vowels\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb_nd_a4l.cs(33,54): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpperLower = vowelsBothUpper.ToLower();\n        string\
    \ vowelsBothLowerUpper = vowelsBothLower.ToUpper();\n        string vowelsBothLowerUpperLower\
    \ = vowelsBothLowerUpper.ToLower();\n        string vowelsBothUpperLowerLower\
    \ = vowelsBothUpperLower.ToUpper();\n        string vowelsBothLowerUpperUpper\
    \ = vowelsBothLowerUpperLower.ToUpper();\n        string vowelsBothUpperLowerUpperLower\
    \ = vowelsBothUpperLowerUpper.ToLower();\n        string vowelsBothUpperLowerUpperUpper\
    \ = vowelsBothUpperLowerUpperLower.ToUpper();\n        string vowelsBothUpperLowerUpperUpperLower\
    \ = vowelsBothUpperLowerUpperUpperLower.ToUpper();\n        string vowelsBothUpperLowerUpperUpperUpper\
    \ = vowelsBothUpperLowerUpperUpperUpperLower.ToUpper();\n        string vowelsBothUpperLowerUpperUpperUpperLower\
    \ = vowelsBothUpperLowerUpperUpperUpperUpperLower.ToUpper();\n        string vowelsBothUpperLowerUpperUpperUpperUpper\
    \ = vowelsBothUpperLowerUpperUpperUpperUpperUpperLower.ToUpper();\n        string\
    \ vowelsBothUpperLowerUpperUpperUpperUpperLower = vowelsBothUpperLowerUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperUpperUpperUpperUpper = vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperLower = vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperUpperLower =\
    \ vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperLowerLower.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperLower\
    \ = vowelsBothUpperLowerUpperUpperUpperUpperUpper\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsj_e1jde.cs(42,129): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftRightLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightRightLeftLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightRightLeftRightLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightRightLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightRightRightLeftLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightRightLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightRightRightLeftRightLeft\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightRightRightLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightRightRightRightLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightRightRightLeftRightLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightRightRightRightLeftRightRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowel\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6t4qlaf1.cs(45,21): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp02xjic90.cs(39,15): error CS1001: Identifier expected

    /tmp/tmp02xjic90.cs(39,15): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n\
    \        string vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n      \
    \  string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string\
    \ vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n        string vowelsBothCapitalUpper\
    \ = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n\
    \        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n      \
    \  string vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalLower\
    \ = vowelsBothCapital.ToLower();\n        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n\
    \        string vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n      \
    \  string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string\
    \ vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n        string vowelsBothCapitalUpper\
    \ = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n\
    \        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n      \
    \  string vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalLower\
    \ = vowelsBothCapital.ToLower();\n        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n\
    \        string vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n      \
    \  string \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcnnmx8th.cs(48,15): error CS1001: Identifier expected

    /tmp/tmpcnnmx8th.cs(48,15): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n\
    \        string vowelsMiddleRight = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddleLeft = vowelsLeft.Substring(vowelsLeft.Length / 2,\
    \ vowelsLeft.Length / 2);\n        string vowelsMiddleRightLeft = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddleLeftRight = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddleRightLeftRight = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddleLeftRightLeftRight\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2, vowelsLeft.Length / 2);\n    \
    \    string vowelsMiddleRightLeftRightLeftRight = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRight\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2, vowelsLeft.Length / 2);\n    \
    \    string vowelsMiddleRightLeftRightLeftRightLeftRight = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2, vowelsLeft.Length / 2);\n    \
    \    string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2, vowelsLeft.Length / 2);\n    \
    \    string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRight = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2, vowelsLeft.Length / 2);\n    \
    \    string \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdgybuzx2.cs(38,15): error CS1001: Identifier expected

    /tmp/tmpdgybuzx2.cs(38,15): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsAll = vowels.Substring(0, vowels.Length);\n    \
    \    string vowelsAllLeft = vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsAllRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n     \
    \   string vowelsAllMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAllBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsAllAll = vowels.Substring(0, vowels.Length);\n        string\
    \ vowelsAllAllLeft = vowels.Substring(0, vowels.Length - 1);\n        string vowelsAllAllRight\
    \ = vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsAllAllMiddle\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsAllAllBoth\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsAllAllAll =\
    \ vowels.Substring(0, vowels.Length);\n        string vowelsAllAllAllLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsAllAllAllRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsAllAllAllMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAllAllAllBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllAllAllAll = vowels.Substring(0,\
    \ vowels.Length);\n        string vowelsAllAllAllAllLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsAllAllAllAllRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsAllAllAllAllMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAllAllAllAllBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllAllAllAllAll = vowels.Substring(0,\
    \ vowels.Length);\n        \n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp66ynsvbo.cs(19,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothLeftRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n\
    \        string vowelsBothRightLeft = vowels.Substring(0, vowels.Length - 1) +\
    \ vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1);\n        string vowelsBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n\
    \        string vowelsBothRightLeftBoth = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeftRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothBothRightLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 1)\
    \ + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string vowelsBothLeftRightBothBoth\
    \ = vowels.Substring(0, vowels.Length\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6b_zwa8g.cs(37,79): error CS1026: ) expected

    /tmp/tmp6b_zwa8g.cs(37,79): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length - 1);\n        string vowelsRight = vowels.Substring(word.Length\
    \ - 1);\n        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleRight = vowels.Substring(word.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleLeftRight = vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeft =\
    \ vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftLeftRightLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightRightLeft\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightRightLeft\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftLeftRightLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightRightLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightRightLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftLeftRightLeftRightLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightRightLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightRightLeftRightLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowel\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpc4c2s_ca.cs(47,21): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle2 = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle3 = vowelsLeft.Substring(vowelsLeft.Length / 2, vowelsLeft.Length\
    \ / 2);\n        string vowelsMiddle4 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle5 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle6 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle7 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle8 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle9 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle10 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle11 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle12 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle13 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle14 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle15 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle16 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle17 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle18 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowels\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbr1kgajg.cs(40,83): error CS1026: ) expected

    /tmp/tmpbr1kgajg.cs(40,83): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRight.Substring(0,\
    \ vowelsMiddleRight.Length / 2);\n        string vowelsMiddleLeftRight = vowelsMiddleLeft.Substring(0,\
    \ vowelsMiddleLeft.Length / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRight.Substring(0,\
    \ vowelsMiddleRight.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowelsMiddleLeftRight.Substring(0,\
    \ vowelsMiddleLeftRight.Length / 2);\n        string vowelsMiddleLeftRightRight\
    \ = vowelsMiddleLeftRightLeft.Substring(0, vowelsMiddleLeftRightLeft.Length /\
    \ 2);\n        string vowelsMiddleLeftRightLeftRight = vowelsMiddleLeftRightRight.Substring(0,\
    \ vowelsMiddleLeftRightRight.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeft\
    \ = vowelsMiddleLeftRightLeftRight.Substring(0, vowelsMiddleLeftRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeftRightRight = vowelsMiddleLeftRightLeftRightLeft.Substring(0,\
    \ vowelsMiddleLeftRightLeftRightLeft.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRight\
    \ = vowelsMiddleLeftRightLeftRightLeftRight.Substring(0, vowelsMiddleLeftRightLeftRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeft = vowelsMiddleLeftRightLeftRightLeftRightLeft.Substring(0,\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeft.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightRight\
    \ = vowelsMiddleLeftRightLeftRightLeftRightRightLeft.Substring(0, vowelsMiddleLeftRightLeftRightLeftRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRight = vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeft.Substring(0,\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeft.Length / 2);\n        string\
    \ vowelsMiddleLeft\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfb7ipjpc.cs(38,32): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBothMiddle =\
    \ vowels.Substring(vowels.Length / 2, vowels.Length / 2 - 1);\n        string\
    \ vowels\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpztes_zbg.cs(44,22): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsLeft = vowelsLeft.ToUpper();\n        string vowelsRight\
    \ = vowelsRight.ToUpper();\n        string vowelsLeft = vowelsLeft.Replace(\"\
    A\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"A\", \"\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"E\", \"\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"E\", \"\");\n        string vowelsLeft =\
    \ vowelsLeft.Replace(\"I\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"\
    I\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"O\", \"\");\n  \
    \      string vowelsRight = vowelsRight.Replace(\"O\", \"\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"U\", \"\");\n        string vowelsRight =\
    \ vowelsRight.Replace(\"U\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"\
    a\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"a\", \"\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"e\", \"\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"e\", \"\");\n        string vowelsLeft =\
    \ vowelsLeft.Replace(\"i\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"\
    i\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"o\", \"\");\n  \
    \      string vowelsRight = vowelsRight.Replace(\"o\", \"\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"u\", \"\");\n        string vowelsRight =\
    \ vowelsRight.Replace(\"u\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"\
    A\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"A\", \"\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"E\", \"\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"E\", \"\");\n        string vowelsLeft =\
    \ vowelsLeft.Replace(\"I\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"\
    I\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"O\", \"\");\n  \
    \      string vowelsRight = vowelsRight.Replace(\"O\", \"\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"U\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqgygew8f.cs(53,48): error CS1010: Newline in constant

    /tmp/tmpqgygew8f.cs(53,50): error CS1026: ) expected

    /tmp/tmpqgygew8f.cs(53,50): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRight.Substring(0,\
    \ vowelsMiddleRight.Length / 2);\n        string vowelsMiddleRightLeftRight =\
    \ vowelsMiddleRightLeft.Substring(0, vowelsMiddleRightLeft.Length / 2);\n    \
    \    string vowelsMiddleRightLeftRightLeft = vowelsMiddleRightLeftRight.Substring(0,\
    \ vowelsMiddleRightLeftRight.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeft.Substring(0, vowelsMiddleRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeft = vowelsMiddleRightLeftRightLeftRight.Substring(0,\
    \ vowelsMiddleRightLeftRightLeftRight.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeft.Substring(0, vowelsMiddleRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeft.Substring(0, vowelsMiddleRightLeftRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight.Substring(0, vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft.Substring(0, vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft.Substring(0,\
    \ vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft.Length /\
    \ 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpulatkcxt.cs(35,156): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle2 = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle3 = vowelsLeft.Substring(vowelsLeft.Length / 2, vowelsLeft.Length\
    \ / 2);\n        string vowelsMiddle4 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle5 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle6 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle7 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle8 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle9 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle10 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle11 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle12 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle13 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle14 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle15 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle16 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle17 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsMiddle18 = vowelsLeft.Substring(vowelsLeft.Length\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfbsg4qzr.cs(40,71): error CS1026: ) expected

    /tmp/tmpfbsg4qzr.cs(40,71): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowel\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz7_xu5en.cs(54,39): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsLeft = vowelsLeft.ToLower();\n        string vowelsRight\
    \ = vowelsRight.ToLower();\n        string vowelsLeft = vowelsLeft.Replace(\"\
    e\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"e\", \"\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"i\", \"\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"i\", \"\");\n        string vowelsLeft =\
    \ vowelsLeft.Replace(\"o\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"\
    o\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"u\", \"\");\n  \
    \      string vowelsRight = vowelsRight.Replace(\"u\", \"\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"a\", \"\");\n        string vowelsRight =\
    \ vowelsRight.Replace(\"a\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"\
    e\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"e\", \"\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"i\", \"\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"i\", \"\");\n        string vowelsLeft =\
    \ vowelsLeft.Replace(\"o\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"\
    o\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"u\", \"\");\n  \
    \      string vowelsRight = vowelsRight.Replace(\"u\", \"\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"a\", \"\");\n        string vowelsRight =\
    \ vowelsRight.Replace(\"a\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"\
    e\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"e\", \"\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"i\", \"\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"i\", \"\");\n        string vowelsLeft =\
    \ vowelsLeft.Replace(\"o\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"\
    o\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"u\", \"\");\n  \
    \      string vowelsRight = vowelsRight.Replace(\"u\", \"\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"a\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpetrpp38x.cs(53,48): error CS1010: Newline in constant

    /tmp/tmpetrpp38x.cs(53,50): error CS1026: ) expected

    /tmp/tmpetrpp38x.cs(53,50): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n\
    \        string vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string\
    \ vowelsBothCapLower = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower\
    \ = vowelsBothCapUpper.ToLower();\n        string vowelsBothCapUpperLowerUpper\
    \ = vowelsBothCapUpperLower.ToUpper();\n        string vowelsBothCapUpperLowerUpperUpper\
    \ = vowelsBothCapUpperLowerUpper.ToUpper();\n        string vowelsBothCapUpperLowerUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpper.ToUpper();\n        string vowelsBothCapUpperLowerUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpper.ToUpper();\n        string vowelsBothCapUpperLowerUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpper.ToUpper();\n        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpper.ToUpper();\n        string\
    \ vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpper\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4mvgga04.cs(41,120): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length - 1);\n        string vowelsRight = vowels.Substring(word.Length\
    \ - 1);\n        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2 - 1);\n\
    \        string vowelsMiddleRight = vowels.Substring(word.Length / 2);\n     \
    \   string vowelsMiddleMiddle = vowels.Substring(0, word.Length / 4);\n      \
    \  string vowelsMiddleMiddleLeft = vowels.Substring(0, word.Length / 4 - 1);\n\
    \        string vowelsMiddleMiddleRight = vowels.Substring(word.Length / 4);\n\
    \        string vowelsMiddleMiddleMiddle = vowels.Substring(0, word.Length / 8);\n\
    \        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0, word.Length\
    \ / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(word.Length\
    \ / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, word.Length\
    \ / 16);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ word.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(word.Length\
    \ / 16);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ word.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ word.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight =\
    \ vowels.Substring(word.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 256);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 256 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 256);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowel\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzecanukc.cs(47,60): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowel\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1gjvnz6c.cs(45,82): error CS1026: ) expected

    /tmp/tmp1gjvnz6c.cs(45,82): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowelsBoth.Substring(0, vowelsBoth.Length - 1);\n        string vowelsBothRight\
    \ = vowelsBoth.Substring(vowelsBoth.Length - 1, vowelsBoth.Length);\n        string\
    \ vowelsBothBoth = vowelsBoth.Substring(0, vowelsBoth.Length - 1) + vowelsBoth.Substring(vowelsBoth.Length\
    \ - 1, vowelsBoth.Length);\n        string vowelsBothBothLeft = vowelsBothBoth.Substring(0,\
    \ vowelsBothBoth.Length - 1);\n        string vowelsBothBothRight = vowelsBothBoth.Substring(vowelsBothBoth.Length\
    \ - 1, vowelsBothBoth.Length);\n        string vowelsBothBothBoth = vowelsBothBoth.Substring(0,\
    \ vowelsBothBoth.Length - 1) + vowelsBothBoth.Substring(vowelsBothBoth.Length\
    \ - 1, vowelsBothBoth.Length);\n        string vowelsBothBothBothLeft = vowelsBothBothBoth.Substring(0,\
    \ vowelsBothBothBoth.Length - 1);\n        string vowelsBothBothBothRight = vowelsBothBothBoth.Substring(vowelsBothBothBoth.Length\
    \ - 1, vowelsBothBothBoth.Length);\n        string vowelsBothBothBothBoth = vowelsBothBothBoth.Substring(0,\
    \ vowelsBothBothBoth.Length - 1) + vowelsBothBothBoth.Substring(vowelsBothBothBoth.Length\
    \ - 1, vowelsBothBothBoth.Length);\n        string vowelsBothBothBothBothLeft\
    \ = vowelsBothBothBothBothLeft.Substring(0, vowelsBothBothBothLeft.Length - 1);\n\
    \        string vowelsBothBothBothBothRight = vowelsBothBothBothRight.Substring(vowelsBothBothBothRight.Length\
    \ - 1, vowelsBothBothBothRight.Length);\n        string vowelsBothBothBothBothBoth\
    \ = vowelsBothBothBothBothBoth.Substring(0, vowelsBothBothBothBothBoth.Length\
    \ - 1) + vowelsBothBothBothBoth.Substring(vowelsBothBothBothBoth.Length - 1, vowelsBothBothBothBoth.Length\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0_fl2bl4.cs(35,223): error CS1026: ) expected

    /tmp/tmp0_fl2bl4.cs(35,223): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsRightLeft = vowelsRight.Substring(0, vowelsRight.Length);\n\
    \        string vowelsRightRight = vowelsRight.Substring(vowelsRight.Length);\n\
    \        string vowelsRightLeftRight = vowelsRightLeft.Substring(0, vowelsRightLeft.Length);\n\
    \        string vowelsRightLeftLeftRight = vowelsRightLeftRight.Substring(0, vowelsRightLeftRight.Length);\n\
    \        string vowelsRightLeftLeftLeftRight = vowelsRightLeftLeftRight.Substring(0,\
    \ vowelsRightLeftLeftRight.Length);\n        string vowelsRightLeftLeftLeftLeftRight\
    \ = vowelsRightLeftLeftLeftRight.Substring(0, vowelsRightLeftLeftRight.Length);\n\
    \        string vowelsRightLeftLeftLeftLeftRight = vowelsRightLeftLeftLeftRight.Substring(0,\
    \ vowelsRightLeftLeftRight.Length);\n        string vowelsRightLeftLeftLeftLeftRight\
    \ = vowelsRightLeftLeftLeftRight.Substring(0, vowelsRightLeftLeftRight.Length);\n\
    \        string vowelsRightLeftLeftLeftLeftRight = vowelsRightLeftLeftLeftRight.Substring(0,\
    \ vowelsRightLeftLeftRight.Length);\n        string vowelsRightLeftLeftLeftLeftRight\
    \ = vowelsRightLeftLeftLeftRight.Substring(0, vowelsRightLeftLeftRight.Length);\n\
    \        string vowelsRightLeftLeftLeftLeftRight = vowelsRightLeftLeftLeftRight.Substring(0,\
    \ vowelsRightLeftLeftRight.Length);\n        string vowelsRightLeftLeftLeftLeftRight\
    \ = vowelsRightLeftLeftLeftRight.Substring(0, vowelsRightLeftLeftRight.Length);\n\
    \        string vowelsRightLeftLeftLeftLeftRight = vowelsRightLeftLeftLeftRight.Substring(0,\
    \ vowelsRightLeftLeftRight.Length);\n        string vowelsRightLeftLeftLeftLeftRight\
    \ = vowelsRightLeftLeftLeftRight.Substring(0, vowelsRightLeftLeftRight.Length);\n\
    \        string vowelsRightLeftLeftLeftLeftRight = vowelsRightLeftLeftLeftRight.Substring(0,\
    \ vowelsRightLeftLeftRight.Length);\n        string vowelsRightLeftLeftLeftLeftRight\
    \ = vowelsRightLeftLeftLeftRight.Substring(0, vowelsRightLeftLeftRight.Length);\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo7fnpmti.cs(29,16): error CS0128: A local variable or function named ''vowelsRightLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpo7fnpmti.cs(30,16): error CS0128: A local variable or function named ''vowelsRightLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpo7fnpmti.cs(31,16): error CS0128: A local variable or function named ''vowelsRightLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpo7fnpmti.cs(32,16): error CS0128: A local variable or function named ''vowelsRightLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpo7fnpmti.cs(33,16): error CS0128: A local variable or function named ''vowelsRightLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpo7fnpmti.cs(34,16): error CS0128: A local variable or function named ''vowelsRightLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpo7fnpmti.cs(35,16): error CS0128: A local variable or function named ''vowelsRightLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpo7fnpmti.cs(36,16): error CS0128: A local variable or function named ''vowelsRightLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpo7fnpmti.cs(37,16): error CS0128: A local variable or function named ''vowelsRightLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpo7fnpmti.cs(38,16): error CS0128: A local variable or function named ''vowelsRightLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpo7fnpmti.cs(19,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsLeft = vowelsLeft.ToLower();\n        string vowelsRight\
    \ = vowelsRight.ToLower();\n        string vowelsLeft = vowelsLeft.Replace(\"\
    e\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"e\", \"\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"i\", \"\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"i\", \"\");\n        string vowelsLeft =\
    \ vowelsLeft.Replace(\"o\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"\
    o\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"u\", \"\");\n  \
    \      string vowelsRight = vowelsRight.Replace(\"u\", \"\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"a\", \"\");\n        string vowelsRight =\
    \ vowelsRight.Replace(\"a\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"\
    e\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"e\", \"\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"i\", \"\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"i\", \"\");\n        string vowelsLeft =\
    \ vowelsLeft.Replace(\"o\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"\
    o\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"u\", \"\");\n  \
    \      string vowelsRight = vowelsRight.Replace(\"u\", \"\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"a\", \"\");\n        string vowelsRight =\
    \ vowelsRight.Replace(\"a\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"\
    e\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"e\", \"\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"i\", \"\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"i\", \"\");\n        string vowelsLeft =\
    \ vowelsLeft.Replace(\"o\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"\
    o\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"u\", \"\");\n  \
    \      string vowelsRight = vowelsRight.Replace(\"u\", \"\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"a\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpetrpp38x.cs(53,48): error CS1010: Newline in constant

    /tmp/tmpetrpp38x.cs(53,50): error CS1026: ) expected

    /tmp/tmpetrpp38x.cs(53,50): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(word.Length / 2);\n      \
    \  string vowelsMiddle2 = vowelsLeft.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddle3 = vowelsLeft.Substring(word.Length / 2, word.Length / 2);\n  \
    \      string vowelsMiddle4 = vowelsLeft.Substring(word.Length / 2, word.Length\
    \ / 2);\n        string vowelsMiddle5 = vowelsLeft.Substring(word.Length / 2,\
    \ word.Length / 2);\n        string vowelsMiddle6 = vowelsLeft.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddle7 = vowelsLeft.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddle8 = vowelsLeft.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddle9 = vowelsLeft.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddle10 = vowelsLeft.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddle11 = vowelsLeft.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddle12 = vowelsLeft.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddle13 = vowelsLeft.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddle14 = vowelsLeft.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddle15 = vowelsLeft.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddle16 = vowelsLeft.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddle17 = vowelsLeft.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddle18 = vowelsLeft.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddle19 = vowelsLeft.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddle20 = vowelsLeft.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddle21 = vowelsLeft.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddle22 = vowelsLeft.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddle23 = vowel\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz5rzwssz.cs(45,38): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp02xjic90.cs(39,15): error CS1001: Identifier expected

    /tmp/tmp02xjic90.cs(39,15): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsBothRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBothMiddle = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsBothBothLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBothMiddle =\
    \ vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBothBoth\
    \ = vowels.Sub\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmbtw021e.cs(44,59): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphpmbdwmo.cs(39,15): error CS1001: Identifier expected

    /tmp/tmphpmbdwmo.cs(39,15): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleUpper = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2).ToUpper();\n        string vowelsMiddleLower = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2).ToLower();\n        string vowelsMiddleUpperLower =\
    \ vowels.Substring(vowels.Length / 2, vowels.Length / 2).ToUpper().ToLower();\n\
    \        string vowelsMiddleLowerUpper = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2).ToLower().ToUpper();\n        string vowelsMiddleLowerUpperLower = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2).ToLower().ToUpper().ToLower();\n        string vowelsMiddleUpperLowerUpper\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2).ToUpper().ToLower().ToUpper();\n\
    \        string vowelsMiddleLowerUpperLowerUpper = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2).ToLower().ToUpper().ToLower().ToUpper();\n        string\
    \ vowelsMiddleUpperLowerUpperLower = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2).ToUpper().ToLower().ToUpper().ToLower();\n        string vowelsMiddleUpperLowerUpperLowerUpper\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2).ToUpper().ToLower().ToUpper().ToLower().ToUpper();\n\
    \        string vowelsMiddleUpperLowerUpperLowerUpperUpper = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2).ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower();\n\
    \        string vowelsMiddleUpperLowerUpperLowerUpperUpper = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2).ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower().ToUpper();\n\
    \        string vowelsMiddleUpperLowerUpperLowerUpperUpper = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2).ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower();\n\
    \        string vowelsMiddleUpperLowerUpperLowerUpperUpper\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppbhyggja.cs(36,58): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddle2 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle3 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle4 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle5 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle6 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle7 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle8 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle9 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle10 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle11 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle12 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle13 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle14 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle15 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle16 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle17 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle18 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle19 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle20 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle21 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle22 = vowels.Substring(vowels.Length / 2, vowels.Length\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp070s2v32.cs(44,82): error CS1026: ) expected

    /tmp/tmp070s2v32.cs(44,82): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2, vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length / 2, vowelsMiddleMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ / 2, vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length / 2, vowelsMiddleMiddleMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgsb4b5j0.cs(37,89): error CS1026: ) expected

    /tmp/tmpgsb4b5j0.cs(37,89): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp02xjic90.cs(39,15): error CS1001: Identifier expected

    /tmp/tmp02xjic90.cs(39,15): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n\
    \        string vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpenvcjkiu.cs(51,45): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphpmbdwmo.cs(39,15): error CS1001: Identifier expected

    /tmp/tmphpmbdwmo.cs(39,15): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle2 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle3 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle4 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle5 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle6 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle7 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle8 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle9 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle10 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle11 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle12 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle13 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle14 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle15 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle16 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle17 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle18 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle19 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle20 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle21 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle22 = vowels.Substring(vowels.Length\
    \ / \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4f6ihlxp.cs(44,65): error CS1525: Invalid expression term ''}''

    /tmp/tmp4f6ihlxp.cs(44,65): error CS1026: ) expected

    /tmp/tmp4f6ihlxp.cs(44,65): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n\
    \        string vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpenvcjkiu.cs(51,45): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp02xjic90.cs(39,15): error CS1001: Identifier expected

    /tmp/tmp02xjic90.cs(39,15): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsRightLeft = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1);\n        string vowelsRightMiddle = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length / 2);\n        string vowelsRightMiddleLeft = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length / 2);\n        string vowelsRightMiddleRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length / 2);\n        string vowelsLeftMiddle = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsLeftMiddleRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsLeftMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsLeftMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightMiddle = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftMiddle = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightMiddleRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftMiddleRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightMiddleLeftMiddle = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftMiddle\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2psprw19.cs(46,38): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string vowelsBothCapLower\
    \ = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n\
    \        string vowelsBothCapUpperLowerUpper = vowelsBothCapUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpper = vowelsBothCapUpperLowerUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpper = vowelsBothCapUpperLowerUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw1qg0xvc.cs(41,140): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / \n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpm004z0fq.cs(40,135): error CS1525: Invalid expression term ''}''

    /tmp/tmpm004z0fq.cs(40,135): error CS1026: ) expected

    /tmp/tmpm004z0fq.cs(40,135): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothLeftRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothRightLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothRight = vowels.Substring(0, vowels.Length - 1) +\
    \ vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothLeftRightBoth = vowels.Substring(0, vowels.Length - 1)\
    \ + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length);\n  \
    \      string vowelsBothRightLeftBoth = vowels.Substring(0, vowels.Length - 1)\
    \ + vowels.Substring(vowels.Length - 1, vowel\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpftkmdv4b.cs(33,124): error CS1026: ) expected

    /tmp/tmpftkmdv4b.cs(33,124): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowelsBoth.Substring(0, vowelsBoth.Length - 1);\n        string vowelsBothRight\
    \ = vowelsBoth.Substring(vowelsBoth.Length - 1, vowelsBoth.Length);\n        string\
    \ vowelsBothBoth = vowelsBoth.Substring(0, vowelsBoth.Length - 1) + vowelsBoth.Substring(vowelsBoth.Length\
    \ - 1, vowelsBoth.Length);\n        string vowelsBothLeftRight = vowelsBothLeft.Substring(0,\
    \ vowelsBothLeft.Length - 1) + vowelsBothRight.Substring(vowelsBothRight.Length\
    \ - 1, vowelsBothRight.Length);\n        string vowelsBothBothLeft = vowelsBothBoth.Substring(0,\
    \ vowelsBothBoth.Length - 1) + vowelsBothLeft.Substring(vowelsBothLeft.Length\
    \ - 1, vowelsBothLeft.Length);\n        string vowelsBothBothRight = vowelsBothBoth.Substring(0,\
    \ vowelsBothBoth.Length - 1) + vowelsBothRight.Substring(vowelsBothRight.Length\
    \ - 1, vowelsBothRight.Length);\n        string vowelsBothBothBoth = vowelsBothBoth.Substring(0,\
    \ vowelsBothBoth.Length - 1) + vowelsBothBoth.Substring(vowelsBothBoth.Length\
    \ - 1, vowelsBothBoth.Length);\n        string vowelsBothBothBothLeft = vowelsBothBothBoth.Substring(0,\
    \ vowelsBothBothBoth.Length - 1) + vowelsBothLeft.Substring(vowelsBothLeft.Length\
    \ - 1, vowelsBothLeft.Length);\n        string vowelsBothBothBothRight = vowelsBothBothBoth.Substring(0,\
    \ vowelsBothBothBoth.Length - 1) + vowelsBothRight.Substring(vowelsBothRight.Length\
    \ - 1, vowelsBothRight.Length);\n        string vowelsBothBothBothBoth = vowelsBothBothBoth.Substring(0,\
    \ vowelsBothBothBoth.Length - 1) + vowelsBothBoth.Substring(vowelsBothBoth.Length\
    \ - 1, vowelsBothBoth.Length);\n        string vowelsBothBothBothBothLeft = vowel\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjosgts8g.cs(34,50): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllUpperLower = vowelsAllUpper.ToLower();\n\
    \        string vowelsAllLowerUpper = vowelsAllLower.ToUpper();\n        string\
    \ vowelsAllLowerUpperLower = vowelsAllLowerUpper.ToLower();\n        string vowelsAllLowerUpperLowerUpper\
    \ = vowelsAllLowerUpperLower.ToUpper();\n        string vowelsAllLowerUpperLowerUpperLower\
    \ = vowelsAllLowerUpperLowerUpper.ToLower();\n        string vowelsAllLowerUpperLowerUpperLowerUpper\
    \ = vowelsAllLowerUpperLowerUpperLower.ToUpper();\n        string vowelsAllLowerUpperLowerUpperLowerUpperLower\
    \ = vowelsAllLowerUpperLowerUpperLowerUpper.ToLower();\n        string vowelsAllLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsAllLowerUpperLowerUpperLowerUpperLower.ToUpper();\n        string vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperUpper\
    \ = vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n      \
    \  string vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperUpperLower = vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper.ToLower();\n\
    \        string vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper =\
    \ vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper.ToUpper();\n   \
    \     string vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperUpperLower\
    \ = vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperUpperLower.ToUpper();\n\
    \        string vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperUpperUpperLower\
    \ = vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperUpperLower.ToUpper();\n\
    \        string vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperUpperLower\
    \ = vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper.ToLower();\n\
    \        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjlzmwx5l.cs(35,73): error CS0103: The name ''vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLower''
    does not exist in the current context

    /tmp/tmpjlzmwx5l.cs(36,78): error CS0841: Cannot use local variable ''vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper''
    before it is declared

    /tmp/tmpjlzmwx5l.cs(39,93): error CS0841: Cannot use local variable ''vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperUpperLower''
    before it is declared

    /tmp/tmpjlzmwx5l.cs(40,98): error CS0103: The name ''vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper''
    does not exist in the current context

    /tmp/tmpjlzmwx5l.cs(38,88): error CS0165: Use of unassigned local variable ''vowelsAllLowerUpperLowerUpperLowerUpperLowerUpperLowerUpperUpperLower''

    /tmp/tmpjlzmwx5l.cs(19,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAll = vowelsLeft + vowelsRight\
    \ + vowelsMiddle;\n        string vowelsAllUpper = vowelsAll.ToUpper();\n    \
    \    string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllCaps\
    \ = vowelsAll.ToUpper();\n        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n\
    \        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string\
    \ vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string vowelsAllCapsLower\
    \ = vowelsAllCaps.ToLower();\n        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n\
    \        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string\
    \ vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string vowelsAllCapsLower\
    \ = vowelsAllCaps.ToLower();\n        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n\
    \        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string\
    \ vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string vowelsAllCapsLower\
    \ = vowelsAllCaps.ToLower();\n        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n\
    \        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string\
    \ vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string vowelsAllCapsLower\
    \ = vowelsAllCaps.ToLower();\n        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n\
    \        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string\
    \ vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string vowelsAllCapsLower\
    \ = vowelsAllCaps.ToLower();\n        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n\
    \        string \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvj3vwvhd.cs(49,15): error CS1001: Identifier expected

    /tmp/tmpvj3vwvhd.cs(49,15): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = word.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleRight = word.Substring(word.Length / 2, word.Length / 2);\n    \
    \    string vowelsMiddleLeft = word.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleRightLeft = word.Substring(word.Length / 2, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = word.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleRightLeftRight = word.Substring(word.Length / 2, word.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeftRight = word.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeftRightLeft = word.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRight\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeft\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleLeft\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi52kaonc.cs(42,32): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2 + 1, vowels.Length / 2 + 1);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2 - 1, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightLeft =\
    \ vowels.Substring(vowels.Length / 2 - 1, vowels.Length / 2 + 1);\n        string\
    \ vowelsMiddleLeftRightLeftRight = vowels.Substring(vowels.Length / 2 + 1, vowels.Length\
    \ / 2 + 1);\n        string vowelsMiddleLeftRightLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 2 - 1, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2 + 1, vowels.Length / 2 + 1);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 2 - 1, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2 + 1, vowels.Length / 2 + 1);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 2 - 1, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2 + 1, vowels.Length / 2 + 1);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2 - 1, vowels.Length / 2 - 1);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2 + 1, vowels.Length / 2 + 1);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2 - 1, vowels.Length / \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9zzc0zm2.cs(38,162): error CS1525: Invalid expression term ''}''

    /tmp/tmp9zzc0zm2.cs(38,162): error CS1026: ) expected

    /tmp/tmp9zzc0zm2.cs(38,162): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = word.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleRight = word.Substring(word.Length / 2, word.Length / 2);\n    \
    \    string vowelsMiddleLeft = word.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleLeftRight = word.Substring(word.Length / 2, word.Length / 2);\n\
    \        string vowelsMiddleRightLeft = word.Substring(word.Length / 2, word.Length\
    \ / 2);\n        string vowelsMiddleLeftRightMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleRightLeftMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1d08ip2d.cs(45,49): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRight.Substring(0,\
    \ vowelsMiddleRight.Length / 2);\n        string vowelsMiddleRightLeftRight =\
    \ vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length / 2);\n       \
    \ string vowelsMiddleRightLeftRightLeft = vowelsMiddleRightLeftRight.Substring(0,\
    \ vowelsMiddleRightLeftRight.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeft.Substring(vowelsMiddleRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeft = vowelsMiddleRightLeftRightLeftRight.Substring(0,\
    \ vowelsMiddleRightLeftRightLeftRight.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeft.Substring(vowelsMiddleRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeft = vowelsMiddleRightLeftRightLeftRightLeftRight.Substring(0,\
    \ vowelsMiddleRightLeftRightLeftRightLeftRight.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeft.Substring(vowelsMiddleRightLeftRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight.Substring(0, vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft.Substring(vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRight.Substring(0,\
    \ vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRight.Length / 2);\n\
    \        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpje64hv39.cs(19,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRight.Substring(0,\
    \ vowelsMiddleRight.Length / 2);\n        string vowelsMiddleRightLeftRight =\
    \ vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length / 2);\n       \
    \ string vowelsMiddleRightLeftRightLeft = vowelsMiddleRightLeftRight.Substring(0,\
    \ vowelsMiddleRightLeftRight.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeft.Substring(vowelsMiddleRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeft = vowelsMiddleRightLeftRightLeftRight.Substring(0,\
    \ vowelsMiddleRightLeftRightLeftRight.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeft.Substring(vowelsMiddleRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeft.Substring(0, vowelsMiddleRightLeftRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight.Substring(0, vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft.Substring(0,\
    \ vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft.Length /\
    \ 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft.Substring(0,\
    \ vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowelsMiddleRightLeftRightLeft\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpeb2cl5h3.cs(35,133): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddle2 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle3 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle4 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle5 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle6 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle7 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle8 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle9 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle10 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle11 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle12 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle13 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle14 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle15 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle16 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle17 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle18 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle19 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle20 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle21 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle22 = vowels.Substring(vowels.Length / 2, vowels.Length\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp070s2v32.cs(44,82): error CS1026: ) expected

    /tmp/tmp070s2v32.cs(44,82): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length - 1);\n        string vowelsRight = vowels.Substring(word.Length\
    \ - 1, 1);\n        string vowelsMiddle = word.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleRight = word.Substring(word.Length / 2, 1);\n    \
    \    string vowelsMiddleLeft = word.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleLeftRight = word.Substring(word.Length / 2, 1);\n        string\
    \ vowelsMiddleLeftLeftRight = word.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleLeftLeftLeftRight = word.Substring(word.Length / 2, 1);\n      \
    \  string vowelsMiddleLeftLeftLeftLeftRight = word.Substring(word.Length / 2,\
    \ 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight = word.Sub\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpe6qgjr55.cs(46,64): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddle2 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle3 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 4);\n        string vowelsMiddle4 = vowels.Substring(vowels.Length / 4, vowels.Length\
    \ / 4);\n        string vowelsMiddle5 = vowels.Substring(vowels.Length / 4, vowels.Length\
    \ / 8);\n        string vowelsMiddle6 = vowels.Substring(vowels.Length / 8, vowels.Length\
    \ / 8);\n        string vowelsMiddle7 = vowels.Substring(vowels.Length / 8, vowels.Length\
    \ / 16);\n        string vowelsMiddle8 = vowels.Substring(vowels.Length / 16,\
    \ vowels.Length / 16);\n        string vowelsMiddle9 = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 32);\n        string vowelsMiddle10 = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddle11 = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 64);\n        string vowelsMiddle12 = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64);\n        string vowelsMiddle13 = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 128);\n        string vowelsMiddle14 = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddle15 = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 256);\n        string vowelsMiddle16 = vowels.Substring(vowels.Length\
    \ / 256, vowels.Length / 256);\n        string vowelsMiddle17 = vowels.Substring(vowels.Length\
    \ / 256, vowels.Length / 512);\n        string vowelsMiddle18 = vowels.Substring(vowels.Length\
    \ / 512, vowels.Length / 512);\n        string vowelsMiddle19 = vowels.Substring(vowels.Length\
    \ / 512, vowels.Length / 1024);\n        string vowelsMiddle20 = vowels.Substring(vowels.Length\
    \ / 1024, vowels.Length / 1024);\n        string vowelsMiddle21 = vowels.Substring(vowels.Length\
    \ / 1024, vowels.Length / 2048);\n        string vowelsMiddle22 = vowel\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp18ub8yea.cs(44,38): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleLeftLeft = vowelsMiddleLeft.Substring(vowelsMiddleLeft.Length\
    \ / 2);\n        string vowelsMiddleRightRight = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeft = vowelsMiddleLeftRight.Substring(vowelsMiddleLeftRight.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowelsMiddleLeftLeft.Substring(vowelsMiddleLeftLeft.Length\
    \ / 2);\n        string vowelsMiddleRightRightLeft = vowelsMiddleRightRight.Substring(vowelsMiddleRightRight.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeftRight = vowelsMiddleLeftRightLeft.Substring(vowelsMiddleLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRightRightLeft = vowelsMiddleLeftRightRightLeft.Substring(vowelsMiddleLeftRightRightLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRightRightRight = vowelsMiddleLeftRightRightRight.Substring(vowelsMiddleLeftRightRightRight.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRightRightLeftRight = vowelsMiddleLeftRightRightLeftRight.Substring(vowelsMiddleLeftRightRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRightRightLeftRightLeft = vowelsMiddleLeftRightRightLeftRightLeft.Substring(vowelsMiddleLeftRightRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRightRightLeftRightRight = vowelsMiddleLeftRightRightLeftRightRightLeft.Substring(vowelsMiddleLeftRightRightLeftRightRightLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRightRightLeftRightRightLeft = vowelsMiddleLeftRightRightLeftRightRightRightLeft.Substring(vowelsMiddleLeftRightRightLeftRightRightRightLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRightRightLeftRightRightRight = vowelsMiddleLeftRightRightLeftRightRightRightRightLeft.\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpileuvc26.cs(38,123): error CS1001: Identifier expected

    /tmp/tmpileuvc26.cs(38,123): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBothMiddle =\
    \ vowels.Substring(vowels.Length / 2, vowels.Length / 2 - 1);\n        string\
    \ vowels\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnqz5jhl8.cs(44,22): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length - 1);\n        string vowelsRight = vowels.Substring(word.Length\
    \ - 1);\n        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleRight = vowels.Substring(word.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleLeftRight = vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeft =\
    \ vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftRightRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRightRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRightLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRightLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRightLeftRightLeft\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowel\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppcrb50lx.cs(46,85): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsRightLeft = vowelsRight.Substring(0, vowelsRight.Length);\n\
    \        string vowelsRightRight = vowelsRight.Substring(vowelsRight.Length);\n\
    \        string vowelsRightLeftRight = vowelsRightLeft.Substring(0, vowelsRightLeft.Length);\n\
    \        string vowelsRightLeftLeftRight = vowelsRightLeftRight.Substring(0, vowelsRightLeftRight.Length);\n\
    \        string vowelsRightLeftLeftLeftRight = vowelsRightLeftLeftRight.Substring(0,\
    \ vowelsRightLeftLeftRight.Length);\n        string vowelsRightLeftLeftLeftLeftRight\
    \ = vowelsRightLeftLeftLeftRight.Substring(0, vowelsRightLeftLeftRight.Length);\n\
    \        string vowelsRightLeftLeftLeftLeftRight = vowelsRightLeftLeftLeftRight.Substring(0,\
    \ vowelsRightLeftLeftRight.Length);\n        string vowelsRightLeftLeftLeftLeftRight\
    \ = vowelsRightLeftLeftLeftRight.Substring(0, vowelsRightLeftLeftRight.Length);\n\
    \        string vowelsRightLeftLeftLeftLeftRight = vowelsRightLeftLeftLeftRight.Substring(0,\
    \ vowelsRightLeftLeftRight.Length);\n        string vowelsRightLeftLeftLeftLeftRight\
    \ = vowelsRightLeftLeftLeftRight.Substring(0, vowelsRightLeftLeftRight.Length);\n\
    \        string vowelsRightLeftLeftLeftLeftRight = vowelsRightLeftLeftLeftRight.Substring(0,\
    \ vowelsRightLeftLeftRight.Length);\n        string vowelsRightLeftLeftLeftLeftRight\
    \ = vowelsRightLeftLeftLeftRight.Substring(0, vowelsRightLeftLeftRight.Length);\n\
    \        string vowelsRightLeftLeftLeftLeftRight = vowelsRightLeftLeftLeftRight.Substring(0,\
    \ vowelsRightLeftLeftRight.Length);\n        string vowelsRightLeftLeftLeftLeftRight\
    \ = vowelsRightLeftLeftLeftRight.Substring(0, vowelsRightLeftLeftRight.Length);\n\
    \        string vowelsRightLeftLeftLeftLeftRight = vowelsRightLeftLeftLeftRight.Substring(0,\
    \ vowelsRightLeftLeftRight.Length);\n        string vowelsRightLeftLeftLeftLeftRight\
    \ = vowelsRightLeftLeftLeftRight.Substring(0, vowelsRightLeftLeftRight.Length);\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo7fnpmti.cs(29,16): error CS0128: A local variable or function named ''vowelsRightLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpo7fnpmti.cs(30,16): error CS0128: A local variable or function named ''vowelsRightLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpo7fnpmti.cs(31,16): error CS0128: A local variable or function named ''vowelsRightLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpo7fnpmti.cs(32,16): error CS0128: A local variable or function named ''vowelsRightLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpo7fnpmti.cs(33,16): error CS0128: A local variable or function named ''vowelsRightLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpo7fnpmti.cs(34,16): error CS0128: A local variable or function named ''vowelsRightLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpo7fnpmti.cs(35,16): error CS0128: A local variable or function named ''vowelsRightLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpo7fnpmti.cs(36,16): error CS0128: A local variable or function named ''vowelsRightLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpo7fnpmti.cs(37,16): error CS0128: A local variable or function named ''vowelsRightLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpo7fnpmti.cs(38,16): error CS0128: A local variable or function named ''vowelsRightLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpo7fnpmti.cs(19,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowel\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1gjvnz6c.cs(45,82): error CS1026: ) expected

    /tmp/tmp1gjvnz6c.cs(45,82): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n\
    \        string vowelsCountUpper = vowelsCount.ToUpper();\n        string vowelsCountLower\
    \ = vowelsCount.ToLower();\n        string vowelsCountUpperLower = vowelsCount.ToUpper().ToLower();\n\
    \        string vowelsCountUpperLowerUpper = vowelsCount.ToUpper().ToLower().ToUpper();\n\
    \        string vowelsCountUpperLowerUpperUpper = vowelsCount.ToUpper().ToLower().ToUpper().ToLower();\n\
    \        string vowelsCountUpperLowerUpperUpperUpper = vowelsCount.ToUpper().ToLower().ToUpper().ToLower().ToUpper();\n\
    \        string vowelsCountUpperLowerUpperUpperUpperUpper = vowelsCount.ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower();\n\
    \        string vowelsCountUpperLowerUpperUpperUpperUpperUpper = vowelsCount.ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower().ToUpper();\n\
    \        string vowelsCountUpperLowerUpperUpperUpperUpperUpper = vowelsCount.ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower();\n\
    \        string vowelsCountUpperLowerUpperUpperUpperUpperUpperUpper = vowelsCount.ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower().ToUpper();\n\
    \        string vowelsCountUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsCount.ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower().ToUpper();\n\
    \        string vowelsCountUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsCount.ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower().ToUpper();\n\
    \        string vowelsCountUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsCount.ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower();\n\
    \        string vowelsCountUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsCount.ToUpper().ToLower().ToUpper().ToLower().ToUpper().To\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3zqcho6n.cs(35,144): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n\
    \        string vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpenvcjkiu.cs(51,45): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = word.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleRight = word.Substring(word.Length / 2);\n        string vowelsMiddleLeft\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRight\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleRightLeft = word.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftRightLeft = word.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeft = word.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeftLeft = word.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftLeft = word.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeftLeftLeft = word.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftLeftLeft = word.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftLeft = word.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftLeftLeft = word.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftLeftLeftLeft\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftLeftLeftLeftLeft\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftLeftLeftLeftLeft\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftLeftLeftLeftLeftLeft\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftLeftLeftLeftLeftLeftLeft\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftLeftLeftLeftLeftLeftLeft\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftLeftLeftLeftLeftLeftLeft\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftLeftLeftLeftLeftLeftLeft\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftLeftLeftLeftLeftLeftLeftLeft\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftLeftLeftLeftLeftLeftLeftLeft\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftLeftLeft\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprzx526jo.cs(46,57): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = word.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleRight = word.Substring(word.Length / 2, word.Length / 2);\n    \
    \    string vowelsMiddleLeft = word.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleLeftRight = word.Substring(word.Length / 2, word.Length / 2);\n\
    \        string vowelsMiddleRightLeft = word.Substring(word.Length / 2, word.Length\
    \ / 2);\n        string vowelsMiddleLeftRightMiddle = word.Substring(word.Length\
    \ / 4, word.Length / 4);\n        string vowelsMiddleRightLeftMiddle = word.Substring(word.Length\
    \ / 4, word.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle = word.Substring(word.Length\
    \ / 8, word.Length / 8);\n        string vowelsMiddleRightLeftMiddleMiddle = word.Substring(word.Length\
    \ / 8, word.Length / 8);\n        string vowelsMiddleLeftRightMiddleMiddleMiddle\
    \ = word.Substring(word.Length / 16, word.Length / 16);\n        string vowelsMiddleRightLeftMiddleMiddleMiddle\
    \ = word.Substring(word.Length / 16, word.Length / 16);\n        string vowelsMiddleLeftRightMiddleMiddleMiddle\
    \ = word.Substring(word.Length / 32, word.Length / 32);\n        string vowelsMiddleRightLeftMiddleMiddleMiddle\
    \ = word.Substring(word.Length / 32, word.Length / 32);\n        string vowelsMiddleLeftRightMiddleMiddleMiddle\
    \ = word.Substring(word.Length / 64, word.Length / 64);\n        string vowelsMiddleRightLeftMiddleMiddleMiddle\
    \ = word.Substring(word.Length / 64, word.Length / 64);\n        string vowelsMiddleLeftRightMiddleMiddleMiddle\
    \ = word.Substring(word.Length / 128, word.Length / 128);\n        string vowelsMiddleRightLeftMiddleMiddleMiddle\
    \ = word.Substring(word.Length / 128, word.Length / 128);\n        string vowelsMiddleLeftRightMiddleMiddleMiddle\
    \ = word.Substring(word.Length / 256, word.Length / 256);\n        string vowelsMiddleRightLeftMiddleMiddleMiddle\
    \ = word.Substring(word.Length / 256, word.Length / 256);\n        string vowelsMiddleLeftRightMiddleMiddleMiddle\
    \ = word.Substring(word.Length / 512, word.Length / 512);\n        string vowelsMiddleRightLeftMiddleMiddleMiddle\
    \ = word.Substring(word.Length / 512, word.Length / 512);\n        string vowelsMiddleLeftRightMiddleMiddleMiddle\
    \ = \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsupvomr3.cs(44,57): error CS1525: Invalid expression term ''}''

    /tmp/tmpsupvomr3.cs(44,57): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length - 1);\n        string vowelsRight = vowels.Substring(word.Length\
    \ - 1, 1);\n        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleRight = vowels.Substring(word.Length / 2, 1);\n  \
    \      string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n     \
    \   string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, 1);\n   \
    \     string vowelsMiddleLeftLeftRight = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length /\
    \ 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRightLeft = vowels.Substring(word.Length\
    \ / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftRightRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftRightLeftRightLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRightLeftRightRight\
    \ = vowels.Substring(word.Length / 2, 1);\n        string vowelsMiddleLeftLeftLeftLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2, 1);\n        string vowelsMiddleLeftLeftLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRightLeftRightLeftRightLeftRightRight\
    \ = vowels.Substring(word.Length / 2, 1);\n        string vowelsMiddleLeftLeftLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(word.Length / 2, 1);\n        string vowelsMiddleLeftLeftLeftRightLeftRightLeftRightLeftRightLeftRightRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2, 1);\n        string vowelsMiddleLeftLeftLeftRightLeftRight\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbuz_fgd4.cs(43,54): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAll = vowelsLeft + vowelsRight\
    \ + vowelsMiddle;\n        string vowelsAllLower = vowelsAll.ToLower();\n    \
    \    string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllCaps\
    \ = vowelsAll.ToUpper();\n        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n\
    \        string vowelsAllCapsUpper = vowelsAllCaps.ToUpper();\n        string\
    \ vowelsAllCapsAll = vowelsAllCapsLower + vowelsAllCapsUpper;\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllAll = vowelsAllCapsAllLower\
    \ + vowelsAllCapsAllUpper;\n        string vowelsAllCapsAllAllLower = vowelsAllCapsAllAll.ToLower();\n\
    \        string vowelsAllCapsAllAllUpper = vowelsAllCapsAllAll.ToUpper();\n  \
    \      string vowelsAllCapsAllAllAll = vowelsAllCapsAllAllLower + vowelsAllCapsAllAllUpper;\n\
    \        string vowelsAllCapsAllAllAllLower = vowelsAllCapsAllAllAll.ToLower();\n\
    \        string vowelsAllCapsAllAllAllUpper = vowelsAllCapsAllAllAll.ToUpper();\n\
    \        string vowelsAllCapsAllAllAllAll = vowelsAllCapsAllAllAllLower + vowelsAllCapsAllAllAllUpper;\n\
    \        string vowelsAllCapsAllAllAllAllLower = vowelsAllCapsAllAllAllAll.ToLower();\n\
    \        string vowelsAllCapsAllAllAllAllUpper = vowelsAllCapsAllAllAllAll.ToUpper();\n\
    \        string vowelsAllCapsAllAllAllAll = vowelsAllCapsAllAllAllAllLower + vowelsAllCapsAllAllAllAllUpper\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4ouli9v4.cs(42,107): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp02xjic90.cs(39,15): error CS1001: Identifier expected

    /tmp/tmp02xjic90.cs(39,15): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsLeft = vowelsLeft.ToUpper();\n        string vowelsRight\
    \ = vowelsRight.ToUpper();\n        string vowelsLeft = vowelsLeft.Replace(\"\
    AEIOU\", \"A\");\n        string vowelsRight = vowelsRight.Replace(\"AEIOU\",\
    \ \"A\");\n        string vowelsLeft = vowelsLeft.Replace(\"aeiou\", \"a\");\n\
    \        string vowelsRight = vowelsRight.Replace(\"aeiou\", \"a\");\n       \
    \ string vowelsLeft = vowelsLeft.Replace(\"A\", \"a\");\n        string vowelsRight\
    \ = vowelsRight.Replace(\"A\", \"a\");\n        string vowelsLeft = vowelsLeft.Replace(\"\
    i\", \"u\");\n        string vowelsRight = vowelsRight.Replace(\"i\", \"u\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"u\", \"i\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"u\", \"i\");\n        string vowelsLeft\
    \ = vowelsLeft.Replace(\"o\", \"i\");\n        string vowelsRight = vowelsRight.Replace(\"\
    o\", \"i\");\n        string vowelsLeft = vowelsLeft.Replace(\"u\", \"i\");\n\
    \        string vowelsRight = vowelsRight.Replace(\"u\", \"i\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"a\", \"e\");\n        string vowelsRight =\
    \ vowelsRight.Replace(\"a\", \"e\");\n        string vowelsLeft = vowelsLeft.Replace(\"\
    e\", \"i\");\n        string vowelsRight = vowelsRight.Replace(\"e\", \"i\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"i\", \"o\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"i\", \"o\");\n        string vowelsLeft\
    \ = vowelsLeft.Replace(\"o\", \"i\");\n        string vowelsRight = vowelsRight.Replace(\"\
    o\", \"i\");\n        string vowelsLeft = vowelsLeft.Replace(\"u\", \"i\");\n\
    \        string vowelsRight = vowelsRight.Replace(\"u\", \"i\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"a\", \"e\");\n        string vowelsRight =\
    \ vowelsRight.Replace(\"a\", \"e\");\n        string vowelsLeft = vowelsLeft.Replace(\"\
    e\", \"i\");\n        string vowelsRight = vowelsRight.Replace(\"e\", \"i\");\n\
    \        string vowels\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmproecpsy9.cs(53,22): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n\
    \        string vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string\
    \ vowelsBothCapLower = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower\
    \ = vowelsBothCapUpper.ToLower();\n        string vowelsBothCapUpperLowerLower\
    \ = vowelsBothCapUpperLower.ToLower();\n        string vowelsBothCapUpperLowerLowerLower\
    \ = vowelsBothCapUpperLowerLower.ToLower();\n        string vowelsBothCapUpperLowerLowerLowerLower\
    \ = vowelsBothCapUpperLowerLowerLower.ToLower();\n        string vowelsBothCapUpperLowerLowerLowerLowerLower\
    \ = vowelsBothCapUpperLowerLowerLowerLower.ToLower();\n        string vowelsBothCapUpperLowerLowerLowerLowerLowerLower\
    \ = vowelsBothCapUpperLowerLowerLowerLowerLowerLower.ToLower();\n        string\
    \ vowelsBothCapUpperLowerLowerLowerLowerLowerLowerLower = vowelsBothCapUpperLowerLowerLowerLowerLowerLowerLower.ToLower();\n\
    \        string vowelsBothCapUpperLowerLowerLowerLowerLowerLowerLowerLower = vowelsBothCapUpperLowerLowerLowerLowerLowerLowerLowerLowerLower.ToLower();\n\
    \        string vowelsBothCapUpperLowerLowerLowerLowerLowerLowerLowerLowerLower\
    \ = vowelsBothCapUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLower.ToLower();\n\
    \        string vowelsBothCapUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLower\
    \ = vowelsBothCapUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLower.ToLower();\n\
    \        string vowelsBothCapUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLower\
    \ = vowelsBothCapUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLower.ToLower();\n\
    \        string vowelsBothCapUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLower\
    \ = vowelsBothCapUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLower.ToLower();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpss0rifkk.cs(36,77): error CS0841: Cannot use local variable ''vowelsBothCapUpperLowerLowerLowerLowerLowerLowerLowerLowerLower''
    before it is declared

    /tmp/tmpss0rifkk.cs(37,82): error CS0841: Cannot use local variable ''vowelsBothCapUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLower''
    before it is declared

    /tmp/tmpss0rifkk.cs(39,16): error CS0128: A local variable or function named ''vowelsBothCapUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLower''
    is already defined in this scope

    /tmp/tmpss0rifkk.cs(39,87): error CS0103: The name ''vowelsBothCapUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLower''
    does not exist in the current context

    /tmp/tmpss0rifkk.cs(40,92): error CS0103: The name ''vowelsBothCapUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLower''
    does not exist in the current context

    /tmp/tmpss0rifkk.cs(34,67): error CS0165: Use of unassigned local variable ''vowelsBothCapUpperLowerLowerLowerLowerLowerLower''

    /tmp/tmpss0rifkk.cs(35,72): error CS0165: Use of unassigned local variable ''vowelsBothCapUpperLowerLowerLowerLowerLowerLowerLower''

    /tmp/tmpss0rifkk.cs(19,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothLeftRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n\
    \        string vowelsBothBothRight = vowels.Substring(0, vowels.Length - 1) +\
    \ vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string vowelsBothBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n\
    \        string vowelsBothBothRightBoth = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1);\n        string vowelsBothLeftRightBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n\
    \        string vowelsBothBothRightBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1);\n        string vowelsBothLeftRightBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n\
    \        string vowels\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzxhihrvb.cs(37,22): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsLeft = vowelsLeft.ToUpper();\n        string vowelsRight\
    \ = vowelsRight.ToUpper();\n        string vowelsLeft = vowelsLeft.Replace(\"\
    A\", \"E\");\n        string vowelsRight = vowelsRight.Replace(\"A\", \"E\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"E\", \"I\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"E\", \"I\");\n        string vowelsLeft\
    \ = vowelsLeft.Replace(\"I\", \"O\");\n        string vowelsRight = vowelsRight.Replace(\"\
    I\", \"O\");\n        string vowelsLeft = vowelsLeft.Replace(\"O\", \"U\");\n\
    \        string vowelsRight = vowelsRight.Replace(\"O\", \"U\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"U\", \"Y\");\n        string vowelsRight =\
    \ vowelsRight.Replace(\"U\", \"Y\");\n        string vowelsLeft = vowelsLeft.Replace(\"\
    Y\", \"A\");\n        string vowelsRight = vowelsRight.Replace(\"Y\", \"A\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"A\", \"E\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"A\", \"E\");\n        string vowelsLeft\
    \ = vowelsLeft.Replace(\"E\", \"I\");\n        string vowelsRight = vowelsRight.Replace(\"\
    E\", \"I\");\n        string vowelsLeft = vowelsLeft.Replace(\"I\", \"O\");\n\
    \        string vowelsRight = vowelsRight.Replace(\"I\", \"O\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"O\", \"U\");\n        string vowelsRight =\
    \ vowelsRight.Replace(\"O\", \"U\");\n        string vowelsLeft = vowelsLeft.Replace(\"\
    U\", \"Y\");\n        string vowelsRight = vowelsRight.Replace(\"U\", \"Y\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"Y\", \"A\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"Y\", \"A\");\n        string vowelsLeft\
    \ = vowelsLeft.Replace(\"A\", \"E\");\n        string vowelsRight = vowelsRight.Replace(\"\
    A\", \"E\");\n        string vowelsLeft = vowelsLeft.Replace(\"E\", \"I\");\n\
    \        string vowelsRight = vowel\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0w1dftty.cs(52,35): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1);\n        string vowelsMiddle = vowels.Substring(vowels.Length / 2);\n\
    \        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdhha_71d.cs(40,108): error CS1001: Identifier expected

    /tmp/tmpdhha_71d.cs(40,108): error CS1026: ) expected

    /tmp/tmpdhha_71d.cs(40,108): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string vowelsBothCapLower\
    \ = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n\
    \        string vowelsBothCapUpperLowerUpper = vowelsBothCapUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpper = vowelsBothCapUpperLowerUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpper = vowelsBothCapUpperLowerUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8qecbeb2.cs(41,145): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCaps = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapsLower = vowelsBothCaps.ToLower();\n        string vowelsBothCapsUpper\
    \ = vowelsBothCaps.ToUpper();\n        string vowelsBothCapsLower = vowelsBothCaps.ToLower();\n\
    \        string vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string\
    \ vowelsBothCapsLower = vowelsBothCaps.ToLower();\n        string vowelsBothCapsUpper\
    \ = vowelsBothCaps.ToUpper();\n        string vowelsBothCapsLower = vowelsBothCaps.ToLower();\n\
    \        string vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string\
    \ vowelsBothCapsLower = vowelsBothCaps.ToLower();\n        string vowelsBothCapsUpper\
    \ = vowelsBothCaps.ToUpper();\n        string vowelsBothCapsLower = vowelsBothCaps.ToLower();\n\
    \        string vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string\
    \ vowelsBothCapsLower = vowelsBothCaps.ToLower();\n        string vowelsBothCapsUpper\
    \ = vowelsBothCaps.ToUpper();\n        string vowelsBothCapsLower = vowelsBothCaps.ToLower();\n\
    \        string vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string\
    \ vowelsBothCapsLower = vowelsBothCaps.ToLower();\n        string vowelsBothCapsUpper\
    \ = vowelsBothCaps.ToUpper();\n        string vowelsBothCapsLower = vowelsBothCaps.ToLower();\n\
    \        string vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string\
    \ vowelsBothCapsLower = vowelsBothCaps.ToLower();\n        string vowelsBothCapsUpper\
    \ = vowelsBothCaps.ToUpper();\n        string vowelsBothCapsLower = vowelsBothCaps.\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkemy802p.cs(49,53): error CS1001: Identifier expected

    /tmp/tmpkemy802p.cs(49,53): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAll = vowelsLeft + vowelsRight\
    \ + vowelsMiddle;\n        string vowelsAllUpper = vowelsAll.ToUpper();\n    \
    \    string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllCaps\
    \ = vowelsAll.ToUpper();\n        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n\
    \        string vowelsAllCapsAll = vowelsAllCapsLower + vowelsAllCaps;\n     \
    \   string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpperLower\
    \ = vowelsAllCapsAllUpper.ToLower();\n        string vowelsAllCapsAllUpperLowerUpper\
    \ = vowelsAllCapsAllUpperLower.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperUpperLower\
    \ = vowelsAllCapsAllUpperLowerUpper.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperLowerUpper\
    \ = vowelsAllCapsAllUpperLowerUpperLower.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperLowerUpperUpperLower\
    \ = vowelsAllCapsAllUpperLowerUpperLowerUpper.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsAllCapsAllUpperLowerUpperLowerUpperLower.ToUpper();\n        string\
    \ vowelsAllCapsAllUpperLowerUpperLowerUpperLowerUpperUpperLower = vowelsAllCapsAllUpperLowerUpperLowerUpperLowerUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperLowerUpperLowerUpperUpperLower\
    \ = vowelsAllCapsAllUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n    \
    \    string vowelsAllCapsAllUpperLowerUpperLowerUpperLowerUpperLowerUpper = vowelsAllCapsAllUpperLowerUpperLowerUpperLowerUpperLowerUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperLowerUpperLowerUpperLower\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1ooznoc0.cs(41,72): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle2 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle3 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle4 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle5 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle6 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle7 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle8 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle9 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle10 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle11 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle12 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle13 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle14 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle15 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle16 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle17 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle18 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle19 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle20 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle21 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle22 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle23 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiui0d__9.cs(46,15): error CS1001: Identifier expected

    /tmp/tmpiui0d__9.cs(46,15): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle2 = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle3 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle4 = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle5 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle6 = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle7 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle8 = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle9 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle10 = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle11 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle12 = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle13 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle14 = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle15 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle16 = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle17 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle18 = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle19 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle20 = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle21 = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle22 = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle23 = vowelsLeft.Sub\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprln3dbz1.cs(45,47): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleLeftLeft = vowelsMiddleLeft.Substring(vowelsMiddleLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleRightRight = vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowelsMiddleLeftRight.Substring(vowelsMiddleLeftRight.Length\
    \ / 2);\n        string vowelsMiddleLeftLeft = vowelsMiddleLeftLeft.Substring(vowelsMiddleLeftLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightRight = vowelsMiddleRightRight.Substring(vowelsMiddleRightRight.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowelsMiddleLeftRight.Substring(vowelsMiddleLeftRight.Length\
    \ / 2);\n        string vowelsMiddleLeftLeft = vowelsMiddleLeftLeft.Substring(vowelsMiddleLeftLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightRight = vowelsMiddleRightRight.Substring(vowelsMiddleRightRight.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowelsMiddleLeftRight.Substring(vowelsMiddleLeftRight.Length\
    \ / 2);\n        string vowelsMiddleLeftLeft = vowelsMiddleLeftLeft.Substring(vowelsMiddleLeftLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightRight = vowelsMiddleRightRight.Substring(vowelsMiddleRightRight.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowelsMiddleLeftRight.Substring(vowelsMiddleLeftRight.Length\
    \ / 2);\n        string \n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpn7cdg9cl.cs(42,15): error CS1001: Identifier expected

    /tmp/tmpn7cdg9cl.cs(42,15): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothLeftRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothRightLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothRightLeftBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb3heuvdi.cs(33,107): error CS1001: Identifier expected

    /tmp/tmpb3heuvdi.cs(33,107): error CS1026: ) expected

    /tmp/tmpb3heuvdi.cs(33,107): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n\
    \        string vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpenvcjkiu.cs(51,45): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothLeftRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothRightLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothRight = vowels.Substring(0, vowels.Length - 1) +\
    \ vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothLeftRightBoth = vowels.Substring(0, vowels.Length - 1)\
    \ + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothRightLeftBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + \n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9ctzkcqn.cs(33,82): error CS1525: Invalid expression term ''}''

    /tmp/tmp9ctzkcqn.cs(33,82): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(word.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftRightLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftRightRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftRightLeftLeft\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftRightLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftRightLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftRightLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / \n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa38yprcw.cs(44,107): error CS1525: Invalid expression term ''}''

    /tmp/tmpa38yprcw.cs(44,107): error CS1026: ) expected

    /tmp/tmpa38yprcw.cs(44,107): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeft\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6koyg5tn.cs(44,49): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleUpper = vowels.Substring(word.Length / 2,\
    \ vowels.Length / 2).ToUpper();\n        string vowelsMiddleLower = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2).ToLower();\n        string vowelsMiddleUpperLower =\
    \ vowels.Substring(word.Length / 2, vowels.Length / 2).ToUpper().ToLower();\n\
    \        string vowelsMiddleLowerUpper = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2).ToLower().ToUpper();\n        string vowelsMiddleLowerUpperLower = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2).ToLower().ToUpper().ToLower();\n        string vowelsMiddleLowerUpperUpperLower\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2).ToLower().ToUpper().ToLower().ToUpper();\n\
    \        string vowelsMiddleLowerUpperUpperUpperLower = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2).ToLower().ToUpper().ToLower().ToUpper().ToLower();\n\
    \        string vowelsMiddleLowerUpperUpperUpperUpperUpperLower = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2).ToLower().ToUpper().ToLower().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsMiddleLowerUpperUpperUpperUpperUpperUpperUpperLower = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2).ToLower().ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsMiddleLowerUpperUpperUpperUpperUpperUpperUpperUpperLower\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2).ToLower().ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsMiddleLowerUpperUpperUpperUpperUpperUpperUpperUpperLower\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2).ToLower().ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsMiddleLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperLower\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2).To\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplzupkyda.cs(35,141): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsUpper = vowels.ToUpper();\n\
    \        string vowelsLower = vowels.ToLower();\n        string vowelsUpperLower\
    \ = vowelsUpper.ToLower();\n        string vowelsLowerUpper = vowelsLower.ToUpper();\n\
    \        string vowelsUpperLowerUpper = vowelsUpperLower.ToUpper();\n        string\
    \ vowelsLowerUpperUpper = vowelsLowerUpper.ToUpper();\n        string vowelsUpperLowerUpperUpper\
    \ = vowelsUpperLowerUpper.ToUpper();\n        string vowelsUpperLowerUpperUpperUpper\
    \ = vowelsUpperLowerUpperUpper.ToUpper();\n        string vowelsUpperLowerUpperUpperUpperUpper\
    \ = vowelsUpperLowerUpperUpperUpper.ToUpper();\n        string vowelsUpperLowerUpperUpperUpperUpperUpper\
    \ = vowelsUpperLowerUpperUpperUpperUpper.ToUpper();\n        string vowelsUpperLowerUpperUpperUpperUpperUpperUpper\
    \ = vowelsUpperLowerUpperUpperUpperUpperUpper.ToUpper();\n        string vowelsUpperLowerUpperUpperUpperUpperUpperUpper\
    \ = vowelsUpperLowerUpperUpperUpperUpperUpper.ToUpper();\n        string vowelsUpperLowerUpperUpperUpperUpperUpperUpper\
    \ = vowelsUpperLowerUpperUpperUpperUpperUpper.ToUpper();\n        string vowelsUpperLowerUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsUpperLowerUpperUpperUpperUpperUpperUpper.ToUpper();\n        string\
    \ vowelsUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper = vowelsUpperLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper = vowelsUpperLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper = vowelsUpperLowerUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsUpperLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n        string\
    \ vowelsUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper = vowelsUpperLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsUpperLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n        string\
    \ vowelsUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper = vowelsUpperLowerUpperUpperUpperUpperUpperUpperUp\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmmrklr46.cs(41,128): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1)\
    \ + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string vowelsBothBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1)\
    \ + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Sub\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0myht22m.cs(32,263): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsAll = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllLeft = vowels.Substring(0, vowels.Length / 2);\n    \
    \    string vowelsAllRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAllBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsAllAll = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllAllLeft = vowels.Substring(0, vowels.Length / 2);\n \
    \       string vowelsAllAllRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllAllMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAllAllBoth = vowels.Substring(0, vowels.Length /\
    \ 2);\n        string vowelsAllAllAll = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllAllAllLeft = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsAllAllAllRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllAllAllMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAllAllAllBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsAllAllAllAll = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length);\n        string vowelsAllAllAllAllLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllAllAllAllRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsAllAllAllAllMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAllAllAllAllBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAll\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpal7hc5wz.cs(45,25): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleRight = vowelsMiddle.Substring(word.Length\
    \ / 2, vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(word.Length\
    \ / 4, vowelsMiddle.Length / 4);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 4);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ / 4, vowelsMiddleMiddle.Length / 4);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(word.Length / 8, vowelsMiddleMiddle.Length /\
    \ 8);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length / 8);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ / 8, vowelsMiddleMiddleMiddle.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(word.Length / 16, vowelsMiddleMiddleMiddle.Length\
    \ / 16);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length / 16);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ / 16, vowelsMiddleMiddleMiddle.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(word.Length / 32, vowelsMiddleMiddleMiddle.Length\
    \ / 32);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length / 32);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ / 32, vowelsMiddleMiddleMiddle.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(word.Length / 64, vowelsMiddleMiddleMiddle.Length\
    \ / 64);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length / 64);\n        string vowel\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptmj7lmcn.cs(40,21): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddle2 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle3 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 3);\n        string vowelsMiddle4 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 4);\n        string vowelsMiddle5 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 5);\n        string vowelsMiddle6 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 6);\n        string vowelsMiddle7 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 7);\n        string vowelsMiddle8 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 8);\n        string vowelsMiddle9 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 9);\n        string vowelsMiddle10 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 10);\n        string vowelsMiddle11 = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 11);\n        string vowelsMiddle12 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 12);\n        string vowelsMiddle13 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 13);\n        string vowelsMiddle14 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 14);\n        string vowelsMiddle15 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 15);\n        string vowelsMiddle16 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 16);\n        string vowelsMiddle17 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 17);\n        string vowelsMiddle18 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 18);\n        string vowelsMiddle19 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 19);\n        string vowelsMiddle20 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 20);\n        string vowelsMiddle21 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 21);\n        string vowelsMiddle22 = vowels.Substring(vowels.Length\
    \ / 2, \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0send33a.cs(44,68): error CS1525: Invalid expression term ''}''

    /tmp/tmp0send33a.cs(44,68): error CS1026: ) expected

    /tmp/tmp0send33a.cs(44,68): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(word.Length / 2);\n      \
    \  string vowelsMiddleLeft = vowelsMiddle.Substring(0, word.Length / 2);\n   \
    \     string vowelsMiddleRight = vowelsMiddle.Substring(word.Length / 2);\n  \
    \      string vowelsMiddleMiddle = vowelsMiddleLeft.Substring(word.Length / 2);\n\
    \        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddleLeft.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddleLeft.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddleLeft.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddleLeft.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddleLeft.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfzd6j045.cs(44,73): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsLeft = vowelsLeft.ToLower();\n        string vowelsRight\
    \ = vowelsRight.ToLower();\n        string vowelsAll = vowelsLeft + vowelsRight;\n\
    \        string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLower = vowelsAll.ToLower();\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLower = vowelsAll.ToLower();\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLower = vowelsAll.ToLower();\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLower = vowelsAll.ToLower();\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLower = vowelsAll.ToLower();\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpy3u0g99j.cs(54,43): error CS1001: Identifier expected

    /tmp/tmpy3u0g99j.cs(54,43): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle2 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle3 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle4 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle5 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle6 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle7 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle8 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle9 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle10 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle11 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle12 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle13 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle14 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle15 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle16 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle17 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle18 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle19 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle20 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle21 = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddle22 = vowels.Substring(vowels.Length\
    \ / \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4f6ihlxp.cs(44,65): error CS1525: Invalid expression term ''}''

    /tmp/tmp4f6ihlxp.cs(44,65): error CS1026: ) expected

    /tmp/tmp4f6ihlxp.cs(44,65): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle2 = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle3 = vowelsLeft.Substring(vowelsLeft.Length / 2, vowelsLeft.Length\
    \ / 2);\n        string vowelsMiddle4 = vowelsLeft.Substring(0, vowelsLeft.Length\
    \ / 4);\n        string vowelsMiddle5 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 4, vowelsLeft.Length / 4);\n        string vowelsMiddle6 = vowelsLeft.Substring(0,\
    \ vowelsLeft.Length / 6);\n        string vowelsMiddle7 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 6, vowelsLeft.Length / 6);\n        string vowelsMiddle8 = vowelsLeft.Substring(0,\
    \ vowelsLeft.Length / 8);\n        string vowelsMiddle9 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 8, vowelsLeft.Length / 8);\n        string vowelsMiddle10 = vowelsLeft.Substring(0,\
    \ vowelsLeft.Length / 10);\n        string vowelsMiddle11 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 10, vowelsLeft.Length / 10);\n        string vowelsMiddle12 = vowelsLeft.Substring(0,\
    \ vowelsLeft.Length / 12);\n        string vowelsMiddle13 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 12, vowelsLeft.Length / 12);\n        string vowelsMiddle14 = vowelsLeft.Substring(0,\
    \ vowelsLeft.Length / 14);\n        string vowelsMiddle15 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 14, vowelsLeft.Length / 14);\n        string vowelsMiddle16 = vowelsLeft.Substring(0,\
    \ vowelsLeft.Length / 16);\n        string vowelsMiddle17 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 16, vowelsLeft.Length / 16);\n        string vowelsMiddle18 = vowelsLeft.Substring(0,\
    \ vowelsLeft.Length / 18);\n        string vowelsMiddle19 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 18, vowelsLeft.Length / 18);\n        string vowelsMiddle20 = vowelsLeft.Sub\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6h36dcv1.cs(42,47): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllCaps = vowelsAll.ToUpper();\n\
    \        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string\
    \ vowelsAllCapsAll = vowelsAllCapsLower + vowelsAllCapsLower;\n        string\
    \ vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower\
    \ = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpperLower = vowelsAllCapsAllUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperLower = vowelsAllCapsAllUpper.ToLower();\n\
    \        string vowelsAllCapsAllUpperLowerUpper = vowelsAllCapsAllUpperLower.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpper = vowelsAllCapsAllUpperLowerUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpperUpperUpper\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5p1waunr.cs(41,146): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n\
    \        string vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string\
    \ vowelsBothCapLower = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower\
    \ = vowelsBothCapUpper.ToLower();\n        string vowelsBothCapUpperUpper = vowelsBothCapUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperLower = vowelsBothCapUpperUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperUpper.ToUpper();\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzfnhz8wr.cs(33,16): error CS0128: A local variable or function named ''vowelsBothCapUpperUpperUpper''
    is already defined in this scope

    /tmp/tmpzfnhz8wr.cs(34,16): error CS0128: A local variable or function named ''vowelsBothCapUpperUpperUpper''
    is already defined in this scope

    /tmp/tmpzfnhz8wr.cs(35,16): error CS0128: A local variable or function named ''vowelsBothCapUpperUpperUpper''
    is already defined in this scope

    /tmp/tmpzfnhz8wr.cs(36,16): error CS0128: A local variable or function named ''vowelsBothCapUpperUpperUpper''
    is already defined in this scope

    /tmp/tmpzfnhz8wr.cs(37,16): error CS0128: A local variable or function named ''vowelsBothCapUpperUpperUpper''
    is already defined in this scope

    /tmp/tmpzfnhz8wr.cs(38,16): error CS0128: A local variable or function named ''vowelsBothCapUpperUpperUpper''
    is already defined in this scope

    /tmp/tmpzfnhz8wr.cs(39,16): error CS0128: A local variable or function named ''vowelsBothCapUpperUpperUpper''
    is already defined in this scope

    /tmp/tmpzfnhz8wr.cs(40,16): error CS0128: A local variable or function named ''vowelsBothCapUpperUpperUpper''
    is already defined in this scope

    /tmp/tmpzfnhz8wr.cs(41,16): error CS0128: A local variable or function named ''vowelsBothCapUpperUpperUpper''
    is already defined in this scope

    /tmp/tmpzfnhz8wr.cs(42,16): error CS0128: A local variable or function named ''vowelsBothCapUpperUpperUpper''
    is already defined in this scope

    /tmp/tmpzfnhz8wr.cs(43,16): error CS0128: A local variable or function named ''vowelsBothCapUpperUpperUpper''
    is already defined in this scope

    /tmp/tmpzfnhz8wr.cs(44,16): error CS0128: A local variable or function named ''vowelsBothCapUpperUpperUpper''
    is already defined in this scope

    /tmp/tmpzfnhz8wr.cs(45,16): error CS0128: A local variable or function named ''vowelsBothCapUpperUpperUpper''
    is already defined in this scope

    /tmp/tmpzfnhz8wr.cs(19,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all cod'
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRight.Substring(0,\
    \ vowelsMiddleRight.Length / 2);\n        string vowelsMiddleLeftRight = vowelsMiddleLeft.Substring(0,\
    \ vowelsMiddleLeft.Length / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRight.Substring(0,\
    \ vowelsMiddleRight.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowelsMiddleLeftRight.Substring(0,\
    \ vowelsMiddleLeftRight.Length / 2);\n        string vowelsMiddleLeftRightLeftRight\
    \ = vowelsMiddleLeftRightLeft.Substring(0, vowelsMiddleLeftRightLeft.Length /\
    \ 2);\n        string vowelsMiddleLeftRightLeftRightLeft = vowelsMiddleLeftRightLeftRight.Substring(0,\
    \ vowelsMiddleLeftRightLeftRight.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRight\
    \ = vowelsMiddleLeftRightLeftRightLeft.Substring(0, vowelsMiddleLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeft = vowelsMiddleLeftRightLeftRightLeftRight.Substring(0,\
    \ vowelsMiddleLeftRightLeftRightLeftRight.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleLeftRightLeftRightLeftRightLeft.Substring(0, vowelsMiddleLeftRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeft =\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRight.Substring(0, vowelsMiddleLeftRightLeftRightLeftRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeft.Substring(0, vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRight.\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_9vaospm.cs(37,138): error CS1001: Identifier expected

    /tmp/tmp_9vaospm.cs(37,138): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp02xjic90.cs(39,15): error CS1001: Identifier expected

    /tmp/tmp02xjic90.cs(39,15): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsLeft = vowelsLeft.ToLower();\n        string vowelsRight\
    \ = vowelsRight.ToLower();\n        string vowelsLeft = vowelsLeft.Replace(\"\
    e\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"e\", \"\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"i\", \"\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"i\", \"\");\n        string vowelsLeft =\
    \ vowelsLeft.Replace(\"o\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"\
    o\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"u\", \"\");\n  \
    \      string vowelsRight = vowelsRight.Replace(\"u\", \"\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"a\", \"a\");\n        string vowelsRight =\
    \ vowelsRight.Replace(\"a\", \"a\");\n        string vowelsLeft = vowelsLeft.Replace(\"\
    e\", \"e\");\n        string vowelsRight = vowelsRight.Replace(\"e\", \"e\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"i\", \"i\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"i\", \"i\");\n        string vowelsLeft\
    \ = vowelsLeft.Replace(\"o\", \"o\");\n        string vowelsRight = vowelsRight.Replace(\"\
    o\", \"o\");\n        string vowelsLeft = vowelsLeft.Replace(\"u\", \"u\");\n\
    \        string vowelsRight = vowelsRight.Replace(\"u\", \"u\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"a\", \"a\");\n        string vowelsRight =\
    \ vowelsRight.Replace(\"a\", \"a\");\n        string vowelsLeft = vowelsLeft.Replace(\"\
    e\", \"e\");\n        string vowelsRight = vowelsRight.Replace(\"e\", \"e\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"i\", \"i\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"i\", \"i\");\n        string vowelsLeft\
    \ = vowelsLeft.Replace(\"o\", \"o\");\n        string vowelsRight = vowelsRight.Replace(\"\
    o\", \"o\");\n        string vowelsLeft = vowelsLeft.Replace(\"u\", \"u\");\n\
    \        string vowelsRight = vowelsRight.Replace(\"u\", \"u\");\n        string\
    \ vowels\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1k10q8p_.cs(53,22): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1)\
    \ + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string vowelsBothBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1)\
    \ + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Sub\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6b1yuu6h.cs(32,263): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(word.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftRightRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRightLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightRightLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightRightRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightRightLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightRightRightLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightRightRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightRightRightRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightRightRightLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightRightRightRightLeft\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightRightRightRight\
    \ = vowels.Substring(0, word.Length\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd2089mr2.cs(45,86): error CS1026: ) expected

    /tmp/tmpd2089mr2.cs(45,86): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeft\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0mvx8yv_.cs(41,77): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowel\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk968udy2.cs(40,88): error CS1026: ) expected

    /tmp/tmpk968udy2.cs(40,88): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRight.Substring(0,\
    \ vowelsMiddleRight.Length / 2);\n        string vowelsMiddleRightLeftRight =\
    \ vowelsMiddleRightLeft.Substring(0, vowelsMiddleRightLeft.Length / 2);\n    \
    \    string vowelsMiddleRightLeftRightLeft = vowelsMiddleRightLeftRight.Substring(0,\
    \ vowelsMiddleRightLeftRight.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeft.Substring(0, vowelsMiddleRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeft = vowelsMiddleRightLeftRightLeftRight.Substring(0,\
    \ vowelsMiddleRightLeftRightLeftRight.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeft.Substring(0, vowelsMiddleRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeft.Substring(0, vowelsMiddleRightLeftRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft.Substring(0, vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft.Substring(0,\
    \ vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft.Length /\
    \ 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft.Substring(0,\
    \ vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRight\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2ma0zh32.cs(35,78): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(word.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9riih4qe.cs(47,22): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsLeft = vowelsLeft.ToLower();\n        string vowelsRight\
    \ = vowelsRight.ToLower();\n        string vowelsAll = vowelsLeft + vowelsRight;\n\
    \        string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLower = vowelsAll.ToLower();\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLower = vowelsAll.ToLower();\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLower = vowelsAll.ToLower();\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLower = vowelsAll.ToLower();\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLower = vowelsAll.ToLower();\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpy3u0g99j.cs(54,43): error CS1001: Identifier expected

    /tmp/tmpy3u0g99j.cs(54,43): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = word.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleRight = word.Substring(word.Length / 2, word.Length / 2);\n    \
    \    string vowelsMiddleLeft = word.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleLeftRight = word.Substring(word.Length / 2, word.Length / 2);\n\
    \        string vowelsMiddleLeftRightLeft = word.Substring(word.Length / 4, word.Length\
    \ / 4);\n        string vowelsMiddleLeftRightLeftRight = word.Substring(word.Length\
    \ / 8, word.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 16, word.Length / 16);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 32, word.Length / 32);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 64, word.Length / 64);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 128, word.Length / 128);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 256, word.Length / 256);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 512, word.Length / 512);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 1024, word.Length / 1024);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 2048, word.Length / 2048);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 4096, word.Length / 4096);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 8192, word.Length / 8192);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi4dghxhk.cs(39,82): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightMiddle = vowels.Substring(0,\
    \ vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleRightMiddle\
    \ = vowels.Substring(0, vowels.Length / 8);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeft\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRight\
    \ = vowels.Substring(0, vowels.Length / 16);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddle\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 32);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(0, vowels.Length / 64);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(0, vowels.Length / 128);\n        string vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128);\n        string\
    \ vowelsMiddleLeftRightMiddleRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(0, vowels.Length / 256);\n        string vowelsMiddle\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1ypdt7oi.cs(40,28): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1)\
    \ + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string vowelsBothBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1)\
    \ + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Sub\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6b1yuu6h.cs(32,263): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBothMiddle =\
    \ vowels.Substring(vowels.Length / 2, vowels.Length / 2 - 1);\n        string\
    \ vowels\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnqz5jhl8.cs(44,22): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 4);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string \n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbx6_dn2c.cs(40,15): error CS1001: Identifier expected

    /tmp/tmpbx6_dn2c.cs(40,15): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleLeft = vowelsMiddle.Substring(0, word.Length / 2);\n    \
    \    string vowelsMiddleRight = vowelsMiddle.Substring(word.Length / 2);\n   \
    \     string vowelsMiddleMiddle = vowelsMiddle.Substring(0, word.Length / 4);\n\
    \        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0, word.Length\
    \ / 4);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ / 4);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length / 8);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length / 16);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length / 16);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ / 16);\n        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length / 32);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length / 32);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ / 32);\n        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length / 64);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length / 64);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ / 64);\n        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length / 128);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length / 128);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ / 128);\n        string vowel\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvrk2dj0f.cs(44,21): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n\
    \        string vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpenvcjkiu.cs(51,45): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight =\
    \ vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftLeftLeft\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpezdb6ksl.cs(44,40): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowel\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpm2ovvoy6.cs(40,53): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphpmbdwmo.cs(39,15): error CS1001: Identifier expected

    /tmp/tmphpmbdwmo.cs(39,15): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n\
    \        string vowelsCountUpper = vowelsCount.ToUpper();\n        string vowelsCountLower\
    \ = vowelsCount.ToLower();\n        string vowelsCountUpperLower = vowelsCount.ToUpper().ToLower();\n\
    \        string vowelsCountUpperLowerUpper = vowelsCount.ToUpper().ToLower().ToUpper();\n\
    \        string vowelsCountUpperLowerUpperUpper = vowelsCount.ToUpper().ToLower().ToUpper().ToUpper();\n\
    \        string vowelsCountUpperLowerUpperUpperUpper = vowelsCount.ToUpper().ToLower().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsCountUpperLowerUpperUpperUpperUpper = vowelsCount.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsCountUpperLowerUpperUpperUpperUpperUpper = vowelsCount.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsCountUpperLowerUpperUpperUpperUpperUpper = vowelsCount.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsCountUpperLowerUpperUpperUpperUpperUpperUpper = vowelsCount.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsCountUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsCount.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsCountUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsCount.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsCountUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsCount.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsCountUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsCount.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().To\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8f7j1o55.cs(35,144): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRight.Substring(0,\
    \ vowelsMiddleRight.Length / 2);\n        string vowelsMiddleRightRight = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowelsMiddleLeft.Substring(0,\
    \ vowelsMiddleLeft.Length / 2);\n        string vowelsMiddleLeftLeft = vowelsMiddleLeft.Substring(vowelsMiddleLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRight = vowelsMiddleRightLeft.Substring(0,\
    \ vowelsMiddleRightLeft.Length / 2);\n        string vowelsMiddleRightRightLeft\
    \ = vowelsMiddleRightRight.Substring(0, vowelsMiddleRightRight.Length / 2);\n\
    \        string vowelsMiddleLeftRightLeft = vowelsMiddleLeftRight.Substring(0,\
    \ vowelsMiddleLeftRight.Length / 2);\n        string vowelsMiddleLeftLeftRight\
    \ = vowelsMiddleLeftLeft.Substring(0, vowelsMiddleLeftLeft.Length / 2);\n    \
    \    string vowelsMiddleLeftRightRight = vowelsMiddleLeftRightLeft.Substring(0,\
    \ vowelsMiddleLeftRightLeft.Length / 2);\n        string vowelsMiddleRightLeftLeftRight\
    \ = vowelsMiddleRightLeftRight.Substring(0, vowelsMiddleRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleRightRightLeftLeft = vowelsMiddleRightRightLeftLeft.Substring(0,\
    \ vowelsMiddleRightRightLeftLeft.Length / 2);\n        string vowelsMiddleRightLeftRightLeft\
    \ = vowelsMiddleRightLeftRightLeft.Substring(0, vowelsMiddleRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightRightLeftRight = vowelsMiddleRightRightLeftRight.Substring(0,\
    \ vowelsMiddleRightRightLeftRight.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeft\
    \ = vowelsMiddleRightLeftLeftRight.Substring(0, vowelsMiddleRightLeftLeftRight.Length\
    \ / 2);\n        string vowelsMiddleRightRightLeftRightRight\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpesvidy2x.cs(40,52): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowel\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1gjvnz6c.cs(45,82): error CS1026: ) expected

    /tmp/tmp1gjvnz6c.cs(45,82): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddle2 = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsMiddle3 = vowels.Substring(0, vowels.Length / 3);\n    \
    \    string vowelsMiddle4 = vowels.Substring(0, vowels.Length / 4);\n        string\
    \ vowelsMiddle5 = vowels.Substring(0, vowels.Length / 5);\n        string vowelsMiddle6\
    \ = vowels.Substring(0, vowels.Length / 6);\n        string vowelsMiddle7 = vowels.Substring(0,\
    \ vowels.Length / 7);\n        string vowelsMiddle8 = vowels.Substring(0, vowels.Length\
    \ / 8);\n        string vowelsMiddle9 = vowels.Substring(0, vowels.Length / 9);\n\
    \        string vowelsMiddle10 = vowels.Substring(0, vowels.Length / 10);\n  \
    \      string vowelsMiddle11 = vowels.Substring(0, vowels.Length / 11);\n    \
    \    string vowelsMiddle12 = vowels.Substring(0, vowels.Length / 12);\n      \
    \  string vowelsMiddle13 = vowels.Substring(0, vowels.Length / 13);\n        string\
    \ vowelsMiddle14 = vowels.Substring(0, vowels.Length / 14);\n        string vowelsMiddle15\
    \ = vowels.Substring(0, vowels.Length / 15);\n        string vowelsMiddle16 =\
    \ vowels.Substring(0, vowels.Length / 16);\n        string vowelsMiddle17 = vowels.Substring(0,\
    \ vowels.Length / 17);\n        string vowelsMiddle18 = vowels.Substring(0, vowels.Length\
    \ / 18);\n        string vowelsMiddle19 = vowels.Substring(0, vowels.Length /\
    \ 19);\n        string vowelsMiddle20 = vowels.Substring(0, vowels.Length / 20);\n\
    \        string vowelsMiddle21 = vowels.Substring(0, vowels.Length / 21);\n  \
    \      string vowelsMiddle22 = vowels.Substring(0, vowels.Length / 22);\n    \
    \    string vowelsMiddle23 = vowels.Substring(0, vowels.Length / 23);\n      \
    \  string vowelsMiddle24 = vowels.Substring(0, vowels.Length / 24);\n        string\
    \ vowelsMiddle25 = vowels.Substring(0, vowels.Length / 25);\n        string vowelsMiddle26\
    \ = vowels.Substring(0, vowels.Length / 26);\n        \n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3jgrqsw8.cs(19,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2);\n        string\
    \ vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeft =\
    \ vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftRight = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRightLeft\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRightLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRightLeftRightLeft\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRight\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa6omo3uw.cs(44,55): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(word.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9riih4qe.cs(47,22): error CS1002: ; expected

    '
  timestamp: 1659799016
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string vowelsBothCapLower\
    \ = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n\
    \        string vowelsBothCapUpperLowerUpper = vowelsBothCapUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpper = vowelsBothCapUpperLowerUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpper = vowelsBothCapUpperLowerUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps1w3bcfw.cs(41,89): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string \n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw7q71kht.cs(45,15): error CS1001: Identifier expected

    /tmp/tmpw7q71kht.cs(45,15): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight =\
    \ vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeft\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfj5av791.cs(42,52): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length - 1);\n        string vowelsRight = vowels.Substring(word.Length\
    \ - 1);\n        string vowelsBoth = vowels.Substring(0, word.Length - 1);\n \
    \       string vowelsBothLeft = vowels.Substring(0, word.Length - 1);\n      \
    \  string vowelsBothRight = vowels.Substring(word.Length - 1);\n        string\
    \ vowelsBothBoth = vowels.Substring(0, word.Length - 1);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, word.Length - 1);\n        string vowelsBothBothRight\
    \ = vowels.Substring(word.Length - 1);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ word.Length - 1);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ word.Length - 1);\n        string vowelsBothBothBothRight = vowels.Substring(word.Length\
    \ - 1);\n        string vowelsBothBothBothBoth = vowels.Substring(0, word.Length\
    \ - 1);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0, word.Length\
    \ - 1);\n        string vowelsBothBothBothBothRight = vowels.Substring(word.Length\
    \ - 1);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0, word.Length\
    \ - 1);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0, word.Length\
    \ - 1);\n        string vowelsBothBothBothBothRight = vowels.Substring(word.Length\
    \ - 1);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0, word.Length\
    \ - 1);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0, word.Length\
    \ - 1);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(word.Length\
    \ - 1);\n        string vowelsBothBothBothBothBothBoth = vowels.Substring(0, word.Length\
    \ - 1);\n        string vowelsBothBothBothBothBothBothLeft = vowels.Substring(0,\
    \ word.Length - 1);\n        string vowelsBothBothBothBothBothBothRight = vowels.Substring(word.Length\
    \ - 1);\n        string vowelsBothBothBothBothBothBothBoth = vowels.Substring(0,\
    \ word.Length - 1);\n        string vowelsBothBothBothBothBothBothLeft = vowels.Substring(0,\
    \ word.Length - 1);\n        string vowelsBothBothBothBothBothBothRight = vowels.Substring(word.Length\
    \ - 1);\n        string vowelsBothBothBothBothBothBothBoth = vowels.Sub\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb7bfxmlz.cs(47,63): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRightRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRightLeftLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightLeftRightRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightLeftRightLeftRightRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnlozosom.cs(35,16): error CS0128: A local variable or function named ''vowelsMiddleLeftRightLeftRight''
    is already defined in this scope

    /tmp/tmpnlozosom.cs(19,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsRightLeft = vowelsRight.Substring(0, vowelsRight.Length);\n\
    \        string vowelsRightLeftLeft = vowelsRightLeft.Substring(0, vowelsRightLeft.Length);\n\
    \        string vowelsRightLeftLeftLeft = vowelsRightLeftLeft.Substring(0, vowelsRightLeftLeft.Length);\n\
    \        string vowelsRightLeftLeftLeftLeft = vowelsRightLeftLeftLeft.Substring(0,\
    \ vowelsRightLeftLeftLeft.Length);\n        string vowelsRightLeftLeftLeftLeftLeft\
    \ = vowelsRightLeftLeftLeftLeft.Substring(0, vowelsRightLeftLeftLeftLeft.Length);\n\
    \        string vowelsRightLeftLeftLeftLeftLeftLeft = vowelsRightLeftLeftLeftLeftLeft.Substring(0,\
    \ vowelsRightLeftLeftLeftLeftLeft.Length);\n        string vowelsRightLeftLeftLeftLeftLeftLeftLeft\
    \ = vowelsRightLeftLeftLeftLeftLeftLeft.Substring(0, vowelsRightLeftLeftLeftLeftLeftLeft.Length);\n\
    \        string vowelsRightLeftLeftLeftLeftLeftLeftLeft = vowelsRightLeftLeftLeftLeftLeftLeftLeft.Substring(0,\
    \ vowelsRightLeftLeftLeftLeftLeftLeftLeft.Length);\n        string vowelsRightLeftLeftLeftLeftLeftLeftLeftLeft\
    \ = vowelsRightLeftLeftLeftLeftLeftLeftLeftLeft.Substring(0, vowelsRightLeftLeftLeftLeftLeftLeftLeftLeft.Length);\n\
    \        string vowelsRightLeftLeftLeftLeftLeftLeftLeftLeft = vowelsRightLeftLeftLeftLeftLeftLeftLeftLeftLeft.Substring(0,\
    \ vowelsRightLeftLeftLeftLeftLeftLeftLeftLeftLeft.Length);\n        string vowelsRightLeftLeftLeftLeftLeftLeftLeftLeftLeft\
    \ = vowelsRightLeftLeftLeftLeftLeftLeftLeftLeftLeftLeft.Substring(0, vowelsRightLeftLeftLeftLeftLeftLeftLeftLeftLeftLeft.Length);\n\
    \        string vowelsRightLeftLeftLeftLeftLeftLeftLeftLeftLeft = vowelsRightLeftLeftLeftLeftLeftLeftLeftLeftLeftLeft.Substring(0,\
    \ vowelsRightLeftLeftLeftLeftLeftLeftLeftLeftLeftLeft.Length);\n        string\
    \ vowelsRightLeftLeftLeftLeftLeftLeftLeftLeftLeft = vowelsRightLeftLeftLeftLeftLeftLeftLeftLeftLeftLeftLeft.Substring(0,\
    \ vowelsRightLeftLeftLeftLeftLeftLeftLeftLeftLeftLeft.\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpettyzuqw.cs(35,187): error CS1001: Identifier expected

    /tmp/tmpettyzuqw.cs(35,187): error CS1026: ) expected

    /tmp/tmpettyzuqw.cs(35,187): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleLeftLeft = vowelsMiddleLeft.Substring(vowelsMiddleLeft.Length\
    \ / 2);\n        string vowelsMiddleRightRight = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowelsMiddleLeft.Substring(vowelsMiddleLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftLeft = vowelsMiddleLeft.Substring(vowelsMiddleLeft.Length\
    \ / 2);\n        string vowelsMiddleRightRight = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowelsMiddleLeft.Substring(vowelsMiddleLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftLeft = vowelsMiddleLeft.Substring(vowelsMiddleLeft.Length\
    \ / 2);\n        string vowelsMiddleRightRight = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowelsMiddleLeft.Substring(vowelsMiddleLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftLeft = vowelsMiddleLeft.Substring(vowelsMiddleLeft.Length\
    \ / 2);\n        string vowelsMiddleRightRight = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowelsMiddleLeft.Substring(vowelsMiddleLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftLeft = vowelsMiddleLeft.Substring(vowelsMiddleLeft.Length\
    \ / 2);\n        string vowelsMiddleRightRight\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo54u01m8.cs(43,38): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsLeft = vowelsLeft.ToLower();\n        string vowelsRight\
    \ = vowelsRight.ToLower();\n        string vowelsLeft = vowelsLeft.Replace(\"\
    e\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"e\", \"\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"i\", \"\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"i\", \"\");\n        string vowelsLeft =\
    \ vowelsLeft.Replace(\"o\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"\
    o\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"u\", \"\");\n  \
    \      string vowelsRight = vowelsRight.Replace(\"u\", \"\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"a\", \"\");\n        string vowelsRight =\
    \ vowelsRight.Replace(\"a\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"\
    e\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"e\", \"\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"i\", \"\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"i\", \"\");\n        string vowelsLeft =\
    \ vowelsLeft.Replace(\"o\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"\
    o\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"u\", \"\");\n  \
    \      string vowelsRight = vowelsRight.Replace(\"u\", \"\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"a\", \"\");\n        string vowelsRight =\
    \ vowelsRight.Replace(\"a\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"\
    e\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"e\", \"\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"i\", \"\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"i\", \"\");\n        string vowelsLeft =\
    \ vowelsLeft.Replace(\"o\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"\
    o\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"u\", \"\");\n  \
    \      string vowelsRight = vowelsRight.Replace(\"u\", \"\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"a\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpetrpp38x.cs(53,48): error CS1010: Newline in constant

    /tmp/tmpetrpp38x.cs(53,50): error CS1026: ) expected

    /tmp/tmpetrpp38x.cs(53,50): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothBoth = vowelsBothUpper.ToUpper()\
    \ + vowelsBothLower.ToLower();\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n\
    \        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string\
    \ vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper\
    \ = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n\
    \        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string\
    \ vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper\
    \ = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n\
    \        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string\
    \ vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper\
    \ = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n\
    \        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string\
    \ vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper\
    \ = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n\
    \        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string\
    \ vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper\
    \ = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n\
    \        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string\
    \ vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBoth\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzdaybmv2.cs(50,26): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsRightLeft = vowelsRight.Substring(0, vowelsRight.Length);\n\
    \        string vowelsRightLeftLeft = vowelsRightLeft.Substring(0, vowelsRightLeft.Length);\n\
    \        string vowelsRightLeftLeftLeft = vowelsRightLeftLeft.Substring(0, vowelsRightLeftLeft.Length);\n\
    \        string vowelsRightLeftLeftLeftLeft = vowelsRightLeftLeftLeft.Substring(0,\
    \ vowelsRightLeftLeftLeft.Length);\n        string vowelsRightLeftLeftLeftLeftLeft\
    \ = vowelsRightLeftLeftLeftLeft.Substring(0, vowelsRightLeftLeftLeftLeft.Length);\n\
    \        string vowelsRightLeftLeftLeftLeftLeftLeft = vowelsRightLeftLeftLeftLeftLeft.Substring(0,\
    \ vowelsRightLeftLeftLeftLeftLeft.Length);\n        string vowelsRightLeftLeftLeftLeftLeftLeftLeft\
    \ = vowelsRightLeftLeftLeftLeftLeftLeft.Substring(0, vowelsRightLeftLeftLeftLeftLeftLeft.Length);\n\
    \        string vowelsRightLeftLeftLeftLeftLeftLeftLeft = vowelsRightLeftLeftLeftLeftLeftLeftLeft.Substring(0,\
    \ vowelsRightLeftLeftLeftLeftLeftLeftLeft.Length);\n        string vowelsRightLeftLeftLeftLeftLeftLeftLeftLeft\
    \ = vowelsRightLeftLeftLeftLeftLeftLeftLeftLeft.Substring(0, vowelsRightLeftLeftLeftLeftLeftLeftLeftLeft.Length);\n\
    \        string vowelsRightLeftLeftLeftLeftLeftLeftLeftLeft = vowelsRightLeftLeftLeftLeftLeftLeftLeftLeftLeft.Substring(0,\
    \ vowelsRightLeftLeftLeftLeftLeftLeftLeftLeftLeft.Length);\n        string vowelsRightLeftLeftLeftLeftLeftLeftLeftLeftLeft\
    \ = vowelsRightLeftLeftLeftLeftLeftLeftLeftLeftLeftLeft.Substring(0, vowelsRightLeftLeftLeftLeftLeftLeftLeftLeftLeftLeft.Length);\n\
    \        string vowelsRightLeftLeftLeftLeftLeftLeftLeftLeftLeft = vowelsRightLeftLeftLeftLeftLeftLeftLeftLeftLeftLeft.Substring(0,\
    \ vowelsRightLeftLeftLeftLeftLeftLeftLeftLeftLeftLeft.Length);\n        string\
    \ vowelsRightLeftLeftLeftLeftLeftLeftLeftLeftLeft = vowelsRightLeftLeftLeftLeftLeftLeftLeftLeftLeftLeftLeft.Substring(0,\
    \ vowelsRightLeftLeftLeftLeftLeftLeftLeftLeftLeftLeft.\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpettyzuqw.cs(35,187): error CS1001: Identifier expected

    /tmp/tmpettyzuqw.cs(35,187): error CS1026: ) expected

    /tmp/tmpettyzuqw.cs(35,187): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowel\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp82u3nn9o.cs(41,21): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddle2 = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddle3 = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddle4 = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddle5 = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddle6 = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddle7 = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddle8 = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddle9 = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddle10 = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddle11 = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddle12 = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddle13 = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddle14 = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddle15 = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddle16 = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddle17 = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddle18 = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddle19 = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddle20 = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddle21 = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowel\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpses9hczm.cs(44,21): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRight.Substring(0,\
    \ vowelsMiddleRight.Length / 2);\n        string vowelsMiddleRightLeftRight =\
    \ vowelsMiddleRightLeft.Substring(0, vowelsMiddleRightLeft.Length / 2);\n    \
    \    string vowelsMiddleRightLeftRightLeft = vowelsMiddleRightLeftRight.Substring(0,\
    \ vowelsMiddleRightLeftRight.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeft.Substring(0, vowelsMiddleRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeft = vowelsMiddleRightLeftRightLeftRight.Substring(0,\
    \ vowelsMiddleRightLeftRightLeftRight.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeft.Substring(0, vowelsMiddleRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeft = vowelsMiddleRightLeftRightLeftRightLeftRight.Substring(0,\
    \ vowelsMiddleRightLeftRightLeftRightLeftRight.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeft.Substring(0, vowelsMiddleRightLeftRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight.Substring(0, vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft.Substring(0, vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRight.Substring(0,\
    \ vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1zd1a1jp.cs(35,218): error CS1026: ) expected

    /tmp/tmp1zd1a1jp.cs(35,218): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCaps = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string vowelsBothCapsLower\
    \ = vowelsBothCaps.ToLower();\n        string vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower();\n\
    \        string vowelsBothCapsUpperLowerLower = vowelsBothCapsUpperLower.ToLower();\n\
    \        string vowelsBothCapsUpperLowerLowerLower = vowelsBothCapsUpperLowerLower.ToLower();\n\
    \        string vowelsBothCapsUpperLowerLowerLowerLower = vowelsBothCapsUpperLowerLowerLower.ToLower();\n\
    \        string vowelsBothCapsUpperLowerLowerLowerLowerLowerLower = vowelsBothCapsUpperLowerLowerLowerLowerLower.ToLower();\n\
    \        string vowelsBothCapsUpperLowerLowerLowerLowerLowerLowerLowerLower =\
    \ vowelsBothCapsUpperLowerLowerLowerLowerLowerLowerLowerLower.ToLower();\n   \
    \     string vowelsBothCapsUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLower\
    \ = vowelsBothCapsUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLower.ToLower();\n\
    \        string vowelsBothCapsUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLower\
    \ = vowelsBothCapsUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLower.ToLower();\n\
    \        string vowelsBothCapsUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLower\
    \ = vowelsBothCapsUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLower.ToLower();\n\
    \        string vowelsBothCapsUpperLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLowerLower\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvs9z128q.cs(38,360): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsRightLeft = vowelsRight.Substring(0, vowelsRight.Length);\n\
    \        string vowelsRightRight = vowelsRight.Substring(vowelsRight.Length);\n\
    \        string vowelsRightLeftLeft = vowelsRightLeft.Substring(0, vowelsRightLeft.Length);\n\
    \        string vowelsRightLeftRight = vowelsRightLeft.Substring(vowelsRightLeft.Length);\n\
    \        string vowelsRightLeftLeftLeft = vowelsRightLeftLeft.Substring(0, vowelsRightLeftLeft.Length);\n\
    \        string vowelsRightLeftLeftRight = vowelsRightLeftLeft.Substring(vowelsRightLeftLeft.Length);\n\
    \        string vowelsRightLeftLeftLeftLeft = vowelsRightLeftLeftRight.Substring(0,\
    \ vowelsRightLeftLeftRight.Length);\n        string vowelsRightLeftLeftLeftRight\
    \ = vowelsRightLeftLeftRight.Substring(vowelsRightLeftLeftRight.Length);\n   \
    \     string vowelsRightLeftLeftLeftLeftLeft = vowelsRightLeftLeftLeftLeftRight.Substring(0,\
    \ vowelsRightLeftLeftLeftLeftRight.Length);\n        string vowelsRightLeftLeftLeftLeftRight\
    \ = vowelsRightLeftLeftLeftLeftRight.Substring(vowelsRightLeftLeftLeftRight.Length);\n\
    \        string vowelsRightLeftLeftLeftLeftLeftLeft = vowelsRightLeftLeftLeftLeftLeftRight.Substring(0,\
    \ vowelsRightLeftLeftLeftLeftRight.Length);\n        string vowelsRightLeftLeftLeftLeftLeftRight\
    \ = vowelsRightLeftLeftLeftLeftLeftRight.Substring(vowelsRightLeftLeftLeftLeftRight.Length);\n\
    \        string vowelsRightLeftLeftLeftLeftLeftLeftLeft = vowelsRightLeftLeftLeftLeftLeftRight.Substring(0,\
    \ vowelsRightLeftLeftLeftLeftRight.Length);\n        string vowelsRightLeftLeftLeftLeftLeftLeftRight\
    \ = vowelsRightLeftLeftLeftLeftLeftRight.Substring(vowelsRightLeftLeftLeftLeftRight.Length);\n\
    \        string vowelsRightLeftLeftLeftLeftLeftLeftLeftLeft = vowelsRightLeftLeftLeftLeftLeftRight.Substring(0,\
    \ vowelsRightLeftLeftLeftLeftRight.Length);\n        string vowelsRightLeftLeftLeftLeftLeftLeftRight\
    \ = vowelsRightLeftLeftLeftLeftLeftRight.Substring(vowel\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzxsebgpa.cs(38,111): error CS1026: ) expected

    /tmp/tmpzxsebgpa.cs(38,111): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRight = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothLeftRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n\
    \        string vowelsBothBothRight = vowels.Substring(0, vowels.Length - 1) +\
    \ vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string vowelsBothBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n        string vowelsBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n\
    \        string vowelsBothBothRightBoth = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1);\n        string vowelsBothLeftRightBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n\
    \        string vowelsBothBothRightBothBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1);\n        string vowelsBothLeftRightBothBothBothBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length - 1);\n\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpoq09u4h5.cs(19,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string vowelsBothCapLower\
    \ = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n\
    \        string vowelsBothCapUpperLowerUpper = vowelsBothCapUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpper = vowelsBothCapUpperLowerUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowel\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz3t8ei9n.cs(40,107): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsRight2 = vowels.Substring(word.Length - 2);\n        string\
    \ vowelsRight3 = vowels.Substring(word.Length - 3);\n        string vowelsRight4\
    \ = vowels.Substring(word.Length - 4);\n        string vowelsRight5 = vowels.Substring(word.Length\
    \ - 5);\n        string vowelsRight6 = vowels.Substring(word.Length - 6);\n  \
    \      string vowelsRight7 = vowels.Substring(word.Length - 7);\n        string\
    \ vowelsRight8 = vowels.Substring(word.Length - 8);\n        string vowelsRight9\
    \ = vowels.Substring(word.Length - 9);\n        string vowelsRight10 = vowels.Substring(word.Length\
    \ - 10);\n        string vowelsRight11 = vowels.Substring(word.Length - 11);\n\
    \        string vowelsRight12 = vowels.Substring(word.Length - 12);\n        string\
    \ vowelsRight13 = vowels.Substring(word.Length - 13);\n        string vowelsRight14\
    \ = vowels.Substring(word.Length - 14);\n        string vowelsRight15 = vowels.Substring(word.Length\
    \ - 15);\n        string vowelsRight16 = vowels.Substring(word.Length - 16);\n\
    \        string vowelsRight17 = vowels.Substring(word.Length - 17);\n        string\
    \ vowelsRight18 = vowels.Substring(word.Length - 18);\n        string vowelsRight19\
    \ = vowels.Substring(word.Length - 19);\n        string vowelsRight20 = vowels.Substring(word.Length\
    \ - 20);\n        string vowelsRight21 = vowels.Substring(word.Length - 21);\n\
    \        string vowelsRight22 = vowels.Substring(word.Length - 22);\n        string\
    \ vowelsRight23 = vowels.Substring(word.Length - 23);\n        string vowelsRight24\
    \ = vowels.Substring(word.Length - 24);\n        string vowelsRight25 = vowels.Substring(word.Length\
    \ - 25);\n        string vowelsRight26 = vowels.Substring(word.Length - 26);\n\
    \        string vowelsRight27 = vowels.Substring(word.Length - 27);\n        string\
    \ vowelsRight28 = vowels.Substring(word.Length - 28);\n        string vowelsRight29\
    \ = vowels.Substring(word.Length - 29);\n        string vowelsRight30 = vowels.Substring(word.Length\
    \ - 30);\n        string vowelsRight31 = vowel\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq84vm2pi.cs(52,37): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(vowelsLeft.Length / 2);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleLeftLeft = vowelsMiddleLeft.Substring(vowelsMiddleLeft.Length\
    \ / 2);\n        string vowelsMiddleRightRight = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRight.Substring(vowelsMiddleRight.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeft = vowelsMiddleLeftRight.Substring(vowelsMiddleLeftRight.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowelsMiddleLeftLeft.Substring(vowelsMiddleLeftLeft.Length\
    \ / 2);\n        string vowelsMiddleRightRightLeft = vowelsMiddleRightRight.Substring(vowelsMiddleRightRight.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeft = vowelsMiddleRightLeft.Substring(vowelsMiddleRightLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftRightRightLeft = vowelsMiddleLeftRightRight.Substring(vowelsMiddleLeftRightRight.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRightRight = vowelsMiddleLeftLeftRight.Substring(vowelsMiddleLeftLeftRight.Length\
    \ / 2);\n        string vowelsMiddleRightRightLeftLeft = vowelsMiddleRightRightLeft.Substring(vowelsMiddleRightRightLeft.Length\
    \ / 2);\n        string vowelsMiddleRightRightLeftRight = vowelsMiddleRightRightLeftRight.Substring(vowelsMiddleRightRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleLeftRightRightLeftRight = vowelsMiddleLeftRightRightLeftRight.Substring(vowelsMiddleLeftRightRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleLeftRightRightLeftRightRight = vowelsMiddleLeftRightRightLeftRightRight.Substring(vowelsMiddleLeftRightRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleRightRightLeftRightLeftRight = vowelsMiddleRightRightLeftRightLeftRight.Substring(vowelsMiddleRightRightLeftRightLeftRight.Length\
    \ / 2);\n        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfsjktp5i.cs(26,39): error CS0103: The name ''vowelsMiddleLeft'' does not
    exist in the current context

    /tmp/tmpfsjktp5i.cs(26,66): error CS0103: The name ''vowelsMiddleLeft'' does not
    exist in the current context

    /tmp/tmpfsjktp5i.cs(33,49): error CS0103: The name ''vowelsMiddleLeftRightRight''
    does not exist in the current context

    /tmp/tmpfsjktp5i.cs(33,86): error CS0103: The name ''vowelsMiddleLeftRightRight''
    does not exist in the current context

    /tmp/tmpfsjktp5i.cs(36,50): error CS0165: Use of unassigned local variable ''vowelsMiddleRightRightLeftRight''

    /tmp/tmpfsjktp5i.cs(37,54): error CS0165: Use of unassigned local variable ''vowelsMiddleLeftRightRightLeftRight''

    /tmp/tmpfsjktp5i.cs(38,59): error CS0165: Use of unassigned local variable ''vowelsMiddleLeftRightRightLeftRightRight''

    /tmp/tmpfsjktp5i.cs(39,59): error CS0165: Use of unassigned local variable ''vowelsMiddleRightRightLeftRightLeftRight''

    /tmp/tmpfsjktp5i.cs(19,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 4);\n        string vowelsMiddleLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 16);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 32);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 64);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 128);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128);\n\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp35g79r5s.cs(19,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsMiddle = vowelsLeft.Substring(word.Length / 2);\n      \
    \  string vowelsMiddleRight = vowelsMiddle.Substring(0, word.Length / 2);\n  \
    \      string vowelsMiddleLeft = vowelsMiddle.Substring(word.Length / 2);\n  \
    \      string vowelsMiddleLeftRight = vowelsMiddleLeft.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRight.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowelsMiddleLeftRight.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftLeft = vowelsMiddleRightLeft.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftLeftRight = vowelsMiddleRightLeftLeft.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeft = vowelsMiddleRightLeftLeftRight.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRight =\
    \ vowelsMiddleRightLeftLeftRightLeft.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleRightLeftLeftRightLeftRightLeft = vowelsMiddleRightLeftLeftRightLeftRight.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftLeftRightLeftRightLeft.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeft = vowelsMiddleRightLeftLeftRightLeftRightLeftRight.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeft.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRight.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeft.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeft.Substring(0,\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiue_1a1p.cs(39,177): error CS1525: Invalid expression term ''}''

    /tmp/tmpiue_1a1p.cs(39,177): error CS1026: ) expected

    /tmp/tmpiue_1a1p.cs(39,177): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp02xjic90.cs(39,15): error CS1001: Identifier expected

    /tmp/tmp02xjic90.cs(39,15): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp02xjic90.cs(39,15): error CS1001: Identifier expected

    /tmp/tmp02xjic90.cs(39,15): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle\
    \ = vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp02xjic90.cs(39,15): error CS1001: Identifier expected

    /tmp/tmp02xjic90.cs(39,15): error CS1002: ; expected

    '
  timestamp: 1659799015
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n\
    \        string vowelsMiddleBoth = vowelsMiddle + vowelsRight;\n        string\
    \ vowelsBothLeft = vowelsLeft + vowelsMiddle;\n        string vowelsBothRight\
    \ = vowelsRight + vowelsMiddle;\n        string vowelsBothMiddle = vowelsMiddle\
    \ + vowelsLeft;\n        string vowelsBothMiddleLeft = vowelsMiddle + vowelsRight;\n\
    \        string vowelsBothMiddleRight = vowelsMiddle + vowelsLeft;\n        string\
    \ vowelsBothMiddleBoth = vowelsMiddle + vowelsBoth;\n        string vowelsBothLeftLeft\
    \ = vowelsLeft + vowelsBothLeft;\n        string vowelsBothLeftRight = vowelsLeft\
    \ + vowelsBothRight;\n        string vowelsBothRightLeft = vowelsRight + vowelsBothLeft;\n\
    \        string vowelsBothRightRight = vowelsRight + vowelsBothRight;\n      \
    \  string vowelsBothMiddleLeft = vowelsMiddle + vowelsBothLeft;\n        string\
    \ vowelsBothMiddleRight = vowelsMiddle + vowelsBothRight;\n        string vowelsBothMiddleBoth\
    \ = vowelsMiddle + vowelsBoth;\n        string vowelsBothLeftLeftLeft = vowelsLeft\
    \ + vowelsBothLeftLeft;\n        string vowelsBothLeftLeftRight = vowelsLeft +\
    \ vowelsBothLeftRight;\n        string vowelsBothLeftRightLeft = vowelsLeft +\
    \ vowelsBothRightLeft;\n        string vowelsBothLeftRightRight = vowelsLeft +\
    \ vowelsBothRightRight;\n        string vowelsBothRightLeftLeft = vowelsRight\
    \ + vowelsBothLeftLeft;\n        string vowelsBothRightLeftRight = vowelsRight\
    \ + vowelsBothLeftRight;\n        string vowelsBothRightRightLeft = vowelsRight\
    \ + vowelsBothRightLeft;\n        string vowelsBothRightRightRight = vowelsRight\
    \ + vowelsBothRightRight;\n        string vowelsBothMiddleLeftLeft = vowelsMiddle\
    \ + vowelsBothLeftLeft;\n        string vowel\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfjjwdxi7.cs(48,21): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length);\n\
    \        string vowelsLeft = vowelsLeft.ToLower();\n        string vowelsRight\
    \ = vowelsRight.ToLower();\n        string vowelsLeft = vowelsLeft.Replace(\"\
    e\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"e\", \"\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"a\", \"\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"a\", \"\");\n        string vowelsLeft =\
    \ vowelsLeft.Replace(\"i\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"\
    i\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"o\", \"\");\n  \
    \      string vowelsRight = vowelsRight.Replace(\"o\", \"\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"u\", \"\");\n        string vowelsRight =\
    \ vowelsRight.Replace(\"u\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"\
    y\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"y\", \"\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"r\", \"\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"r\", \"\");\n        string vowelsLeft =\
    \ vowelsLeft.Replace(\"l\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"\
    l\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"s\", \"\");\n  \
    \      string vowelsRight = vowelsRight.Replace(\"s\", \"\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"d\", \"\");\n        string vowelsRight =\
    \ vowelsRight.Replace(\"d\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"\
    f\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"f\", \"\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"h\", \"\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"h\", \"\");\n        string vowelsLeft =\
    \ vowelsLeft.Replace(\"p\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"\
    p\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"t\", \"\");\n  \
    \      string vowelsRight = vowelsRight.Replace(\"t\", \"\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"k\", \"\");\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5iftmszi.cs(23,16): error CS0128: A local variable or function named ''vowelsLeft''
    is already defined in this scope

    /tmp/tmp5iftmszi.cs(24,16): error CS0128: A local variable or function named ''vowelsRight''
    is already defined in this scope

    /tmp/tmp5iftmszi.cs(25,16): error CS0128: A local variable or function named ''vowelsLeft''
    is already defined in this scope

    /tmp/tmp5iftmszi.cs(26,16): error CS0128: A local variable or function named ''vowelsRight''
    is already defined in this scope

    /tmp/tmp5iftmszi.cs(27,16): error CS0128: A local variable or function named ''vowelsLeft''
    is already defined in this scope

    /tmp/tmp5iftmszi.cs(28,16): error CS0128: A local variable or function named ''vowelsRight''
    is already defined in this scope

    /tmp/tmp5iftmszi.cs(29,16): error CS0128: A local variable or function named ''vowelsLeft''
    is already defined in this scope

    /tmp/tmp5iftmszi.cs(30,16): error CS0128: A local variable or function named ''vowelsRight''
    is already defined in this scope

    /tmp/tmp5iftmszi.cs(31,16): error CS0128: A local variable or function named ''vowelsLeft''
    is already defined in this scope

    /tmp/tmp5iftmszi.cs(32,16): error CS0128: A local variable or function named ''vowelsRight''
    is already defined in this scope

    /tmp/tmp5iftmszi.cs(33,16): error CS0128: A local variable or function named ''vowelsLeft''
    is already defined in this scope

    /tmp/tmp5iftmszi.cs(34,16): error CS0128: A local variable or function named ''vowelsRight''
    is already defined in this scope

    /tmp/tmp5iftmszi.cs(35,16): error CS0128: A local variable or function named ''vowelsLeft''
    is already defined in this scope

    /tmp/tmp5iftmszi.cs(36,16): error CS0128: A local variable or function named ''vowelsRight''
    is already defined in this scope

    /tmp/tmp5iftmszi.cs(37,16): error CS0128: A local variable or function named ''vowelsLeft''
    is already defined in this scope

    /tmp/tmp5iftmszi.cs(38,16): error CS0128: A local variable or functio'
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsAll = vowelsLeft + vowelsRight;\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllCap = vowelsAll.ToUpper();\n        string vowelsAllCapLower\
    \ = vowelsAllCap.ToLower();\n        string vowelsAllCapUpper = vowelsAllCap.ToUpper();\n\
    \        string vowelsAllCapAll = vowelsAllCap.ToUpper() + vowelsAllCap.ToLower();\n\
    \        string vowelsAllCapAllLower = vowelsAllCapAll.ToLower();\n        string\
    \ vowelsAllCapAllUpper = vowelsAllCapAll.ToUpper();\n        string vowelsAllCapAllCap\
    \ = vowelsAllCapAll.ToUpper() + vowelsAllCapAll.ToLower();\n        string vowelsAllCapAllCapLower\
    \ = vowelsAllCapAllCap.ToLower();\n        string vowelsAllCapAllCapUpper = vowelsAllCapAllCap.ToUpper();\n\
    \        string vowelsAllCapAllCapAll = vowelsAllCapAllCap.ToUpper() + vowelsAllCapAllCap.ToLower();\n\
    \        string vowelsAllCapAllCapAllLower = vowelsAllCapAllCapAll.ToLower();\n\
    \        string vowelsAllCapAllCapAllUpper = vowelsAllCapAllCapAll.ToUpper();\n\
    \        string vowelsAllCapAllCapAllCap = vowelsAllCapAllCapAll.ToUpper() + vowelsAllCapAllCapAll.ToLower();\n\
    \        string vowelsAllCapAllCapAllCapLower = vowelsAllCapAllCapAllCap.ToLower();\n\
    \        string vowelsAllCapAllCapAllCapUpper = vowelsAllCapAllCapAllCap.ToUpper();\n\
    \        string vowelsAllCapAllCapAllCapAll = vowelsAllCapAllCapAllCap.ToUpper()\
    \ + vowelsAllCapAllCapAllCap.ToLower();\n        string vowelsAllCapAllCapAllCapLower\
    \ = vowelsAllCapAllCapAllCap.ToLower();\n        string vowelsAllCapAllCapAllCapUpper\
    \ = vowelsAllCapAllCapAll\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsqnzr0rl.cs(43,69): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1);\n        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowel\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpm2ovvoy6.cs(40,53): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0,\
    \ word.Length);\n        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = word.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleRight = word.Substring(word.Length / 2, word.Length / 2);\n    \
    \    string vowelsMiddleLeft = word.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleLeftRight = word.Substring(word.Length / 2, word.Length / 2);\n\
    \        string vowelsMiddleRightLeft = word.Substring(word.Length / 2, word.Length\
    \ / 2);\n        string vowelsMiddleLeftRightMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleRightLeftMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle = word.Substring(word.Length\
    \ / 2, word.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkbou6o8a.cs(45,49): error CS1002: ; expected

    '
  timestamp: 1659799017
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // get_closest_vowel(\"yogurt\") ==> \"u\"\n    // get_closest_vowel(\"\
    FULL\") ==> \"U\"\n    // get_closest_vowel(\"quick\") ==> \"\"\n    // get_closest_vowel(\"\
    ab\") ==> \"\"\n    public static string GetClosestVowel(string word) {\n    \
    \    string vowels = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsRight = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsAll = vowelsLeft + vowelsRight\
    \ + vowelsMiddle;\n        string vowelsAllUpper = vowelsAll.ToUpper();\n    \
    \    string vowelsAllLower = vowelsAll.ToLower();\n        string vowelsAllCaps\
    \ = vowelsAll.ToUpper();\n        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n\
    \        string vowelsAllCapsAll = vowelsAllCaps + vowelsAllCapsLower + vowelsAll;\n\
    \        string vowelsAllCapsAllUpper = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string vowelsAllCapsAllUpperLower\
    \ = vowelsAllCapsAllUpper.ToLower();\n        string vowelsAllCapsAllUpperLowerUpper\
    \ = vowelsAllCapsAllUpperLower.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpper.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpperUpper.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpperUpperUpper.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpperUpperUpper.ToUpper();\n        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpper\
    \ = vowelsAllCapsAllUpperLowerUpperUpperUpperUpper.ToUpper();\n        string\
    \ vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpperUpper = vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsAllCapsAllUpperLowerUpperUpperUpperUpperUpperUpper = vowelsAllCapsAllUpperLowerUpper\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgyr3y5oe.cs(41,106): error CS1002: ; expected

    '
  timestamp: 1659799017

name: HumanEval_69_search
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // You are given a non-empty list of positive integers. Return\
  \ the greatest integer that is greater than \n    // zero, and has a frequency greater\
  \ than or equal to the value of the integer itself. \n    // The frequency of an\
  \ integer is the number of times it appears in the list.\n    // If no such a value\
  \ exist, return -1.\n    // Examples:\n    // search([4, 1, 2, 2, 3, 1]) == 2\n\
  \    // search([1, 2, 2, 3, 3, 3, 4, 4, 4]) == 3\n    // search([5, 5, 4, 4, 4])\
  \ == -1\n    public static long Search(List<long> lst) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L, (long)1L}))) ==\
  \ (1L));\n    Debug.Assert(Search((new List<long>(new long[]{(long)4L, (long)1L,\
  \ (long)4L, (long)1L, (long)4L, (long)4L}))) == (4L));\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)3L, (long)3L}))) == (-1L));\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)8L, (long)8L, (long)8L, (long)8L, (long)8L, (long)8L,\
  \ (long)8L, (long)8L}))) == (8L));\n    Debug.Assert(Search((new List<long>(new\
  \ long[]{(long)2L, (long)3L, (long)3L, (long)2L, (long)2L}))) == (2L));\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)2L, (long)7L, (long)8L, (long)8L, (long)4L, (long)8L,\
  \ (long)7L, (long)3L, (long)9L, (long)6L, (long)5L, (long)10L, (long)4L, (long)3L,\
  \ (long)6L, (long)7L, (long)1L, (long)7L, (long)4L, (long)10L, (long)8L, (long)1L})))\
  \ == (1L));\n    Debug.Assert(Search((new List<long>(new long[]{(long)3L, (long)2L,\
  \ (long)8L, (long)2L}))) == (2L));\n    Debug.Assert(Search((new List<long>(new\
  \ long[]{(long)6L, (long)7L, (long)1L, (long)8L, (long)8L, (long)10L, (long)5L,\
  \ (long)8L, (long)5L, (long)3L, (long)10L}))) == (1L));\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)8L, (long)8L, (long)3L, (long)6L, (long)5L, (long)6L,\
  \ (long)4L}))) == (-1L));\n    Debug.Assert(Search((new List<long>(new long[]{(long)6L,\
  \ (long)9L, (long)6L, (long)7L, (long)1L, (long)4L, (long)7L, (long)1L, (long)8L,\
  \ (long)8L, (long)9L, (long)8L, (long)10L, (long)10L, (long)8L, (long)4L, (long)10L,\
  \ (long)4L, (long)10L, (long)1L, (long)2L, (long)9L, (long)5L, (long)7L, (long)9L})))\
  \ == (1L));\n    Debug.Assert(Search((new List<long>(new long[]{(long)1L, (long)9L,\
  \ (long)10L, (long)1L, (long)3L}))) == (1L));\n    Debug.Assert(Search((new List<long>(new\
  \ long[]{(long)6L, (long)9L, (long)7L, (long)5L, (long)8L, (long)7L, (long)5L, (long)3L,\
  \ (long)7L, (long)5L, (long)10L, (long)10L, (long)3L, (long)6L, (long)10L, (long)2L,\
  \ (long)8L, (long)6L, (long)5L, (long)4L, (long)9L, (long)5L, (long)3L, (long)10L})))\
  \ == (5L));\n    Debug.Assert(Search((new List<long>(new long[]{(long)1L}))) ==\
  \ (1L));\n    Debug.Assert(Search((new List<long>(new long[]{(long)8L, (long)8L,\
  \ (long)10L, (long)6L, (long)4L, (long)3L, (long)5L, (long)8L, (long)2L, (long)4L,\
  \ (long)2L, (long)8L, (long)4L, (long)6L, (long)10L, (long)4L, (long)2L, (long)1L,\
  \ (long)10L, (long)2L, (long)1L, (long)1L, (long)5L}))) == (4L));\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)8L, (long)2L, (long)10L,\
  \ (long)5L, (long)1L, (long)2L, (long)9L, (long)5L, (long)5L, (long)6L, (long)3L,\
  \ (long)8L, (long)6L, (long)4L, (long)10L}))) == (2L));\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)1L, (long)6L, (long)10L, (long)1L, (long)6L, (long)9L,\
  \ (long)10L, (long)8L, (long)6L, (long)8L, (long)7L, (long)3L}))) == (1L));\n  \
  \  Debug.Assert(Search((new List<long>(new long[]{(long)9L, (long)2L, (long)4L,\
  \ (long)1L, (long)5L, (long)1L, (long)5L, (long)2L, (long)5L, (long)7L, (long)7L,\
  \ (long)7L, (long)3L, (long)10L, (long)1L, (long)5L, (long)4L, (long)2L, (long)8L,\
  \ (long)4L, (long)1L, (long)9L, (long)10L, (long)7L, (long)10L, (long)2L, (long)8L,\
  \ (long)10L, (long)9L, (long)4L}))) == (4L));\n    Debug.Assert(Search((new List<long>(new\
  \ long[]{(long)2L, (long)6L, (long)4L, (long)2L, (long)8L, (long)7L, (long)5L, (long)6L,\
  \ (long)4L, (long)10L, (long)4L, (long)6L, (long)3L, (long)7L, (long)8L, (long)8L,\
  \ (long)3L, (long)1L, (long)4L, (long)2L, (long)2L, (long)10L, (long)7L}))) == (4L));\n\
  \    Debug.Assert(Search((new List<long>(new long[]{(long)9L, (long)8L, (long)6L,\
  \ (long)10L, (long)2L, (long)6L, (long)10L, (long)2L, (long)7L, (long)8L, (long)10L,\
  \ (long)3L, (long)8L, (long)2L, (long)6L, (long)2L, (long)3L, (long)1L}))) == (2L));\n\
  \    Debug.Assert(Search((new List<long>(new long[]{(long)5L, (long)5L, (long)3L,\
  \ (long)9L, (long)5L, (long)6L, (long)3L, (long)2L, (long)8L, (long)5L, (long)6L,\
  \ (long)10L, (long)10L, (long)6L, (long)8L, (long)4L, (long)10L, (long)7L, (long)7L,\
  \ (long)10L, (long)8L}))) == (-1L));\n    Debug.Assert(Search((new List<long>(new\
  \ long[]{(long)10L}))) == (-1L));\n    Debug.Assert(Search((new List<long>(new long[]{(long)9L,\
  \ (long)7L, (long)7L, (long)2L, (long)4L, (long)7L, (long)2L, (long)10L, (long)9L,\
  \ (long)7L, (long)5L, (long)7L, (long)2L}))) == (2L));\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)5L, (long)4L, (long)10L, (long)2L, (long)1L, (long)1L,\
  \ (long)10L, (long)3L, (long)6L, (long)1L, (long)8L}))) == (1L));\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)7L, (long)9L, (long)9L, (long)9L, (long)3L, (long)4L,\
  \ (long)1L, (long)5L, (long)9L, (long)1L, (long)2L, (long)1L, (long)1L, (long)10L,\
  \ (long)7L, (long)5L, (long)6L, (long)7L, (long)6L, (long)7L, (long)7L, (long)6L})))\
  \ == (1L));\n    Debug.Assert(Search((new List<long>(new long[]{(long)3L, (long)10L,\
  \ (long)10L, (long)9L, (long)2L}))) == (-1L));\n    }\n\n}\n"
completions: ["        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            freq++;\n            if (i > max) {\n             \
    \   max = i;\n            }\n        }\n        if (freq > 0) {\n            long\
    \ freqMax = freq;\n            foreach (long i in lst) {\n                if (i\
    \ == max) {\n                    freqMax--;\n                }\n            }\n\
    \            if (freqMax > 0) {\n                return max;\n            }\n\
    \        }\n        return -1;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq++;\n            if (freq\
    \ > max) {\n                max = freq;\n            }\n            if (i == 0)\
    \ {\n                freq--;\n            }\n        }\n        return max;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \            }\n        }\n        if (freq >= max) {\n            return -1;\n\
    \        }\n        return max;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            freq++;\n            if (freq\
    \ > max) {\n                max = freq;\n            }\n            if (i == 0)\
    \ {\n                freq--;\n            }\n        }\n        return max;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            if (i > 0 && freq >= i) {\n                max = i;\n       \
    \         freq = i;\n            }\n        }\n        return max;", "       \
    \ long max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n \
    \           if (i > 0 && freq > 0) {\n                freq--;\n            }\n\
    \            if (i > 0 && freq == 0 && i > max) {\n                max = i;\n\
    \            }\n            freq++;\n        }\n        return max;", "      \
    \  long max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n\
    \            freq++;\n            if (i > max) {\n                max = i;\n \
    \           }\n        }\n        if (freq > 0) {\n            long max2 = freq;\n\
    \            foreach (long i in lst) {\n                if (freq > max2) {\n \
    \                   max2 = freq;\n                }\n                freq--;\n\
    \            }\n            return max;\n        }\n        return -1;", "   \
    \     long max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n\
    \            freq++;\n            if (i > max) {\n                max = i;\n \
    \           }\n            if (freq > i) {\n                freq = i;\n      \
    \      }\n        }\n        return max;", "        long maxVal = lst[0];\n  \
    \      long maxFreq = lst[0];\n        foreach (long val in lst) {\n         \
    \   if (val > maxVal) {\n                maxVal = val;\n            }\n      \
    \      if (val == maxVal) {\n                maxFreq++;\n            }\n     \
    \   }\n        if (maxFreq >= maxVal) {\n            return maxVal;\n        }\n\
    \        return -1;", "        long max = 0;\n        long freq = 0;\n       \
    \ foreach (long i in lst) {\n            freq++;\n            if (i > max) {\n\
    \                max = i;\n            }\n            if (freq > i) {\n      \
    \          freq = i;\n            }\n        }\n        return max;", "      \
    \  long maxVal = lst[0];\n        long maxFreq = lst[0];\n        foreach (long\
    \ val in lst) {\n            if (val > maxVal) {\n                maxVal = val;\n\
    \            }\n            if (val == maxVal) {\n                maxFreq++;\n\
    \            }\n        }\n        if (maxFreq == lst[0]) {\n            return\
    \ -1;\n        }\n        return maxVal;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            freq++;\n        \
    \    if (freq > max) {\n                max = freq;\n            }\n         \
    \   if (i == 0) {\n                freq--;\n            }\n        }\n       \
    \ return max;", "        long max = 0;\n        long freq = 0;\n        foreach\
    \ (long i in lst) {\n            freq++;\n            if (i > max) {\n       \
    \         max = i;\n            }\n        }\n        if (freq > 0) {\n      \
    \      foreach (long i in lst) {\n                if (i == max) {\n          \
    \          freq--;\n                }\n            }\n        }\n        if (freq\
    \ > 0) {\n            return max;\n        }\n        return -1;", "        long\
    \ max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n      \
    \      freq++;\n            if (i > max) {\n                max = i;\n       \
    \     }\n            if (freq > i) {\n                freq = i;\n            }\n\
    \        }\n        return max;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            freq++;\n            if (i\
    \ > max) {\n                max = i;\n            }\n        }\n        if (freq\
    \ > 0) {\n            foreach (long i in lst) {\n                if (i == max)\
    \ {\n                    freq--;\n                }\n            }\n        }\n\
    \        return (freq > 0) ? max : -1;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            freq++;\n        \
    \    if (i > max) {\n                max = i;\n            }\n            if (freq\
    \ > i) {\n                freq = i;\n            }\n        }\n        return\
    \ max;", "        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            freq++;\n            if (freq > max) {\n          \
    \      max = freq;\n            }\n        }\n        if (max > 0) {\n       \
    \     foreach (long i in lst) {\n                if (i == max) {\n           \
    \         return i;\n                }\n            }\n        }\n        return\
    \ -1;", "        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            freq++;\n            if (i > max) {\n             \
    \   max = i;\n            }\n            if (freq > i) {\n                freq\
    \ = i;\n            }\n        }\n        return max;", "        long maxVal =\
    \ lst[0];\n        long maxFreq = lst[0];\n        foreach (long val in lst) {\n\
    \            if (val > maxVal) {\n                maxVal = val;\n            \
    \    maxFreq = lst[val];\n            }\n        }\n        return maxVal;", " \
    \       long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (freq > max) {\n                max =\
    \ freq;\n            }\n            if (i == 0) {\n                freq--;\n \
    \           }\n        }\n        return max;", "        long max = 0;\n     \
    \   long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n \
    \           if (i > max) {\n                max = i;\n            }\n        \
    \    if (freq > i) {\n                freq = i;\n            }\n        }\n  \
    \      return max;", "        long max = 0;\n        long freq = 0;\n        foreach\
    \ (long i in lst) {\n            freq++;\n            if (i > max) {\n       \
    \         max = i;\n            }\n            if (freq > i) {\n             \
    \   freq = i;\n            }\n        }\n        return max;", "        long max\
    \ = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n          \
    \  freq++;\n            if (i > max) {\n                max = i;\n           \
    \ }\n            if (freq > i) {\n                freq = i;\n            }\n \
    \       }\n        return max;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq++;\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        if (freq > 0)\
    \ {\n            foreach (long i in lst) {\n                if (i == max) {\n\
    \                    freq--;\n                }\n            }\n        }\n  \
    \      return freq > 0 ? max : -1;", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (long i in lst) {\n            freq++;\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        if\
    \ (freq >= max) {\n            return -1;\n        }\n        long max2 = 0;\n\
    \        long freq2 = 0;\n        foreach (long i in lst) {\n            freq2++;\n\
    \            if (freq2 >= max) {\n                max2 = i;\n            }\n \
    \       }\n        if (freq2 >= max) {\n            return -1;\n        }\n  \
    \      return max;", "        long max = 0;\n        long freq = 0;\n        foreach\
    \ (long i in lst) {\n            freq++;\n            if (freq > max) {\n    \
    \            max = freq;\n            }\n            if (i == 0) {\n         \
    \       freq--;\n            }\n        }\n        if (max > 0) {\n          \
    \  return max;\n        }\n        return -1;", "        long max = 0;\n     \
    \   long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n \
    \           if (i > max) {\n                max = i;\n            }\n        }\n\
    \        if (freq > 0) {\n            long maxfreq = freq;\n            foreach\
    \ (long i in lst) {\n                if (i > max) {\n                    maxfreq--;\n\
    \                }\n            }\n            if (maxfreq >= freq) {\n      \
    \          return max;\n            }\n        }\n        return -1;", "     \
    \   long max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n\
    \            freq++;\n            if (i > max) {\n                max = i;\n \
    \           }\n        }\n        if (freq > 0) {\n            foreach (long i\
    \ in lst) {\n                if (i == max) {\n                    freq--;\n  \
    \              }\n            }\n        }\n        return max;", "        long\
    \ maxVal = lst[0];\n        long maxFreq = lst[0];\n        foreach (long val\
    \ in lst) {\n            if (val > maxVal) {\n                maxVal = val;\n\
    \                maxFreq = lst[val];\n            }\n        }\n        return\
    \ maxFreq > maxVal ? maxVal : -1;", "        long max = -1;\n        long freq\
    \ = 0;\n        foreach (long i in lst) {\n            freq++;\n            if\
    \ (freq > max) {\n                max = freq;\n            }\n            if (i\
    \ == 0) {\n                freq--;\n            }\n        }\n        return max;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \            }\n            if (freq > i) {\n                freq = i;\n     \
    \       }\n        }\n        return max;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            freq++;\n        \
    \    if (i > max) {\n                max = i;\n            }\n        }\n    \
    \    if (freq > 0) {\n            foreach (long i in lst) {\n                if\
    \ (i == max) {\n                    freq--;\n                }\n            }\n\
    \        }\n        if (freq >= 0) {\n            return max;\n        }\n   \
    \     return -1;", "        long max = 0;\n        long freq = 0;\n        foreach\
    \ (long i in lst) {\n            freq++;\n            if (i > max) {\n       \
    \         max = i;\n            }\n            if (freq > i) {\n             \
    \   freq = i;\n            }\n        }\n        return max;", "        long max\
    \ = lst.Max();\n        long freq = lst.Count(x => x > max);\n        long result\
    \ = -1;\n        if (max > 0 && freq >= max) {\n            result = max;\n  \
    \      }\n        return result;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            freq++;\n            if (i\
    \ > max) {\n                max = i;\n            }\n            if (freq > i)\
    \ {\n                freq = i;\n            }\n        }\n        return max;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            if (i > 0) freq++;\n            if (freq > max) max = freq;\n\
    \        }\n        return max;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            freq += i;\n            if\
    \ (freq > max) {\n                max = freq;\n            }\n        }\n    \
    \    if (max > 0) {\n            long max2 = max;\n            foreach (long i\
    \ in lst) {\n                if (i > max2) {\n                    max2 = i;\n\
    \                }\n            }\n            return max2;\n        } else {\n\
    \            return -1;\n        }", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (long i in lst) {\n            if (i > max) {\n      \
    \          max = i;\n                freq = 1;\n            } else if (freq >\
    \ i) {\n                freq = i;\n            }\n        }\n        if (max >\
    \ 0 && freq >= max) {\n            return max;\n        } else {\n           \
    \ return -1;\n        }", "        long maxVal = lst.Max();\n        long maxCount\
    \ = 0;\n        long maxCountVal = 0;\n        foreach (long val in lst) {\n \
    \           if (val == maxVal) {\n                maxCount++;\n              \
    \  maxCountVal = val;\n            }\n        }\n        if (maxCount == 0) {\n\
    \            return -1;\n        }\n        if (maxCount > maxCountVal) {\n  \
    \          return -1;\n        }\n        return maxCountVal;", "        long\
    \ max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n      \
    \      freq++;\n            if (i > max) {\n                max = i;\n       \
    \     }\n            if (freq > i) {\n                freq = i;\n            }\n\
    \        }\n        return max;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            freq++;\n            if (i\
    \ > max) {\n                max = i;\n            }\n            if (freq > i)\
    \ {\n                freq = i;\n            }\n        }\n        return max;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            if (i > 0 && freq > 0) {\n                long temp = freq;\n\
    \                freq = 0;\n                if (i > max) {\n                 \
    \   max = i;\n                }\n                freq += temp;\n            }\n\
    \        }\n        return max;", "        long max = -1;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            freq++;\n            if (freq\
    \ > max) {\n                max = freq;\n            }\n            if (i == 0)\
    \ {\n                freq--;\n            }\n        }\n        return max;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \            }\n            if (freq > i) {\n                freq = i;\n     \
    \       }\n        }\n        return max;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            freq++;\n        \
    \    if (i > max) {\n                max = i;\n            }\n            if (freq\
    \ > i) {\n                freq = i;\n            }\n        }\n        return\
    \ max;", "        long max = -1;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            if (i > max) {\n                max = i;\n        \
    \        freq = 1;\n            } else if (freq > 0) {\n                freq++;\n\
    \            }\n        }\n        return max;", "        long max = 0;\n    \
    \    long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \ }\n        if (freq > 0) {\n            foreach (long i in lst) {\n        \
    \        if (i == max) {\n                    freq--;\n                }\n   \
    \         }\n        }\n        if (freq >= 0) {\n            return max;\n  \
    \      }\n        return -1;", "        long maxVal = lst.Max();\n        long\
    \ maxCount = 0;\n        foreach (long i in lst) {\n            if (i > maxVal)\
    \ {\n                break;\n            }\n            long count = lst.Count(x\
    \ => x == i);\n            if (count > maxCount) {\n                maxCount =\
    \ count;\n                maxVal = i;\n            }\n        }\n        return\
    \ maxVal;", "        long maxVal = lst[0];\n        long maxFreq = lst[0];\n \
    \       foreach (long val in lst) {\n            if (val > maxVal) {\n       \
    \         maxVal = val;\n            }\n            if (val == maxVal) {\n   \
    \             maxFreq++;\n            }\n        }\n        if (maxFreq >= maxVal)\
    \ {\n            return maxVal;\n        }\n        return -1;", "        long\
    \ maxVal = -1;\n        long maxFreq = -1;\n        foreach (long i in lst) {\n\
    \            long freq = lst.Count(x => x == i);\n            if (freq > maxFreq)\
    \ {\n                maxFreq = freq;\n                maxVal = i;\n          \
    \  }\n        }\n        return maxVal;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            if (i > 0) freq++;\n\
    \            if (freq > max) {\n                max = freq;\n            }\n \
    \       }\n        return max;", "        long maxVal = lst[0];\n        long\
    \ maxFreq = lst[0];\n        foreach (long val in lst) {\n            if (val\
    \ > maxVal) {\n                maxVal = val;\n                maxFreq = lst[val];\n\
    \            }\n        }\n        if (maxFreq > maxVal) {\n            return\
    \ -1;\n        }\n        return maxVal;", "        long max = -1;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            if (i > 0) freq++;\n\
    \            if (freq > max) max = freq;\n        }\n        return max;", " \
    \       long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \            }\n            if (freq > i) {\n                freq = i;\n     \
    \       }\n        }\n        return max;", "        long maxVal = lst.Max();\n\
    \        long maxCount = 0;\n        long currVal = maxVal;\n        long currCount\
    \ = 0;\n        foreach (long i in lst) {\n            if (currCount > maxCount)\
    \ {\n                maxCount = currCount;\n                maxVal = currVal;\n\
    \            }\n            if (i == currVal) {\n                currCount++;\n\
    \            } else {\n                currVal = i;\n                currCount\
    \ = 1;\n            }\n        }\n        if (maxCount > maxVal) {\n         \
    \   return -1;\n        }\n        return maxVal;", "        long max = 0;\n \
    \       long freq = 0;\n        foreach (long i in lst) {\n            if (i >\
    \ max) {\n                max = i;\n                freq = 1;\n            }\n\
    \            else if (freq > 0) {\n                freq++;\n            }\n  \
    \      }\n        return max;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq++;\n            if (i > max)\
    \ {\n                max = i;\n            }\n            if (freq > i) {\n  \
    \              freq = i;\n            }\n        }\n        return max;", "  \
    \      long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            if (i > max) {\n                max = i;\n                freq\
    \ = 1;\n            } else if (freq > i) {\n                freq = i;\n      \
    \      }\n        }\n        return max;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            freq++;\n        \
    \    if (i > max) {\n                max = i;\n            }\n            if (freq\
    \ > i) {\n                freq = i;\n            }\n        }\n        return\
    \ max;", "        long maxVal = lst.Max();\n        long maxCount = 0;\n     \
    \   long maxFreq = 0;\n        foreach (long val in lst) {\n            long count\
    \ = lst.Count(x => x == val);\n            if (count > maxCount) {\n         \
    \       maxCount = count;\n                maxFreq = val;\n            }\n   \
    \     }\n        if (maxCount > maxFreq) {\n            return maxFreq;\n    \
    \    }\n        return -1;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq++;\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        if (freq >= max)\
    \ {\n            return -1;\n        }\n        long max2 = max;\n        long\
    \ freq2 = freq;\n        long max3 = max;\n        long freq3 = 0;\n        foreach\
    \ (long i in lst) {\n            freq3++;\n            if (i > max3) {\n     \
    \           max3 = i;\n            }\n            if (freq3 >= max2) {\n     \
    \           return max3;\n            }\n        }\n        return -1;", "   \
    \     long max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n\
    \            freq++;\n            if (i > max) {\n                max = i;\n \
    \           }\n            if (freq > i) {\n                freq = i;\n      \
    \      }\n        }\n        return max;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            freq += i;\n     \
    \       if (freq > max) {\n                max = freq;\n            }\n      \
    \  }\n        if (max > 0) {\n            long max2 = max;\n            foreach\
    \ (long i in lst) {\n                if (i > max) {\n                    max2\
    \ = i;\n                }\n            }\n            return max2;\n        }\n\
    \        return -1;", "        long max = 0;\n        long freq = 0;\n       \
    \ foreach (long i in lst) {\n            freq++;\n            if (i > max) {\n\
    \                max = i;\n            }\n            if (freq > i) {\n      \
    \          freq = i;\n            }\n        }\n        return max;", "      \
    \  long maxVal = lst[0];\n        long maxCount = 1;\n        foreach (long val\
    \ in lst) {\n            if (val > maxVal) {\n                maxVal = val;\n\
    \                maxCount = 1;\n            } else if (val == maxVal) {\n    \
    \            maxCount++;\n            }\n        }\n        if (maxCount > maxVal)\
    \ {\n            return -1;\n        }\n        return maxVal;", "        long\
    \ max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n      \
    \      freq++;\n            if (i > max) {\n                max = i;\n       \
    \         freq--;\n            }\n        }\n        if (freq > 0) {\n       \
    \     return max;\n        }\n        return -1;", "        long max = 0;\n  \
    \      long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \     if (freq > i) {\n                freq = i;\n            }\n        }\n \
    \       return max;", "        long maxVal = lst.Max();\n        long maxCount\
    \ = 0;\n        foreach (long val in lst) {\n            if (val == maxVal) {\n\
    \                maxCount++;\n            }\n        }\n        if (maxCount >=\
    \ maxVal) {\n            return maxVal;\n        }\n        return -1;", "   \
    \     long max = -1;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (freq > max) {\n                max =\
    \ freq;\n            }\n        }\n        if (max > 0) {\n            foreach\
    \ (long i in lst) {\n                if (i == max) {\n                    return\
    \ max;\n                }\n            }\n        }\n        return -1;", "  \
    \      long maxVal = lst.Max();\n        long maxCount = 0;\n        long maxFreq\
    \ = maxVal;\n        foreach (long val in lst) {\n            if (val > maxVal)\
    \ {\n                maxFreq = maxVal;\n                maxCount = 1;\n      \
    \      }\n            else if (val == maxVal) {\n                maxCount++;\n\
    \            }\n            else if (val == maxFreq) {\n                maxCount++;\n\
    \            }\n            else {\n                maxCount = 1;\n          \
    \  }\n            maxVal = val;\n        }\n        return maxVal;", "       \
    \ long max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n \
    \           freq++;\n            if (freq > max) {\n                max = freq;\n\
    \            }\n            if (i == 0) {\n                freq--;\n         \
    \   }\n        }\n        return max;", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (long i in lst) {\n            freq++;\n            if\
    \ (i > max) {\n                max = i;\n            }\n            if (freq >\
    \ i) {\n                freq = i;\n            }\n        }\n        return max;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq += i;\n            if (freq > max) {\n                max\
    \ = freq;\n            }\n        }\n        return max;", "        long maxVal\
    \ = lst[0];\n        long maxFreq = lst[0];\n        foreach (long val in lst)\
    \ {\n            if (val > maxVal) {\n                maxVal = val;\n        \
    \        maxFreq = val;\n            }\n            else if (val == maxVal) {\n\
    \                maxFreq++;\n            }\n        }\n        return maxFreq\
    \ > lst.Count ? -1 : maxVal;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq++;\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        if (freq >= max)\
    \ {\n            return -1;\n        }\n        return max;", "        long max\
    \ = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n          \
    \  if (i > 0) freq++;\n            if (freq > max) max = freq;\n        }\n  \
    \      return max > 0 ? max : -1;", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (long i in lst) {\n            freq++;\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        if\
    \ (freq > 0) {\n            foreach (long i in lst) {\n                if (i ==\
    \ max) {\n                    freq--;\n                }\n            }\n    \
    \    }\n        return freq > 0 ? max : -1;", "        long max = 0;\n       \
    \ long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n   \
    \         if (freq > max) {\n                max = freq;\n            }\n    \
    \        if (freq == i) {\n                freq++;\n            }\n        }\n\
    \        return max;", "        long max = 0;\n        long freq = 0;\n      \
    \  foreach (long i in lst) {\n            freq++;\n            if (i > max) {\n\
    \                max = i;\n            }\n            if (freq > i) {\n      \
    \          freq = i;\n            }\n        }\n        return max;", "      \
    \  long maxVal = lst.Max();\n        long maxCount = 0;\n        foreach (long\
    \ i in lst) {\n            if (i > maxVal) {\n                break;\n       \
    \     }\n            long count = lst.Count(x => x == i);\n            if (count\
    \ > maxCount) {\n                maxCount = count;\n                maxVal = i;\n\
    \            }\n        }\n        return maxVal;", "        long max = 0;\n \
    \       long freq = 0;\n        foreach (long i in lst) {\n            freq +=\
    \ i;\n            if (freq > max) {\n                max = freq;\n           \
    \ }\n        }\n        return max > 0 ? max : -1;", "        long maxVal = lst.Max();\n\
    \        long maxCount = 0;\n        foreach (long i in lst) {\n            if\
    \ (i > maxVal) {\n                break;\n            }\n            if (lst.Count(x\
    \ => x == i) > maxCount) {\n                maxCount = lst.Count(x => x == i);\n\
    \                maxVal = i;\n            }\n        }\n        return maxVal;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \            }\n        }\n        if (freq > 0) {\n            foreach (long\
    \ i in lst) {\n                if (i == max) {\n                    freq--;\n\
    \                }\n            }\n        }\n        return (freq > 0) ? max\
    \ : -1;", "        long max = 0;\n        long freq = 0;\n        foreach (var\
    \ item in lst) {\n            freq++;\n            if (item > max) {\n       \
    \         max = item;\n            }\n        }\n        if (freq >= max) {\n\
    \            return max;\n        }\n        long max2 = -1;\n        foreach\
    \ (var item in lst) {\n            if (item == max) {\n                continue;\n\
    \            }\n            if (item > max2) {\n                max2 = item;\n\
    \            }\n        }\n        return max2;", "        long max = 0;\n   \
    \     long freq = 0;\n        foreach (long i in lst) {\n            if (i > 0)\
    \ freq++;\n            if (freq > max) max = freq;\n        }\n        if (max\
    \ > 0) return max;\n        return -1;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            freq++;\n        \
    \    if (i > max) {\n                max = i;\n            }\n            if (freq\
    \ > i) {\n                freq = i;\n            }\n        }\n        return\
    \ max;", "        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            freq += i;\n            if (freq > max) {\n       \
    \         max = freq;\n            }\n        }\n        return max > 0 ? max\
    \ : -1;", "        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            freq++;\n            if (i > max) {\n             \
    \   max = i;\n            }\n            if (freq > i) {\n                freq\
    \ = i;\n            }\n        }\n        return max;", "        long max = 0;\n\
    \        long freq = 0;\n        foreach (long i in lst) {\n            if (i\
    \ > max) {\n                max = i;\n                freq = 1;\n            }\
    \ else if (freq > 0) {\n                freq++;\n            }\n        }\n  \
    \      if (max > 0 && freq >= max) {\n            return max;\n        }\n   \
    \     return -1;", "        long max = 0;\n        long freq = 0;\n        foreach\
    \ (long i in lst) {\n            freq++;\n            if (i > max) {\n       \
    \         max = i;\n            }\n            if (freq > i) {\n             \
    \   freq = i;\n            }\n        }\n        return max;", "        long maxVal\
    \ = lst.Max();\n        long freq = lst.Count(x => x == maxVal);\n        long\
    \ maxVal2 = lst.Where(x => x > 0).Max();\n        long freq2 = lst.Count(x =>\
    \ x > 0);\n        if (freq == freq2) {\n            return maxVal;\n        }\n\
    \        return -1;", "        long max = 0;\n        long freq = 0;\n       \
    \ foreach (long i in lst) {\n            freq++;\n            if (i > max) {\n\
    \                max = i;\n            }\n            if (freq > i) {\n      \
    \          freq = i;\n            }\n        }\n        return max;", "      \
    \  long max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n\
    \            if (i > 0 && freq > 0) {\n                max = Math.Max(max, i);\n\
    \                freq--;\n            }\n            else if (i > 0 && freq ==\
    \ 0) {\n                max = Math.Max(max, i);\n            }\n        }\n  \
    \      return max;", "        long max = 0;\n        long freq = 0;\n        foreach\
    \ (long i in lst) {\n            if (i > 0 && freq >= i) {\n                max\
    \ = i;\n                freq = i;\n            }\n        }\n        return max;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \                freq--;\n            }\n        }\n        if (freq >= 0) {\n\
    \            return max;\n        }\n        return -1;", "        long max =\
    \ 0;\n        long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \ }\n        if (freq >= max) {\n            return max;\n        }\n        foreach\
    \ (long i in lst) {\n            freq--;\n            if (freq >= i) {\n     \
    \           return i;\n            }\n        }\n        return -1;", "      \
    \  long max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n\
    \            freq += i;\n            if (freq > max) {\n                max =\
    \ freq;\n            }\n        }\n        return max;", "        long max = 0;\n\
    \        long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \     if (freq > i) {\n                freq = i;\n            }\n        }\n \
    \       return max;", "        long max = 0;\n        long freq = 0;\n       \
    \ foreach (long i in lst) {\n            freq++;\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        if (freq > 0) {\n\
    \            long sum = 0;\n            foreach (long i in lst) {\n          \
    \      sum += i;\n            }\n            long temp = sum - freq;\n       \
    \     if (temp > 0) {\n                max = temp;\n            }\n        }\n\
    \        return max;", "        long max = 0;\n        long freq = 0;\n      \
    \  foreach (long i in lst) {\n            if (i > 0 && freq >= i) {\n        \
    \        freq--;\n                max = i;\n            }\n            freq++;\n\
    \        }\n        return max;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            freq++;\n            if (i\
    \ > max) {\n                max = i;\n            }\n        }\n        if (freq\
    \ > 0) {\n            foreach (long i in lst) {\n                if (i == max)\
    \ {\n                    freq--;\n                }\n            }\n        }\n\
    \        return max;", "        long maxVal = lst[0];\n        long maxFreq =\
    \ lst[0];\n        foreach (long val in lst) {\n            if (val > maxVal)\
    \ {\n                maxVal = val;\n                maxFreq = lst[val];\n    \
    \        }\n        }\n        if (maxFreq >= maxVal) {\n            return maxVal;\n\
    \        }\n        return -1;", "        long max = -1;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            if (i > 0 && freq >= i) {\n\
    \                freq--;\n                max = i;\n            }\n          \
    \  freq++;\n        }\n        return max;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            freq++;\n        \
    \    if (i > max) {\n                max = i;\n            }\n        }\n    \
    \    if (freq > 0) {\n            foreach (long i in lst) {\n                if\
    \ (i > max) {\n                    max = i;\n                }\n            }\n\
    \        }\n        return max;", "        long maxVal = lst[0];\n        long\
    \ maxCount = 1;\n        foreach (long i in lst) {\n            if (i > maxVal)\
    \ {\n                maxVal = i;\n                maxCount = 1;\n            }\
    \ else if (maxCount < i) {\n                maxCount = i;\n            }\n   \
    \     }\n        return maxVal;", "        long max = -1;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            freq++;\n            if (freq\
    \ > max) {\n                max = freq;\n            }\n        }\n        if\
    \ (max > 0) {\n            foreach (long i in lst) {\n                if (freq\
    \ >= i) {\n                    freq--;\n                }\n            }\n   \
    \     }\n        return max;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq += i;\n            if (freq\
    \ > max) {\n                max = freq;\n            }\n        }\n        return\
    \ max > 0 ? max : -1;", "        long max = 0;\n        long freq = 0;\n     \
    \   foreach (long i in lst) {\n            freq++;\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        if (freq > 0) {\n\
    \            long max2 = freq;\n            foreach (long i in lst) {\n      \
    \          if (freq > max2) {\n                    max2 = freq;\n            \
    \    }\n                freq--;\n            }\n            return max;\n    \
    \    }\n        return -1;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq++;\n            if (i > max)\
    \ {\n                max = i;\n            }\n            if (freq > i) {\n  \
    \              freq = i;\n            }\n        }\n        return max;", "  \
    \      long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \                freq = freq - 1;\n            }\n        }\n        if (freq\
    \ > 0) {\n            max = max + 1;\n        }\n        return max;", "     \
    \   long max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n\
    \            freq++;\n            if (i > max) {\n                max = i;\n \
    \           }\n            if (freq > i) {\n                freq = i;\n      \
    \      }\n        }\n        return max;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            freq++;\n        \
    \    if (i > max) {\n                max = i;\n                freq = freq - 1;\n\
    \            }\n        }\n        if (freq >= 0) {\n            return max;\n\
    \        }\n        return -1;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq += i;\n            if (freq\
    \ > max) {\n                max = freq;\n            }\n        }\n        return\
    \ max > 0 ? max : -1;", "        long max = -1;\n        long freq = 0;\n    \
    \    foreach (long i in lst) {\n            freq++;\n            if (freq > max)\
    \ {\n                max = freq;\n            }\n            if (freq == i) {\n\
    \                freq++;\n            }\n        }\n        return max;", "  \
    \      long maxVal = -1;\n        long maxCount = 0;\n        foreach (long i\
    \ in lst) {\n            if (maxCount == 0) {\n                maxCount = i;\n\
    \                maxVal = i;\n            }\n            else if (maxCount > i)\
    \ {\n                maxCount = i;\n                maxVal = i;\n            }\n\
    \        }\n        return maxVal;", "        long maxVal = lst.Max();\n     \
    \   long freq = lst.Count(x => x > 0);\n        long maxVal2 = lst.Max(x => x);\n\
    \        long freq2 = lst.Count(x => x > 0);\n        long maxVal3 = lst.Max(x\
    \ => x);\n        long freq3 = lst.Count(x => x > 0);\n        long maxVal4 =\
    \ lst.Max(x => x);\n        long freq4 = lst.Count(x => x > 0);\n        long\
    \ maxVal5 = lst.Max(x => x);\n        long freq5 = lst.Count(x => x > 0);\n  \
    \      long maxVal6 = lst.Max(x => x);\n        long freq6 = lst.Count(x => x\
    \ > 0);\n        long maxVal7 = lst.Max(x => x);\n        long freq7 = lst.Count(x\
    \ => x > 0);\n        long maxVal8 = lst.Max(x => x);\n        long freq8 = lst.Count(x\
    \ => x > 0);\n        long maxVal9 = lst.Max(x => x);\n        long freq9 = lst.Count(x\
    \ => x > 0);\n        long maxVal10 = lst.Max(x => x);\n        long freq10 =\
    \ lst.Count(x => x > 0);\n        long maxVal11 = lst.Max(x => x);\n        long\
    \ freq11 = lst.Count(x => x > 0);\n        long maxVal12 = lst.Max(x => x);\n\
    \        long freq12 = lst.Count(x => x > 0);\n        long maxVal13 = lst.Max(x\
    \ => x);\n        long freq13 = lst.Count(x => x > 0);\n        long maxVal14\
    \ = lst.Max(x => x);\n        long freq14 = lst.Count(x => x > 0);\n        long\
    \ maxVal15 = lst.Max(x => x);\n        long freq15 = lst.Count(x => x > 0);\n\
    \        long maxVal16 = lst.Max(x => x);\n        long freq16 = lst.Count(x =>\
    \ x > 0);\n        long maxVal17 = lst.Max(x => x);\n        long freq17 = lst.Count(x\
    \ => x > 0);\n        long maxVal18 = lst.Max(x => x);\n        long freq18 =\
    \ lst.Count(x => x > 0);\n        long maxVal19 = lst.Max(x => x);\n        long\
    \ freq19 = lst.Count(x => x > 0);\n        long maxVal20 = lst.Max(x => x);\n\
    \        long freq20 = lst.Count(x => x > 0);", "        long max = 0;\n     \
    \   long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n \
    \           if (i > max) {\n                max = i;\n            }\n        }\n\
    \        if (freq > 0) {\n            foreach (long i in lst) {\n            \
    \    if (i == max) {\n                    freq--;\n                }\n       \
    \     }\n        }\n        if (freq >= 0) {\n            return max;\n      \
    \  }\n        return -1;", "        long max = 0;\n        long freq = 0;\n  \
    \      foreach (long i in lst) {\n            if (i > max) {\n               \
    \ max = i;\n                freq = 1;\n            }\n            else if (freq\
    \ > i) {\n                freq = i;\n            }\n        }\n        return\
    \ max;", "        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            freq += i;\n            if (freq > max) {\n       \
    \         max = freq;\n            }\n        }\n        return max > 0 ? max\
    \ : -1;", "        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            freq++;\n            if (i > max) {\n             \
    \   max = i;\n            }\n        }\n        if (freq > 0) {\n            long\
    \ maxFreq = freq;\n            foreach (long i in lst) {\n                if (i\
    \ == max) {\n                    maxFreq--;\n                }\n            }\n\
    \            if (maxFreq >= freq) {\n                return max;\n           \
    \ }\n        }\n        return -1;", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (long i in lst) {\n            freq++;\n            if\
    \ (i > max) {\n                max = i;\n            }\n            if (freq >\
    \ i) {\n                freq = i;\n            }\n        }\n        return max;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (freq > max) {\n                max =\
    \ freq;\n            }\n        }\n        if (freq > max) {\n            return\
    \ -1;\n        }\n        return max;", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (long i in lst) {\n            freq++;\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        if\
    \ (freq >= max) {\n            return -1;\n        }\n        foreach (long i\
    \ in lst) {\n            if (i == max) {\n                continue;\n        \
    \    }\n            if (freq > i) {\n                freq = i;\n            }\n\
    \        }\n        return max;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            if (freq < i) freq = i;\n\
    \            if (max < i) max = i;\n        }\n        return (freq >= max) ?\
    \ -1 : max;", "        long max = 0;\n        long freq = 0;\n        foreach\
    \ (long i in lst) {\n            freq++;\n            if (i > max) {\n       \
    \         max = i;\n            }\n        }\n        if (freq > 0) {\n      \
    \      long maxFreq = freq;\n            foreach (long i in lst) {\n         \
    \       if (i == max) {\n                    maxFreq--;\n                }\n \
    \           }\n            if (maxFreq >= 0) {\n                return max;\n\
    \            }\n        }\n        return -1;", "        long max = 0;\n     \
    \   long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n \
    \           if (freq > max) {\n                max = freq;\n            }\n  \
    \          if (freq == i) {\n                freq++;\n            }\n        }\n\
    \        return max;", "        long max = 0;\n        long freq = 0;\n      \
    \  foreach (long i in lst) {\n            freq++;\n            if (i > max) {\n\
    \                max = i;\n            }\n            if (freq > i) {\n      \
    \          freq = i;\n            }\n        }\n        return max;", "      \
    \  long max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \     freq++;\n        }\n        if (freq >= max) {\n            return max;\n\
    \        }\n        long max2 = -1;\n        long freq2 = 0;\n        foreach\
    \ (long i in lst) {\n            if (i == max) {\n                freq2++;\n \
    \           }\n            if (freq2 >= max) {\n                max2 = i;\n  \
    \          }\n        }\n        return max2;", "        long max = 0;\n     \
    \   long freq = 0;\n        foreach (var item in lst) {\n            freq++;\n\
    \            if (item > max) {\n                max = item;\n            }\n \
    \           if (freq > item) {\n                freq = item;\n            }\n\
    \        }\n        return max;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            if (i > 0) freq++;\n    \
    \        if (freq > max) max = freq;\n        }\n        if (max > 0) return max;\n\
    \        return -1;", "        long max = 0;\n        long freq = 0;\n       \
    \ foreach (long i in lst) {\n            freq++;\n            if (i > max) {\n\
    \                max = i;\n            }\n            if (freq > i) {\n      \
    \          freq = i;\n            }\n        }\n        return max;", "      \
    \  long max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n\
    \            freq += i;\n            if (freq > max) {\n                max =\
    \ freq;\n            }\n        }\n        if (max > 0) {\n            long maxFreq\
    \ = max;\n            foreach (long i in lst) {\n                if (i > maxFreq)\
    \ {\n                    maxFreq = i;\n                }\n            }\n    \
    \        return maxFreq;\n        }\n        return -1;", "        long max =\
    \ 0;\n        long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \     if (freq > i) {\n                freq = i;\n            }\n        }\n \
    \       return max;", "        long max = 0;\n        long freq = 0;\n       \
    \ foreach (long i in lst) {\n            freq++;\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        if (freq > 0) {\n\
    \            foreach (long i in lst) {\n                if (i == max) {\n    \
    \                freq--;\n                }\n            }\n        }\n      \
    \  if (freq >= 0) {\n            return max;\n        }\n        return -1;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \            }\n            if (freq > i) {\n                freq = i;\n     \
    \       }\n        }\n        return max;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            freq++;\n        \
    \    if (i > max) {\n                max = i;\n            }\n            if (freq\
    \ > i) {\n                freq = i;\n            }\n        }\n        return\
    \ max;", "        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            if (i > max) {\n                max = i;\n        \
    \        freq = 1;\n            } else if (freq > i) {\n                freq =\
    \ i;\n            }\n        }\n        return max;", "        long maxVal = lst[0];\n\
    \        long maxCount = 0;\n        foreach (long i in lst) {\n            if\
    \ (i > maxVal) {\n                maxVal = i;\n                maxCount = 1;\n\
    \            } else if (maxCount < i) {\n                maxCount = i;\n     \
    \       }\n        }\n        return maxVal;", "        long max = 0;\n      \
    \  long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n  \
    \          if (freq > max) {\n                max = freq;\n            }\n   \
    \     }\n        return max > 0 ? max : -1;", "        long max = 0;\n       \
    \ long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n   \
    \         if (i > max) {\n                max = i;\n            }\n          \
    \  if (freq > i) {\n                freq = i;\n            }\n        }\n    \
    \    return max;", "        long max = 0;\n        long freq = 0;\n        foreach\
    \ (long i in lst) {\n            if (i > 0) freq++;\n            if (freq > max)\
    \ max = freq;\n        }\n        if (max > 0) return max;\n        return -1;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \            }\n            if (freq > i) {\n                freq = i;\n     \
    \       }\n        }\n        return max;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            if (i > 0 && freq\
    \ >= i) {\n                max = i;\n                freq = i;\n            }\n\
    \        }\n        return max;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            freq++;\n            if (freq\
    \ > max) {\n                max = freq;\n            }\n            if (i == 0)\
    \ {\n                freq--;\n            }\n        }\n        return max;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \            }\n        }\n        if (freq > 0) {\n            long sum = 0;\n\
    \            foreach (long i in lst) {\n                sum += i;\n          \
    \  }\n            long mod = sum % max;\n            if (mod > 0) {\n        \
    \        return -1;\n            }\n            long ans = sum / max;\n      \
    \      if (ans > 0) {\n                return ans;\n            }\n        }\n\
    \        return -1;", "        long max = -1;\n        long freq = 0;\n      \
    \  foreach (long i in lst) {\n            if (i > 0 && freq > 0) {\n         \
    \       if (freq > i) {\n                    freq = i;\n                    max\
    \ = i;\n                }\n            }\n        }\n        return max;", " \
    \       long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \            }\n            if (freq > i) {\n                freq = i;\n     \
    \       }\n        }\n        return max;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            if (i > 0) freq++;\n\
    \            if (freq > max) max = freq;\n        }\n        if (max > 0) return\
    \ max;\n        return -1;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq += i;\n            if (freq\
    \ > max) {\n                max = freq;\n            }\n        }\n        return\
    \ max;", "        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            if (freq > 0) {\n                if (freq >= i) {\n\
    \                    max = i;\n                    freq--;\n                }\n\
    \            }\n            else {\n                max = i;\n               \
    \ freq++;\n            }\n        }\n        return max;", "        long max =\
    \ 0;\n        long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (freq > max) {\n                max = freq;\n            }\n \
    \           if (i == 0) {\n                freq--;\n            }\n        }\n\
    \        return max;", "        long maxVal = lst.Max();\n        long maxFreq\
    \ = lst.Count(x => x > maxVal);\n        return maxFreq > maxVal ? maxVal : -1;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (freq > max) {\n                max =\
    \ freq;\n            }\n            if (freq == i) {\n                freq++;\n\
    \            }\n        }\n        return max;", "        long max = 0;\n    \
    \    long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \ }\n        if (freq >= max) {\n            return max;\n        }\n        long\
    \ max2 = 0;\n        long freq2 = 0;\n        foreach (long i in lst) {\n    \
    \        freq2++;\n            if (freq2 >= freq) {\n                max2 = i;\n\
    \            }\n        }\n        return max2;", "        long max = 0;\n   \
    \     long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \     if (freq > i) {\n                freq = i;\n            }\n        }\n \
    \       return max;", "        long max = 0;\n        long freq = 0;\n       \
    \ foreach (long i in lst) {\n            freq += i;\n            if (freq > max)\
    \ {\n                max = freq;\n            }\n        }\n        if (max >\
    \ 0) {\n            foreach (long i in lst) {\n                if (i > max) {\n\
    \                    return -1;\n                }\n            }\n          \
    \  return max;\n        }\n        return -1;", "        long max = 0;\n     \
    \   long freq = 0;\n        foreach (var item in lst) {\n            freq++;\n\
    \            if (item > max) {\n                max = item;\n            }\n \
    \       }\n        if (freq >= max) {\n            return -1;\n        }\n   \
    \     long maxFreq = freq;\n        foreach (var item in lst) {\n            if\
    \ (item == max) {\n                maxFreq--;\n            }\n            if (maxFreq\
    \ <= 0) {\n                return max;\n            }\n        }\n        return\
    \ -1;", "        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            freq++;\n            if (i > max) {\n             \
    \   max = i;\n            }\n        }\n        if (freq >= max) {\n         \
    \   return max;\n        }\n        long max2 = 0;\n        long freq2 = 0;\n\
    \        foreach (long i in lst) {\n            freq2++;\n            if (freq2\
    \ >= max) {\n                max2 = i;\n            }\n        }\n        if (freq2\
    \ >= max2) {\n            return max2;\n        }\n        return -1;", "    \
    \    long max = -1;\n        long freq = 0;\n        foreach (long i in lst) {\n\
    \            if (freq > 0) {\n                if (freq == i) {\n             \
    \       freq++;\n                }\n                else {\n                 \
    \   freq = i;\n                }\n            }\n            else {\n        \
    \        freq = i;\n            }\n            if (freq > max) {\n           \
    \     max = freq;\n            }\n        }\n        return max;", "        long\
    \ max = 0;\n        long freq = 0;\n        foreach (var item in lst) {\n    \
    \        freq++;\n            if (item > max) {\n                max = item;\n\
    \            }\n        }\n        if (freq > 0) {\n            foreach (var item\
    \ in lst) {\n                if (item == max) {\n                    freq--;\n\
    \                }\n            }\n        }\n        if (freq > 0) {\n      \
    \      return max;\n        }\n        return -1;", "        long max = 0;\n \
    \       long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (freq > max) {\n                max = freq;\n            }\n \
    \           if (i == 0) {\n                freq--;\n            }\n        }\n\
    \        return max;", "        long max = 0;\n        long freq = 0;\n      \
    \  foreach (long i in lst) {\n            if (i > 0 && freq > 0) {\n         \
    \       max = Math.Max(max, i);\n                freq--;\n            }\n    \
    \    }\n        return max > 0 ? max : -1;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            freq++;\n        \
    \    if (i > max) {\n                max = i;\n            }\n        }\n    \
    \    if (freq > 0) {\n            foreach (long i in lst) {\n                if\
    \ (i == max) {\n                    freq--;\n                }\n            }\n\
    \        }\n        return freq > 0 ? max : -1;", "        long max = 0;\n   \
    \     long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \     if (freq > i) {\n                freq = i;\n            }\n        }\n \
    \       return max;", "        long max = 0;\n        long freq = 0;\n       \
    \ foreach (long i in lst) {\n            freq++;\n            if (i > max) {\n\
    \                max = i;\n            }\n            if (freq > i) {\n      \
    \          freq = i;\n            }\n        }\n        return max;", "      \
    \  long max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n\
    \            freq += i;\n            if (freq > max) {\n                max =\
    \ freq;\n            }\n        }\n        return max > 0 ? max : -1;", "    \
    \    long max = -1;\n        long freq = 0;\n        foreach (long i in lst) {\n\
    \            freq++;\n            if (freq > max) {\n                max = freq;\n\
    \            }\n        }\n        if (max > 0) {\n            foreach (long i\
    \ in lst) {\n                if (freq >= i) {\n                    freq--;\n \
    \               }\n            }\n        }\n        return max;", "        long\
    \ max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n      \
    \      freq++;\n            if (i > max) {\n                max = i;\n       \
    \     }\n            if (freq > i) {\n                freq = i;\n            }\n\
    \        }\n        return max;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            freq++;\n            if (i\
    \ > max) {\n                max = i;\n            }\n            if (freq > i)\
    \ {\n                freq = i;\n            }\n        }\n        return max;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \            }\n            if (freq > i) {\n                freq = i;\n     \
    \       }\n        }\n        return max;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            if (freq > 0) {\n\
    \                if (freq >= i) {\n                    max = i;\n            \
    \        freq--;\n                }\n            }\n            else {\n     \
    \           max = i;\n                freq++;\n            }\n        }\n    \
    \    return max;", "        long max = 0;\n        long freq = 0;\n        foreach\
    \ (long i in lst) {\n            freq++;\n            if (i > max) {\n       \
    \         max = i;\n            }\n        }\n        if (freq > 0) {\n      \
    \      foreach (long i in lst) {\n                if (i == max) {\n          \
    \          freq--;\n                }\n            }\n        }\n        return\
    \ freq > 0 ? max : -1;", "        long max = 0;\n        long freq = 0;\n    \
    \    foreach (long i in lst) {\n            freq += i;\n            if (freq >\
    \ max) {\n                max = freq;\n            }\n        }\n        return\
    \ max > 0 ? max : -1;", "        long max = 0;\n        long freq = 0;\n     \
    \   foreach (long i in lst) {\n            if (i > 0) freq++;\n            if\
    \ (freq > max) max = freq;\n        }\n        if (max > 0) return max;\n    \
    \    return -1;", "        long max = 0;\n        long freq = 0;\n        foreach\
    \ (long i in lst) {\n            freq++;\n            if (i > max) {\n       \
    \         max = i;\n            }\n            if (freq > i) {\n             \
    \   freq = i;\n            }\n        }\n        return max;", "        long max\
    \ = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n          \
    \  freq++;\n            if (i > max) {\n                max = i;\n           \
    \ }\n        }\n        if (freq > 0) {\n            foreach (long i in lst) {\n\
    \                if (i == max) {\n                    freq--;\n              \
    \  }\n            }\n        }\n        if (freq >= 0) {\n            return max;\n\
    \        }\n        return -1;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq++;\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        if (freq > 0)\
    \ {\n            long maxFreq = freq;\n            foreach (long i in lst) {\n\
    \                if (i > max) {\n                    maxFreq--;\n            \
    \    }\n                if (maxFreq >= i) {\n                    max = i;\n  \
    \              }\n            }\n        }\n        return max;", "        long\
    \ max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n      \
    \      if (i > 0 && freq > 0) {\n                if (freq == i) {\n          \
    \          freq++;\n                } else {\n                    freq = 0;\n\
    \                }\n                if (freq > max) {\n                    max\
    \ = i;\n                }\n            }\n        }\n        return max;", " \
    \       long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (freq > max) {\n                max =\
    \ freq;\n            }\n            if (i == 0) {\n                freq--;\n \
    \           }\n        }\n        return max;", "        long max = 0;\n     \
    \   long freq = 0;\n        foreach (long i in lst) {\n            freq += i;\n\
    \            if (freq > max) {\n                max = freq;\n            }\n \
    \       }\n        if (max > 0) {\n            return max;\n        }\n      \
    \  return -1;", "        long max = 0;\n        long freq = 0;\n        foreach\
    \ (long i in lst) {\n            freq++;\n            if (freq > max) {\n    \
    \            max = freq;\n            }\n            if (freq == i) {\n      \
    \          freq++;\n            }\n        }\n        return max;", "        long\
    \ max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n      \
    \      freq++;\n            if (freq > max) {\n                max = freq;\n \
    \           }\n        }\n        if (freq > max) {\n            return -1;\n\
    \        }\n        return max;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            freq++;\n            if (i\
    \ > max) {\n                max = i;\n            }\n            if (freq > i)\
    \ {\n                freq = i;\n            }\n        }\n        return max;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (freq > max) {\n                max =\
    \ freq;\n            }\n        }\n        if (freq > max) {\n            return\
    \ -1;\n        }\n        long max2 = 0;\n        foreach (long i in lst) {\n\
    \            if (i == max) {\n                max2 = i;\n            }\n     \
    \   }\n        return max2;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq++;\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        if (freq > 0)\
    \ {\n            long m = freq;\n            foreach (long i in lst) {\n     \
    \           if (i == m) {\n                    freq--;\n                }\n  \
    \          }\n            if (freq > 0) {\n                max = freq;\n     \
    \       }\n        }\n        return max;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            freq++;\n        \
    \    if (freq > max) {\n                max = freq;\n            }\n         \
    \   if (freq == i) {\n                freq++;\n            }\n        }\n    \
    \    return max;", "        long maxVal = lst.Max();\n        long maxCount =\
    \ 0;\n        foreach (long val in lst) {\n            if (val > maxVal) {\n \
    \               maxVal = val;\n                maxCount = 1;\n            }\n\
    \            else if (val == maxVal) {\n                maxCount++;\n        \
    \    }\n        }\n        if (maxCount > lst.Count) {\n            return -1;\n\
    \        }\n        return maxVal;", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (long i in lst) {\n            freq++;\n            if\
    \ (i > max) {\n                max = i;\n            }\n            if (freq >\
    \ i) {\n                freq = i;\n            }\n        }\n        return max;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (freq > max) {\n                max =\
    \ freq;\n            }\n            if (i == 0) {\n                freq--;\n \
    \           }\n        }\n        return max;", "        long max = 0;\n     \
    \   long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n \
    \           if (freq > max) {\n                max = freq;\n            }\n  \
    \          if (i == 0) {\n                freq--;\n            }\n        }\n\
    \        return max;", "        long max = 0;\n        long freq = 0;\n      \
    \  foreach (long i in lst) {\n            freq++;\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        if (freq > 0) {\n\
    \            foreach (long i in lst) {\n                if (i == max) {\n    \
    \                freq--;\n                }\n            }\n        }\n      \
    \  if (freq > 0) {\n            return max;\n        }\n        return -1;", " \
    \       long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (freq > max) {\n                max =\
    \ freq;\n            }\n            if (i == 0) {\n                freq--;\n \
    \           }\n        }\n        if (max < 0) {\n            return -1;\n   \
    \     }\n        return max;", "        long maxVal = lst.Max();\n        long\
    \ maxCount = 0;\n        long maxCountVal = 0;\n        foreach (long val in lst)\
    \ {\n            if (val == maxVal) {\n                maxCount++;\n         \
    \       if (val == maxCountVal) {\n                    maxCount = 1;\n       \
    \         }\n            }\n            else {\n                if (maxCount >\
    \ maxCountVal) {\n                    maxCountVal = maxCount;\n              \
    \      maxCount = 1;\n                }\n            }\n        }\n        if\
    \ (maxCount == 0) {\n            return -1;\n        }\n        return maxVal;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \                freq = freq - 1;\n            }\n        }\n        if (freq\
    \ > 0) {\n            return max;\n        }\n        return -1;", "        long\
    \ max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n      \
    \      freq++;\n            if (i > max) {\n                max = i;\n       \
    \     }\n            if (freq > i) {\n                freq = i;\n            }\n\
    \        }\n        return max;", "        long maxVal = lst.Max();\n        long\
    \ maxCount = 0;\n        long maxFreq = 0;\n        foreach (long i in lst) {\n\
    \            if (i > maxVal) {\n                return -1;\n            }\n  \
    \          if (lst.Count(x => x == i) > maxCount) {\n                maxCount\
    \ = lst.Count(x => x == i);\n                maxFreq = i;\n            }\n   \
    \     }\n        return maxFreq;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            freq++;\n            if (i\
    \ > max) {\n                max = i;\n            }\n            if (freq > i)\
    \ {\n                freq = i;\n            }\n        }\n        return max;",
  "        long maxVal = lst[0];\n        long maxFreq = lst[0];\n        foreach\
    \ (long val in lst) {\n            if (val > maxVal) {\n                maxVal\
    \ = val;\n                maxFreq = val;\n            }\n            else if (val\
    \ == maxVal) {\n                maxFreq++;\n            }\n        }\n       \
    \ return maxFreq > maxVal ? maxVal : -1;", "        long maxVal = -1;\n      \
    \  long maxFreq = -1;\n        foreach (long i in lst) {\n            long freq\
    \ = lst.Count(x => x == i);\n            if (freq >= maxFreq) {\n            \
    \    maxFreq = freq;\n                maxVal = i;\n            }\n        }\n\
    \        return maxVal;", "        long max = 0;\n        long freq = 0;\n   \
    \     foreach (long i in lst) {\n            if (i > 0 && freq > 0) {\n      \
    \          if (freq > i) {\n                    max = i;\n                   \
    \ freq = freq - i;\n                }\n            }\n            else {\n   \
    \             max = i;\n                freq = i;\n            }\n        }\n\
    \        return max;"]
stop_tokens:
- "\n    }\n"

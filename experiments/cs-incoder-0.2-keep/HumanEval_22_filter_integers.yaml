name: HumanEval_22_filter_integers
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Filter given list of any python values only for integers\n \
  \   // >>> filter_integers(['a', 3.14, 5])\n    // [5]\n    // >>> filter_integers([1,\
  \ 2, 3, 'abc', {}, []])\n    // [1, 2, 3]\n    public static List<long> FilterIntegers(List<object>\
  \ values) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new\
  \ List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new\
  \ List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new\
  \ List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new\
  \ List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new\
  \ long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
completions: ["        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        var result = new\
    \ List<long>();\n        foreach (var value in values) {\n            if (value\
    \ is int) {\n                result.Add((long)value);\n            }\n       \
    \ }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        var result = new\
    \ List<long>();\n        foreach (var value in values) {\n            if (value\
    \ is int) {\n                result.Add((long)value);\n            }\n       \
    \ }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        var result = new List<long>();\n        foreach (var value\
    \ in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            long value;\n            if (value is int) {\n\
    \                value = (long)value;\n            }\n            if (value is\
    \ long) {\n                value = (long)value;\n            }\n            if\
    \ (value is double) {\n                value = (long)value;\n            }\n \
    \           if (value is decimal) {\n                value = (long)value;\n  \
    \          }\n            if (value is string) {\n                value = Convert.ToInt64(value);\n\
    \            }\n            if (value is bool) {\n                value = Convert.ToInt64(value);\n\
    \            }\n            if (value is Dictionary<string, object>) {\n     \
    \           value = Convert.ToInt64(value);\n            }\n            if (value\
    \ is List<object>) {\n                value = FilterIntegers((List<object>)value);\n\
    \            }\n            result.Add(value);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            long value;\n       \
    \     if (value is int) {\n                value = (long)value;\n            }\n\
    \            else if (value is long) {\n                value = (long)value;\n\
    \            }\n            else if (value is double) {\n                value\
    \ = (long)value;\n            }\n            else if (value is decimal) {\n  \
    \              value = (long)value;\n            }\n            else if (value\
    \ is string) {\n                value = Convert.ToInt64(value);\n            }\n\
    \            else {\n                throw new ArgumentException(\"Invalid value\
    \ type\");\n            }\n            result.Add(value);\n        }\n       \
    \ return result;", "        List<long> result = new List<long>();\n        foreach\
    \ (object value in values) {\n            if (value is int) {\n              \
    \  result.Add((long)value);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  long value;\n            if (value is int) {\n                value = (long)value;\n\
    \            }\n            if (value is long) {\n                value = (long)value;\n\
    \            }\n            if (value is double) {\n                value = (long)value;\n\
    \            }\n            if (value is decimal) {\n                value = (long)value;\n\
    \            }\n            if (value is string) {\n                value = Convert.ToInt64(value);\n\
    \            }\n            if (value is bool) {\n                value = Convert.ToInt64(value);\n\
    \            }\n            if (value is Dictionary<string, object>) {\n     \
    \           value = Convert.ToInt64(value);\n            }\n            if (value\
    \ is List<object>) {\n                value = Convert.ToInt64(value);\n      \
    \      }\n            if (value is Dictionary<string, object>) {\n           \
    \     value = Convert.ToInt64(value);\n            }\n            if (value is\
    \ Dictionary<string, object>) {\n                value = Convert.ToInt64(value);\n\
    \            }\n            if (value is Dictionary<string, object>) {\n     \
    \           value = Convert.ToInt64(value);\n            }\n            if (value\
    \ is Dictionary<string, object>) {\n                value = Convert.ToInt64(value);\n\
    \            }\n            if (value is Dictionary<string, object>) {\n     \
    \           value = Convert.ToInt64(value);\n            }\n            if (value\
    \ is Dictionary<string, object>) {\n                value = Convert.ToInt64(value);\n\
    \            }\n            if (value is Dictionary<string, object>) {\n     \
    \           value = Convert.ToInt64(value);\n            }\n            if (value\
    \ is Dictionary<string, object>) {\n                value = Convert.ToInt64(value);\n\
    \            }\n            if (value is Dictionary<string, object>) {\n     \
    \           value = Convert.ToInt64(value);\n            }\n            if (value\
    \ is Dictionary<string, object>) {\n                value = Convert.ToInt64(value);\n\
    \            }\n            if (value is Dictionary<string, object>) {\n     \
    \           value = Convert.ToInt64(value);\n            }\n            if (value\
    \ is Dictionary<string, object>) {\n                value = Convert.ToInt64(value);\n\
    \            }\n            if (value is Dictionary<string, object>) {\n     \
    \           value = Convert.ToInt64(value);\n            }\n            if (value\
    \ is Dictionary<string, object>) {\n                value = Convert.ToInt64(value);\n\
    \            }\n            if (value is Dictionary<string, object>) {\n     \
    \           value = Convert.ToInt64(value);\n            }\n            if (value\
    \ is Dictionary<string, object>) {\n                value = Convert.ToInt64(value);\n\
    \            }\n            if (value is Dictionary<string, object>) {\n     \
    \           value = Convert.ToInt64(value);\n            }\n            if (value\
    \ is Dictionary<string, object>) {\n                value = Convert.ToInt64(value);\n\
    \            }\n            if (value is Dictionary<string, object>) {\n     \
    \           value = Convert.ToInt64(value);\n            }\n            if (value\
    \ is Dictionary<string, object>) {\n                value = Convert.ToInt64(value);",
  "        List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            long value;\n       \
    \     if (value is int) {\n                value = (long)value;\n            }\n\
    \            else if (value is long) {\n                value = (long)value;\n\
    \            }\n            else if (value is double) {\n                value\
    \ = (long)value;\n            }\n            else if (value is string) {\n   \
    \             value = Convert.ToInt64(value);\n            }\n            else\
    \ if (value is Dictionary<string, object>) {\n                value = Convert.ToInt64(((Dictionary<string,\
    \ object>)value).Get(\"value\"));\n            }\n            else if (value is\
    \ List<object>) {\n                value = Convert.ToInt64(((List<object>)value).First());\n\
    \            }\n            else if (value is Dictionary<string, object>) {\n\
    \                value = Convert.ToInt64(((Dictionary<string, object>)value).Get(\"\
    value\"));\n            }\n            else if (value is Dictionary<string, object>)\
    \ {\n                value = Convert.ToInt64(((Dictionary<string, object>)value).Get(\"\
    value\"));\n            }\n            else {\n                value = Convert.ToInt64(value);\n\
    \            }\n            result.Add(value);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        var result = new\
    \ List<long>();\n        foreach (var value in values) {\n            if (value\
    \ is int) {\n                result.Add((long)value);\n            }\n       \
    \ }\n        return result;", "        var result = new List<long>();\n      \
    \  foreach (var value in values) {\n            if (value is int) {\n        \
    \        result.Add((long)value);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  long value;\n            if (value is int) {\n                value = (long)value;\n\
    \            }\n            else {\n                throw new ArgumentException(\"\
    Only integers are allowed\");\n            }\n            result.Add(value);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  long value;\n            if (value is int) {\n                value = (long)value;\n\
    \            }\n            else if (value is double) {\n                value\
    \ = (long)((double)value);\n            }\n            else {\n              \
    \  throw new ArgumentException(\"Only integers or doubles are allowed\");\n  \
    \          }\n            result.Add(value);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  long value;\n            if (value is int) {\n                value = (long)value;\n\
    \            }\n            else if (value is long) {\n                value =\
    \ (long)value;\n            }\n            else if (value is double) {\n     \
    \           value = (long)value;\n            }\n            else if (value is\
    \ decimal) {\n                value = (long)value;\n            }\n          \
    \  else {\n                continue;\n            }\n            result.Add(value);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  long value;\n            if (value is int) {\n                value = (long)value;\n\
    \            }\n            else if (value is long) {\n                value =\
    \ (long)value;\n            }\n            else if (value is double) {\n     \
    \           value = (long)value;\n            }\n            else if (value is\
    \ decimal) {\n                value = (long)value;\n            }\n          \
    \  else if (value is string) {\n                value = Convert.ToInt64(value);\n\
    \            }\n            else if (value is bool) {\n                value =\
    \ Convert.ToInt64(value);\n            }\n            else {\n               \
    \ throw new ArgumentException(\"Unsupported type for filter_integers: \" + value.GetType());\n\
    \            }\n            result.Add(value);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            long value;\n       \
    \     if (value is int) {\n                value = (long)value;\n            }\n\
    \            else if (value is long) {\n                value = (long)value;\n\
    \            }\n            else if (value is double) {\n                value\
    \ = (long)value;\n            }\n            else if (value is decimal) {\n  \
    \              value = (long)value;\n            }\n            else {\n     \
    \           throw new ArgumentException(\"Invalid type for filter_integers: \"\
    \ + value.GetType());\n            }\n            result.Add(value);\n       \
    \ }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            try {\n             \
    \   long value = Convert.ToInt64(value);\n                result.Add(value);\n\
    \            } catch (FormatException) {\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  long value;\n            if (value is int) {\n                value = (long)value;\n\
    \            }\n            else if (value is double) {\n                value\
    \ = (long)((double)value);\n            }\n            else if (value is string)\
    \ {\n                value = Convert.ToInt64((string)value);\n            }\n\
    \            else {\n                value = Convert.ToInt64(value);\n       \
    \     }\n            result.Add(value);\n        }\n        return result;", " \
    \       List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            long value;\n            if (value is int) {\n\
    \                value = (long)value;\n            }\n            else if (value\
    \ is long) {\n                value = (long)value;\n            }\n          \
    \  else if (value is double) {\n                value = (long)value;\n       \
    \     }\n            else if (value is decimal) {\n                value = (long)value;\n\
    \            }\n            else {\n                throw new ArgumentException(\"\
    Invalid value type\");\n            }\n            result.Add(value);\n      \
    \  }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  long value;\n            if (value is int) {\n                value = (long)value;\n\
    \            }\n            else {\n                throw new ArgumentException(\"\
    Only integers allowed\");\n            }\n            result.Add(value);\n   \
    \     }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        foreach (var value in values) {\n            if (value is int) {\n  \
    \              result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            long value;\n            if (value is int) {\n\
    \                value = (long)value;\n            }\n            else if (value\
    \ is long) {\n                value = (long)value;\n            }\n          \
    \  else if (value is double) {\n                value = (long)value;\n       \
    \     }\n            else if (value is decimal) {\n                value = (long)value;\n\
    \            }\n            else if (value is string) {\n                value\
    \ = Convert.ToInt64(value);\n            }\n            else {\n             \
    \   throw new ArgumentException(\"Only integers, doubles, decimals and strings\
    \ are allowed\");\n            }\n            result.Add(value);\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     foreach (object value in values) {\n            long value;\n          \
    \  if (value is int) {\n                value = (long)value;\n            }\n\
    \            else if (value is double) {\n                value = (long)((double)value);\n\
    \            }\n            else if (value is string) {\n                value\
    \ = Convert.ToInt64((string)value);\n            }\n            else {\n     \
    \           throw new ArgumentException(\"Invalid type for filter_integers: \"\
    \ + value.GetType());\n            }\n            result.Add(value);\n       \
    \ }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            long v;\n           \
    \ if (value is int) {\n                v = (long)value;\n            } else if\
    \ (value is long) {\n                v = (long)value;\n            } else {\n\
    \                v = Convert.ToInt64(value);\n            }\n            result.Add(v);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            long value;\n            if (value is int) {\n\
    \                value = (long)value;\n            }\n            else if (value\
    \ is long) {\n                value = (long)value;\n            }\n          \
    \  else if (value is double) {\n                value = (long)value;\n       \
    \     }\n            else {\n                throw new ArgumentException(\"Only\
    \ integers are allowed\");\n            }\n            result.Add(value);\n  \
    \      }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  long value;\n            if (value is int) {\n                value = (long)value;\n\
    \            }\n            else if (value is long) {\n                value =\
    \ (long)value;\n            }\n            else if (value is double) {\n     \
    \           value = (long)value;\n            }\n            else {\n        \
    \        throw new ArgumentException(\"Invalid value type\");\n            }\n\
    \            result.Add(value);\n        }\n        return result;", "       \
    \ List<long> result = new List<long>();\n        foreach (object value in values)\
    \ {\n            long value;\n            if (value is int) {\n              \
    \  value = (long)value;\n            }\n            else if (value is long) {\n\
    \                value = (long)value;\n            }\n            else if (value\
    \ is double) {\n                value = (long)value;\n            }\n        \
    \    else {\n                throw new ArgumentException(\"Invalid value type\"\
    );\n            }\n            result.Add(value);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            long value;\n            if (value is int) {\n\
    \                value = (long)value;\n            }\n            else if (value\
    \ is long) {\n                value = (long)value;\n            }\n          \
    \  else if (value is double) {\n                value = (long)value;\n       \
    \     }\n            else if (value is float) {\n                value = (long)value;\n\
    \            }\n            else {\n                value = Convert.ToInt64(value);\n\
    \            }\n            result.Add(value);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            long l;\n            if (value is int) {\n \
    \               l = (long)value;\n            } else {\n                l = Convert.ToInt64(value);\n\
    \            }\n            result.Add(l);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            long value;\n            if (value is int) {\n\
    \                value = (long)value;\n            }\n            else if (value\
    \ is long) {\n                value = (long)value;\n            }\n          \
    \  else if (value is double) {\n                value = (long)value;\n       \
    \     }\n            else if (value is decimal) {\n                value = (long)value;\n\
    \            }\n            else if (value is string) {\n                value\
    \ = Convert.ToInt64(value);\n            }\n            else {\n             \
    \   throw new ArgumentException(\"Invalid type for filter_integers: \" + value.GetType().Name);\n\
    \            }\n            result.Add(value);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            long value;\n            if (value is int) {\n      \
    \          value = (long)value;\n            }\n            else if (value is\
    \ long) {\n                value = (long)value;\n            }\n            else\
    \ if (value is double) {\n                value = (long)value;\n            }\n\
    \            else if (value is decimal) {\n                value = (long)value;\n\
    \            }\n            else {\n                value = Convert.ToInt64(value);\n\
    \            }\n            result.Add(value);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            long value;\n            if (value is int) {\n\
    \                value = (long)value;\n            }\n            else if (value\
    \ is double) {\n                value = (long)((double)value);\n            }\n\
    \            else {\n                throw new Exception(\"Unknown type for filter_integers:\
    \ \" + value.GetType());\n            }\n            result.Add(value);\n    \
    \    }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            long number;\n            if (value is int)\
    \ {\n                number = (int)value;\n            } else if (value is long)\
    \ {\n                number = (long)value;\n            } else if (value is float)\
    \ {\n                number = (long)((float)value);\n            } else if (value\
    \ is double) {\n                number = (long)((double)value);\n            }\
    \ else if (value is string) {\n                number = (long)(long)value;\n \
    \           } else if (value is bool) {\n                number = (long)(long)value;\n\
    \            } else if (value is Dictionary<string, object>) {\n             \
    \   number = (long)(long)value;\n            } else if (value is List<object>)\
    \ {\n                number = (long)(long)value;\n            } else {\n     \
    \           throw new ArgumentException(\"Unsupported type \" + value.GetType().Name);\n\
    \            }\n            result.Add(number);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        var result = new List<long>();\n        foreach (var value\
    \ in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  long value;\n            if (value is int) {\n                value = (long)value;\n\
    \            }\n            else if (value is long) {\n                value =\
    \ (long)value;\n            }\n            else if (value is double) {\n     \
    \           value = (long)value;\n            }\n            else if (value is\
    \ decimal) {\n                value = (long)value;\n            }\n          \
    \  else if (value is string) {\n                value = long.Parse((string)value);\n\
    \            }\n            else if (value is Dictionary<string, object>) {\n\
    \                value = FilterIntegers((List<object>)value);\n            }\n\
    \            else if (value is List<object>) {\n                value = FilterIntegers((List<object>)value);\n\
    \            }\n            else {\n                value = long.Parse(value.ToString());\n\
    \            }\n            result.Add(value);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (object value in\
    \ values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is int) {\n                result.Add((long)value);\n           \
    \ }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        var result = new List<long>();\n        foreach (var value\
    \ in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;"]
stop_tokens:
- "\n    }\n"

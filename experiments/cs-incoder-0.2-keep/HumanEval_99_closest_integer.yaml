name: HumanEval_99_closest_integer
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Create a function that takes a value (string) representing a\
  \ number\n    // and returns the closest integer to it. If the number is equidistant\n\
  \    // from two integers, round it away from zero.\n    // Examples\n    // >>>\
  \ closest_integer(\"10\")\n    // 10\n    // >>> closest_integer(\"15.3\")\n   \
  \ // 15\n    // Note:\n    // Rounding away from zero means that if the given number\
  \ is equidistant\n    // from two integers, the one you should return is the one\
  \ that is the\n    // farthest from zero. For example closest_integer(\"14.5\")\
  \ should\n    // return 15 and closest_integer(\"-14.5\") should return -15.\n \
  \   public static long ClosestInteger(string value) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ClosestInteger((\"\
  10\")) == (10L));\n    Debug.Assert(ClosestInteger((\"14.5\")) == (15L));\n    Debug.Assert(ClosestInteger((\"\
  -15.5\")) == (-16L));\n    Debug.Assert(ClosestInteger((\"15.3\")) == (15L));\n\
  \    Debug.Assert(ClosestInteger((\"0\")) == (0L));\n    }\n\n}\n"
completions: []
stop_tokens:
- "\n    }\n"
